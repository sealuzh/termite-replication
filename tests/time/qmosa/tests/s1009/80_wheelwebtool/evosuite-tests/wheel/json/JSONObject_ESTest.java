/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:52:49 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Writer;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7954075347096845
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(46);
      JSONObject jSONObject1 = jSONObject0.append("{}", "{}");
      jSONObject1.put("{}", (long) 46);
      JSONObject.valueToString("{}");
      jSONObject1.toString(46);
      jSONObject0.getLong("{}");
      Double double0 = new Double(0.0);
      JSONObject jSONObject2 = jSONObject0.put("Z,)&+.0=%N!", 0.0);
      assertSame(jSONObject2, jSONObject0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.392086444130441
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte.toUnsignedLong((byte)17);
      Integer integer0 = new Integer(0);
      jSONObject0.accumulate("cp8e@]#ylx0T", integer0);
      Float.sum((byte)17, 0.0F);
      Float.isFinite((-965.9004F));
      JSONObject jSONObject1 = new JSONObject(integer0);
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      jSONArray0.put((double) 0.0F);
      hashMap0.put(jSONArray0, jSONArray0);
      jSONObject0.optDouble("eq");
      jSONObject1.optDouble("", (-1.0));
      JSONObject.quote("eq");
      int int0 = jSONObject0.optInt("", (-3016));
      assertEquals(1, jSONObject0.length());
      assertEquals((-3016), int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.530530163119868
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      Double double0 = new Double((-1014.93705));
      JSONObject jSONObject1 = new JSONObject(double0);
      JSONObject jSONObject2 = new JSONObject();
      Object object0 = JSONObject.NULL;
      jSONObject0.optLong("par");
      jSONObject1.optDouble("\"\"", (-729.19534547));
      Object object1 = new Object();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      jSONObject1.putOpt("\"\"", jSONArray1);
      jSONObject1.put("\"\"", (-850));
      Long long0 = new Long((-850));
      JSONObject.doubleToString(Double.NaN);
      try { 
        jSONObject0.getJSONObject("%U");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"%U\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1798163961221357
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = new JSONObject(linkedList0);
      jSONObject0.toString();
      JSONTokener jSONTokener0 = new JSONTokener("toJ");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of toJ
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2970064798045735
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float(0.0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      JSONObject jSONObject2 = jSONObject0.append("\b", "] not found.");
      jSONObject2.optLong("\b");
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject3 = new JSONObject(jSONObject0);
      JSONObject jSONObject4 = new JSONObject(jSONObject1);
      Double double0 = new Double(0.0);
      JSONArray jSONArray0 = jSONObject0.optJSONArray("\b");
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1595458943482084
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONObject jSONObject1 = jSONObject0.append("A JSONArray text must start with '['", "A JSONArray text must start with '['");
      JSONObject jSONObject2 = jSONObject1.put("JSON does not allow non-finite numbers.", false);
      JSONObject.quote(",`GNF--_B,(?/szJ");
      jSONObject2.optDouble("\",`GNF--_B,(?/szJ\"");
      jSONObject1.optDouble((String) null, (-1.0));
      JSONObject.quote("\",`GNF--_B,(?/szJ\"");
      JSONTokener jSONTokener0 = new JSONTokener("ra");
      jSONObject2.optString((String) null, "\"\",`GNF--_B,(?/szJ\"\"");
      assertEquals(5, jSONObject1.length());
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.92764422635644
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Float float0 = new Float((-2418.0344F));
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.toString((-1791), (-1791));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ii}7^";
      JSONObject jSONObject1 = new JSONObject("{\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n\"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n}", stringArray0);
      HashMap<JSONArray, JSONObject> hashMap0 = new HashMap<JSONArray, JSONObject>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      jSONObject2.optLong("ii}7^");
      jSONObject1.optDouble("gettoString", (double) 0L);
      int int0 = (-387);
      Integer integer0 = new Integer((-387));
      jSONObject0.putOpt("ii}7^", integer0);
      JSONObject jSONObject3 = new JSONObject("{\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n\"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n}");
      jSONObject3.toString(111);
      try { 
        jSONObject2.getLong("jJ{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"jJ{\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.251260840411949
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("o&snH@*^*j5S3Mu<3da", true);
      boolean boolean0 = jSONObject1.optBoolean("quo", true);
      assertTrue(boolean0);
      
      JSONObject.quote("1$:';d^M!Yei");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "o&snH@*^*j5S3Mu<3da";
      double double0 = jSONObject0.optDouble("] is not a number.", (-1.0));
      assertEquals((-1.0), double0, 0.01);
      
      String string0 = JSONObject.quote("p4");
      assertEquals("\"p4\"", string0);
      
      JSONTokener jSONTokener0 = new JSONTokener("] is not a number.");
      String string1 = jSONObject0.optString("] is not a number.", "o&snH@*^*j5S3Mu<3da");
      assertEquals("o&snH@*^*j5S3Mu<3da", string1);
      
      boolean boolean1 = jSONObject0.has("o&snH@*^*j5S3Mu<3da");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1026517497018062
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("wsq;O[y_W3kd^fy2MU[", (-2105L));
      Float float0 = new Float(0.0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject0.append("\b", "] not found.");
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      linkedList0.add(float0);
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String string0 = JSONObject.numberToString(float0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.035900068671447
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      int int0 = 8;
      jSONObject0.put("DJ$", 8);
      String string0 = "isvalueOf";
      JSONObject.quote("isvalueOf");
      try { 
        jSONObject0.getJSONArray("DJ$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"DJ$\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3367280410511975
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = jSONObject0.put("Q%9fumeh8_rEGV<", (Collection) linkedList0);
      JSONObject jSONObject2 = new JSONObject(linkedList0);
      jSONObject1.optLong("Q%9fumeh8_rEGV<");
      jSONObject1.getJSONArray("Q%9fumeh8_rEGV<");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4991796732938623
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Float float0 = new Float((-2418.0344F));
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONObject jSONObject1 = new JSONObject();
      Object object0 = JSONObject.NULL;
      jSONObject1.optLong("^96o<3]nEo27/\"+r<");
      jSONObject0.optDouble("par", 0.0);
      Object object1 = JSONObject.NULL;
      Long long0 = new Long((-3245L));
      jSONObject0.putOpt("Substring bounds error", long0);
      jSONObject0.put("Substring bounds error", 114);
      Long long1 = new Long(1411L);
      JSONObject.doubleToString(1411L);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.875380752859991
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "Unclosed comment";
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("Unclosed comment", jSONObject0);
      JSONObject jSONObject1 = jSONObject0.put("Unclosed comment", (Map) hashMap0);
      jSONObject1.optBoolean("LTi!|");
      jSONObject0.optDouble("issubList");
      jSONObject0.put("LTi!|", (-1L));
      jSONObject0.toString();
      JSONTokener jSONTokener0 = new JSONTokener("issubList");
      jSONObject0.append("V.", "issubList");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of issubList
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0094419865993243
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float(0.0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject0.append("\b", "] not found.");
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONArray0.put(616, 0.0);
      jSONObject1.toJSONArray(jSONArray0);
      JSONObject jSONObject2 = new JSONObject(jSONObject0);
      JSONObject jSONObject3 = new JSONObject(jSONObject1);
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "' and instead saw '";
      String string1 = null;
      try { 
        jSONObject0.put((String) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2300257531762586
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte.toUnsignedLong((byte)17);
      Integer integer0 = new Integer(0);
      JSONObject jSONObject1 = jSONObject0.accumulate("cp8e@]#ylx0T", integer0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject1.put("GZ0s=D", (Collection) linkedList0);
      Double double0 = new Double((-965.9004F));
      JSONObject jSONObject2 = new JSONObject(double0);
      jSONObject1.optString("GZ0s=D");
      assertEquals(2, jSONObject1.length());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.891741609635451
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ii}7^";
      stringArray0[1] = "getoptJSONObject";
      stringArray0[2] = "o&snH@*^*j5S3Mu<3da";
      stringArray0[3] = "toS";
      stringArray0[4] = "o&snH@*^*j5S3Mu<3da";
      stringArray0[5] = "ii}7^";
      stringArray0[6] = "ii}7^";
      stringArray0[7] = "o&snH@*^*j5S3Mu<3da";
      stringArray0[8] = "len";
      JSONObject jSONObject2 = new JSONObject(jSONArray0, stringArray0);
      int int0 = 6296;
      linkedList0.clone();
      JSONObject jSONObject3 = jSONObject1.putOpt((String) null, jSONObject2);
      int int1 = (-1790);
      jSONObject0.toString((-1790), 6296);
      jSONObject3.names();
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject4 = new JSONObject(jSONObject3, stringArray0);
      try { 
        jSONObject3.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.600226683887434
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Float float0 = new Float((-2418.0344F));
      JSONObject jSONObject0 = new JSONObject(float0);
      Float.sum((-2306.417F), 981.9388F);
      JSONObject.valueToString(float0, (-2836), (-2836));
      jSONObject0.toString((-1791), (-1791));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ii}7^";
      JSONObject jSONObject1 = new JSONObject("{\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n\"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n}", stringArray0);
      jSONObject0.putOpt("ii}7^", jSONObject1);
      // Undeclared exception!
      jSONObject0.toString(6296, (-3041));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Float float0 = new Float(Double.NaN);
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.append("1$:';d^M!Yei", float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6195259631210703
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "ii}7^";
      JSONObject jSONObject0 = new JSONObject("ii}7^", stringArray0);
      jSONObject0.toString(2727, 34);
      jSONObject0.names();
      Object object0 = JSONObject.NULL;
      JSONObject.getNames((Object) stringArray0[0]);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      try { 
        jSONObject0.put(stringArray0[0], (Collection) linkedList1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5474382631499948
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float(0.0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      JSONObject jSONObject2 = jSONObject0.append("\b", "] not found.");
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject1.toJSONArray(jSONArray0);
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      hashMap0.put((JSONArray) null, (JSONArray) null);
      jSONObject1.optDouble((String) null);
      jSONObject2.optLong("] not found.");
      jSONObject0.optDouble((String) null, 0.0);
      JSONObject.quote("to");
      try { 
        jSONObject2.put((String) null, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.899985262373529
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = JSONObject.NULL;
      jSONObject0.accumulate(")&d&`nykS_:|mf|U=I", object0);
      JSONObject.getNames(jSONObject0);
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[9];
      String string0 = "\\u";
      stringArray0[0] = string0;
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      stringArray0[3] = "cp8e@]#ylx0T";
      stringArray0[4] = "cp8e@]#ylx0T";
      stringArray0[5] = "cp8e@]#ylx0T";
      stringArray0[7] = "cp8e@]#ylx0T";
      stringArray0[8] = "cp8e@]#ylx0T";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = jSONObject0.accumulate("cp8e@]#ylx0T", jSONObject1);
      Float.sum(46, (-965.9004F));
      Float.isFinite((-965.9004F));
      JSONObject jSONObject3 = new JSONObject((Object) "cp8e@]#ylx0T");
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      hashMap0.put(jSONArray0, jSONArray0);
      jSONObject0.optDouble("de");
      Object object1 = new Object();
      JSONObject jSONObject4 = new JSONObject();
      Short short0 = new Short((short)791);
      Object object2 = JSONObject.NULL;
      jSONObject4.accumulate("T?1~~\"mEC5%.v", object2);
      jSONObject0.toString();
      JSONObject jSONObject5 = jSONObject2.optJSONObject("de");
      assertNull(jSONObject5);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.81185246377542
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[9];
      String string0 = "\\u";
      stringArray0[0] = string0;
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      stringArray0[3] = "cp8e@]#ylx0T";
      stringArray0[4] = "cp8e@]#ylx0T";
      stringArray0[5] = "cp8e@]#ylx0T";
      stringArray0[7] = "@ixq[l,NMV^<]";
      stringArray0[8] = "cp8e@]#ylx0T";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = jSONObject0.accumulate("cp8e@]#ylx0T", jSONObject1);
      Float.sum(46, (-965.9004F));
      Float.isFinite((-965.9004F));
      JSONObject jSONObject3 = new JSONObject((Object) "cp8e@]#ylx0T");
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      hashMap0.put(jSONArray0, jSONArray0);
      jSONObject0.optDouble("de");
      Object object0 = new Object();
      JSONObject jSONObject4 = new JSONObject();
      Short short0 = new Short((short)791);
      Object object1 = JSONObject.NULL;
      jSONObject4.accumulate("T?1~~\"mEC5%.v", object1);
      jSONObject0.toString();
      jSONObject2.optJSONObject("de");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.307485672012322
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte.toUnsignedLong((byte)17);
      Integer integer0 = new Integer(0);
      jSONObject0.accumulate("cp8e@]#ylx0T", integer0);
      Float.sum((byte)17, 0.0F);
      Float.isFinite((-965.9004F));
      JSONObject jSONObject1 = new JSONObject(integer0);
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      jSONArray0.put((double) 0.0F);
      hashMap0.put(jSONArray0, jSONArray0);
      jSONObject0.optDouble("eq");
      assertEquals(1, jSONObject0.length());
      
      jSONObject1.optDouble("", (-1.0));
      JSONObject.quote("eq");
      Object object0 = new Object();
      JSONObject jSONObject2 = new JSONObject();
      Short short0 = new Short((byte)17);
      JSONObject jSONObject3 = jSONObject2.accumulate("isfloatToIntBits", (Object) null);
      assertEquals(0, jSONObject3.length());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.354609617487875
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ii}7^";
      stringArray0[1] = "getoptJSONObject";
      stringArray0[0] = "o&snH@*^*j5S3Mu<3da";
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONObject2.accumulate(stringArray0[2], "getoptJSONObject");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6193407218849685
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      jSONObject0.remove("\b");
      jSONObject0.optLong("[]");
      jSONObject0.optDouble("5K'k<\"zs1ne4K1t]f#a", (double) 0L);
      String string0 = "GS@G(EUDSy";
      jSONObject0.putOpt("GS@G(EUDSy", "GS@G(EUDSy");
      int int0 = 599;
      JSONObject jSONObject1 = jSONObject0.put("\b", 599);
      Long long0 = new Long(0L);
      JSONObject.doubleToString(0L);
      try { 
        jSONObject1.getJSONObject("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.714389268578781
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = jSONObject0.put("Q%9fumeh8_rEGV<", (Collection) linkedList0);
      JSONObject jSONObject2 = new JSONObject(linkedList0);
      JSONObject jSONObject3 = jSONObject1.accumulate("su", jSONObject2);
      JSONObject.doubleToString(617.48057068);
      jSONObject1.optInt("VA", 27);
      Double double0 = new Double(617.48057068);
      JSONObject jSONObject4 = jSONObject3.putOpt("617.48057068", double0);
      Object object0 = JSONObject.NULL;
      jSONObject1.putOpt("su", object0);
      JSONObject.getNames(jSONObject4);
      assertEquals(6, jSONObject3.length());
      assertEquals(6, jSONObject0.length());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8423943585863412
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("' and instead saw '", false);
      try { 
        jSONObject1.getDouble("' and instead saw '");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"' and instead saw '\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1665769160159587
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject.quote("S=}QJOsym9");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "\"S=}QJ\\Osym9\"";
      stringArray0[1] = "\"S=}QJ\\Osym9\"";
      stringArray0[2] = "\"S=}QJ\\Osym9\"";
      stringArray0[3] = "lYVGPu$ML`YUb#_";
      stringArray0[4] = "] is not a number.";
      stringArray0[5] = "S=}QJOsym9";
      stringArray0[6] = "Q%9fumeh8_rEGV<";
      stringArray0[7] = "\"S=}QJ\\Osym9\"";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONObject0.getDouble("gettoString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"gettoString\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4348098127803195
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float(0.0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = jSONObject0.put("Q%9fumeh8_rEGV<", (Collection) linkedList0);
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      JSONObject jSONObject3 = jSONObject1.accumulate("^'u5I", linkedList0);
      jSONObject0.optLong("^'u5I", 3989L);
      boolean boolean0 = jSONObject3.isNull("Dm3H@!g2 kd/");
      assertEquals(2, jSONObject1.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.193472977857317
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = jSONObject0.put("Q%9fumeh8_rEGV<", (Collection) linkedList0);
      jSONObject1.optLong("Q%9fumeh8_rEGV<", 0L);
      try { 
        jSONObject1.getDouble("Q%9fumeh8_rEGV<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Q%9fumeh8_rEGV<\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8222926427649115
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Float float0 = new Float((-2418.0344F));
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.toString((-1791), (-1791));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ii}7^";
      JSONObject jSONObject1 = new JSONObject("{\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n\"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n}", stringArray0);
      String string0 = jSONObject0.toString(6296, (-3041));
      jSONObject0.names();
      Object object0 = JSONObject.NULL;
      JSONObject.getNames(object0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject jSONObject2 = jSONObject0.put("{\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n\"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n}", (Collection) linkedList0);
      JSONObject jSONObject3 = new JSONObject(jSONObject2, stringArray0);
      // Undeclared exception!
      jSONObject1.getDouble(string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2065679255075943
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[9];
      String string0 = "\\u";
      stringArray0[0] = string0;
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      stringArray0[3] = "cp8e@]#ylx0T";
      stringArray0[4] = "cp8e@]#ylx0T";
      stringArray0[5] = "cp8e@]#ylx0T";
      stringArray0[6] = "cp8e@]#ylx0T";
      stringArray0[7] = "@ixq[l,NMV^<]";
      stringArray0[8] = "cp8e@]#ylx0T";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = jSONObject0.accumulate("cp8e@]#ylx0T", jSONObject1);
      Float.sum(46, (-965.9004F));
      Float.isFinite((-965.9004F));
      JSONObject jSONObject3 = new JSONObject((Object) "cp8e@]#ylx0T");
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      HashMap<JSONObject, Integer> hashMap1 = new HashMap<JSONObject, Integer>();
      Integer integer1 = new Integer((-3856));
      hashMap1.put(jSONObject2, integer1);
      try { 
        jSONObject0.get(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.332116342593794
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      hashMap0.put(jSONArray0, jSONArray0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte.toUnsignedLong((byte)17);
      jSONObject0.names();
      Integer integer0 = new Integer(0);
      JSONObject jSONObject1 = jSONObject0.accumulate("cp8e@]#ylx0T", integer0);
      Short.toUnsignedLong((byte)17);
      Short.toUnsignedInt((short)1436);
      Short.toUnsignedInt((short)70);
      Short.toUnsignedInt((short)8192);
      Float float0 = new Float((float) 0);
      JSONObject.numberToString(float0);
      String string0 = "5OKg$20\\u";
      jSONObject1.put(string0, 0.0);
      assertEquals(3, jSONObject1.length());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4220138297210934
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ii}7^";
      stringArray0[1] = "getoptJSONObject";
      stringArray0[2] = "o&snH@*^*j5S3Mu<3da";
      stringArray0[4] = "o&snH@*^*j5S3Mu<3da";
      stringArray0[5] = "ii}7^";
      JSONObject jSONObject2 = jSONObject0.put("isjoin", true);
      jSONObject1.optLong("o&snH@*^*j5S3Mu<3da");
      jSONObject1.optJSONArray("wheel.json.JSONObject");
      jSONObject2.opt(".7*6dB/5Z!Vgd;m{");
      HashMap<JSONArray, Integer> hashMap0 = new HashMap<JSONArray, Integer>();
      jSONObject0.put("o&snH@*^*j5S3Mu<3da", (Map) hashMap0);
      try { 
        jSONObject0.getJSONObject("-SJq(T1W;Y#O");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"-SJq(T1W;Y#O\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.8503866118372856
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.keys();
      JSONObject jSONObject1 = new JSONObject();
      JSONObject.valueToString(jSONObject1, 0, 74);
      jSONObject0.optInt("{}");
      JSONObject.getNames((Object) "{}");
      Byte byte0 = new Byte((byte) (-14));
      Byte.toUnsignedLong((byte) (-14));
      JSONObject.valueToString(byte0);
      String string0 = "wheel.json.JSONTokener";
      try { 
        jSONObject1.getLong("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2609087050018206
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      Float float0 = new Float((-470.0));
      JSONObject jSONObject1 = new JSONObject(jSONArray0);
      JSONObject jSONObject2 = jSONObject1.append("] not found.", float0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      jSONObject2.toJSONArray(jSONArray1);
      Short short0 = new Short((short)43);
      JSONObject jSONObject3 = new JSONObject(jSONObject1);
      Double double0 = new Double((-470.0));
      JSONObject.doubleToString((-502.441202542));
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.329599236313447
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte.toUnsignedLong((byte)17);
      Integer integer0 = new Integer(0);
      jSONObject0.accumulate("cp8e@]#ylx0T", integer0);
      Float.sum((byte)17, 0.0F);
      Float.isFinite((-965.9004F));
      JSONObject jSONObject1 = new JSONObject(integer0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "cp8e@]#ylx0T";
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      stringArray0[3] = "7/ n#I/";
      stringArray0[4] = "7/ n#I/";
      stringArray0[5] = "7/ n#I/";
      stringArray0[6] = "cp8e@]#ylx0T";
      stringArray0[7] = "cp8e@]#ylx0T";
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      try { 
        jSONObject1.getDouble("7/ n#I/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"7/ n#I/\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2781090099409163
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte.toUnsignedLong((byte)17);
      Integer integer0 = new Integer(0);
      jSONObject0.accumulate("cp8e@]#ylx0T", integer0);
      Float.sum((byte)17, 0.0F);
      Float.isFinite((-965.9004F));
      JSONObject jSONObject1 = new JSONObject(integer0);
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      jSONArray0.put((double) 0.0F);
      hashMap0.put(jSONArray0, jSONArray0);
      jSONObject0.optDouble("eq");
      assertEquals(1, jSONObject0.length());
      
      jSONObject1.optDouble("", (-1.0));
      JSONObject.quote("eq");
      String string0 = jSONObject1.optString("7F:!vb", "true");
      assertEquals("true", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4716292560783666
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(46);
      JSONObject jSONObject1 = jSONObject0.append("{}", "{}");
      Boolean boolean0 = new Boolean(false);
      JSONObject jSONObject2 = jSONObject1.append("{}", boolean0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ",`GNF--_B,(?/szJ";
      stringArray0[1] = "] is not a number.";
      stringArray0[2] = ",`GNF--_B,(?/szJ";
      JSONObject jSONObject3 = new JSONObject(jSONObject2, stringArray0);
      Boolean.logicalOr(false, true);
      jSONObject0.length();
      try { 
        jSONObject2.getDouble("{<^rT");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{<^rT\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3469992135645263
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Short short0 = new Short((short) (-2192));
      Short short1 = new Short((short) (-2192));
      Short.toUnsignedLong((short)1436);
      Short.toUnsignedInt((short) (-2192));
      Short.toUnsignedInt((short)70);
      Short.toUnsignedInt((short)1436);
      Float float0 = new Float((-1112.26828));
      Float.isFinite((short)1436);
      String string0 = JSONObject.numberToString(float0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.623977306697191
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      jSONObject0.remove("\b");
      jSONObject0.optLong("[]");
      jSONObject0.optDouble("5K'k<\"zs1ne4K1t]f#a", (double) 0L);
      String string0 = "GS@G(EUDSy";
      JSONObject jSONObject1 = jSONObject0.putOpt("GS@G(EUDSy", "GS@G(EUDSy");
      JSONObject jSONObject2 = jSONObject1.put("5K'k<\"zs1ne4K1t]f#a", 599);
      jSONObject2.optBoolean("[]", false);
      try { 
        jSONObject2.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0560749853180047
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.append("1$:';d^M!Yei", "1$:';d^M!Yei");
      Byte byte0 = new Byte((byte) (-64));
      JSONObject jSONObject1 = new JSONObject(byte0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Double double0 = new Double(617.48057068);
      jSONObject0.put("$x", (Object) double0);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject("acc");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of acc
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.95610893366069
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Byte byte0 = new Byte((byte)43);
      Byte.toUnsignedLong((byte)43);
      jSONObject0.optInt((String) null);
      JSONObject.valueToString(byte0, 0, 0);
      jSONObject0.optInt((String) null);
      JSONObject jSONObject1 = new JSONObject((Map) null);
      jSONObject1.optInt("JSON does not allow non-finite numbers.");
      Long.getLong((String) null);
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject2 = jSONObject1.put("", (Object) jSONArray0);
      jSONObject0.optBoolean("has", true);
      jSONObject1.toString((int) (byte)43, 2);
      jSONObject1.toString(487);
      jSONObject2.accumulate("{\"java.lang.String@0000000010\": []}", "{\"java.lang.String@0000000010\": []}");
      try { 
        jSONObject2.getString("java.lang.Byte@0000000005");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Byte@0000000005\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6947059946558545
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(46);
      JSONObject jSONObject1 = jSONObject0.append("{}", "{}");
      jSONObject1.optLong("getsplit");
      jSONObject0.optDouble("gettoString", (double) 0L);
      jSONObject1.toString(46);
      try { 
        jSONObject0.getLong("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7235711330053056
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      JSONObject jSONObject1 = jSONObject0.put("[dXTLi\"c", (Collection) null);
      jSONObject1.toString();
      JSONObject jSONObject2 = jSONObject1.put("[dXTLi\"c", (Collection) null);
      jSONObject0.optInt("");
      JSONObject.valueToString((Object) null, 92, 86);
      String string0 = "8^'hlb(vi";
      jSONObject2.optInt("8^'hlb(vi");
      Double double0 = new Double(2067.224);
      JSONObject.getNames((Object) double0);
      byte byte0 = (byte)0;
      Byte byte1 = new Byte((byte)0);
      JSONObject.valueToString("{\"java.lang.String@0000000004\":wheel.json.JSONArray@0000000003}");
      String string1 = "wh]el.json.JSONTokener";
      try { 
        jSONObject2.getLong("3mEcj7';LtJl<&OZ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"3mEcj7';LtJl<&OZ\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.592124960805789
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("gethashCode", 2012.9032428990101);
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[9];
      String string0 = "\\u";
      stringArray0[0] = string0;
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      stringArray0[3] = "cp8e@]#ylx0T";
      stringArray0[4] = "cp8e@]#ylx0T";
      stringArray0[5] = "cp8e@]#ylx0T";
      stringArray0[6] = "cp8e@]#ylx0T";
      stringArray0[7] = "@ixq[l,NMV^<]";
      stringArray0[8] = "cp8e@]#ylx0T";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = jSONObject0.accumulate("cp8e@]#ylx0T", jSONObject1);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0, 0, 0);
      Float.sum(46, (-965.9004F));
      Float.isFinite((-965.9004F));
      jSONObject0.optInt("cp8e@]#ylx0T", 27);
      int int0 = jSONObject2.optInt(string0, 46);
      assertEquals(1, jSONObject0.length());
      assertEquals(46, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2391997573006275
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[9];
      String string0 = "\\u";
      stringArray0[0] = string0;
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      stringArray0[3] = "cp8e@]#ylx0T";
      JSONObject.quote("is");
      HashMap<Boolean, Integer> hashMap0 = new HashMap<Boolean, Integer>();
      HashMap<JSONArray, Integer> hashMap1 = new HashMap<JSONArray, Integer>();
      Boolean boolean0 = Boolean.valueOf((String) null);
      hashMap0.put(boolean0, integer0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONArray("istoString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"istoString\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONArray0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7332604125915365
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("\t");
      assertEquals(0L, long0);
      
      boolean boolean0 = jSONObject0.isNull("\t");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.16185319215039
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float(0.0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      LinkedList<JSONArray> linkedList1 = new LinkedList<JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("z' /XcPp\"I*W9SE", true);
      jSONObject1.optLong("Jcw]5y");
      jSONObject1.optJSONArray("wheel.json.JSONObject");
      jSONObject1.opt("getgetChars");
      String string0 = "*,ztsL418N,11%c+(gg";
      try { 
        jSONObject1.getLong("*,ztsL418N,11%c+(gg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"*,ztsL418N,11%c+(gg\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.645042435070533
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[9];
      String string0 = "\\u";
      stringArray0[0] = string0;
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      stringArray0[3] = "cp8e@]#ylx0T";
      stringArray0[5] = "cp8e@]#ylx0T";
      stringArray0[6] = "cp8e@]#ylx0T";
      stringArray0[7] = "@ixq[l,NMV^<]";
      stringArray0[8] = "cp8e@]#ylx0T";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.accumulate("cp8e@]#ylx0T", jSONObject1);
      JSONObject jSONObject2 = new JSONObject((Map) null);
      JSONObject jSONObject3 = jSONObject2.put("-*e}", true);
      jSONObject1.optLong("isjoin");
      jSONObject1.optJSONArray("OG_==+K0@*eatm");
      jSONObject1.opt(stringArray0[0]);
      String string1 = "get";
      try { 
        jSONObject3.getLong("get");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"get\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9909032860203157
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "pn4,\"Q";
      Boolean boolean0 = new Boolean("pn4,\"Q");
      HashMap<Byte, Double> hashMap0 = new HashMap<Byte, Double>();
      JSONObject jSONObject1 = jSONObject0.put("pn4,\"Q", (Map) hashMap0);
      try { 
        jSONObject1.getInt("pn4,\"Q");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"pn4,\\\"Q\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7873780055103268
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(46);
      JSONObject jSONObject1 = jSONObject0.append("{}", "{}");
      jSONObject0.getString("{}");
      // Undeclared exception!
      try { 
        jSONObject1.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.6363119192557498
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      Long.getLong(")O6 +");
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject0.put("b)ryo5", (Object) float0);
      Short.toUnsignedInt((short)93);
      Short.toUnsignedInt((short)93);
      int int0 = new Integer((short)125);
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.643163849534016
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = "1$:';d^M!Yei";
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.append("o&snH@*^*j5S3Mu<3da", "1$:';d^M!Yei");
      jSONObject1.put("o&snH@*^*j5S3Mu<3da", true);
      String string1 = ",`GNF--_B,(?/szJ";
      JSONObject.quote(",`GNF--_B,(?/szJ");
      JSONArray jSONArray0 = new JSONArray();
      try { 
        jSONArray0.getJSONObject(74);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[74] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3192555406267292
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[9];
      String string0 = "\\u";
      stringArray0[0] = string0;
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      stringArray0[3] = "cp8e@]#ylx0T";
      stringArray0[4] = "cp8e@]#ylx0T";
      stringArray0[5] = "cp8e@]#ylx0T";
      stringArray0[6] = "cp8e@]#ylx0T";
      stringArray0[7] = "@ixq[l,NMV^<]";
      stringArray0[8] = "cp8e@]#ylx0T";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.accumulate("cp8e@]#ylx0T", jSONObject1);
      Float.sum(46, (-965.9004F));
      Float.isFinite((-965.9004F));
      JSONObject jSONObject2 = new JSONObject((Object) "cp8e@]#ylx0T");
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      hashMap0.put(jSONArray0, jSONArray0);
      jSONObject0.optDouble("de");
      double double0 = jSONObject0.optDouble("]NhP7t>[()", (double) (-965.9004F));
      assertEquals(1, jSONObject0.length());
      assertEquals((-965.900390625), double0, 0.01);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.138240689492593
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-34));
      JSONObject jSONObject0 = new JSONObject(byte0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&onUU.J{I;K@3RD";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.has("&onUU.J{I;K@3RD");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8496590702931575
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Short short0 = new Short((short)0);
      JSONObject jSONObject0 = new JSONObject(short0);
      Double.max(0.0, (short)0);
      double double0 = new Float(0.0);
      jSONObject0.accumulate("Null key.", "Null key.");
      JSONObject.testValidity(short0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.3900167631250415
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = 46;
      jSONObject0.toString(46);
      jSONObject0.append("{}", "{}");
      Boolean boolean0 = new Boolean(false);
      String string0 = null;
      try { 
        jSONObject0.append((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.735513283184782
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.valueToString(jSONObject0);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONObject jSONObject1 = jSONObject0.put("wheel.json.JSONObject@0000000001", (Collection) linkedList0);
      jSONObject0.optInt("wheel.json.JSONObject@0000000001");
      Object object0 = new Object();
      JSONObject.valueToString(object0, 9, (-1873));
      jSONObject0.optInt("8^'hlb(vi");
      Double double0 = new Double(868.203398828);
      JSONObject.getNames((Object) jSONObject1);
      Byte byte0 = new Byte((byte)13);
      JSONObject.valueToString(double0);
      String string0 = "3mEcj7';LtJl<&OZ";
      try { 
        jSONObject0.getLong("\"java.lang.Object@0000000005\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"java.lang.Object@0000000005\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("|lK4*<ne?cT`-\"atkL`");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of |lK4*<ne?cT`-\"atkL`
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.9567824295995666
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.optInt(")O6 +");
      Long.getLong(")O6 +");
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject1 = jSONObject0.put("b)yo5", (Object) float0);
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "JSON does not allow non-finite numbers.";
      stringArray0[1] = "%Tp)FYH{^aZN_9 ";
      stringArray0[2] = "JSON does not allow non-finite numbers.";
      stringArray0[3] = "has";
      stringArray0[4] = "b)yo5";
      stringArray0[5] = ")O6 +";
      stringArray0[6] = "JSON does not allow non-finite numbers.";
      JSONObject jSONObject2 = new JSONObject(integer0, stringArray0);
      jSONObject2.optBoolean("b)yo5", true);
      jSONObject0.toString(0, 2);
      int int0 = 487;
      jSONObject0.toString(487);
      jSONObject0.accumulate(")O6 +", "Q%9fumeh8_rEGV<");
      try { 
        jSONObject1.getString("isiterator");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isiterator\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.333113025675545
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = "1$:';d^M!Yei";
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.append("o&snH@*^*j5S3Mu<3da", "1$:';d^M!Yei");
      Boolean boolean0 = new Boolean(true);
      JSONObject.valueToString(boolean0, 32, 32);
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("1$:';d^M!Yei");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of 1$:';d^M!Yei
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.862999176502049
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONObject jSONObject1 = jSONObject0.append("iJ15vU)e", "iJ15vU)e");
      jSONObject1.optLong("Q%9fumeh8_rEGV<");
      jSONObject0.optDouble("issplit", 0.0);
      String string0 = "Expected '";
      jSONObject0.putOpt("sy~s [", float0);
      int int0 = (-4942);
      jSONObject0.toString((-4942));
      try { 
        jSONObject0.getLong("e;Dfs");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"e;Dfs\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.0048228226986406
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "o&snH@*^*j5S3Mu<3da";
      JSONArray jSONArray0 = null;
      jSONObject0.toJSONArray((JSONArray) null);
      Boolean boolean0 = new Boolean("isisFinite");
      jSONObject0.putOpt("~;", boolean0);
      try { 
        jSONObject0.getInt("o&snH@*^*j5S3Mu<3da");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"o&snH@*^*j5S3Mu<3da\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.647723997949895
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float(0.0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      LinkedList<JSONArray> linkedList1 = new LinkedList<JSONArray>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList1);
      jSONObject0.toJSONArray(jSONArray0);
      Double double0 = new Double(0.0);
      JSONObject jSONObject1 = new JSONObject(double0);
      jSONArray0.toJSONObject((JSONArray) null);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5371431669474265
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      jSONObject0.optInt(")O6 +");
      Long.getLong(")O6 +");
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject0.optDouble(")O6 +", (double) 0);
      jSONObject0.putOpt((String) null, jSONArray0);
      JSONObject jSONObject1 = jSONObject0.put(")O6 +", 1570);
      Long long0 = new Long(1570);
      JSONObject.doubleToString(599);
      try { 
        jSONObject1.getJSONObject("=7{t(z4)e~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"=7{t(z4)e~\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6081084146535822
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject();
      String string0 = "ii}7^";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ii}7^";
      String string1 = "getoptJSONObject";
      stringArray0[2] = "o&snH@*^*j5S3Mu<3da";
      String string2 = "toS";
      stringArray0[3] = "toS";
      byte byte0 = (byte)62;
      Byte byte1 = new Byte((byte)62);
      Long long0 = new Long(0L);
      JSONObject.valueToString("toS");
      try { 
        jSONObject1.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.0708542508782597
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "' and instead saw '";
      JSONObject jSONObject1 = jSONObject0.put("' and instead saw '", false);
      Byte byte0 = new Byte((byte) (-122));
      JSONObject.valueToString(jSONObject1);
      String string1 = "istoString";
      try { 
        jSONObject1.getLong("wheel.json.JSONObject@0000000001");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONObject@0000000001\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.823147930292212
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      JSONObject jSONObject1 = jSONObject0.put("[dXTLi\"c", (Collection) null);
      jSONObject1.toString();
      JSONObject jSONObject2 = jSONObject1.put("[dXTLi\"c", (Collection) null);
      JSONObject jSONObject3 = new JSONObject((Map) null);
      jSONObject3.names();
      jSONObject3.append("[dXTLi\"c", jSONObject2);
      Double.max(0.0, 0.0);
      jSONObject1.optInt("[dXTLi\"c");
      jSONObject2.put("[dXTLi\"c", 0);
      try { 
        jSONObject2.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.452201403630216
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      JSONObject jSONObject1 = jSONObject0.put("[dXTLi\"c", (Collection) null);
      jSONObject1.optLong(" at character ");
      boolean boolean0 = jSONObject1.isNull(" at character ");
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.715219496627562
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Float float0 = new Float(0.0);
      float float1 = 0.0F;
      Float.sum(0.0F, (-965.9004F));
      Float.isFinite(0.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      Float.sum(0.0F, 0.0F);
      JSONObject jSONObject1 = jSONObject0.put("", (-432L));
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONObject1, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.0325330653044436
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      String string0 = "Q%9fumeh8_rEGV<";
      jSONObject0.has("0");
      try { 
        jSONObject0.getString("0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.9576699287932238
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "Q%9fumeh8_rEGV<";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Float> linkedList1 = new LinkedList<Float>();
      linkedList1.sort((Comparator<? super Float>) null);
      JSONObject jSONObject1 = jSONObject0.put("Q%9fumeh8_rEGV<", (Collection) linkedList1);
      try { 
        jSONObject1.getLong("Q%9fumeh8_rEGV<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Q%9fumeh8_rEGV<\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.771294323446676
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Byte byte0 = new Byte((byte)48);
      JSONObject jSONObject0 = new JSONObject(byte0);
      double double0 = jSONObject0.optDouble("C'+{{/@e%_**^;R", (double) (byte)48);
      assertEquals(48.0, double0, 0.01);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.140578465947344
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Integer integer0 = new Integer(22);
      Integer.divideUnsigned((-3000), (-3000));
      JSONObject jSONObject0 = new JSONObject(integer0);
      Integer.toUnsignedLong(35);
      jSONObject0.optLong(".");
      try { 
        jSONObject0.getBoolean("Y(4~e3\"s|K3N\rrN7");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Y(4~e3\\\"s|K3N\\rrN7\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.073546653610627
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "b\"v9[FKn<-(wsPAzD";
      stringArray0[1] = "F1Io1a*A{.?.\"";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = new JSONObject();
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      jSONObject2.optLong("F1Io1a*A{.?.\"");
      assertEquals(1, jSONObject2.length());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Short short0 = new Short((short)0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "' and instead saw '";
      stringArray0[1] = "";
      stringArray0[2] = "Substring bounds error";
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      String string0 = jSONObject0.toString();
      assertNotNull(string0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HashMap<Float, Short> hashMap0 = new HashMap<Float, Short>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Iterator iterator0 = jSONObject0.keys();
      assertNotNull(iterator0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ii}7^";
      stringArray0[1] = "getoptJSONObject";
      stringArray0[2] = "o&snH@*^*j5S3Mu<3da";
      stringArray0[3] = "toS";
      stringArray0[4] = "o&snH@*^*j5S3Mu<3da";
      stringArray0[5] = "ii}7^";
      stringArray0[7] = "o&snH@*^*j5S3Mu<3da";
      stringArray0[8] = "len";
      JSONObject jSONObject2 = new JSONObject(jSONArray0, stringArray0);
      int int0 = 6296;
      linkedList0.clone();
      jSONObject0.toString(6296, 1605);
      jSONObject0.toString(6296);
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.9556913461207355
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      try { 
        jSONObject0.getInt("Q%9fumeh8_rEGV<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Q%9fumeh8_rEGV<\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.154541968952425
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Float> linkedList1 = new LinkedList<Float>();
      linkedList1.sort((Comparator<? super Float>) null);
      jSONObject0.put("Q%9fumeh8_rEGV<", (Collection) linkedList1);
      jSONObject0.optBoolean("Q%9fumeh8_rEGV<", false);
      try { 
        jSONObject0.getDouble("Q%9fumeh8_rEGV<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Q%9fumeh8_rEGV<\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.8395142502800907
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Float float0 = new Float((-2418.0344F));
      JSONObject jSONObject0 = new JSONObject(float0);
      int int0 = (-1791);
      jSONObject0.toString((-1791), (-1791));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ii}7^";
      JSONObject jSONObject1 = new JSONObject("{\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n\"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n}", stringArray0);
      HashMap<JSONArray, JSONObject> hashMap0 = new HashMap<JSONArray, JSONObject>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      jSONObject2.optLong("ii}7^");
      jSONObject0.optLong("ii}7^");
      jSONObject1.optDouble("ii}7^", 0.0);
      jSONObject1.putOpt("{\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003,\n\"java.lang.String@0000000004\": java.lang.Boolean@0000000005,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n}", float0);
      jSONObject2.toString((-1791));
      String string0 = "iscompare";
      try { 
        jSONObject1.getLong("iscompare");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"iscompare\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.80172271922092
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(46);
      JSONObject jSONObject1 = jSONObject0.append("{}", "{}");
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject2 = jSONObject1.append("{}", boolean0);
      jSONObject1.optLong("getsplit");
      jSONObject0.optDouble("gettoString", (double) 0L);
      jSONObject1.toString(46);
      jSONObject2.optBoolean("getwait", true);
      try { 
        jSONObject1.getDouble("^EDy.}CjMP@%<+$$4G`");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"^EDy.}CjMP@%<+$$4G`\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.718286284100117
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "b\"v9[FKn<-(wsPAzD";
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[4] = ",`GNF--_B,(?/szJ";
      stringArray0[6] = "@z";
      stringArray0[7] = "] is not a number.";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONObject1.getDouble(",`GNF--_B,(?/szJ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",`GNF--_B,(?/szJ\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.4497927527284427
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = 14;
      String string0 = "pn4,\"Q";
      Boolean boolean0 = new Boolean("pn4,\"Q");
      HashMap<Byte, Double> hashMap0 = new HashMap<Byte, Double>();
      jSONObject0.put("pn4,\"Q", (Map) hashMap0);
      String string1 = "";
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject();
      String string0 = "ii}7^";
      String[] stringArray0 = new String[9];
      stringArray0[0] = "ii}7^";
      String string1 = "getoptJSONObject";
      stringArray0[2] = "o&snH@*^*j5S3Mu<3da";
      String string2 = "toS";
      byte byte0 = (byte)62;
      Byte byte1 = new Byte((byte)62);
      Long long0 = new Long(0L);
      JSONObject.valueToString(stringArray0[3]);
      try { 
        jSONObject1.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.002660981419472
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      Long.getLong(")O6 +");
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      Boolean boolean0 = Boolean.TRUE;
      linkedList0.add(boolean0);
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "JSON does not allow non-finite numbers.";
      stringArray0[4] = "%Tp)FYH{^aZN_9 ";
      Byte byte0 = new Byte((byte)62);
      Long long0 = new Long((byte)62);
      JSONObject.valueToString(long0);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("Jy+i5|JZ3:+mL._|S~S");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of Jy+i5|JZ3:+mL._|S~S
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.7805394248510744
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = 46;
      jSONObject0.toString(46);
      JSONObject jSONObject1 = jSONObject0.append("{}", "{}");
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject2 = jSONObject1.append("{}", boolean0);
      jSONObject1.optLong("getsplit");
      String string0 = "gettoString";
      jSONObject0.optDouble("gettoString", (double) 0L);
      jSONObject2.putOpt("va", ",`GNF--_B,(?/szJ");
      jSONObject1.toString(46);
      try { 
        jSONObject0.getLong("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[3];
      JSONObject.quote(stringArray0[0]);
      stringArray0[2] = "7/ n#I/";
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      HashMap<Byte, Short> hashMap0 = new HashMap<Byte, Short>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.7424873191022137
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Integer integer0 = Integer.getInteger("{}", (-1927));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{}";
      stringArray0[1] = "{}";
      stringArray0[2] = "{}";
      stringArray0[3] = "{}";
      stringArray0[4] = "{}";
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      boolean boolean0 = jSONObject0.optBoolean("{}");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.222913740468902
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Float float0 = new Float(617.48057068);
      JSONObject jSONObject0 = new JSONObject(float0);
      JSONObject jSONObject1 = jSONObject0.append("] not found.", "\b");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "\b";
      stringArray0[1] = "] not found.";
      stringArray0[2] = "] not found.";
      stringArray0[3] = "\b";
      stringArray0[4] = "] is not a number.";
      stringArray0[5] = "7/ n#I/";
      stringArray0[6] = "7/ n#I/";
      stringArray0[7] = "7/ n#I/";
      stringArray0[8] = "\b";
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.put("CeQQ,HICWh}grV", 617.48057068);
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.9094499788253425
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Short short0 = new Short((short)0);
      JSONObject jSONObject0 = new JSONObject(short0);
      String string0 = jSONObject0.optString("Null key.");
      assertEquals(1, jSONObject0.length());
      assertEquals("", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.541280958396051
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt("get");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "f>yJ#~Koj 6C(=Etl3";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("f>yJ#~Koj 6C(=Etl3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of f>yJ#~Koj 6C(=Etl3
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("iscompare");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of iscompare
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[9];
      String string0 = "\\u";
      stringArray0[0] = string0;
      stringArray0[1] = "cp8e@]#ylx0T";
      stringArray0[2] = "cp8e@]#ylx0T";
      Short.toUnsignedLong((short)1436);
      Short.toUnsignedInt((short)1436);
      Short.toUnsignedInt((short)70);
      Short.toUnsignedInt((short) (-601));
      Float float0 = new Float((-1112.26828));
      Integer integer1 = new Integer(70);
      String string1 = JSONObject.numberToString(integer1);
      assertFalse(string1.equals((Object)string0));
  }
}
