/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:04:58 GMT 2019
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.CheckboxGroup;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Label;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.RadioGroup;
import wheel.components.Select;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "Could not find component with id '";
      Form form0 = new Form("Could not find component with id '");
      Form form1 = new Form("Could not find component with id '");
      form1.addFormValidationError("Could not find component with id '");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        form0.blockquote();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2679499454185317
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "6de";
      Checkbox checkbox0 = new Checkbox((Component) null, "6de", "6de");
      String string1 = "Can't add components to a component that is not an instance of IContainer.";
      Checkbox checkbox1 = new Checkbox((Component) null, "6de", "Can't add components to a component that is not an instance of IContainer.");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Integer integer0 = new Integer((-796));
      // Undeclared exception!
      try { 
        checkbox1.label((Object) integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4811439106558684
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "9i\\h2 {m$LfM";
      DateInput dateInput0 = new DateInput(errorPage0, "u", "9ih2 {m$LfM", "u");
      ElExpression elExpression0 = new ElExpression("aga>)6ux5UEK>");
      Form form0 = new Form("9ih2 {m$LfM");
      dateInput0.findAll((ElExpression) null);
      Locale locale0 = new Locale("u", "9ih2 {m$LfM");
      Locale locale1 = Locale.ROOT;
      MockCalendar.getInstance(locale1);
      // Undeclared exception!
      try { 
        form0.p();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7372894328768025
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "}SNU^&)[w,uD!{gTf";
      Checkbox checkbox0 = new Checkbox(errorPage0, "}SNU^&)[w,uD!{gTf", "");
      checkbox0.setFormElementName("org.mvel.conversion.DoubleCH$5");
      // Undeclared exception!
      try { 
        checkbox0.var((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = "map";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("map");
      xmlEntityRef0.defaultTagName();
      // Undeclared exception!
      try { 
        xmlEntityRef0.sub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2070021604583734
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Select select0 = new Select(errorPage0, (String) null, (String) null, (ISelectModel) null, (CharSequence) null);
      Component component0 = select0.meta();
      Any any0 = new Any(select0, (CharSequence) null);
      Submit submit0 = new Submit(any0, "span", "cannot coerce Long to Integer since the value (");
      select0._clear();
      submit0.value("cannot coerce Long to Integer since the value (");
      Table table0 = new Table(component0, "cannot coerce Long to Integer since the value (");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("%Zq?");
      xmlEntityRef0._clear();
      // Undeclared exception!
      try { 
        xmlEntityRef0.h6((Object) "span");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8525575415486717
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "!", "9ih2 {m$LfM", "!");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression(")%}|!");
      Checkbox checkbox0 = new Checkbox(errorPage0, "Could not encode string '", "!");
      FormElement formElement0 = checkbox0.validationRule("Could not encode string '");
      Radio radio0 = new Radio(dateInput0, "9ih2 {m$LfM", "l8EGc;.:l^\"%*");
      radio0.clasS("9ih2 {m$LfM");
      radio0.defaultDomEvent();
      TableBlock tableBlock0 = new TableBlock(formElement0, "W,%I}y");
      // Undeclared exception!
      try { 
        formElement0.div();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.285149829679032
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "code";
      Checkbox checkbox0 = new Checkbox((Component) null, "code", "code");
      // Undeclared exception!
      try { 
        checkbox0.param("code", "code");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6905784952935443
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      MXSerializer mXSerializer0 = new MXSerializer();
      errorPage0.s();
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = 'm';
      charArray0[2] = '{';
      MXSerializer mXSerializer1 = new MXSerializer();
      Class<NumberInput> class0 = NumberInput.class;
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance("N)>^~d>4 $Y\"NK)", class0);
      StaticXmlSerializerWrapper staticXmlSerializerWrapper0 = new StaticXmlSerializerWrapper(mXSerializer1, xmlPullWrapperFactory0);
      String string0 = "";
      // Undeclared exception!
      try { 
        staticXmlSerializerWrapper0.element("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // setOutput() must called set before serialization can start
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0146595194260235
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      stringSelectModel0.addValue("a%n?DXOXx;KxYH=", "h3");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("h3");
      Form form0 = new Form("h3");
      form0._isGeneratedId();
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.param("ul", "ul");
      String string0 = "org.mvel.utl.ExecutionStack";
      XmlEntityRef xmlEntityRef2 = new XmlEntityRef("org.mvel.utl.ExecutionStack");
      xmlEntityRef2.defaultTagName();
      errorPage0.getComponentName();
      TableBlock tableBlock0 = null;
      try {
        tableBlock0 = new TableBlock(form0, "h3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.999183396470956
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      form0.acronym((Object) "_(1cJ\"Mak,2B74S2");
      String string0 = "";
      Form form1 = form0.addFormValidationRule("", "");
      String string1 = "Finder expression didn't evaluate to a boolean value.";
      form1.addFormValidationError("Finder expression didn't evaluate to a boolean value.");
      String string2 = "";
      Checkbox checkbox0 = new Checkbox(form0, "Finder expression didn't evaluate to a boolean value.", "");
      // Undeclared exception!
      try { 
        checkbox0.strike();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.156411708343449
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("9b\rN*");
      Form form0 = new Form(component0, "9b\rN*", actionExpression0);
      Form form1 = form0.addFormValidationRule("Finder expression didn't evaluate to a boolean value.", "");
      Form form2 = form0.addFormValidationError("Finder expression didn't evaluate to a boolean value.");
      form2.id((String) null);
      MXSerializer mXSerializer0 = new MXSerializer();
      form0.renderComponent(mXSerializer0);
      TextInput textInput0 = new TextInput(form2, "_mY*(`", "1V./qhv");
      form1.addFormElement(textInput0);
      TableRow tableRow0 = new TableRow(textInput0);
      Table table0 = new Table(tableRow0, "*>Q:<bjJqZdRKK[[}7");
      Table table1 = table0.renderHint((CharSequence) null);
      Table table2 = table1.id("qmNg2C");
      TableBlock tableBlock0 = table2.thead();
      tableBlock0.attribute("Tr component can be added only to a TableBlock.", "1V./qhv");
      Hidden hidden0 = new Hidden(form1, "Finder expression didn't evaluate to a boolean value.", (String) null);
      String string0 = textInput0._wrapComponentId("Tr component can be added only to a TableBlock.");
      assertEquals("Tr component can be added only to a TableBlock.", string0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4992911529849255
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "|", "9ih2 {m$LfM", "|");
      ElExpression elExpression0 = new ElExpression("aga>)6ux5UEK>");
      Checkbox checkbox0 = new Checkbox(dateInput0, "qv3SV|~xyJGS\"", "3<Wsi,?1");
      FormElement formElement0 = checkbox0.setFormElementName("=+K0@*eatmqp");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("aga>)6ux5UEK>");
      assertEquals("aga>)6ux5UEK>", xmlEntityRef0.getComponentId());
      
      ActionExpression actionExpression0 = new ActionExpression("");
      Table table0 = new Table(dateInput0, " in class ");
      table0.renderHint("");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "=+K0@*eatmqp";
      stringArray0[1] = "";
      stringArray0[2] = " in class ";
      stringArray0[3] = "aga>)6ux5UEK>";
      stringArray0[4] = " in class ";
      stringArray0[5] = "=+K0@*eatmqp";
      stringArray0[6] = "aga>)6ux5UEK>";
      stringArray0[7] = " in class ";
      formElement0.attributes(stringArray0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.167753117335329
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      Form form1 = form0.addFormValidationRule("", "");
      Form form2 = form1.addFormValidationError("Finder expression didn't evaluate to a boolean value.");
      Form form3 = form2.id("");
      TextInput textInput0 = new TextInput(form2, "*>Q:<bjJqZdRKK[[}7", "Finder expression didn't evaluate to a boolean value.");
      Form form4 = form3.addFormElement(textInput0);
      component0.attribute("Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      Hidden hidden0 = new Hidden(form3, "", "non-digit in number value");
      String string0 = textInput0._wrapComponentId("");
      assertEquals("", string0);
      
      Component component1 = form0.cite((Object) form4);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component1._isGeneratedId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.765968899237428
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._getComponentStore();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Could not find component with id '", "F#*1tL=H-SySuM{g/B");
      // Undeclared exception!
      try { 
        checkbox0.actionBinding((ActionExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "code", "code");
      ElExpression elExpression0 = new ElExpression("code");
      checkbox0.getEngine();
      String string0 = "link";
      StringBuilder stringBuilder0 = new StringBuilder(elExpression0);
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0F);
      StringBuilder stringBuilder2 = stringBuilder1.append('D');
      // Undeclared exception!
      try { 
        stringBuilder2.replace(234, 897, (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.103239120045527
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.pre();
      assertTrue(block0._isGeneratedId());
      
      Submit submit0 = new Submit(errorPage0, "^e)ULyDYC}GGpJv|5", "span");
      Checkbox checkbox0 = new Checkbox(submit0, "span", "span");
      checkbox0.setFormElementName("^e)ULyDYC}GGpJv|5");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("span");
      block0.id("span");
      assertFalse(block0._isGeneratedId());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.016898322885073
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      form0.getTagName();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      FormElement formElement0 = checkbox0.fieldBinding((String) null);
      Checkbox checkbox1 = new Checkbox(formElement0, "", "_(1cJ\"Mak,2B74S2");
      // Undeclared exception!
      try { 
        checkbox1.deserialize(form0, "_(1cJ\"Mak,2B74S2");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.components.FormElement", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8976492786748422
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "code", "code");
      String string0 = "Can't add components to a component that is not an instance of IContainer.";
      String string1 = ")Is";
      String string2 = "^a^\"C(1|";
      Submit submit0 = new Submit(checkbox0, ")Is", "^a^\"C(1|");
      // Undeclared exception!
      try { 
        submit0.add((Component) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.150287988715089
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("repeated / in tag declaration");
      // Undeclared exception!
      try { 
        xmlEntityRef0.ins((Object) "repeated / in tag declaration");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.681657106438728
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = "org.mel.conversion.BooleanCH4";
      Form form0 = new Form("org.mel.conversion.BooleanCH4");
      String string1 = null;
      Component component0 = form0.actionBinding((String) null);
      // Undeclared exception!
      try { 
        component0.noscript();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.1920273650155977
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ISelectModel iSelectModel0 = null;
      Select select0 = new Select(errorPage0, (String) null, (String) null, (ISelectModel) null, (CharSequence) null);
      Component component0 = select0.meta();
      Any any0 = new Any(select0, (CharSequence) null);
      String string0 = "span";
      Submit submit0 = new Submit(any0, "span", "cannot coerce Long to Integer since the value (");
      submit0.value("cannot coerce Long to Integer since the value (");
      Table table0 = new Table(component0, "cannot coerce Long to Integer since the value (");
      Table table1 = table0.id("span");
      TableBlock tableBlock0 = table1.thead();
      Any any1 = tableBlock0.col();
      // Undeclared exception!
      try { 
        component0.sub((Object) any1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String string0 = "!|P@SBc?cr.AI!^H";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("!|P@SBc?cr.AI!^H");
      // Undeclared exception!
      try { 
        xmlEntityRef0.label();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9023244428082906
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.pre();
      TextInput textInput0 = new TextInput(errorPage0, "Col component can be added only to a TableBlock.", "j<1zUX)RX'm^");
      TextInput textInput1 = new TextInput(textInput0, "#", ".values()");
      // Undeclared exception!
      try { 
        textInput0.acronym((Object) textInput1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "F\\#*1tL=H-SySuM{g/B";
      String string2 = "_;ytp[8-WNJ1NSN";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string3 = "ul";
      ElExpression elExpression0 = new ElExpression("ul");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "_;ytp[8-WNJ1NSN", stringSelectModel0, elExpression0);
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "_;ytp[8-WNJ1NSN", "F#*1tL=H-SySuM{g/B");
      String[] stringArray0 = new String[5];
      checkbox0._setSubmitValue(stringArray0);
      // Undeclared exception!
      try { 
        checkboxGroup0.h1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.666244985616444
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Select select0 = new Select(errorPage0, (String) null, (String) null, (ISelectModel) null, (CharSequence) null);
      Any any0 = new Any(select0, (CharSequence) null);
      String string0 = "`a.y6A0Ng(M>\"?Ty7";
      Submit submit0 = new Submit(any0, "span", "`a.y6A0Ng(M>\"?Ty7");
      // Undeclared exception!
      try { 
        any0.wBlock("span");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "F\\#*1tL=H-SySuM{g/B";
      String string2 = "5!X5O2_9M^u;[_";
      // Undeclared exception!
      try { 
        xmlEntityRef0.textarea("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = "";
      String string1 = "~=+L!Ou:bh-=u$bs";
      Checkbox checkbox0 = new Checkbox((Component) null, "", "~=+L!Ou:bh-=u$bs");
      // Undeclared exception!
      try { 
        checkbox0.required();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.407494209446948
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "F\\#*1tL=H-SySuM{g/B";
      Checkbox checkbox0 = new Checkbox(errorPage0, "F#*1tL=H-SySuM{g/B", "br");
      // Undeclared exception!
      try { 
        checkbox0.isInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "Could not find component with id '";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Could not find component with id '");
      // Undeclared exception!
      try { 
        xmlEntityRef0.requestFocus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0358196128697856
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "9zSMM`";
      Form form0 = new Form("9zSMM`");
      Form form1 = form0.addFormValidationError("9zSMM`");
      // Undeclared exception!
      try { 
        form1.map("9zSMM`");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9757761313032676
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Select select0 = new Select(errorPage0, (String) null, (String) null, (ISelectModel) null, (CharSequence) null);
      Any any0 = new Any(select0, (CharSequence) null);
      Submit submit0 = new Submit(any0, "span", "`a.y6A0Ng(M>\"?Ty7");
      FormElement formElement0 = submit0.value("`a.y6A0Ng(M>\"?Ty7");
      select0.label((Object) null);
      // Undeclared exception!
      try { 
        formElement0.em();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7590894538228845
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "Could not find component with id '";
      errorPage0.style();
      // Undeclared exception!
      try { 
        errorPage0.th();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Th component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.101569435093742
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "F\\#*1tL=H-SySuM{g/B";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("ul");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "a%n?DXOXx;KxYH=";
      int int0 = (-1188);
      int int1 = 74;
      int int2 = 13;
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("");
      Form form0 = new Form(errorPage0, "t", actionExpression0);
      Any any0 = new Any(form0, "");
      TableBlock tableBlock0 = new TableBlock(any0);
      TableBlock tableBlock1 = tableBlock0.renderHint(actionExpression0);
      NumberInput numberInput0 = new NumberInput(tableBlock1, (String) null, (String) null, (CharSequence) null);
      // Undeclared exception!
      try { 
        numberInput0.dateInput(":17H8Zm", "ul");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.720822294291998
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "Could not find component with id '";
      Checkbox checkbox0 = new Checkbox(errorPage0, "Could not find component with id '", "F#*1tL=H-SySuM{g/B");
      // Undeclared exception!
      try { 
        checkbox0.h3((Object) "F#*1tL=H-SySuM{g/B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.date();
      String string0 = "Could not find component with id '";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Could not find component with id '");
      // Undeclared exception!
      try { 
        xmlEntityRef0.frame("Could not find component with id '");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5658783296072123
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      DateInput dateInput0 = new DateInput(xmlEntityRef0, "5!X5O2_9M^u;[_", "a%n?DXOXx;KxYH=", "F#*1tL=H-SySuM{g/B");
      Component component0 = dateInput0.addInternalRenderHint("F#*1tL=H-SySuM{g/B");
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.date();
      ActionExpression actionExpression0 = new ActionExpression("{Z+v%");
      actionExpression0.setOwner(component0);
      Hidden hidden0 = new Hidden(errorPage0, "", "AhELc#yr})1<");
      hidden0.defaultTagName();
      ElExpression elExpression0 = new ElExpression("wheel.util.AbstractDateConversionHandler$1");
      // Undeclared exception!
      try { 
        hidden0.fileInput("F#*1tL=H-SySuM{g/B", elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5068110507786816
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Submit submit0 = new Submit(text0, "wheel.components.ElExpression", "wheel.components.ElExpression");
      FormElement formElement0 = submit0.value("Ja8c{zSYBi");
      Table table0 = new Table(formElement0, "");
      table0.renderHint("Ja8c{zSYBi");
      ElExpression elExpression0 = new ElExpression("");
      elExpression0.errorMessage("");
      TextInput textInput0 = new TextInput(submit0, "Ja8c{zSYBi", "");
      String string0 = null;
      Form form0 = new Form((String) null);
      Locale locale0 = Locale.ROOT;
      Calendar calendar0 = MockCalendar.getInstance(locale0);
      // Undeclared exception!
      try { 
        form0.kbd((Object) calendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.106051761496621
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      component0.var((Object) actionExpression0);
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      form0.id("");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("_(1cJ\"Mak,2B74S2");
      component0.b();
      // Undeclared exception!
      try { 
        xmlEntityRef0.remove("dk\u0001VP1HHV^<i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.975845580570578
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Select select0 = new Select(errorPage0, (String) null, (String) null, (ISelectModel) null, (CharSequence) null);
      select0.meta();
      Any any0 = new Any(select0, (CharSequence) null);
      Submit submit0 = new Submit(any0, "s(pan", "cannot coerce Long to Integer since the value (");
      submit0.afterAdd();
      FormElement formElement0 = submit0.value("cannot coerce Long to Integer since the value (");
      // Undeclared exception!
      try { 
        formElement0.samp((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("repeated / in tag declaration");
      xmlEntityRef0._getVisibleForm(true);
      // Undeclared exception!
      try { 
        xmlEntityRef0.code((Object) "repeated / in tag declaration");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.038150228956328
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "|", "9ih2 {m$LfM", "|");
      ElExpression elExpression0 = new ElExpression("aga>)6ux5UEK>");
      Checkbox checkbox0 = new Checkbox(dateInput0, "qv3SV|~xyJGS\"", "}SNU^q)[w,uD!{gTf");
      ActionExpression actionExpression0 = new ActionExpression("L2");
      ActionExpression actionExpression1 = actionExpression0.event("*|u1uTKD{?4");
      Form form0 = new Form(errorPage0, "p*", actionExpression1);
      form0.code((Object) "qv3SV|~xyJGS\"");
      FormElement formElement0 = form0.radio("");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("Bk~kNrG?K YP(~^");
      dynamicSelectModel1.enumeration("9ih2 {m$LfM");
      String string0 = "";
      Form form1 = form0.addFormValidationRule("Bk~kNrG?K YP(~^", "");
      Form form2 = form1.addFormElement(formElement0);
      form2.addFormValidationError("|");
      form1.addFormValidationRule("'", "[E<@zQ_");
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      String string1 = "Ljava/io/PrintStream;";
      // Undeclared exception!
      try { 
        errorPage0.radio("Ljava/io/PrintStream;");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      Byte byte0 = new Byte((byte)6);
      Byte.compare((byte)20, (byte)45);
      Byte.compare((byte) (-82), (byte) (-48));
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "a%n?DXOXx;KxYH=", "F#*1tL=H-SySuM{g/B");
      // Undeclared exception!
      try { 
        checkbox0.big((Object) byte0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.599021423860416
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "!", "9ih2 {m$LfM", "!");
      Checkbox checkbox0 = new Checkbox(errorPage0, "code", "code");
      checkbox0.setFormElementName("null");
      // Undeclared exception!
      try { 
        checkbox0.ol();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.017896477985808
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      DateInput dateInput0 = new DateInput(errorPage0, "", "", "");
      form0.legend((Object) dateInput0);
      ActionExpression actionExpression1 = new ActionExpression("1qBwr%E~s?7H");
      form0.dl();
      ElExpression elExpression0 = new ElExpression("_(1cJ\"Mak,2B74S2");
      // Undeclared exception!
      try { 
        dateInput0.dfn();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      String string0 = "F\\#*1tL=H-SySuM{g/B";
      String string1 = "dfn";
      // Undeclared exception!
      try { 
        xmlEntityRef0.li();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Form form0 = new Form("qj0>i<");
      form0.getTagName();
      Checkbox checkbox0 = new Checkbox(form0, "'1A:t", "INVOKEVIRTUAL java/lang/Byte.byteValue");
      // Undeclared exception!
      try { 
        checkbox0.deserialize(form0, "'1A:t");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.components.FormElement", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.760173464662993
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._getComponentStore();
      errorPage0.pre();
      String string0 = "";
      ErrorPage errorPage1 = new ErrorPage();
      errorPage1._getTopLevelComponent(true);
      // Undeclared exception!
      try { 
        errorPage1.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.732508817448545
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "u";
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.span();
      // Undeclared exception!
      try { 
        errorPage0._getTopLevelComponent(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.9290302321974204
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._getComponentStore();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      ElExpression elExpression0 = new ElExpression("*>Q:<bjJqZdRKK[[}7");
      elExpression0.errorMessage("*>Q:<bjJqZdRKK[[}7");
      Label label0 = new Label(component0, "Could not evaluate expression ");
      label0.defaultTagName();
      DateInput dateInput0 = new DateInput(component0, "Could not evaluate expression ", "", "span");
      Component component1 = dateInput0.attributes((String[]) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component1._isGeneratedId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.136490885893377
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      String string0 = "repeated / in tag declaration";
      String string1 = null;
      TextInput textInput0 = new TextInput(errorPage0, "repeated / in tag declaration", (String) null);
      component0.wrapSelf();
      // Undeclared exception!
      try { 
        textInput0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot add a form element. No surrounding form found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6473158097377936
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      DateInput dateInput0 = new DateInput(xmlEntityRef0, "5!X5O2_9M^u;[_", "a%n?DXOXx;KxYH=", "F#*1tL=H-SySuM{g/B");
      dateInput0.addInternalRenderHint("F#*1tL=H-SySuM{g/B");
      assertEquals("a%n?DXOXx;KxYH=", xmlEntityRef0.getComponentId());
      
      ErrorPage errorPage0 = new ErrorPage();
      XmlPullWrapperFactory.newInstance();
      MXSerializer mXSerializer0 = new MXSerializer();
      TableRow tableRow0 = new TableRow(errorPage0);
      Block block0 = tableRow0.createTd();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1377734006731925
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "coGe";
      Checkbox checkbox0 = new Checkbox((Component) null, "coGe", "coGe");
      checkbox0.setFormElementName("Can't add components to a component that is not an instance of IContainer.");
      String string1 = "contains";
      Form form0 = new Form("contains");
      // Undeclared exception!
      try { 
        form0.addFormElement(checkbox0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.254423781990184
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "6de";
      Checkbox checkbox0 = new Checkbox((Component) null, "6de", "6de");
      Checkbox checkbox1 = new Checkbox((Component) null, "6de", "Can't add components to a component that is not an instance of IContainer.");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        checkbox1.multiSelect("Can't add components to a component that is not an instance of IContainer.", dynamicSelectModel0, "6de");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "Could not find component with id '";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Could not find component with id '");
      // Undeclared exception!
      try { 
        xmlEntityRef0.bdo("Could not find component with id '");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = "p B";
      Form form0 = new Form("p B");
      Hidden hidden0 = new Hidden(form0, "+fW6]@.,U22Yf-", "+fW6]@.,U22Yf-");
      // Undeclared exception!
      try { 
        form0.acronym((Object) hidden0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.4152914804021135
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("ul");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "_;ytp[8-WNJ1NZSN", stringSelectModel0, elExpression0);
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "_;ytp[8-WNJ1NZSN", "F#*1tL=H-SySuM{g/B");
      checkbox0.setFormElementName("_;ytp[8-WNJ1NZSN");
      Form form0 = new Form("ul");
      // Undeclared exception!
      try { 
        checkbox0.address();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.407494209446948
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "F\\#*1tL=H-SySuM{g/B";
      String string2 = "x";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("ul");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "x", stringSelectModel0, elExpression0);
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "x", "F#*1tL=H-SySuM{g/B");
      // Undeclared exception!
      try { 
        xmlEntityRef0.radioGroup("+u0c=py? o", stringSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.8097009858334503
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Submit submit0 = new Submit(text0, "wheel.components.ElExpression", "wheel.components.ElExpression");
      String string0 = "Ja8c{zSYBi";
      // Undeclared exception!
      try { 
        submit0.h5();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.102100079720433
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      component0.attribute("Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      Table table0 = new Table(errorPage0, "");
      Table table1 = table0.id("*>Q:<bjJqZdRKK[[}7");
      table1.tfoot();
      Checkbox checkbox0 = new Checkbox(errorPage0, "cannot coerce Float to Integer since the value (", (String) null);
      // Undeclared exception!
      try { 
        checkbox0.p((Object) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1392921128169875
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = "org.mel.conversion.BooleanCH4";
      Form form0 = new Form("org.mel.conversion.BooleanCH4");
      Component component0 = form0.actionBinding((String) null);
      form0._getChildren();
      Form form1 = new Form((String) null);
      // Undeclared exception!
      try { 
        component0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.7968144855920856
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Could not find component with id '");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("\n{CREATING INJECTION CONSTRUCTOR}\n");
      xmlEntityRef1._getVisibleForm(false);
      XmlEntityRef xmlEntityRef2 = new XmlEntityRef("\n{CREATING INJECTION CONSTRUCTOR}\n");
      assertEquals("\n{CREATING INJECTION CONSTRUCTOR}\n", xmlEntityRef2.getComponentId());
      
      ErrorPage errorPage1 = new ErrorPage();
      Component component0 = errorPage1.samp();
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.258426135894722
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Component component0 = null;
      String string0 = "6de";
      Checkbox checkbox0 = new Checkbox((Component) null, "6de", "6de");
      Byte byte0 = new Byte((byte)6);
      Byte.compare((byte)6, (byte)15);
      Byte.compare((byte)6, (byte)6);
      Byte.compare((byte)6, (byte)45);
      // Undeclared exception!
      try { 
        checkbox0.big((Object) byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.1848027755803994
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      Form form1 = form0.addFormValidationRule("", "");
      Form form2 = form1.addFormValidationError("Finder expression didn't evaluate to a boolean value.");
      Form form3 = form2.id("");
      TextInput textInput0 = new TextInput(form2, "*>Q:<bjJqZdRKK[[}7", "Finder expression didn't evaluate to a boolean value.");
      Form form4 = form3.addFormElement(textInput0);
      component0.attribute("Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      TableRow tableRow0 = new TableRow(errorPage0);
      Block block0 = tableRow0.createTd();
      Hidden hidden0 = new Hidden(block0, "_(1cJ\"Mak,2B74S2", "");
      form4.li((Object) hidden0);
      Hidden hidden1 = new Hidden(form3, "", "non-digit in number value");
      MXSerializer mXSerializer0 = new MXSerializer();
      // Undeclared exception!
      try { 
        mXSerializer0.text("non-digit in number value");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.203246955493325
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "repeated / in tag declaration";
      TextInput textInput0 = new TextInput((Component) null, "F_$n(.", "F_$n(.");
      String string1 = null;
      // Undeclared exception!
      try { 
        textInput0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.061519328985694
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "@)j^4frH]_", "GOTG7M*R;*K0");
      FormElement formElement0 = checkbox0.setFormElementName("a%n?DXOXx;KxYH=");
      Checkbox checkbox1 = new Checkbox(formElement0, (String) null, "NEW org/mvel/util/FastList");
      // Undeclared exception!
      try { 
        checkbox1.ol();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.9323469378605727
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "F\\#*1tL=H-SySuM{g/B";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string2 = "ul";
      ElExpression elExpression0 = new ElExpression("ul");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "_;ytp[8-WNJ1NZSN", stringSelectModel0, elExpression0);
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "_;ytp[8-WNJ1NZSN", "F#*1tL=H-SySuM{g/B");
      FormElement formElement0 = checkbox0.validationRule("_;ytp[8-WNJ1NZSN");
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        checkboxGroup0.remove((Component) formElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.085121827955317
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      TextInput textInput0 = new TextInput(component0, "ol", "");
      // Undeclared exception!
      try { 
        textInput0.wrapSelf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.258426135894722
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "|";
      String string1 = "9i\\h2 {m$LfM";
      String string2 = "GFJ_wl%{k$q";
      DateInput dateInput0 = new DateInput((Component) null, "|", "GFJ_wl%{k$q", "|");
      // Undeclared exception!
      try { 
        dateInput0.h4();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.110293717603869
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "|", "9ih2 {m$LfM", "|");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string0 = "aga>)6ux5UEK>";
      ElExpression elExpression0 = new ElExpression("aga>)6ux5UEK>");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(errorPage0, "Could not encode string '", "soundslike", stringSelectModel0, elExpression0);
      Component component0 = checkboxGroup0.object();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Could not encode string '", "|");
      component0.h5((Object) checkboxGroup0);
      FormElement formElement0 = checkbox0.validationRule("Could not encode string '");
      String string1 = "l8EGc;.:l^\"%*";
      Radio radio0 = new Radio(dateInput0, "9ih2 {m$LfM", "l8EGc;.:l^\"%*");
      radio0.clasS("9ih2 {m$LfM");
      radio0.defaultDomEvent();
      TableBlock tableBlock0 = new TableBlock(formElement0, "W,%I}y");
      String string2 = "kdb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("lnable to assign variables.  no variable resolver actory available.");
      checkboxGroup0.abbr();
      // Undeclared exception!
      try { 
        xmlEntityRef0.get("|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.2584261358947217
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      Checkbox checkbox0 = new Checkbox((Component) null, "", "Can't add components to a component that is not an instance of IContainer.");
      FormElement formElement0 = checkbox0.validationRule("");
      InitialFieldValue initialFieldValue0 = new InitialFieldValue(formElement0, "[a[`@R'6!9M}zvFf>>");
      // Undeclared exception!
      try { 
        formElement0.h5((Object) initialFieldValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.243385473982151
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "F\\#*1tL=H-SySuM{g/B";
      String string2 = "x";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("ul");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "x", stringSelectModel0, elExpression0);
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "x", "F#*1tL=H-SySuM{g/B");
      checkbox0.validationRule("x");
      // Undeclared exception!
      try { 
        checkboxGroup0.li();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.879712599153868
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Long long0 = new Long(3142L);
      errorPage0.dfn((Object) long0);
      Text text0 = new Text(errorPage0, errorPage0);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("`a{X'TA8T]n|&`(Z)/");
      xmlEntityRef0._getVisibleForm(true);
      // Undeclared exception!
      try { 
        xmlEntityRef0.a();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("ul");
      TextInput textInput0 = new TextInput(xmlEntityRef0, "g(ETX]j jGjvy", "a%n?DXOXx;KxYH=");
      // Undeclared exception!
      try { 
        textInput0.samp();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "qj0>i<";
      Form form0 = new Form("qj0>i<");
      form0._getChildren();
      // Undeclared exception!
      try { 
        form0.u((Object) dynamicSelectModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string0 = "ul";
      String string1 = "h3";
      stringSelectModel0.addValue("a%n?DXOXx;KxYH=", "h3");
      // Undeclared exception!
      try { 
        xmlEntityRef0.i();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.6021130090003086
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "}SNU^q)[w,uD!{gTf", "");
      checkbox0.setFormElementName("org.mvel.conversion.DoubleCH$5");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("}SNU^q)[w,uD!{gTf");
      // Undeclared exception!
      try { 
        checkbox0.placeholder((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.9983053023488706
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "9i\\h2 {mxm$ffM";
      DateInput dateInput0 = new DateInput(errorPage0, "|", "9ih2 {mxm$ffM", "|");
      Component component0 = errorPage0.param("|", "9ih2 {mxm$ffM");
      // Undeclared exception!
      try { 
        component0.h2();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.8368546933595242
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "!";
      DateInput dateInput0 = new DateInput(errorPage0, "!", "9ih2 {m$LfM", "!");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string1 = "aga>)6ux5UEK>";
      ElExpression elExpression0 = new ElExpression("aga>)6ux5UEK>");
      Checkbox checkbox0 = new Checkbox(errorPage0, "Could not encode string '", "!");
      FormElement formElement0 = checkbox0.validationRule("Could not encode string '");
      String string2 = "l8EGc;.:l^\"%*";
      Radio radio0 = new Radio(dateInput0, "9ih2 {m$LfM", "l8EGc;.:l^\"%*");
      radio0.clasS("9ih2 {m$LfM");
      radio0.defaultDomEvent();
      TableBlock tableBlock0 = new TableBlock(formElement0, "W,%I}y");
      String string3 = "kdb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("lnable to assign variables.  no variable resolver actory available.");
      Object object0 = new Object();
      xmlEntityRef0._applyFormat(object0);
      // Undeclared exception!
      try { 
        xmlEntityRef0.imageSubmit("", "? SjFE]j");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.4530014063936125
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = "Could not find component with id '";
      Form form0 = new Form("Could not find component with id '");
      Form form1 = form0.renderHint("Could not find component with id '");
      form1.addFormValidationError("Could not find component with id '");
      Checkbox checkbox0 = new Checkbox(form0, "Could not find component with id '", "Could not find component with id '");
      // Undeclared exception!
      try { 
        checkbox0.pre();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.533225019181038
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Submit submit0 = new Submit(text0, "", "");
      // Undeclared exception!
      try { 
        errorPage0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.0499251260871434
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "code", "code");
      checkbox0.setFormElementName("Can't add components to a component that is not an instance of IContainer.");
      // Undeclared exception!
      try { 
        checkbox0.ol();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.914543631327493
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      String string0 = "";
      Form form1 = form0.addFormValidationRule("", "");
      Form form2 = form1.addFormValidationError("");
      form1.dl();
      ElExpression elExpression0 = new ElExpression("_(1cJ\"Mak,2B74S2");
      component0.getPage();
      elExpression0.errorMessage("");
      TextArea textArea0 = new TextArea(form1, "CdnMi`l7O", "E");
      textArea0.value(";&9eE}&_A38o");
      // Undeclared exception!
      try { 
        form2.field("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form field with name  doesn't exist.
         //
         verifyException("wheel.components.Form", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.0201666142392036
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "|", "9ih2 {m$LfM", "|");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string0 = "aga>)6ux5UEK>";
      ElExpression elExpression0 = new ElExpression("aga>)6ux5UEK>");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(errorPage0, "Could not encode string '", "soundslike", stringSelectModel0, elExpression0);
      checkboxGroup0.object();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Could not encode string '", "|");
      FormElement formElement0 = checkbox0.validationRule("Could not encode string '");
      String string1 = "l8EGc;.:l^\"%*";
      Radio radio0 = new Radio(dateInput0, "9ih2 {m$LfM", "l8EGc;.:l^\"%*");
      radio0.clasS("9ih2 {m$LfM");
      radio0.defaultDomEvent();
      TableBlock tableBlock0 = new TableBlock(formElement0, "W,%I}y");
      String string2 = "kdb";
      checkboxGroup0.object();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("lnable to assign variables.  no variable resolver actory available.");
      // Undeclared exception!
      try { 
        xmlEntityRef0.get("|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.9695847282015624
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "|";
      DateInput dateInput0 = new DateInput(errorPage0, "|", "9ih2 {mxm$ffM", "|");
      TextInput textInput0 = new TextInput(dateInput0, "812!i\"6W;p~K.U", "|");
      Table table0 = new Table(textInput0, "|");
      Table table1 = table0.renderHint("9ih2 {mxm$ffM");
      TableBlock tableBlock0 = table1.colgroup();
      tableBlock0.dl();
      tableBlock0.defaultTagName();
      // Undeclared exception!
      try { 
        dateInput0.nbsp();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.992184330250576
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      DateInput dateInput0 = new DateInput(errorPage0, "", "", "");
      form0.legend((Object) dateInput0);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("_(1cJ\"Mak,2B74S2");
      dynamicSelectModel1.enumeration("");
      ActionExpression actionExpression1 = new ActionExpression("1qBwr%E~s?7H");
      dynamicSelectModel0.validate();
      form0.dl();
      ElExpression elExpression0 = new ElExpression("_(1cJ\"Mak,2B74S2");
      errorPage0.getPage();
      // Undeclared exception!
      try { 
        form0.field("map");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form field with name map doesn't exist.
         //
         verifyException("wheel.components.Form", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "code", "code");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("code");
      // Undeclared exception!
      try { 
        checkbox0.legend((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.2727555567863744
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "F\\#*1tL=H-SySuM{g/B";
      String string2 = "_;ytp[8-WNJ1NSN";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string3 = "ul";
      ElExpression elExpression0 = new ElExpression("ul");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "_;ytp[8-WNJ1NSN", stringSelectModel0, elExpression0);
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "_;ytp[8-WNJ1NSN", "F#*1tL=H-SySuM{g/B");
      checkbox0.validationRule("_;ytp[8-WNJ1NSN");
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        checkbox0._setSubmitValue(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.9703569917466583
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "|", "9ih2 {mxm$ffM", "|");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("|");
      ElExpression elExpression1 = elExpression0.errorMessage("|");
      RadioGroup radioGroup0 = new RadioGroup(errorPage0, "9ih2 {mxm$ffM", "", stringSelectModel0, elExpression1);
      Component component0 = radioGroup0.small();
      Table table0 = new Table(radioGroup0, "|");
      TableBlock tableBlock0 = table0.thead();
      component0.h4((Object) tableBlock0);
      assertTrue(radioGroup0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.2448999724663743
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = "code";
      Checkbox checkbox0 = new Checkbox((Component) null, "code", "code");
      String string1 = "Can't add components to a component that is not an instance of IContainer.";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("code");
      // Undeclared exception!
      try { 
        checkbox0.checkboxGroup("Can't add components to a component that is not an instance of IContainer.", stringSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.7200500935197973
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "N)>^~d>4 $Y\"NK)";
      DateInput dateInput0 = new DateInput(errorPage0, "N)>^~d>4 $Y\"NK)", "N)>^~d>4 $Y\"NK)", "N)>^~d>4 $Y\"NK)");
      // Undeclared exception!
      try { 
        dateInput0.h4();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.9012681369529556
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("s");
      ElExpression elExpression1 = elExpression0.errorMessage("");
      Table table0 = new Table(errorPage0, "dU7m/j03m}+>x<9");
      Table table1 = table0.renderHint("dU7m/j03m}+>x<9");
      RadioGroup radioGroup0 = new RadioGroup(table1, "dU7m/j03m}+>x<9", "dU7m/j03m}+>x<9", stringSelectModel0, elExpression1);
      Component component0 = radioGroup0.small();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      stringSelectModel0.addValue("a%n?DXOXx;KxYH=", "h3");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "n", "h3");
      checkbox0.validationRule("");
      String string1 = "%Zq?";
      // Undeclared exception!
      try { 
        xmlEntityRef0.h6((Object) "%Zq?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Form form0 = new Form("repeated / in tag declaration");
      Form form1 = form0.addFormValidationError("repeated / in tag declaration");
      String string0 = null;
      Checkbox checkbox0 = new Checkbox(form1, "repeated / in tag declaration", ") exceeds that maximum precision of Integer.");
      // Undeclared exception!
      try { 
        checkbox0.label("{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6872593473350865
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = "org.mel.conversion.BooleanCH4";
      Form form0 = new Form("org.mel.conversion.BooleanCH4");
      form0.create();
      String string1 = "";
      Component component0 = form0.actionBinding("");
      component0.getComponentName();
      // Undeclared exception!
      try { 
        component0.u((Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.7200500935197973
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "Could not find component with id '", "J+nkJ*(nFZ)~\"<G*[&");
      // Undeclared exception!
      try { 
        textInput0.samp();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.2584261358947217
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "F\\#*1tL=H-SySuM{g/B";
      String string2 = "5!X5O2_9M^u;[_";
      DateInput dateInput0 = new DateInput(xmlEntityRef0, "5!X5O2_9M^u;[_", "a%n?DXOXx;KxYH=", "F#*1tL=H-SySuM{g/B");
      // Undeclared exception!
      try { 
        dateInput0.nbsp();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.055241229403554
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      Form form0 = new Form(component0, "_(1cJ\"Mak,2B74S2", actionExpression0);
      Form form1 = form0.addFormValidationRule("", "");
      String string0 = "";
      Form form2 = form1.addFormValidationError("");
      form1.em((Object) "");
      form2.id("[");
      // Undeclared exception!
      try { 
        errorPage0._getTopLevelComponent(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.975294734815542
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = ",4(`s1L4PX5n&:`O@";
      errorPage0.dfn();
      NumberInput numberInput0 = new NumberInput(errorPage0, ",4(`s1L4PX5n&:`O@", ",4(`s1L4PX5n&:`O@");
      String string1 = " in class ";
      Hidden hidden0 = new Hidden(numberInput0, " in class ", ",4(`s1L4PX5n&:`O@");
      Block block0 = new Block(hidden0, ",4(`s1L4PX5n&:`O@");
      String string2 = "";
      // Undeclared exception!
      try { 
        hidden0.h4((Object) ",4(`s1L4PX5n&:`O@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "_;ytp[8-WNJ1NZSN";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      mockGregorianCalendar0.getTime();
      mockGregorianCalendar0.getTimeInMillis();
      // Undeclared exception!
      try { 
        xmlEntityRef0.i((Object) mockGregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.4259101490553134
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      String string0 = "wheel.components.ElExpression";
      Submit submit0 = new Submit(text0, "wheel.components.ElExpression", "wheel.components.ElExpression");
      String string1 = "Ja8c{zSYBi";
      submit0.value("Ja8c{zSYBi");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.empty("wheel.components.ElExpression");
      String string2 = "'U";
      // Undeclared exception!
      try { 
        submit0.remove("Ja8c{zSYBi");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5426853338355
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = ",4(`s1L4PX5n&:`O@";
      NumberInput numberInput0 = new NumberInput(errorPage0, ",4(`s1L4PX5n&:`O@", ",4(`s1L4PX5n&:`O@");
      Hidden hidden0 = new Hidden(numberInput0, " in class ", ",4(`s1L4PX5n&:`O@");
      Block block0 = new Block(hidden0, ",4(`s1L4PX5n&:`O@");
      Checkbox checkbox0 = new Checkbox(block0, " in class ", "");
      String string1 = "";
      errorPage0.eval(block0);
      // Undeclared exception!
      try { 
        block0.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.201793123629589
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = "Could not find component with id '";
      Form form0 = new Form("Could not find component with id '");
      Form form1 = new Form("Could not find component with id '");
      Form form2 = form1.addFormValidationError("Could not find component with id '");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        form2.textarea((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.4530014063936125
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = "Could not find component with id '";
      Form form0 = new Form("Could not find component with id '");
      Form form1 = form0.renderHint("Could not find component with id '");
      form1.addFormValidationError("Could not find component with id '");
      Checkbox checkbox0 = new Checkbox(form0, "Could not find component with id '", "Could not find component with id '");
      // Undeclared exception!
      try { 
        checkbox0.blockquote();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.3867961512087774
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Component component0 = null;
      TextInput textInput0 = new TextInput((Component) null, "F_$n(.", "repeated / in tag declaration");
      textInput0._getRenderableChildren();
      DateInput dateInput0 = new DateInput((Component) null, "F_$n(.", "7AL^S<Px.l}w", "repeated / in tag declaration");
      dateInput0.defaultTagName();
      String string0 = "'.";
      // Undeclared exception!
      try { 
        textInput0.dateInput("'.", ".>&oTY:&TaEk<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.2584261358947217
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "F_$n(.", "repeated / in tag declaration");
      textInput0._getRenderableChildren();
      // Undeclared exception!
      try { 
        textInput0._wrapComponentId("repeated / in tag declaration");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.9012627046802386
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      String string0 = "$X4tFJ?o$b5V\\U|r2m";
      String string1 = "*>Q:<bjJqZdRKK[[}7";
      Table table0 = new Table(errorPage0, "Finder expression didn't evaluate to a boolean value.");
      TableBlock tableBlock0 = table0.thead();
      tableBlock0.attribute("Finder expression didn't evaluate to a boolean value.", "wheel.components.ElExpression");
      String string2 = "non-digit in number value";
      Component component0 = null;
      Table table1 = null;
      try {
        table1 = new Table((Component) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.3488297589808544
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string0 = "F\\#*1tL=H-SySuM{g/B";
      String string1 = "_;ytp[8-WNJ1NZSN";
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("ul");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "_;ytp[8-WNJ1NZSN", stringSelectModel0, elExpression0);
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "_;ytp[8-WNJ1NZSN", "F#*1tL=H-SySuM{g/B");
      checkbox0.validationRule("_;ytp[8-WNJ1NZSN");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "a%n?DXOXx;KxYH=";
      // Undeclared exception!
      try { 
        checkbox0.reset("ul");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.3128868859883
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Component component0 = xmlEntityRef0.attribute("", "");
      // Undeclared exception!
      try { 
        component0.numberInput("", (CharSequence) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = "a%n?DXOXx;KxYH=";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      String string1 = "F\\#*1tL=H-SySuM{g/B";
      String string2 = "5!X5O2_9M^u;[_";
      DateInput dateInput0 = new DateInput(xmlEntityRef0, "5!X5O2_9M^u;[_", "a%n?DXOXx;KxYH=", "F#*1tL=H-SySuM{g/B");
      // Undeclared exception!
      try { 
        xmlEntityRef0.u((Object) "F#*1tL=H-SySuM{g/B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.391787857457485
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "F_$n(.", "repeated / in tag declaration");
      // Undeclared exception!
      try { 
        textInput0.dfn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.4089921585327536
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "F_$n(.", "repeated / in tag declaration");
      textInput0._getRenderableChildren();
      DateInput dateInput0 = new DateInput((Component) null, "F_$n(.", "7AL^S<Px.l}w", "repeated / in tag declaration");
      TextInput textInput1 = new TextInput(dateInput0, ".%ed&SIAv6#PQHSl#H", "F_$n(.");
      // Undeclared exception!
      try { 
        textInput1.dfn();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.258426135894722
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = "";
      TextInput textInput0 = new TextInput((Component) null, "", "repeated / in tag declaration");
      // Undeclared exception!
      try { 
        textInput0.samp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.4176809666625676
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string0 = "ul";
      ElExpression elExpression0 = new ElExpression("ul");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "_;ytp[8-WNJ1NZSN", stringSelectModel0, elExpression0);
      elExpression0.chars();
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "_;ytp[8-WNJ1NZSN", "F#*1tL=H-SySuM{g/B");
      CheckboxGroup checkboxGroup1 = new CheckboxGroup(checkbox0, "ul", "F#*1tL=H-SySuM{g/B", stringSelectModel0, elExpression0);
      // Undeclared exception!
      try { 
        checkboxGroup1.object();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.8596068373431205
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "code", "code");
      FormElement formElement0 = checkbox0.setFormElementName("Can't add components to a component that is not an instance of IContainer.");
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(formElement0, "org.mvel.conversion.CharArrayCH$1", "class");
      Component component0 = errorPage0.strong((Object) textInput0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.273240950709537
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "6de", "6de");
      Checkbox checkbox1 = new Checkbox((Component) null, "6de", "Can't add components to a component that is not an instance of IContainer.");
      FileInput fileInput0 = new FileInput(checkbox0, "6de", "6de");
      // Undeclared exception!
      try { 
        checkbox1.address();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String string0 = "xS|%";
      Form form0 = new Form("xS|%");
      // Undeclared exception!
      try { 
        form0.tt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.067346343481935
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      MXSerializer mXSerializer0 = new MXSerializer();
      Component component0 = errorPage0.s();
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = 'm';
      Block block0 = new Block(component0, "");
      Component component1 = block0.attribute("", "");
      TextArea textArea0 = new TextArea(component1, "", (String) null);
      FormElement formElement0 = textArea0.value("");
      Table table0 = new Table(formElement0, (String) null);
      Table table1 = table0.renderHint("");
      Table table2 = table1.id("");
      TableBlock tableBlock0 = table2.tbody();
      tableBlock0.renderHint((CharSequence) null);
      tableBlock0.tr();
      tableBlock0.defaultTagName();
      assertFalse(table1._isGeneratedId());
      assertTrue(tableBlock0._isGeneratedId());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.20571469225704
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.create();
      Select select0 = new Select(errorPage0, (String) null, (String) null, (ISelectModel) null, (CharSequence) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(select0._isGeneratedId());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.h2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("");
      elExpression0.errorMessage("WB65'E:^1");
      RadioGroup radioGroup0 = new RadioGroup((Component) null, "KQE|X^[II", "s", stringSelectModel0, elExpression0);
      // Undeclared exception!
      try { 
        radioGroup0.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("");
      ElExpression elExpression1 = elExpression0.errorMessage("s");
      RadioGroup radioGroup0 = new RadioGroup((Component) null, "HJ\"]!5gs,iph2X?[6", "s", stringSelectModel0, elExpression1);
      // Undeclared exception!
      try { 
        radioGroup0.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.7034936539478176
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("|0`cpd>&\u0004");
      assertEquals("|0`cpd>&\u0004", xmlEntityRef0.getComponentId());
      
      ErrorPage errorPage1 = new ErrorPage();
      Component component0 = errorPage0.sub();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.7519785155528935
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Submit submit0 = new Submit(text0, "wheel.components.ElExpression", "wheel.components.ElExpression");
      FormElement formElement0 = submit0.value("Ja8c{zSYBi");
      Table table0 = new Table(formElement0, "");
      table0.renderHint("Ja8c{zSYBi");
      ElExpression elExpression0 = new ElExpression("");
      ElExpression elExpression1 = elExpression0.errorMessage("");
      // Undeclared exception!
      try { 
        submit0.s((Object) elExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.6051596727330435
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "Could not find component with id '";
      String string1 = "812!i\"6W;p~K.U";
      TextInput textInput0 = new TextInput(errorPage0, "Could not find component with id '", "812!i\"6W;p~K.U");
      String string2 = "5!X5O2_9M^u;[_";
      String string3 = "3rWm\\eeh@Yc";
      Table table0 = new Table(errorPage0, "3rWmeeh@Yc");
      // Undeclared exception!
      try { 
        textInput0.entity("812!i\"6W;p~K.U");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "n0n";
      Form form0 = new Form("n0n");
      // Undeclared exception!
      try { 
        form0.h4((Object) "J`[L\"DWDWZ(rs@[;1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.880487637693822
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = ",4(`s1L4PX5n&:`O@";
      NumberInput numberInput0 = new NumberInput(errorPage0, ",4(`s1L4PX5n&:`O@", ",4(`s1L4PX5n&:`O@");
      String string1 = " in class ";
      Hidden hidden0 = new Hidden(numberInput0, " in class ", ",4(`s1L4PX5n&:`O@");
      Block block0 = new Block(hidden0, ",4(`s1L4PX5n&:`O@");
      String string2 = "";
      // Undeclared exception!
      try { 
        hidden0.h4((Object) ",4(`s1L4PX5n&:`O@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.681629988974368
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "|", "9ih2 {m$LfM", "|");
      ElExpression elExpression0 = new ElExpression("aga>)6ux5UEK>");
      Submit submit0 = new Submit(errorPage0, "9ih2 {m$LfM", "");
      submit0.value("qv3SV|~xyJGS\"");
      // Undeclared exception!
      try { 
        submit0.em();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.7200500935197973
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Could not find component with id '", "F#*1tL=H-SySuM{g/B");
      // Undeclared exception!
      try { 
        checkbox0.strike();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.9581630363395774
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = null;
      Select select0 = new Select(errorPage0, (String) null, (String) null, (ISelectModel) null, (CharSequence) null);
      select0.meta();
      Any any0 = new Any(select0, (CharSequence) null);
      Submit submit0 = new Submit(any0, "span", "cannot coerce Long to Integer since the value (");
      FormElement formElement0 = submit0.value("cannot coerce Long to Integer since the value (");
      Form form0 = new Form((String) null);
      select0._setComponentId(" to: ");
      String string1 = "/f7WG2Wym7#m";
      DateInput dateInput0 = new DateInput(formElement0, (String) null, "/f7WG2Wym7#m", "span");
      MXSerializer mXSerializer0 = new MXSerializer();
      String string2 = null;
      // Undeclared exception!
      try { 
        mXSerializer0.startTag((String) null, (String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // setOutput() must called set before serialization can start
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.734399680379122
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup((Component) null, "_;ytp[8-WNJ1NZSN", "F#*1tL=H-SySuM{g/B", stringSelectModel0, elExpression0);
      Checkbox checkbox0 = new Checkbox(checkboxGroup0, "ul", "_;ytp[8-WNJ1NZSN");
      checkbox0.validationRule("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "_;ytp[8-WNJ1NZSN";
      stringArray0[1] = "ul";
      stringArray0[2] = "ul";
      stringArray0[3] = "5(O7!cy,+ 6?@";
      stringArray0[4] = "5(O7!cy,+ 6?@";
      stringArray0[5] = "";
      stringArray0[6] = "5(O7!cy,+ 6?@";
      stringArray0[7] = "[U}(6J!rcQBVL^!|uKt";
      stringArray0[8] = "ul";
      // Undeclared exception!
      try { 
        checkbox0.attributes(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.1250375478629557
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "a%n?DXOXx;KxYH=", "F#*1tL=H-SySuM{g/B");
      TextInput textInput0 = new TextInput(xmlEntityRef0, "F#*1tL=H-SySuM{g/B", "abbr");
      // Undeclared exception!
      try { 
        textInput0._getTopLevelComponent(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.707968839171299
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "F\\#*1tL=H-SySuM{g/B";
      Table table0 = new Table(errorPage0, "");
      // Undeclared exception!
      try { 
        table0.id("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.258426135894722
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "code", "code");
      FormElement formElement0 = checkbox0.setFormElementName("Can't add components to a component that is not an instance of IContainer.");
      // Undeclared exception!
      try { 
        formElement0.strike();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.258426135894722
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Submit submit0 = new Submit((Component) null, "link", "content-type");
      submit0.value("o~DYd8");
      ElExpression elExpression0 = new ElExpression("");
      elExpression0.errorMessage("content-type");
      // Undeclared exception!
      try { 
        submit0.s((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.205550576313325
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.pre();
      assertTrue(component0._isGeneratedId());
      
      Hidden hidden0 = new Hidden((Component) null, "aGQp@h^IKxCprc>R", "aGQp@h^IKxCprc>R");
      ActionExpression actionExpression0 = new ActionExpression("repeated / in tag declaration");
      ActionExpression actionExpression1 = actionExpression0.updateComponent(":)B{^");
      actionExpression0.setOwner(hidden0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = object1;
      objectArray0[1] = (Object) actionExpression1;
      objectArray0[2] = (Object) ":)B{^";
      objectArray0[3] = (Object) actionExpression0;
      actionExpression0.parameters(objectArray0);
      Form form0 = new Form(errorPage0, "TJ", actionExpression1);
      form0.buildComponent();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.7712515700261044
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._getComponentStore();
      Component component0 = errorPage0.pre();
      ActionExpression actionExpression0 = new ActionExpression("_(1cJ\"Mak,2B74S2");
      TableRow tableRow0 = new TableRow(component0);
      Block block0 = tableRow0.createTd();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.277403588295191
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("repeated / in tag declaration");
      xmlEntityRef0._getVisibleForm(true);
      DateInput dateInput0 = new DateInput(xmlEntityRef0, "repeated / in tag declaration", "o9@3w2\"wy/DC:", "o9@3w2\"wy/DC:");
      dateInput0.defaultTagName();
      FileInput fileInput0 = null;
      try {
        fileInput0 = new FileInput(xmlEntityRef0, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.6712202751104317
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Submit submit0 = new Submit(text0, "wheel.components.ElExpression", "wheel.components.ElExpression");
      FormElement formElement0 = submit0.value("Ja8c{zSYBi");
      formElement0._setGeneratedId(false);
      Table table0 = new Table(formElement0, "");
      table0.renderHint("Ja8c{zSYBi");
      ElExpression elExpression0 = new ElExpression("");
      // Undeclared exception!
      try { 
        text0.address();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.6912038861628376
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.empty("\"&=eRJ'KVA}!E");
      dynamicSelectModel0.enumeration("kZ\"1=-lnsLa,6|Q})l7");
      Component component0 = errorPage0.sup((Object) "\"&=eRJ'KVA}!E");
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("a%n?DXOXx;KxYH=");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "a%n?DXOXx;KxYH=", "F#*1tL=H-SySuM{g/B");
      // Undeclared exception!
      try { 
        checkbox0.strike();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
