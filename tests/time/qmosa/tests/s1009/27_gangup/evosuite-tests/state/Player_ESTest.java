/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:02:48 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.net.URISyntaxException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis((-223L));
      Player player0 = new Player(403, (String) null, (-347));
      Party party0 = player0.next;
      player0.prev = null;
      Player player1 = new Player(14505, (String) null, (String) null, (-347));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      player0.getSubparty();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player1.unpack(dataInputStream0);
      player0.setJoinOK(player1, true);
      player0.gangStrength();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.toString();
      float float1 = player0.getY();
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(float1, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      
      boolean boolean0 = player1.isConnected();
      assertTrue(boolean0);
      
      player1.getName();
      assertEquals((-347), player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(0, "", "", 2);
      byte[] byteArray0 = player0.pack();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ul#2x*;e=N");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Player player1 = new Player(2, ".*[.]class$", "v?Zy]]d:>K~O%:g", 0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      Player player2 = new Player((short)4919, "", 0);
      player0.setJoinOK(player2, true);
      player0.getName();
      player1.isJoinOK(player0, false);
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "", (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-1029), "(qeLc0|}(|%)7v~KM&", (-1029));
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      // Undeclared exception!
      try { 
        player2.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-2811), "", "", 1, (-2811));
      player0.reset(false);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      player0.getPictureId();
      player0.id = 1;
      player0.getIP();
      player0.getIP();
      Player player1 = new Player((-2811), "", (-963));
      player1.boss = (Party) player0;
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals((-2811), player0.getStrength());
      assertTrue(player1.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals((-963), player1.getPictureId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(4919, "$a]rNuD_gB$(G(f", (String) null, (-3504), (-1029));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(4919, "", (-1103));
      player0.getZ();
      player0.setX(0.0F);
      player0.getTimeOfDeath();
      player0.getX();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte) (-87);
      byteArray0[3] = (byte)56;
      player0.unpack(byteArray0);
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      player0.pack();
      assertEquals(0.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "";
      int int0 = 2;
      Player player0 = new Player(2);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.83F));
      int int1 = Packable.TEXT_MESSAGE;
      Player player1 = new Player(1);
      player1.type();
      player0.type();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.getY();
      String string1 = "Y+1*q\"FIO[23yF;bFp";
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-485), 1611);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0, "", "", (-1), (-945));
      player0.setMoney(2);
      player0.getZ();
      player0.setX((-1));
      player0.getTimeOfDeath();
      player0.getX();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)56;
      player0.unpack(byteArray0);
      assertEquals(2.0F, player0.getMoney(), 0.01F);
      
      Player player1 = new Player();
      Player player2 = new Player(0, "", "", (byte)56, 10);
      boolean boolean0 = player2.isJoinOK(player1, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4162134738653434
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0, "U2wNQ';)RC8", "sXVDPU+lA;{}X", 2, 0);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead((long) 2, true);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.boss = (Party) player0;
      player1.setJoinOK(player0, true);
      player0.getName();
      player0.getSubparty();
      player1.setDead((long) 5);
      player1.toString();
      player1.isDead();
      player0.toString();
      player0.gangStrength();
      MockFile mockFile0 = new MockFile("Y+1*q\"FIO[23yF;bFp", "");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)3;
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertTrue(boolean0);
      
      Player player3 = new Player();
      player3.next = (Party) player0;
      boolean boolean1 = player0.isJoinOK(player2, true);
      assertFalse(boolean1);
      assertEquals(0, player2.getPictureId());
      assertTrue(player2.isConnected());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(1, player2.getStrength());
      assertFalse(player2.isDead());
      assertEquals("Player-1", player2.getName());
      assertEquals("0.0.0.0", player2.getIP());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.196939089991099
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(5354);
      Player player1 = new Player(5354, "", "", 5354, (short)4919);
      player0.boss = (Party) player1;
      player0.id = (-1680);
      player0.next = (Party) player1;
      byte[] byteArray0 = player1.pack();
      player0.next.boss = (Party) player1;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player1.unpack(dataInputStream0);
      player1.setDead(177L, false);
      player1.next = player0.next;
      player0.getSubparty();
      player0.getY();
      player1.setX((-542.726F));
      player0.getZ();
      player0.getName();
      player1.unpack(byteArray0);
      player0.getZ();
      Player player2 = new Player();
      player1.isJoinOK(player2, true);
      MockFile mockFile0 = new MockFile("Player.unpack(): *** WARNING *** data is not of proper type!", "Y+4AUF5->=nqe");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player1.pack(dataOutputStream0);
      assertTrue(player1.isDead());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.261882971864777
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(2);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.83F));
      int int0 = Packable.TEXT_MESSAGE;
      player0.type();
      player0.type();
      player0.setDead((long) 2, false);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      Player player1 = new Player(2, "m4T0mE~K_pu[3hT", 2);
      player1.boss = (Party) player0;
      player1.unpack(byteArray0);
      player0.setJoinOK(player1, false);
      player1.setY((-3591.83F));
      player1.setJoinOK(player0, true);
      Player player2 = new Player();
      player0.isJoinOK(player1, false);
      player2.prev = (Party) player1;
      MockFile mockFile0 = new MockFile((String) null, "");
      Player player3 = new Player((-574), "m4T0mE~K_pu[3hT", "", (short)4919, (short)4919);
      float float0 = player1.getY();
      assertEquals((-3591.83F), float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-148), "l)", "", (-148), (-914));
      int int0 = player0.gangStrength();
      assertEquals((-914), int0);
      
      player0.id = (-901);
      player0.id = (-148);
      player0.setZ(0.0F);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      long long0 = player0.getTimeOfDeath();
      assertTrue(player0.isConnected());
      assertEquals((-148), player0.getPictureId());
      assertEquals(0L, long0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("l)", player0.getIP());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.128419031742918
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-1481.2637F));
      Player player1 = new Player(44, "", "", 83, 1);
      player1.setMoney((short)4919);
      player0.getZ();
      Player player2 = new Player((short)4919, "state.Party", "", (short)4919, 1161);
      player2.setX(1.0F);
      player0.getTimeOfDeath();
      player0.getX();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte) (-1);
      byteArray0[3] = (byte)56;
      player0.unpack(byteArray0);
      assertEquals((-1481.2637F), player0.getZ(), 0.01F);
      
      Player player3 = new Player();
      Player player4 = new Player();
      boolean boolean0 = player4.isJoinOK(player3, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte) (-109);
      byteArray0[5] = (byte)25;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(1190, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", (byte) (-109), 161);
      int int0 = player0.gangStrength();
      assertEquals(161, int0);
      
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals((-109), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player(0);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.type();
      player0.type();
      player0.getY();
      String string1 = "Y+1*q\"FIO[23yF;bFp";
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player0.getName();
      player0.isJoinOK(player1, false);
      MockFile mockFile0 = new MockFile("ul#2x*;e=N", "Player.unpack(): *** WARNING *** data is not of proper type!");
      String string2 = "aq<fc=";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "aq<fc=");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // aq<fc=
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1, "state.Player$JoinInfo", 2);
      Player player1 = new Player();
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.toString());
      
      MockFile mockFile0 = new MockFile("!Q1R", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      assertEquals(2, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-460), "mod^le.ModuleBrowserDialog$ModuleFilter", "2gHs1S]6N0Y;UD)", (-1018), (-1018));
      player0.pack();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.174317417693044
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(0, "", "U2wNQ';)RC8", 2);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead((long) 2, true);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.isDead();
      player1.toString();
      Player player2 = new Player((short)4919, "state.Party", " ", 256, 256);
      player2.gangStrength();
      MockFile mockFile0 = new MockFile(".*[.]class$", "-pLpoUc\"G!D,@#");
      MockFile mockFile1 = new MockFile(mockFile0, "E.|Ck<F9,&TlKz");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile1, ".*[.]class$");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // .*[.]class$
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player(13, "", "U2wNQ';)RC8", 2);
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead((long) 2, false);
      player0.getY();
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.boss = (Party) player0;
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      // Undeclared exception!
      try { 
        player2.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.setY((-909.1059F));
      player0.getMoney();
      player0.getIP();
      assertEquals((-909.1059F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(13, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 13);
      player0.setY((-2262.65F));
      try { 
        MockURI.URI("", "", "", "module.ModuleBrowserDialog$ModuleFilter", "k!)2CL*6K\t");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://?module.ModuleBrowserDialog$ModuleFilter#k!)2CL*6K%09
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "module.ModuleBrowserDialog$ModuleFilter";
      String string1 = "7([IV6J/VK^";
      int int0 = 0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      Player player0 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", "7([IV6J/VK^", 0, 0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)115;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte) (-74);
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-120);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)6;
      player0.unpack(byteArray0);
      player0.gangStrength();
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      player0.getMoney();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      player0.setZ((-1944.37F));
      Player player1 = new Player(0, "'tU", (String) null, 0, 2894);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte) (-74);
      byteArray0[3] = (byte)77;
      byteArray0[4] = (byte) (-29);
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Party party0 = player1.head;
      player0.add((Party) null);
      player0.head = (Party) player1;
      player0.getSubparty();
      player0.toString();
      player0.gangStrength();
      player0.getY();
      player0.pack();
      assertEquals((-1944.37F), player0.getZ(), 0.01F);
      
      player1.getIP();
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 60;
      Player player0 = new Player(60, "=fX?rwu_(!2V\n,", (-582));
      Party party0 = player0.gangBoss();
      party0.getSubparty();
      party0.getSubparty();
      player0.setConnected(false);
      long long0 = 0L;
      Party party1 = new Party();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream1);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 13;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "O]>@*_9j7";
      Player player0 = new Player(13, "module.ModuleBrowserDialog$ModuleFilter", "O]>@*_9j7", 0);
      player0.getY();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-120);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1045, 2508);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      String string1 = null;
      Player player1 = new Player(0, (String) null, 0);
      Player player2 = new Player();
      player0.setJoinOK(player2, false);
      player0.getName();
      player2.isJoinOK(player0, true);
      String string2 = "-SJq(T1W;Y#O";
      MockFile mockFile0 = new MockFile("-SJq(T1W;Y#O", "ul#2x*;e=N");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "O]>@*_9j7");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // O]>@*_9j7
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(4831, "", 573);
      player0.getName();
      player0.getMoney();
      player0.setMoney((-1.0F));
      player0.setDead((long) 4831);
      String string0 = "R5YPjiPDiD=";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("R5YPjiPDiD=", "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-1029), "", "mod^le.ModuleBrowserDialog$ModuleFilter", 1, (-1029));
      Party party0 = new Party((short)4919);
      party0.next = (Party) player0;
      player0.add(party0);
      player0.pack();
      assertEquals(1, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-1029), player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte)33;
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(1395);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player1395", player0.getName());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1), "bW;rE2H59g%v", "", 1226);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte) (-34);
      byteArray0[3] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(1226, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("bW;rE2H59g%v", player0.getIP());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 13;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "module.ModuleBrowserDialog$ModuleFilter";
      Player player0 = new Player(13, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 13);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("FQ>.0/;~6+}&8`s");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      PrintStream printStream0 = mockPrintStream1.append('9');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte) (-20);
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-50);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      Player player0 = new Player((byte)4, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "", (byte) (-20));
      float float0 = player0.getZ();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals((-20), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1, "U2wNQ';)RC8", "Y+1*q\"FIO[23yF;bFp", 2, 0);
      player0.setDead();
      player0.getTimeOfDeath();
      player0.getName();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-35.21427F));
      Player player1 = new Player((short)4919, "", "", (short)4919, (short)4919);
      player0.next = (Party) player1;
      player0.setMoney((short)4919);
      player1.id = 0;
      player0.getZ();
      player0.setX((-35.21427F));
      player1.getTimeOfDeath();
      player1.getX();
      Player player2 = new Player((short)4919);
      player2.setDead((long) 0, true);
      player1.setY((-1232.5277F));
      boolean boolean0 = player2.isJoinOK(player0, false);
      assertEquals((-35.21427F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.3210182221049966
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(0, "", "U2wNQ';)RC8", 2);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.setDead((long) 2, true);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.boss = (Party) player0;
      player0.setJoinOK(player1, true);
      player0.getName();
      player0.getSubparty();
      player0.setDead((long) 0);
      player0.toString();
      player0.isDead();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 5);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte) (-56);
      player0.unpack(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)1;
      player0.unpack(byteArray1);
      player0.unpack(byteArray1);
      Player player1 = new Player();
      Player player2 = new Player((byte)1);
      player2.setZ(0.0F);
      Player player3 = new Player(3064, (String) null, (byte)1);
      player2.add(player3);
      player0.isJoinOK(player2, false);
      assertEquals(0.0F, player2.getZ(), 0.01F);
      
      boolean boolean0 = player0.isJoinOK(player3, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals(1, player3.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(2, "U2wNQ';)RC8", 2);
      MockFile mockFile0 = new MockFile("ul#2x*;e=N", "Player.unpack(): *** WARNING *** data is not of proper type!");
      player0.setZ((-1407.4822F));
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      float float0 = player0.getZ();
      assertEquals((-1407.4822F), float0, 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      Player player1 = new Player();
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      
      MockFile mockFile0 = new MockFile("", "U2wNQ';)RC8");
      float float0 = player0.getX();
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(2, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-2407), "", (-2407));
      int int0 = player0.type();
      assertEquals(5, int0);
      
      player0.getPictureId();
      player0.id = (-2407);
      player0.getIP();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      Player player1 = new Player((-2802), "", (-2407));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals((-2407), player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+d-^9.O]x3hKx:\"3");
      Player player0 = new Player(5, "Bi}Z{iV7{", "/^aqur4)+'<!;(2\"bn|", 18933, (-2178));
      float float0 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertEquals(18933, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Bi}Z{iV7{", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals((-2178), player0.getStrength());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(4065, "", "", 0);
      player0.gangStrength();
      player0.setY(0.0F);
      player0.getStrength();
      player0.setX(911.4F);
      player0.setDead(1187L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-2178), ".*[.]class$", "BiZ{iV7{", (-2178), 1385);
      assertFalse(player0.isDead());
      
      player0.setDead(0L);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-61);
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-86);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player();
      player0.setZ((byte) (-86));
      player0.pack();
      player0.setDead();
      player0.reset(true);
      player0.setDead();
      player0.getStrength();
      player0.type();
      player0.type();
      player0.getIP();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)3;
      Player player0 = new Player((byte) (-77), "U@wy\"", "U@wy\"", (byte)3);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      player2.setY((byte)3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.reset(false);
      player0.isJoinOK(player2, true);
      Player player3 = new Player((byte)3);
      player3.next = (Party) player0;
      player3.getX();
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertEquals(3.0F, player2.getY(), 0.01F);
      assertFalse(boolean0);
  }
}
