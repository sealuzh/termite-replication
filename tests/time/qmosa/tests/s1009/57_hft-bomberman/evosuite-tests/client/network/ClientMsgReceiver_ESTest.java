/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:40:28 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.net.Socket;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLTimeoutException;
import java.sql.SQLTransientConnectionException;
import java.util.ArrayList;
import java.util.Comparator;
import messages.Message;
import messages.global.MapInfo;
import messages.global.MapListMsg;
import messages.session.SessionStateMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      String string0 = "Wc;7g";
      mockSocket0.getKeepAlive();
      SessionStateMsg sessionStateMsg0 = new SessionStateMsg(0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      clientMsgReceiver0.processMsg(sessionStateMsg0);
      String string1 = "";
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException(string0, string1, sessionStateMsg0.READY_FOR_NEXT_ROUND);
      String string2 = "A";
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException(string2, sQLFeatureNotSupportedException0);
      int int0 = 0;
      SessionStateMsg sessionStateMsg1 = new SessionStateMsg(int0);
      clientMsgReceiver0.processMsg(sessionStateMsg1);
      assertEquals(1, SessionStateMsg.READY_FOR_NEXT_ROUND);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("Wc;7g", 3038);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte) (-112);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ArrayList<MapInfo> arrayList0 = new ArrayList<MapInfo>();
      ArrayList<MapInfo> arrayList1 = new ArrayList<MapInfo>();
      MapInfo mapInfo0 = null;
      arrayList1.add(mapInfo0);
      arrayList1.add(mapInfo0);
      MapListMsg mapListMsg0 = new MapListMsg(arrayList1);
      mapListMsg0.toString();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("Wc;7g", 3038);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      mockInetSocketAddress0.getHostName();
      mockInetSocketAddress0.getHostName();
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockInetSocketAddress0.getHostName();
      MockSocket mockSocket1 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      bomberClient0.notifyObservers();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "DD7@LHy[wvs+h)sD98";
      String string1 = "";
      int int0 = 884;
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException(string0, string1, int0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[5];
      String string2 = ":";
      int int1 = 2315;
      StackTraceElement stackTraceElement0 = new StackTraceElement(string0, string2, string2, int1);
      stackTraceElementArray0[0] = stackTraceElement0;
      String string3 = "";
      String string4 = "";
      String string5 = "fS$\"C:B3%J9";
      StackTraceElement stackTraceElement1 = new StackTraceElement(string3, string4, string5, int0);
      stackTraceElementArray0[1] = stackTraceElement1;
      String string6 = "`/oHX4?r!";
      String string7 = "A~9xHx.";
      String string8 = "P!(";
      StackTraceElement stackTraceElement2 = new StackTraceElement(string6, string7, string8, int1);
      stackTraceElementArray0[2] = stackTraceElement2;
      String string9 = "";
      sQLTimeoutException0.fillInStackTrace();
      String string10 = "";
      int int2 = (-4574);
      StackTraceElement stackTraceElement3 = new StackTraceElement(string9, string0, string10, int2);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement(string1, string9, string0, int2);
      stackTraceElementArray0[4] = stackTraceElement4;
      sQLTimeoutException0.setStackTrace(stackTraceElementArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLTimeoutException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      System.setCurrentTimeMillis(254L);
      BomberClient bomberClient0 = null;
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = null;
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ArrayList<MapInfo> arrayList0 = new ArrayList<MapInfo>();
      MapInfo mapInfo0 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      arrayList0.add(mapInfo0);
      MapInfo mapInfo1 = mock(MapInfo.class, new ViolatedAssumptionAnswer());
      arrayList0.add(mapInfo1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      arrayList0.sort(comparator0);
      Message message0 = null;
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }
}
