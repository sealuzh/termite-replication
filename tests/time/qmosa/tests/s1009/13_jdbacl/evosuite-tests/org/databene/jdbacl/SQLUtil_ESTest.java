/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:53:09 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.catalog.UUID;
import org.apache.derby.iapi.services.context.ContextManager;
import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.SchemaDescriptor;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.db.BasicDatabase;
import org.apache.derby.impl.services.uuid.BasicUUID;
import org.apache.derby.impl.sql.GenericLanguageFactory;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.store.access.btree.BTreeController;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.h2.command.ddl.CreateTableData;
import org.h2.engine.Session;
import org.hsqldb.jdbc.jdbcClob;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = null;
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = "BIN01";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers(stringArray0[7], stringArray0[4], object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.920172765702774
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("");
      boolean boolean1 = SQLUtil.isDDL("delete");
      assertTrue(boolean1 == boolean0);
      
      String string0 = SQLUtil.normalize("gBb]$4eDh3,D{_1Z", false);
      assertEquals("gBb ] $ 4eDh3, D { _1Z", string0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "delete";
      stringArray0[1] = "delete";
      stringArray0[2] = "gBb]$4eDh3,D{_1Z";
      stringArray0[3] = "gBb ] $ 4eDh3, D { _1Z";
      stringArray0[4] = "delete";
      stringArray0[5] = "";
      stringArray0[6] = "gBb ] $ 4eDh3, D { _1Z";
      stringArray0[7] = "gBb ] $ 4eDh3, D { _1Z";
      stringArray0[8] = "";
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(delete, delete, gBb]$4eDh3,D{_1Z, gBb ] $ 4eDh3, D { _1Z, delete, , gBb ] $ 4eDh3, D { _1Z, gBb ] $ 4eDh3, D { _1Z, )", string1);
      
      boolean boolean2 = SQLUtil.isProcedureCall("create unique index");
      String string2 = SQLUtil.renderColumnListWithTableName("&$!j(D\"Y 9AJZI%gg", stringArray0);
      assertEquals("&$!j(D\"Y 9AJZI%gg.delete, &$!j(D\"Y 9AJZI%gg.delete, &$!j(D\"Y 9AJZI%gg.gBb]$4eDh3,D{_1Z, &$!j(D\"Y 9AJZI%gg.gBb ] $ 4eDh3, D { _1Z, &$!j(D\"Y 9AJZI%gg.delete, &$!j(D\"Y 9AJZI%gg., &$!j(D\"Y 9AJZI%gg.gBb ] $ 4eDh3, D { _1Z, &$!j(D\"Y 9AJZI%gg.gBb ] $ 4eDh3, D { _1Z, &$!j(D\"Y 9AJZI%gg.", string2);
      
      boolean boolean3 = SQLUtil.isDML("delete");
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "SG#S!#8%Oi?@-T=}";
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure(stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.361061809768637
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "SG#S!#8%Oi?@-T=}";
      VersionNumber.valueOf("create table");
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.renderColumnListWithTableName("\tNumber of extra qualifiers is : ", stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getObjectID();
      SQLUtil.isDML("create table");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "create table");
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0);
      SQLUtil.addRequiredCondition("uook", stringBuilder1);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.removeComments("\tNumber of extra qualifiers is : ");
      StringBuilder stringBuilder2 = new StringBuilder((CharSequence) "SG#S!#8%Oi?@-T=}");
      StringBuilder stringBuilder3 = SQLUtil.addRequiredCondition("create table", stringBuilder0);
      SQLUtil.addOptionalCondition("YS-}>/j", stringBuilder3);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder1, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = null;
      SQLUtil.renderColumnNames((String[]) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("BL\tf.r$ew-yO'", (String[]) null, "BL\tf.r$ew-yO'", "BL\tf.r$ew-yO'", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6857578293642508
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "p8\"4:Q";
      stringArray0[1] = "truncatehg@-0'eduqs(2,0)";
      stringArray0[2] = "(m\"o%i*:H?S*BX,WQ@";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("truncatehg@-0'eduqs(2,0)");
      SQLUtil.renderColumnListWithTableName("drop table", stringArray0);
      SQLUtil.join("p8\"4:Q", "truncatehg@-0'eduqs(2,0)", stringArray0, "create unique index", "J2", stringArray0);
      SQLUtil.normalize("(m\"o%i*:H?S*BX,WQ@", true);
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("9S9Ll'<-pJ(OT5SX#|", false, "9S9Ll'<-pJ(OT5SX#|", "p8\"4:Q join create unique index as J2 on truncatehg@-0'eduqs(2,0).p8\"4:Q = J2.p8\"4:Q and truncatehg@-0'eduqs(2,0).truncatehg@-0'eduqs(2,0) = J2.truncatehg@-0'eduqs(2,0) and truncatehg@-0'eduqs(2,0).(m\"o%i*:H?S*BX,WQ@ = J2.(m\"o%i*:H?S*BX,WQ@ and truncatehg@-0'eduqs(2,0).null = J2.null and truncatehg@-0'eduqs(2,0).null = J2.null and truncatehg@-0'eduqs(2,0).null = J2.null and truncatehg@-0'eduqs(2,0).null = J2.null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[2];
      stringArray1[0] = ">Q:<bj";
      stringArray1[1] = ">Q:<bj";
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID();
      SchemaDescriptor schemaDescriptor0 = new SchemaDescriptor(dataDictionaryImpl0, ">Q:<bj", ">Q:<bj", basicUUID0, true);
      DBConstraint dBConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.770821672466613
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLUtil.isQuery("");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      DBSchema dBSchema0 = new DBSchema("");
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("", string0);
      
      DBPackage dBPackage0 = new DBPackage("create unique index", dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("6", dBSchema0);
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.isDDL("1ja\u0002zr *U$T");
      defaultDBTable0.getCatalog();
      dBCatalog0.getSequences();
      DBSchema dBSchema1 = new DBSchema("yb5rF", dBCatalog0);
      dBSchema1.isIdentical(dBCatalog0);
      DBPackage dBPackage1 = new DBPackage("", dBSchema1);
      dBSchema0.removeTable(defaultDBTable0);
      String string1 = SQLUtil.typeAndName(dBCatalog0);
      assertNotNull(string1);
      assertEquals("catalog null", string1);
      
      SQLUtil.isQuery("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "create unique index";
      stringArray0[1] = "";
      stringArray0[2] = "create unique index";
      stringArray0[3] = "_s;g";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = " FIr8/P&&LzI";
      stringArray0[0] = " FIr8/P&&LzI";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.parseColumnTypeAndSize(" FIr8/P&&LzI");
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Character character0 = Character.valueOf('C');
      columnDescriptorList0.add((Object) character0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Character cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog(" : ");
      DBSchema dBSchema0 = new DBSchema(" : ", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" : ", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(90114, "%L");
      Integer integer0 = Integer.valueOf(90114);
      Integer integer1 = RawTransaction.COMMIT;
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" : ", defaultDBTable0, dBDataType0, integer0, integer1);
      StringBuilder stringBuilder0 = new StringBuilder(90114);
      SQLUtil.addOptionalCondition("", stringBuilder0);
      StringBuilder stringBuilder1 = stringBuilder0.append((-1820.8F));
      StringBuilder stringBuilder2 = new StringBuilder();
      SQLUtil.addRequiredCondition("", stringBuilder2);
      stringBuilder1.append(false);
      stringBuilder1.reverse();
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-29);
      byteArray0[1] = (byte) (-4);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog(" : ");
      DBSchema dBSchema0 = new DBSchema(" : ", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" : ", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(90114, "%L");
      Integer integer0 = Integer.valueOf((-361484605));
      Integer integer1 = RawTransaction.COMMIT;
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" : ", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumn(defaultDBColumn0);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder("Failed to create a non-pooled connection for ");
      StringBuilder stringBuilder1 = stringBuilder0.append(3501L);
      stringBuilder1.insert(39, (CharSequence) "Failed to create a non-pooled connection for ");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(90114);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream(dynamicByteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream1);
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6871383758607443
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[10];
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, stringArray0[0], false, stringArray0);
      dBPrimaryKeyConstraint0.equals("SELECT * FROM null WHERE null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null");
      dBPrimaryKeyConstraint0.toString();
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.normalize("SELECT * FROM null WHERE null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", true);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((CharSequence) stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4753531351525897
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLUtil.isDDL("UookcL+M=t_h]T");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String[] stringArray0 = new String[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UookcL+M=t_h]T");
      stringArray0[1] = "UookcL+M=t_h]T";
      stringArray0[2] = "UookcL+M=t_h]T";
      stringArray0[3] = "UookcL+M=t_h]T";
      stringArray0[4] = "UookcL+M=t_h]T";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("UookcL+M=t_h]T");
      SQLUtil.renderColumnListWithTableName("V ?fW", stringArray0);
      String string0 = "5xvF*7/-qf@^?[qoc[r";
      SQLUtil.join("V ?fW", "UookcL+M=t_h]T", stringArray0, "5xvF*7/-qf@^?[qoc[r", "UookcL+M=t_h]T", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'");
      defaultDBTable0.getUniqueConstraint(stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "UookcL+M=t_h]T", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      int int0 = (-33);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(223, (CharSequence) "PRIMARY KEY (, UookcL+M=t_h]T, UookcL+M=t_h]T, UookcL+M=t_h]T, UookcL+M=t_h]T, , , )", (-33), (-122));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 223
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(44);
      String string0 = "(m\"o%i*:H?`*BXWQ@";
      // Undeclared exception!
      SQLUtil.mutatesStructure("#o$_*/*TMNv");
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9088168490395483
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "#0x9o|0l6.J)N+%$";
      stringArray0[1] = "#0x9o|0l6.J)N+%$";
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "#0x9o|0l6.J)N+%$", false, stringArray0);
      dBPrimaryKeyConstraint0.equals("SELECT * FROM null WHERE #0x9o|0l6.J)N+%$ = '#0x9o|0l6.J)N+%$' AND #0x9o|0l6.J)N+%$ = '#0x9o|0l6.J)N+%$' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null");
      dBPrimaryKeyConstraint0.toString();
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.normalize("SELECT * FROM null WHERE #0x9o|0l6.J)N+%$ = '#0x9o|0l6.J)N+%$' AND #0x9o|0l6.J)N+%$ = '#0x9o|0l6.J)N+%$' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", true);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "#0x9o|0l6.J)N+%$");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("CONSTRAINT #0x9o|0l6.J)N+%$ PRIMARY KEY (#0x9o|0l6.J)N+%$, #0x9o|0l6.J)N+%$, , , , , , , , )", stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder1.delete((-238), (-238));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -238
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "alter materialized view");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "!8el3+g%h'PtA0mLl";
      stringArray0[1] = "alter materialized view";
      stringArray0[2] = "setNCharacterStream(int, Reader)";
      stringArray0[0] = "alter materialized view";
      stringArray0[4] = "!8el3+g%h'PtA0mLl";
      stringArray0[5] = "!8el3+g%h'PtA0mLl";
      stringArray0[6] = "!8el3+g%h'PtA0mLl";
      stringArray0[7] = "alter materialized view";
      stringArray0[8] = "!8el3+g%h'PtA0mLl";
      SQLUtil.normalize("!8el3+g%h'PtA0mLl", false);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getObjectID();
      DataDictionaryImpl dataDictionaryImpl1 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getForeignKeys((UUID) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.891391375349803
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog(" : ");
      DBSchema dBSchema0 = new DBSchema(" : ", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" : ", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(90114, "%L");
      Integer.valueOf(90114);
      Integer integer0 = RawTransaction.COMMIT;
      dBDataType0.isNumber();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("dop materiaized vi2wxmliod");
      String[] stringArray0 = new String[4];
      stringArray0[1] = " : ";
      stringArray0[2] = "dop materiaized vi2wxmliod";
      stringArray0[3] = " : ";
      SQLUtil.renderColumnListWithTableName("Illegal ", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      TableContainer tableContainer0 = new TableContainer("AHPh}~ZL=");
      tableContainer0.getTable(" : ");
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputBinary0);
      mockPrintStream0.append('\"');
      SQLUtil.renderColumnNames(stringArray0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "0.x[&~", false, stringArray0);
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      SQLUtil.mutatesStructure(" : ");
      StringBuilder stringBuilder0 = new StringBuilder("dop materiaized vi2wxmliod");
      SQLUtil.addOptionalCondition(" : ", stringBuilder0);
      assertEquals("dop materiaized vi2wxmliod or  : ", stringBuilder0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.923037196278136
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SQLUtil.isQuery("");
      SQLUtil.mutatesDataOrStructure("");
      SQLUtil.normalize("", true);
      SQLUtil.parseColumnTypeAndSize("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("", "F+8CdPS;azx?X{f/G", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog("", defaultDatabase0);
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      dBCatalog0.setDoc("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("=", dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder(46);
      StringBuilder stringBuilder1 = stringBuilder0.append((long) 46);
      StringBuilder stringBuilder2 = stringBuilder1.append((Object) "F+8CdPS;azx?X{f/G");
      stringBuilder2.insert(4, "");
      stringBuilder1.reverse();
      dBSchema0.toString();
      StringBuilder stringBuilder3 = SQLUtil.addRequiredCondition("", stringBuilder2);
      dBSchema0.getTables();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "=";
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringBuilder3;
      objectArray0[1] = (Object) stringBuilder0;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte) (-97);
      String string0 = "V ?fW";
      SQLUtil.renderColumnNames(stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall(stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog(" : ");
      DBSchema dBSchema0 = new DBSchema(" : ", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" : ", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(90114, "%L");
      Integer integer0 = Integer.valueOf((-361484605));
      Integer integer1 = RawTransaction.COMMIT;
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" : ", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumn(defaultDBColumn0);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder("Failed to create a non-pooled connection for ");
      StringBuilder stringBuilder1 = stringBuilder0.append(3501L);
      StringBuilder stringBuilder2 = stringBuilder1.insert(47, (CharSequence) "Failed to create a non-pooled connection for ");
      StringBuilder stringBuilder3 = stringBuilder2.replace(47, 97, "<LH^p}fWYkzcNkd");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0608333657846836
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "SG#S!#8%Oi?@-T=}";
      VersionNumber.valueOf("crea&Nte table");
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.renderColumnListWithTableName("\tNumber of extra qualifiers is : ", stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getObjectID();
      SQLUtil.isDML("crea&Nte table");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "crea&Nte table");
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0);
      SQLUtil.addRequiredCondition("uook", stringBuilder1);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2505), "7/\"+r<dKS");
      Integer integer0 = new Integer(511);
      Integer integer1 = new Integer(395);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("SG#S!#8%Oi?@-T=}", defaultDBTable0, dBDataType0, integer1);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.733018899307246
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SQLUtil.renderValue((Object) null);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(columnDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("useStandardUdf", "XCY03.S", versionNumber0);
      CreateTableData createTableData0 = new CreateTableData();
      Session session0 = createTableData0.session;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("useStandardUdf");
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      SQLUtil.renderColumnListWithTableName("null", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      TableContainer tableContainer0 = new TableContainer("CO\"Nh~J(F<6");
      tableContainer0.getTable("XCY03.S");
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputBinary0);
      mockPrintStream0.append('\"');
      SQLUtil.renderColumnNames(stringArray0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create materialized viewxmliode", true, stringArray0);
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9562610057703038
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "#0x9o|0l6.J)N+%$";
      stringArray0[1] = "/f7WG2Wym7#m";
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE #0x9o|0l6.J)N+%$ = '#0x9o|0l6.J)N+%$' AND /f7WG2Wym7#m = '/f7WG2Wym7#m' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", string0);
      
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("alter table", " on ", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog("{k$q/]A0U@v(J", defaultDatabase0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/f7WG2Wym7#m");
      boolean boolean0 = SQLUtil.isDDL("create unique index");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6546969593931649
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SQLUtil.isQuery("ll\tf.r$kw");
      String string0 = SQLUtil.normalize("alter materialized viewll\tf.r$kw-yo'", false);
      assertEquals("alter materialized viewll f.r $ kw - yo ''", string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "alter materialized viewll  tf.r $ kw - yo ''";
      stringArray0[1] = "Khy@L-t";
      stringArray0[2] = "ll\tf.r$kw";
      stringArray0[3] = "alter materialized viewll  tf.r $ kw - yo ''";
      stringArray0[4] = "alter materialized viewll\tf.r$kw-yo'";
      stringArray0[5] = "alter materialized viewll  tf.r $ kw - yo ''";
      stringArray0[7] = "alter materialized viewll\tf.r$kw-yo'";
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(alter materialized viewll  tf.r $ kw - yo '', Khy@L-t, ll\tf.r$kw, alter materialized viewll  tf.r $ kw - yo '', alter materialized viewll\tf.r$kw-yo', alter materialized viewll  tf.r $ kw - yo '', , alter materialized viewll\tf.r$kw-yo')", string1);
      
      boolean boolean0 = SQLUtil.isProcedureCall("alter materialized viewll\tf.r$kw-yo'");
      assertFalse(boolean0);
      
      String string2 = SQLUtil.renderColumnListWithTableName("+n};u", stringArray0);
      assertEquals("+n};u.alter materialized viewll  tf.r $ kw - yo '', +n};u.Khy@L-t, +n};u.ll\tf.r$kw, +n};u.alter materialized viewll  tf.r $ kw - yo '', +n};u.alter materialized viewll\tf.r$kw-yo', +n};u.alter materialized viewll  tf.r $ kw - yo '', +n};u.null, +n};u.alter materialized viewll\tf.r$kw-yo'", string2);
      
      String string3 = SQLUtil.join(stringArray0[6], "Khy@L-t", stringArray0, "org.h2.expression.Alias", "insertll\tf.r$kw-yo'", stringArray0);
      assertEquals("org.h2.expression.Alias as insertll\tf.r$kw-yo' on Khy@L-t.alter materialized viewll  tf.r $ kw - yo '' = insertll\tf.r$kw-yo'.alter materialized viewll  tf.r $ kw - yo '' and Khy@L-t.Khy@L-t = insertll\tf.r$kw-yo'.Khy@L-t and Khy@L-t.ll\tf.r$kw = insertll\tf.r$kw-yo'.ll\tf.r$kw and Khy@L-t.alter materialized viewll  tf.r $ kw - yo '' = insertll\tf.r$kw-yo'.alter materialized viewll  tf.r $ kw - yo '' and Khy@L-t.alter materialized viewll\tf.r$kw-yo' = insertll\tf.r$kw-yo'.alter materialized viewll\tf.r$kw-yo' and Khy@L-t.alter materialized viewll  tf.r $ kw - yo '' = insertll\tf.r$kw-yo'.alter materialized viewll  tf.r $ kw - yo '' and Khy@L-t.null = insertll\tf.r$kw-yo'.null and Khy@L-t.alter materialized viewll\tf.r$kw-yo' = insertll\tf.r$kw-yo'.alter materialized viewll\tf.r$kw-yo'", string3);
      
      String string4 = SQLUtil.normalize("\"zsaSI}\"U7", true);
      assertEquals("\"zsaSI}\" U7", string4);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.981720451748021
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog(" : ");
      DBSchema dBSchema0 = new DBSchema(" : ", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" : ", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(90114, "%L");
      Integer.valueOf(90114);
      Integer integer0 = RawTransaction.COMMIT;
      dBDataType0.isNumber();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("drop materialized viewxmliode");
      String[] stringArray0 = new String[19];
      stringArray0[1] = " : ";
      stringArray0[2] = "drop materialized viewxmliode";
      stringArray0[3] = " : ";
      SQLUtil.renderColumnListWithTableName("Illegal ", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      TableContainer tableContainer0 = new TableContainer("AHPh}~ZL=");
      tableContainer0.getTable(" : ");
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputBinary0);
      mockPrintStream0.append('(');
      SQLUtil.renderColumnNames(stringArray0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "execsg#s!#8%oi?@-t=}", true, stringArray0);
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      SQLUtil.mutatesStructure(" : ");
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7208222942919975
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[1] = "SG#S!#8%Oi?@-T=}";
      VersionNumber.valueOf("crea&Nte table");
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.renderColumnListWithTableName("\tNumber of extra qualifiers is : ", stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getObjectID();
      SQLUtil.isDML("crea&Nte table");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "crea&Nte table");
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0);
      SQLUtil.addRequiredCondition("uook", stringBuilder1);
      assertEquals("crea&Nte table0.0 and uook", stringBuilder1.toString());
      
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2505), "7/\"+r<dKS");
      Integer integer0 = new Integer(395);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("iO9ut29", defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      SQLUtil.isDML("we|{2OQ[pE");
      SQLUtil.renderColumn(dBColumnArray0[0]);
      String string0 = SQLUtil.renderColumnListWithTableName("(, SG#S!#8%Oi?@-T=}, , )", stringArray0);
      assertEquals("(, SG#S!#8%Oi?@-T=}, , ).null, (, SG#S!#8%Oi?@-T=}, , ).SG#S!#8%Oi?@-T=}, (, SG#S!#8%Oi?@-T=}, , ).null, (, SG#S!#8%Oi?@-T=}, , ).null", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9440906203747663
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "p8\"4:Q";
      stringArray0[1] = "truncatehg@-0'eduqs(2,0)";
      stringArray0[2] = "(m\"o%i*:H?S*BX,WQ@";
      stringArray0[3] = "6Iy<&";
      stringArray0[4] = "(m\"o%i*:H?S*BX,WQ@";
      stringArray0[5] = " NOT NULL";
      stringArray0[6] = "FILTER";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("FILTER");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      VersionNumber versionNumber0 = new VersionNumber(linkedList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("(m\"o%i*:H?S*BX,WQ@", "truncatehg@-0'eduqs(2,0)", versionNumber0);
      defaultDatabase0.getTable("p8\"4:Q", false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("p8\"4:Q", (DBTable) null, 1882, "truncatehg@-0'eduqs(2,0)");
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("(m\"o%i*:H?S*BX,WQ@");
      SQLUtil.renderColumnListWithTableName("(m\"o%i*:H?S*BX,WQ@", stringArray0);
      DBUniqueConstraint dBUniqueConstraint0 = null;
      try {
        dBUniqueConstraint0 = new DBUniqueConstraint((DBTable) null, "_s;g", false, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBUniqueConstraint", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7540007762376764
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SQLUtil.isDDL("UookcL+M=t_h]T");
      String[] stringArray0 = new String[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UookcL+M=t_h]T");
      stringArray0[1] = "UookcL+M=t_h]T";
      stringArray0[2] = "UookcL+M=t_h]T";
      stringArray0[3] = "UookcL+M=t_h]T";
      stringArray0[4] = "UookcL+M=t_h]T";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("UookcL+M=t_h]T");
      SQLUtil.normalize("(, UookcL+M=t_h]T, UookcL+M=t_h]T, UookcL+M=t_h]T, UookcL+M=t_h]T, , , )", false);
      SQLUtil.join("V ?fW", "UookcL+M=t_h]T", stringArray0, "5xvF*7/-qf@^?[qoc[r", "UookcL+M=t_h]T", stringArray0);
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.181505373086536
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLUtil.isDDL("UookcL+M=t_h]T");
      String[] stringArray0 = new String[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UookcL+M=t_h]T");
      stringArray0[1] = "UookcL+M=t_h]T";
      stringArray0[2] = "UookcL+M=t_h]T";
      stringArray0[3] = "UookcL+M=t_h]T";
      stringArray0[4] = "UookcL+M=t_h]T";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("UookcL+M=t_h]T");
      SQLUtil.renderColumnListWithTableName("V ?fW", stringArray0);
      String string0 = SQLUtil.join("V ?fW", "UookcL+M=t_h]T", stringArray0, "5xvF*7/-qf@^?[qoc[r", "UookcL+M=t_h]T", stringArray0);
      String string1 = SQLUtil.innerJoin("UookcL+M=t_h]T", stringArray0, "create materialized view", "V ?fW.null, V ?fW.UookcL+M=t_h]T, V ?fW.UookcL+M=t_h]T, V ?fW.UookcL+M=t_h]T, V ?fW.UookcL+M=t_h]T, V ?fW.null, V ?fW.null, V ?fW.null", stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3313439768798996
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte) (-11);
      byteArray0[4] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      SQLUtil.renderWhereClause(stringArray0, objectArray0);
      SQLUtil.isDML("NCLOB");
      SQLUtil.substituteMarkers("create table ", "J*^b90E}`MQ\"dED", "create table ");
      SQLUtil.parseColumnTypeAndSize("");
      SQLUtil.isProcedureCall("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(">Q:<bj");
      defaultDBTable0.getColumnNames();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("alter table");
      SQLUtil.ownerDotComponent(dBSchema0);
      VersionNumber versionNumber0 = VersionNumber.valueOf("alter table");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase((String) null, "||n", versionNumber0);
      DBSchema dBSchema1 = new DBSchema("||n");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema1);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      String string0 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("", string0);
      
      String string1 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("alter table", string1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(44);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.lowerCaseMode(true);
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(44);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      DBDataType dBDataType0 = DBDataType.getInstance((-4), "sg#s!#8");
      Integer integer0 = Integer.valueOf(698);
      Integer integer1 = RawTransaction.COMMIT;
      dBDataType0.isNumber();
      String string0 = "$XU'ZjdBZ";
      TableContainer tableContainer0 = new TableContainer("drop materialized view");
      tableContainer0.getTable("}=Z$");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("$XU'ZjdBZ", (DBTable) null, (DBDataType) null, (Integer) (-4), integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.764862287697929
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Boolean boolean0 = new Boolean("SG#S!#8%Oi?@-T=}");
      SQLUtil.normalize("SG#S!#8%Oi?@-T=}", (boolean) boolean0);
      String[] stringArray0 = new String[4];
      stringArray0[3] = "SG # S ! # 8 % Oi ? @ - T = }";
      stringArray0[1] = "SG#S!#8%Oi?@-T=}";
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, SG#S!#8%Oi?@-T=}, , SG # S ! # 8 % Oi ? @ - T = })", string0);
      
      boolean boolean1 = SQLUtil.isProcedureCall("SG#S!#8%Oi?@-T=}");
      assertFalse(boolean1);
      
      String string1 = SQLUtil.renderColumnListWithTableName("alter tableuookcl+m=t_h]t", stringArray0);
      assertEquals("alter tableuookcl+m=t_h]t.null, alter tableuookcl+m=t_h]t.SG#S!#8%Oi?@-T=}, alter tableuookcl+m=t_h]t.null, alter tableuookcl+m=t_h]t.SG # S ! # 8 % Oi ? @ - T = }", string1);
      
      String string2 = SQLUtil.join("(, SG#S!#8%Oi?@-T=}, , SG # S ! # 8 % Oi ? @ - T = })", "CHECK_EXPRESSION", stringArray0, "5xvF*7/-qf@^?[qoc[r", "", stringArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte)99;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte) (-79);
      byteArray0[5] = (byte)90;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string3 = SQLUtil.normalize("(, SG#S!#8%Oi?@-T=}, , SG # S ! # 8 % Oi ? @ - T = }) join 5xvF*7/-qf@^?[qoc[r as  on CHECK_EXPRESSION.null = .null and CHECK_EXPRESSION.SG#S!#8%Oi?@-T=} = .SG#S!#8%Oi?@-T=} and CHECK_EXPRESSION.null = .null and CHECK_EXPRESSION.SG # S ! # 8 % Oi ? @ - T = } = .SG # S ! # 8 % Oi ? @ - T = }", false);
      assertEquals("(, SG # S ! # 8 % Oi ? @ - T = },, SG # S ! # 8 % Oi ? @ - T = }) join 5xvF * 7 / - qf @ ^ ? [ qoc [ r as on CHECK_EXPRESSION.null =.null and CHECK_EXPRESSION.SG # S ! # 8 % Oi ? @ - T = } =.SG # S ! # 8 % Oi ? @ - T = } and CHECK_EXPRESSION.null =.null and CHECK_EXPRESSION.SG # S ! # 8 % Oi ? @ - T = } =.SG # S ! # 8 % Oi ? @ - T = }", string3);
      
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("JrVE #S19");
      String string4 = SQLUtil.substituteMarkers("(, SG#S!#8%Oi?@-T=}, , SG # S ! # 8 % Oi ? @ - T = }) join 5xvF*7/-qf@^?[qoc[r as  on CHECK_EXPRESSION.null = .null and CHECK_EXPRESSION.SG#S!#8%Oi?@-T=} = .SG#S!#8%Oi?@-T=} and CHECK_EXPRESSION.null = .null and CHECK_EXPRESSION.SG # S ! # 8 % Oi ? @ - T = } = .SG # S ! # 8 % Oi ? @ - T = }", "E(dMs?(", jMXPrincipal0);
      assertTrue(string4.equals((Object)string2));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("=", ">Q:<bj", (VersionNumber) null);
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("=");
      String string1 = SQLUtil.renderColumnListWithTableName("drop materialized view", stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog(" : ");
      DBSchema dBSchema0 = new DBSchema(" : ", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" : ", dBSchema0);
      String string0 = "%L";
      DBDataType dBDataType0 = DBDataType.getInstance(90114, "%L");
      Integer integer0 = Integer.valueOf(90114);
      Integer integer1 = RawTransaction.COMMIT;
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" : ", defaultDBTable0, dBDataType0, integer0, integer1);
      StringBuilder stringBuilder0 = new StringBuilder(90114);
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("", stringBuilder0);
      float float0 = 2726.3848F;
      StringBuilder stringBuilder2 = stringBuilder0.append((-1820.8F));
      StringBuilder stringBuilder3 = stringBuilder1.append((CharSequence) "%L");
      StringBuilder stringBuilder4 = SQLUtil.addRequiredCondition("", stringBuilder3);
      stringBuilder2.append(false);
      stringBuilder2.reverse();
      // Undeclared exception!
      try { 
        stringBuilder4.delete(90114, 90114);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.330347924447853
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("A");
      assertFalse(boolean0);
      
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("A");
      assertNull(boolean1);
      
      Boolean boolean2 = SQLUtil.mutatesStructure(")M\tPChMH@>t");
      assertFalse(boolean2);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8730291164911108
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('a');
      DBDataType dBDataType0 = DBDataType.getInstance((-2937), "hG@-0'edUQS");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("hG@-0'edUQS", (DBTable) null, dBDataType0, integer0, integer1);
      defaultDBColumn0.setOwner((CompositeDBObject<?>) null);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.isDML("HG@-0'EDUQS(2,0)");
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(constraintDescriptorList0, constraintDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("hG@-0'edUQS", "hG@-0'edUQS", versionNumber0);
      defaultDatabase0.getTable("hG@-0'edUQS", false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "HG@-0'EDUQS(2,0)";
      stringArray0[1] = "";
      stringArray0[2] = "HG@-0'EDUQS(2,0)";
      stringArray0[3] = "zxhL/C";
      stringArray0[4] = "~~weGk+c9?>*b6nE%";
      stringArray0[5] = "W|4&+8ha2p+^";
      stringArray0[6] = "zxhL/C";
      stringArray0[7] = "hG@-0'edUQS";
      stringArray0[8] = "HG@-0'EDUQS(2,0)";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5407108604577937
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "org.apache.derby.impl.sql.execute.TriggerEvent";
      SQLUtil.mutatesDataOrStructure("org.apache.derby.impl.sql.execute.TriggerEvent");
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "SG#S!#8%Oi?@-T=}";
      String string1 = "useStandardUdf";
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      CreateTableData createTableData0 = new CreateTableData();
      Session session0 = createTableData0.session;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("XCY03.S", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('a');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      mockPrintWriter0.println("hG@-0'edUQS");
      Object[] objectArray0 = new Object[0];
      mockPrintWriter0.printf((Locale) null, "", objectArray0);
      DBDataType.getInstance((-2937), "hG@-0'edUQS");
      SQLUtil.removeComments("alter table");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.COMMIT;
      StringBuilder stringBuilder0 = new StringBuilder("8?g00gs3z}D");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[4] = "";
      stringArray0[5] = "hG@-0'edUQS";
      stringArray0[6] = "8?g00gs3z}D";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.686230778806592
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SQLUtil.isQuery("");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      DBSchema dBSchema0 = new DBSchema("");
      SQLUtil.ownerDotComponent(dBSchema0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("6", dBSchema0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("6", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT 6 ", string0);
      
      String string1 = SQLUtil.ownerDotComponent(dBForeignKeyConstraint0);
      assertEquals("6.6", string1);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.533225019181038
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "#0x9o|0l6.J)N+%$";
      stringArray0[1] = "/f7WG2Wym7#m";
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "#0x9o|0l6.J)N+%$", false, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.ukSpec(dBPrimaryKeyConstraint1, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "/f7WG2Wym7#m");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("/f7WG2Wym7#m", stringBuilder0);
      int int0 = (-238);
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-238), true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -238
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "org.databene.jdbacl.SQLUtil";
      // Undeclared exception!
      try { 
        SQLUtil.join("K", "org.databene.jdbacl.SQLUtil", (String[]) null, "s\"", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9749953273490495
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SQLUtil.isQuery("");
      SQLUtil.isDDL("delete");
      SQLUtil.normalize("gBb]$4eDh3,D{_1Z", false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "delete";
      stringArray0[1] = "delete";
      stringArray0[2] = "gBb]$4eDh3,D{_1Z";
      stringArray0[3] = "gBb ] $ 4eDh3, D { _1Z";
      stringArray0[5] = "";
      stringArray0[6] = "gBb ] $ 4eDh3, D { _1Z";
      stringArray0[7] = "gBb ] $ 4eDh3, D { _1Z";
      stringArray0[8] = "";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("gBb ] $ 4eDh3, D { _1Z");
      SQLUtil.renderColumnListWithTableName("&$!j(D\"Y 9AJZI%gg", stringArray0);
      String string0 = "5xvF*7/-qf@^?[qoc[r";
      SQLUtil.join("inner", "(delete, delete, gBb]$4eDh3,D{_1Z, gBb ] $ 4eDh3, D { _1Z, , , gBb ] $ 4eDh3, D { _1Z, gBb ] $ 4eDh3, D { _1Z, )", stringArray0, "5xvF*7/-qf@^?[qoc[r", "gBb ] $ 4eDh3, D { _1Z", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.normalize(stringArray0[4], false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = "*7d(0L";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("*7d(0L", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.0894373269760296
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SQLUtil.isDDL("UookcL+M=t_h]T");
      String[] stringArray0 = new String[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UookcL+M=t_h]T");
      stringArray0[1] = "UookcL+M=t_h]T";
      stringArray0[2] = "UookcL+M=t_h]T";
      stringArray0[1] = "UookcL+M=t_h]T";
      stringArray0[4] = "UookcL+M=t_h]T";
      String string0 = "V ?fW";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isProcedureCall("UookcL+M=t_h]T");
      SQLUtil.renderColumnListWithTableName("V ?fW", stringArray0);
      String string1 = "5xvF*7/-qf@^?[qoc[r";
      SQLUtil.join("V ?fW", "UookcL+M=t_h]T", stringArray0, "5xvF*7/-qf@^?[qoc[r", "UookcL+M=t_h]T", stringArray0);
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getContextManager();
      BTreeController bTreeController0 = new BTreeController();
      bTreeController0.getXactMgr();
      GenericLanguageFactory genericLanguageFactory0 = new GenericLanguageFactory();
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SQLUtil.renderColumnNames((String[]) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[2];
      stringArray1[0] = ">Q:<bj";
      stringArray1[1] = ">Q:<bj";
      SQLUtil.innerJoin(">Q:<bj", stringArray0, ">Q:<bj", "", stringArray1);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID();
      SchemaDescriptor schemaDescriptor0 = new SchemaDescriptor(dataDictionaryImpl0, ">Q:<bj as  on ", ">Q:<bj", basicUUID0, false);
      TableDescriptor tableDescriptor0 = new TableDescriptor(dataDictionaryImpl0, "<P\"O?ZxI ", schemaDescriptor0, (-2617), false, true);
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getConstraintDescriptors(tableDescriptor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(129);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      int int0 = 5;
      streamTokenizer0.ordinaryChars(5, 129);
      String string0 = " join ";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SG#S!#8%Oi?@-T=}";
      stringArray0[1] = " join ";
      SQLUtil.leftJoin(" join ", stringArray0, "SG#S!#8%Oi?@-T=}", "SG#S!#8%Oi?@-T=}", stringArray0);
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      BasicDatabase basicDatabase0 = new BasicDatabase();
      ContextManager contextManager0 = null;
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        constantActionActivation0.getTransactionController();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(44);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      streamTokenizer0.sval = streamTokenizer0.sval;
      streamTokenizer0.ordinaryChars(5, 5);
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = "drop materialized view";
      stringArray0[6] = "drop materialized view";
      SQLUtil.leftJoin("drop materialized view", stringArray0, "drop materialized view", stringArray0[0], stringArray0);
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      BasicDatabase basicDatabase0 = new BasicDatabase();
      int int0 = (-637);
      ContextManager contextManager0 = null;
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        constantActionActivation0.getTransactionController();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SQLUtil.renderValue((Object) null);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(columnDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("useStandardUdf", "XCM03.S", versionNumber0);
      CreateTableData createTableData0 = new CreateTableData();
      Session session0 = createTableData0.session;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("useStandardUdf");
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      SQLUtil.renderColumnListWithTableName("null", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      TableContainer tableContainer0 = new TableContainer("CO\"Nh~J(F<6");
      tableContainer0.getTable("XCM03.S");
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary();
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputBinary0);
      PrintStream printStream0 = mockPrintStream0.append('\"');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, false);
      mockPrintWriter0.flush();
      mockPrintWriter0.println(2036.278F);
      PrintWriter printWriter0 = mockPrintWriter0.format("XCM03.S", (Object[]) stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      constraintDescriptorList0.listIterator();
      ConstraintDescriptorList constraintDescriptorList1 = new ConstraintDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.4479989633956651
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[5] = "drop materialized view";
      Object object0 = new Object();
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("2kLK#2@}v", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.233003942096161
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "#0x9o|0l6.J)N+%$";
      stringArray0[1] = "#0x9o|0l6.J)N+%$";
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("^P.zTJg.sV]F^%", defaultDBTable0, 113, "JqF6iWqf/9bWV4");
      defaultDBColumn0.getForeignKeyConstraint();
      defaultDBTable0.removeForeignKeyConstraint((DBForeignKeyConstraint) null);
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = (-1655);
      DBDataType dBDataType0 = DBDataType.getInstance((-1655), "*/");
      dBDataType0.isAlpha();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("T/{qs", (DBTable) null, dBDataType0);
      SQLUtil.renderColumn(defaultDBColumn0);
      // Undeclared exception!
      try { 
        defaultDBColumn0.getForeignKeyConstraint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBColumn", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.4387424672740172
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SQLUtil.isQuery("");
      SQLUtil.mutatesDataOrStructure("");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SQLUtil.removeComments("");
      DBCatalog dBCatalog0 = new DBCatalog("42X73");
      assertEquals("42X73", dBCatalog0.getName());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      DBCatalog dBCatalog0 = new DBCatalog("+.@V");
      DBSchema dBSchema0 = new DBSchema("alter materialized viewnlo>nx$/=2", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("+.@V", dBSchema0);
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertEquals("catalog +.@V", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = SQLUtil.renderValue("\u0001\u01F8");
      assertEquals("'\u0001\u01F8'", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5481182678652012
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SQLUtil.isQuery("");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      SQLUtil.mutatesStructure(")M\tPChMH@>t");
      jdbcClob jdbcClob0 = new jdbcClob("user.variant");
      Reader reader0 = jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(reader0);
      streamTokenizer1.eolIsSignificant(true);
      String string0 = SQLUtil.renderNumber(streamTokenizer1);
      assertEquals("- 0", string0);
      
      boolean boolean1 = SQLUtil.isDML("QiSD-:3o](lYSF;CT");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(44);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.sval = streamTokenizer0.sval;
      jdbcClob jdbcClob0 = new jdbcClob("drop materialized view");
      jdbcClob0.getCharacterStream();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
