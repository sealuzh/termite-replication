/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:57:29 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.nio.CharBuffer;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = (-2405);
      Player player0 = new Player(1268, (String) null, (-2405));
      player0.gangStrength();
      Player player1 = new Player();
      player0.setY(0.1F);
      player0.prev = (Party) player1;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-113);
      byteArray0[3] = (byte) (-115);
      byteArray0[4] = (byte)82;
      byteArray0[5] = (byte)77;
      byteArray0[6] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player1.setDead();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(2770, "2r'q#Jmf8KxU", "_N{O~u", 2770);
      player0.reset(false);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte) (-119);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)46;
      byteArray0[8] = (byte) (-113);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(7, byteArrayInputStream0.available());
      
      player0.getZ();
      player0.getTimeOfDeath();
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2627848006711537
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getY();
      Player player1 = new Player(141, "vs<yE+k`f{~", "vs<yE+k`f{~", (-1), (-2282));
      player1.setMoney(141);
      player0.remove(player1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.setConnected(true);
      player1.getStrength();
      player1.setY((-3780.226F));
      player1.getY();
      player0.getZ();
      player0.isDead();
      player0.setMoney((-671.5F));
      player0.getMoney();
      player1.getName();
      player0.isConnected();
      Player player2 = new Player((-2282), "vs<yE+k`f{~", "vs<yE+k`f{~", (short)4919, (-1));
      player2.isJoinOK(player1, true);
      player1.getZ();
      player0.isJoinOK(player2, false);
      assertEquals((-671.5F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-1752));
      player0.getSubparty();
      Player player1 = new Player(3664, "(UA!2", "", 175);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("(UA!2", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(175, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("Player-1752", player0.getName());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player();
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player1 = new Player((-32));
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("Player-32", player1.toString());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-1750), "Pkx]`&dC[Xg{aTu", (-1750));
      player0.setDead();
      player0.isDead();
      int int0 = 5;
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(3839);
      player0.setX((-3034));
      Party party0 = new Party((-1110));
      player0.head = party0;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-78);
      byteArray0[4] = (byte) (-113);
      byteArray0[5] = (byte) (-113);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.pack();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " vZtIPC~A");
      player0.getMoney();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.pack();
      player0.getMoney();
      player0.getName();
      player0.isJoinOK(player0, true);
      Player player1 = new Player((-3034), "", "layer.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 0, (-3034));
      player0.isJoinOK(player1, false);
      player0.getZ();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.1279462185041473
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getY();
      Player player1 = new Player(141, "vs<yE+k`f{~", "vs<yE+k`f{~", (-1), (-2282));
      player1.setMoney(141);
      player0.remove(player1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.setConnected(false);
      player1.getStrength();
      player1.setY((-3780.226F));
      player1.getY();
      player0.getZ();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vs<yE+k`f{~");
      player0.setMoney((-671.5F));
      player0.isJoinOK(player1, true);
      Player player2 = new Player((-937), "N:X-kh[AiY/0-?>", 6912);
      player2.setMoney(0.0F);
      player0.isJoinOK(player2, false);
      player1.isJoinOK(player2, true);
      player1.pack();
      assertEquals(141.0F, player1.getMoney(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(4362);
      Player player1 = new Player((short)4919);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      player1.setJoinOK(player0, false);
      // Undeclared exception!
      try { 
        player1.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2665415908396436
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getY();
      Player player1 = new Player(141, "vs<yE+k`f{~", "vs<yE+k`f{~", (-1), (-2282));
      player1.setMoney(141);
      player0.remove(player1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.setConnected(true);
      player1.gangStrength();
      player1.getStrength();
      player1.setY((-3780.226F));
      player1.getY();
      player0.getZ();
      player0.isDead();
      player0.setMoney((-671.5F));
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      Player player2 = new Player((-937), "N:X-kh[AiY/0-?>", 6912);
      player2.setMoney(0.0F);
      player2.pack();
      player0.isJoinOK(player2, true);
      player1.isJoinOK(player2, true);
      System.setCurrentTimeMillis((-2282));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8331547833861124
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player1 = new Player((short)4919);
      assertFalse(player1.isDead());
      
      player1.reset(true);
      player0.reset(false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)27;
      player1.unpack(byteArray0);
      player0.isJoinOK(player1, false);
      player1.pack();
      int int1 = player1.type();
      assertEquals(5, int1);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getMoney(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(975, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 975);
      player0.reset(true);
      Player player1 = new Player((-1), "^K8D_3a", 693);
      player0.setJoinOK(player1, true);
      player0.head = (Party) player1;
      player0.type();
      player0.gangStrength();
      player0.getMoney();
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.5192571434828492
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(789, "Fb=eP@rR6]`L%", "Fb=eP@rR6]`L%", 789, 1680);
      player0.gangStrength();
      player0.getIP();
      player0.setY(1680);
      player0.setX(0.0F);
      player0.getX();
      player0.getMoney();
      player0.isConnected();
      Party party0 = player0.boss;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setConnected(true);
      assertEquals(1680.0F, player0.getY(), 0.01F);
      
      Player player1 = new Player(1680, "G^trFSG'';;Wg>'", "Fb=eP@rR6]`L%", (short)4919);
      player1.getStrength();
      player0.setY(0.0F);
      player0.getY();
      Player player2 = new Player();
      player2.getZ();
      player1.isDead();
      player1.setMoney(13.49909F);
      player0.isJoinOK(player1, true);
      Player player3 = new Player(535, "Fb=eP@rR6]`L%", 399);
      player1.pack();
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4668805135504925
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(789, "Fb=eP@rR6]`L%", "Fb=eP@rR6]`L%", 789, 1680);
      player0.gangStrength();
      player0.setY(1680);
      player0.getX();
      player0.getMoney();
      player0.isConnected();
      Party party0 = player0.boss;
      player0.remove((Party) null);
      player0.getIP();
      player0.setX(164.98047F);
      player0.getStrength();
      player0.getZ();
      Player player1 = new Player(1680);
      player1.setZ(1680);
      player1.isDead();
      player0.setDead();
      player1.getY();
      // Undeclared exception!
      try { 
        player1.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-1132), "", ":O!o~5zc_%]FDiw5", 0);
      Party party0 = player0.head;
      player0.boss = null;
      player0.getSubparty();
      player0.getPictureId();
      player0.setDead();
      player0.id = (-1);
      Player player1 = new Player((-231), ":O!o~5zc_%]FDiw5", (-5118));
      player1.setZ((-5118));
      player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)2;
      player1.unpack(byteArray0);
      player1.head = (Party) player0;
      player1.setConnected(false);
      player1.reset(false);
      player0.getIP();
      player1.getName();
      player1.getZ();
      player0.setDead((long) (short)4919);
      assertEquals(4919L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.26147761112867
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0, ";?bms>YyfM)e,O!~c", ";?bms>YyfM)e,O!~c", 0, 0);
      player0.pack();
      Party party0 = player0.head;
      player0.remove((Party) null);
      player0.add((Party) null);
      player0.getSubparty();
      Player player1 = new Player((short)4919, ";?bms>YyfM)e,O!~c", "", (short)4919);
      player1.setZ((-4755.0F));
      player1.getZ();
      player0.getIP();
      player0.setY(0.0F);
      player1.toString();
      player0.setX(0.0F);
      player1.setDead((long) (short)4919, false);
      player1.setZ(0.0F);
      player1.setDead();
      player1.getIP();
      player1.reset(true);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.488039965861683
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, ";?bms>YyfM)e,O!~c", ";?bms>YyfM)e,O!~c", 0, 0);
      player0.setX((-4755.0F));
      byte[] byteArray0 = player0.pack();
      byte[] byteArray1 = player0.pack();
      player0.unpack(byteArray1);
      player0.getStrength();
      player0.getMoney();
      player0.type();
      player0.unpack(byteArray0);
      player0.reset(false);
      player0.getZ();
      player0.setDead();
      player0.setY(5);
      player0.unpack(byteArray1);
      player0.setMoney(475.13F);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, ";?bms>YyfM)e,O!~c", ";?bms>YyfM)e,O!~c", 0, 0);
      player0.pack();
      player0.pack();
      player0.getStrength();
      Player player1 = new Player(0);
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.1952296882816973
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getY();
      Player player1 = new Player(141, "vs<yE+k`f{~", "vs<yE+k`f{~", (-1), (-2282));
      player1.setMoney(141);
      player0.remove(player1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.setConnected(true);
      player1.getStrength();
      player1.setY((-3780.226F));
      player1.getY();
      player0.getZ();
      player0.isDead();
      player0.setMoney((-671.5F));
      Player player2 = new Player(4919);
      player0.setJoinOK(player2, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(141.0F, player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(5);
      player0.toString();
      player0.setX((-1896.33F));
      player0.setDead((long) 5, false);
      Player player1 = new Player(10, "y5@znw|]\"Z6,:Zu", "y5@znw|]\"Z6,:Zu", 5, 4919);
      player1.setZ(0L);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      player1.getIP();
      player1.reset(true);
      assertEquals(5, player1.getPictureId());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.432811072189696
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(2075, (String) null, (String) null, 0);
      player0.id = 983;
      player0.getIP();
      player0.setY(2075);
      player0.setX((-3246.0F));
      player0.id = 3;
      player0.getX();
      player0.getMoney();
      player0.isConnected();
      Party party0 = player0.boss;
      player0.remove((Party) null);
      player0.getIP();
      player0.setX(0.1F);
      player0.getStrength();
      player0.getZ();
      player0.type();
      player0.setZ(0.0F);
      player0.isDead();
      player0.setDead();
      player0.getY();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1), " ", (String) null, (-1), 1129);
      player0.getSubparty();
      player0.getZ();
      player0.getIP();
      player0.setY(640.7836F);
      player0.toString();
      player0.setX(2116.352F);
      player0.setDead(196L, true);
      player0.setZ((short)4919);
      player0.setDead();
      player0.getIP();
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.915376834087468
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.getZ();
      player0.pack();
      player0.getStrength();
      player0.setY((-3780.226F));
      player0.getY();
      float float0 = Player.TOLERANCE;
      Player player1 = new Player(1, "", 1);
      player1.isDead();
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, true);
      Player player2 = new Player((short)4919, "", (short)4919);
      player0.setMoney(6912);
      Player player3 = new Player(689);
      player3.pack();
      player0.isJoinOK(player3, false);
      player0.setJoinOK(player3, true);
      player2.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.379260646785054
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-752), "{79dfORHw;V", 1);
      player0.getY();
      player0.setConnected(false);
      player0.getSubparty();
      player0.type();
      player0.setDead();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.next = null;
      player0.add((Party) null);
      player0.prev = null;
      player0.getTimeOfDeath();
      player0.setX(0.0F);
      player0.setConnected(false);
      player0.setMoney(5);
      player0.head = null;
      player0.setConnected(false);
      player0.setMoney(1392409281320L);
      player0.getName();
      player0.getX();
      player0.getMoney();
      player0.setZ(1392409281320L);
      player0.reset(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(1.39240931E12F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(141);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      Player player0 = new Player(0, "y5@znw|]\"Z6,:Zu", "y5@znw|]\"Z6,:Zu", 141, (-12));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-26);
      player0.unpack(byteArray0);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals((-12), int0);
      assertEquals(141, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-3619), "", "", 363, (-3619));
      player0.setDead((long) (-3619));
      player0.type();
      player0.remove((Party) null);
      player0.pack();
      player0.getName();
      player0.getPictureId();
      player0.setDead(0L);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(3, "/~2%-}B<fT[(lM", "/~2%-}B<fT[(lM", 3, 577);
      player0.setZ(1.0F);
      player0.getPictureId();
      Party party0 = player0.next;
      player0.next = null;
      player0.setY(577);
      player0.setZ((-1168.0603F));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        dataOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(1660, "y5@znw|]\"Z6,:Zu", (-110));
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-110));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-3034));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.getZ();
      player0.pack();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Kz[}/?");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      player0.setX((-4755.0F));
      Player player1 = new Player((-12), "s&h|&(B", (-12));
      byte[] byteArray0 = player1.pack();
      player1.pack();
      player1.unpack(byteArray0);
      player0.isJoinOK(player1, false);
      Player player2 = new Player(1, "87OH4@{)%", ".*[(.]clasq$", 171, 1);
      player0.pack();
      assertEquals((-4755.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-1666), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "qi}M\"2o}L2q,NqZ.E", 4, 2895);
      player0.getSubparty();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-923), (String) null, (String) null, (-923));
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      player0.getTimeOfDeath();
      player0.getZ();
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player();
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player1 = new Player(4390, "gui.ModuleBrowserDialog$ModuleFilter", (-1090));
      player0.setDead((long) (-1090));
      player1.setJoinOK(player0, false);
      player0.isJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-1090L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = (-2050);
      Player player0 = new Player((-2050));
      player0.isDead();
      player0.setDead((-681L), false);
      String string0 = "=e";
      MockFile mockFile0 = new MockFile("=e");
      mockFile0.createNewFile();
      player0.getZ();
      mockFile0.setExecutable(false);
      // Undeclared exception!
      try { 
        MockFile.createTempFile("=e", "=e", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      Player player1 = new Player((-5926));
      Player player2 = new Player((-1102), "y5@znL|]\"Z6,:Zu", "y5@znL|]\"Z6,:Zu", (short)4919, 1660);
      assertEquals(4919, player2.getPictureId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, " ,Y3|otS4b6'9VLBZ>", "'AiD)m2ma#M._Us9:", (-1), 239);
      Player player1 = new Player(763);
      player1.getSubparty();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(141);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      Player player0 = new Player(0, "y5@znw|]\"Z6,:Zu", "y5@znw|]\"Z6,:Zu", 141, (-12));
      player0.pack(dataOutputStream0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-12), player0.getStrength());
      assertEquals(141, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(141);
      Player player0 = new Player((-28927), "", "", (-14075), 27);
      long long0 = player0.getTimeOfDeath();
      assertEquals(27, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-14075), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.setZ(1425.0F);
      assertEquals(1425.0F, player0.getZ(), 0.01F);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      float float0 = Player.TOLERANCE;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?Z|b2.VI''CtJQD|Y");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte) (-85);
      byteArray0[2] = (byte)18;
      byteArray0[4] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player1 = new Player((byte) (-63), "|yCmi|?}[$R<](1", "?Z|b2.VI''CtJQD|Y", (-751), (byte) (-85));
      assertEquals((-751), player1.getPictureId());
  }
}
