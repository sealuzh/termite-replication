/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:09:35 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8550964054089625
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "!*qE|@?5");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-161), (HomeTexture) null, (-161), 146, (-161));
      homeEnvironment0.setSubpartSizeUnderLight((-3448.0F));
      homeEnvironment0.setVideoQuality(146);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PINHOLE");
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment1.setPhotoHeight(823);
      homeEnvironment1.setVideoQuality((-161));
      homeEnvironment1.getCeillingLightColor();
      System.setCurrentTimeMillis(13684944);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment3.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment3.setPhotoWidth(759);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("X");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.X
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6847854169135204
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      homeEnvironment1.setVideoFrameRate((-1686));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment1.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals((-1686), int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.5540547239834352
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-464));
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyColor();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setWallsAlpha(13684944);
      homeEnvironment1.setGroundColor(7);
      homeEnvironment1.setSkyColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment1.setLightColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment1.setVideoWidth((-2145296800));
      homeEnvironment0.setWallsAlpha((-464));
      homeEnvironment0.setCeillingLightColor((-659));
      homeEnvironment0.setSkyColor(981);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getSkyTexture();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setWallsAlpha((-659));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment((-659), (HomeTexture) null, (-2145296800), (HomeTexture) null, (-557), (-464));
      homeEnvironment3.setSkyTexture((HomeTexture) null);
      homeEnvironment2.setWallsAlpha(0.0F);
      homeEnvironment2.setVideoCameraPath(list0);
      homeEnvironment3.getVideoFrameRate();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment2.getPhotoHeight();
      assertEquals(981, homeEnvironment0.getSkyColor());
      
      float float0 = homeEnvironment3.getWallsAlpha();
      assertEquals((-464.0F), float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(8.0F);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setGroundColor(823);
      homeEnvironment0.setCeillingLightColor((-685));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.getPhotoAspectRatio();
      Random.setNextRandom(823);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1262368167947456
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-464));
      homeEnvironment1.getLightColor();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      homeEnvironment1.setPhotoWidth((-464));
      AspectRatio aspectRatio0 = homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoWidth(5);
      homeEnvironment0.setCeillingLightColor(13684944);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment1.getVideoWidth();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "!/", uRLContent0, (-675), 0.0F, "!/", false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8, homeTexture0, 2, homeTexture0, 2, (-1254.17F));
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getGroundTexture();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.456243763431945
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-464));
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyColor();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setWallsAlpha(13684944);
      homeEnvironment1.setGroundColor(7);
      homeEnvironment1.setSkyColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment1.setLightColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment1.setVideoWidth((-2145296800));
      homeEnvironment0.setWallsAlpha((-464));
      homeEnvironment0.setCeillingLightColor((-659));
      homeEnvironment0.setSkyColor(981);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getSkyTexture();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setWallsAlpha((-659));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment((-659), (HomeTexture) null, (-2145296800), (HomeTexture) null, (-557), (-464));
      homeEnvironment3.setSkyTexture((HomeTexture) null);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment2.setVideoCameraPath(list0);
      homeEnvironment2.setGroundTexture((HomeTexture) null);
      homeEnvironment3.getSkyColor();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-464.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setVideoFrameRate((-4768));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("L2R_dD+-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.L2R_dD+-
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0983891977172062
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2618.0F);
      homeEnvironment0.setPhotoWidth(363);
      homeEnvironment0.getVideoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth((-16));
      homeEnvironment0.setCeillingLightColor(981);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(2618.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals((-16), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(104L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-820), (HomeTexture) null, (-820), (HomeTexture) null, (-2095), 104L);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("9gjfL7JM_iT7g{k`]", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getVideoCameraPath();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      
      HomeEnvironment.DrawingMode.values();
      System.setCurrentTimeMillis((-2095));
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment1.getGroundColor();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-820), int0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals((-2095), homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(104.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-820), homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.221187535953551
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-150));
      homeEnvironment0.setVideoWidth((-1));
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.setCeillingLightColor((-874));
      homeEnvironment0.setSkyColor(1839);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoFrameRate((-2145296800));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(1839, homeEnvironment0.getSkyColor());
      assertEquals((-2145296800), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3358420882625266
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-464));
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyColor();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setWallsAlpha(13684944);
      homeEnvironment1.setGroundColor(7);
      HomeEnvironment.Property.values();
      homeEnvironment1.setLightColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor((-464));
      homeEnvironment1.setVideoWidth((-2145296800));
      homeEnvironment0.setWallsAlpha((-464));
      homeEnvironment0.setCeillingLightColor((-659));
      homeEnvironment0.setSkyColor(981);
      homeEnvironment1.setVideoFrameRate(13684944);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setWallsAlpha(1830.1187F);
      homeEnvironment0.setVideoCameraPath(list0);
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.setVideoFrameRate(17);
      homeEnvironment0.setVideoWidth(4);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setWallsAlpha(0.0F);
      CatalogTexture catalogTexture0 = new CatalogTexture("gyG7", (Content) null, (-1912.5594F), (-2601.1865F), false);
      homeEnvironment0.getCeillingLightColor();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(13684944, homeTexture0, 1995, homeTexture0, 17, 0);
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment0.setLightColor(4);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoWidth(4);
      assertEquals(3, homeEnvironment2.getVideoHeight());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-54);
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte) (-70);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("vmIJY", "vmIJY", temporaryURLContent0, 119.8F, 0.0F, "3700-", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 1, homeTexture0, 4, 1.5F);
      homeEnvironment0.getDrawingMode();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1, homeEnvironment0.getSkyColor());
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(4, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(1, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.1128530367813205
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(5);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setGroundColor(13427964);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(25);
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getLightColor();
      homeEnvironment0.setAllLevelsVisible(false);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(213, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2153463141990684
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-464));
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyColor();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setWallsAlpha(0.0F);
      homeEnvironment1.clone();
      homeEnvironment1.setGroundColor(7);
      homeEnvironment1.setSkyColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment1.setLightColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor(2);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoWidth((-2145296800));
      homeEnvironment1.setLightColor(13427964);
      homeEnvironment0.setWallsAlpha((-464));
      homeEnvironment0.setSkyColor(981);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setVideoFrameRate(1995);
      homeEnvironment1.setLightColor(1493);
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals((-464.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.124189072080917
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoQuality(1);
      homeEnvironment0.setVideoFrameRate(17);
      homeEnvironment0.setVideoWidth(4);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-1));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(11053224, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoWidth(4);
      homeEnvironment0.setLightColor(27);
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoWidth(13684944);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoQuality(27);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0841504119482797
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(5);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "", homeEnvironment0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor(300);
      homeEnvironment0.setWallsAlpha(300);
      homeEnvironment0.setSkyColor(300);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setWallsAlpha(300);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      assertEquals(300.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("V;224)M", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setGroundColor((-52));
      homeEnvironment0.setCeillingLightColor((-944));
      homeEnvironment0.setCeillingLightColor((-944));
      assertEquals((-52), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0369337824694522
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1609);
      homeEnvironment0.getVideoCameraPath();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setGroundColor(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-820));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0080594378013763
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoWidth(4);
      homeEnvironment0.setLightColor(0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(4);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoQuality(0);
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9224967595081837
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("q!/", "q!/", uRLContent0, (-3319.315F), 1320.804F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-675), homeTexture0, (-675), homeTexture0, (-675), 3954.027F);
      homeEnvironment0.setWallsAlpha(1.3333334F);
      homeEnvironment0.setCeillingLightColor((-2145296800));
      homeEnvironment0.setSkyColor((-675));
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(20, homeTexture0, (-2378), homeTexture0, 0, 706.03F);
      homeEnvironment1.setVideoFrameRate(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyTexture();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(1.3333334F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4990104312963837
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "", homeEnvironment0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.getLightColor();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "com.eteks.sweethome3d.tools.OperatingSystem$2", temporaryURLContent0, 300, 33, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(33, homeTexture0, 300, homeTexture0, 13684944, 33);
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setWallsAlpha(33);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "!/", uRLContent0, (-675), 0.0F, "!/", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-675), homeTexture0, 2, homeTexture0, (-2143361832), 2947.4104F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(3025);
      homeEnvironment1.getLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setWallsAlpha(2330.0F);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(7, homeTexture0, 3025, homeTexture1, 1, 0.0F);
      homeEnvironment0.setSkyTexture(homeTexture0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("!/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.!/
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      CatalogTexture catalogTexture0 = new CatalogTexture("3#Ss39<z1Fe", (Content) null, (-3892.7F), 1830.1187F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.isAllLevelsVisible();
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.925863762875187
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1609);
      homeEnvironment0.getVideoCameraPath();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(1609);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("lRS*hW|}0u]!hbiTnXV", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lRS*hW|}0u]!hbiTnXV", propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment1.setVideoQuality(0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "com.eteks.sweethome3d.model.HomeEnvironment", (Content) null, 1990.28F, 1.0F, "BmVJhAze%{5KEa&P$A", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setGroundTexture(homeTexture0);
      assertEquals((-1.0F), homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-136);
      homeEnvironment0.setPhotoHeight((-136));
      float float0 = 0.0F;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight((-136));
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5992003461540465
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-739));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setVideoWidth(13427964);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getSkyColor();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(13427964);
      homeEnvironment0.setGroundColor((-1149));
      homeEnvironment0.setSkyColor(13427964);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor(10070973);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor(2);
      homeEnvironment0.setVideoWidth(10070973);
      homeEnvironment0.setWallsAlpha(981);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoFrameRate(10070973);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.052754235510318
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2043, (HomeTexture) null, 8, (-4344), 0.0F);
      homeEnvironment0.setVideoQuality(8);
      homeEnvironment0.setWallsAlpha((-1.0F));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      homeEnvironment0.setSkyColor(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      Object object0 = new Object();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(0, (HomeTexture) null, 3535, (HomeTexture) null, 0, 2.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", homeEnvironment2, homeEnvironment3);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(3535, (HomeTexture) null, (-543), 2043, 7);
      homeEnvironment4.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment3.setGroundColor(3535);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setSubpartSizeUnderLight(2043);
      homeEnvironment3.setSubpartSizeUnderLight(8);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      resourceURLContent0.getJAREntryName();
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-820.0F), 1448.852F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setSkyTexture(homeTexture0);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(363);
      homeEnvironment0.getVideoAspectRatio();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.225227939993955
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GROUND_TEXTURE");
      homeEnvironment0.setGroundColor((-2311));
      homeEnvironment0.setSkyColor(1557);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor((-2078));
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor(2);
      homeEnvironment0.setVideoWidth((-755));
      homeEnvironment0.setWallsAlpha((-755));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setCeillingLightColor((-1775));
      homeEnvironment1.setSkyColor((-1775));
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment0.setVideoFrameRate(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment1.getLightColor();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setWallsAlpha((-659));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      homeEnvironment1.clone();
      assertEquals((-1775), homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "!/", uRLContent0, (-675), 0.0F, "!/", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-675), homeTexture0, (-675), homeTexture0, 2, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor((-675));
      homeEnvironment1.setPhotoHeight(3535);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setPhotoQuality((-1659));
      assertEquals((-1659), homeEnvironment1.getPhotoQuality());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.925863762875187
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1609);
      homeEnvironment0.getVideoCameraPath();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(1609);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("lRS*hW|}0u]!hbiTnXV", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("lRS*hW|}0u]!hbiTnXV", propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment1.setVideoQuality(0);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnvironment", (Content) null, 1990.28F, (-1.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setGroundTexture(homeTexture0);
      assertEquals((-1.0F), homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.0239072715629165
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setCeillingLightColor(0);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoWidth((-347));
      homeEnvironment0.getVideoCameraPath();
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "FILL_AND_OUTLINE", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 0, (-347), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setSkyTexture(homeTexture0);
      homeEnvironment0.getSkyColor();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment1.setPhotoWidth(0);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals((-347), homeEnvironment0.getPhotoWidth());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setWallsAlpha(1.3427964E7F);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("user.home", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("CEILING_LIGHT_COLOR", (String) null, homeEnvironment_Property0, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(363);
      homeEnvironment0.setPhotoWidth(363);
      homeEnvironment0.getVideoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(0);
      assertEquals(363, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GROUND_TEXTURE");
      homeEnvironment0.setPhotoWidth(2409);
      homeEnvironment0.setPhotoWidth(363);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(0);
      assertEquals(363, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PHOTO_WIDTH", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "PHOTO_WIDTH", "PHOTO_WIDTH", "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-43);
      byteArray0[1] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment1.setCeillingLightColor((-1));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getGroundColor();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(5127);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("x5UW0MCSPX^vztLTJi", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy1, "x5UW0MCSPX^vztLTJi", object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor((-1656));
      homeEnvironment0.setVideoWidth((-1656));
      assertEquals(5127, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.361272036422214
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-464));
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyColor();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setWallsAlpha(13684944);
      homeEnvironment1.setGroundColor(7);
      homeEnvironment1.setSkyColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment1.setLightColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor(2);
      homeEnvironment1.setVideoWidth((-2145296800));
      homeEnvironment0.setWallsAlpha((-464));
      homeEnvironment0.setCeillingLightColor((-659));
      homeEnvironment0.setVideoQuality((-464));
      homeEnvironment0.setSkyColor(981);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setVideoFrameRate(1995);
      homeEnvironment1.setLightColor(1493);
      homeEnvironment0.setVideoWidth((-2145296800));
      homeEnvironment0.setPhotoWidth(13);
      assertEquals((-1608972544), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.158491982830073
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyColor();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setWallsAlpha(13684944);
      homeEnvironment1.setGroundColor(7);
      homeEnvironment1.setSkyColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor((-765));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      int int0 = 981;
      homeEnvironment0.setWallsAlpha(13684944);
      homeEnvironment1.setSkyColor(13684944);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyTexture();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setWallsAlpha(492.27F);
      HomeTexture homeTexture0 = null;
      int int1 = 5125;
      int int2 = 2412;
      HomeTexture homeTexture1 = null;
      try {
        homeTexture1 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture(")2H3.:@GG-Zi<", "p\"^", temporaryURLContent0, 0.0F, 0.0F, "p\"^", false);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getVideoCameraPath();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int0);
      
      homeEnvironment1.getVideoWidth();
      int int1 = homeEnvironment0.getVideoHeight();
      assertEquals(240, int1);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2400387099547725
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-464));
      homeEnvironment1.getLightColor();
      homeEnvironment1.getSkyColor();
      homeEnvironment1.setWallsAlpha(13684944);
      homeEnvironment1.setGroundColor(7);
      homeEnvironment1.setSkyColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment1.setLightColor(13684944);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor(2);
      homeEnvironment1.setVideoWidth((-2145296800));
      homeEnvironment0.setWallsAlpha((-464));
      homeEnvironment0.setCeillingLightColor((-659));
      homeEnvironment0.setSkyColor(981);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setVideoFrameRate(2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.setWallsAlpha(1830.1187F);
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(7, homeEnvironment1.getGroundColor());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getPhotoQuality();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("U/QVCM");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.U/QVCM
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("K9^KyD86;>", (PropertyChangeListener) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setGroundColor((-2886));
      homeEnvironment0.setCeillingLightColor((-1534));
      homeEnvironment0.setCeillingLightColor(1517);
      homeEnvironment0.setAllLevelsVisible(true);
      assertEquals((-2886), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("V;224)M", (PropertyChangeListener) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setGroundColor(5885);
      homeEnvironment0.setCeillingLightColor(1609);
      homeEnvironment0.setCeillingLightColor((-2886));
      homeEnvironment0.getVideoAspectRatio();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals((-2886), homeEnvironment0.getCeillingLightColor());
      assertEquals(5885, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoFrameRate(17);
      homeEnvironment0.setVideoWidth(4);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(0.0F);
      CatalogTexture catalogTexture0 = new CatalogTexture("gyG7", (Content) null, (-1912.5594F), (-2601.1865F), false);
      CatalogTexture catalogTexture1 = new CatalogTexture("dAK]a`o6@]YfSSzQ;;*", (Content) null, 4, (-1047.171F), false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.026522790307467
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setGroundColor(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.poll();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment1.setGroundColor(6);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setGroundColor(633);
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setVideoWidth((-1));
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "!/", uRLContent0, (-675), 0.0F, "!/", false);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      CatalogTexture catalogTexture1 = new CatalogTexture("!/", (String) null, uRLContent0, (-357.0F), (-464.0F), "lthZi8]J", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-675), homeTexture0, 1603, homeTexture0, (-675), 1.0F);
      homeEnvironment0.setGroundTexture(homeTexture0);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-675), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-675), homeEnvironment0.getLightColor());
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1603, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.setGroundColor(13684944);
      homeEnvironment0.setCeillingLightColor((-820));
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals((-820), homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoQuality(1);
      homeEnvironment0.setVideoFrameRate(17);
      homeEnvironment0.setVideoWidth(4);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera(0, 0.0F, 33.0F, 776.941F, 0, 1218.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("&z1h(;Wj`= f", "", camera0, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 0.0F, 2.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("&z1h(;Wj`= f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.&z1h(;Wj`= f
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoWidth(363);
      homeEnvironment0.getVideoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(0);
      assertEquals(363, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 7, 0, 0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setWallsAlpha(1830.1187F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_TEXTURE;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", object0, homeEnvironment1);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setGroundColor(0);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(1830.1187F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, (String) null, (Object) null, object0);
      propertyChangeEvent0.setPropagationId(homeEnvironment_Property0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte) (-115);
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte) (-120);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)33;
      byteArray0[7] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera0 = new Camera(68.205F, 1.3684944E7F, 1.0F, 2751.8125F, 2138.2473F, 1.3684944E7F, 1755L, camera_Lens0);
      camera0.clone();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment0, (String) null, propertyChangeListenerProxy0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoQuality();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      String string0 = "GROUND_TEXTURE";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GROUND_TEXTURE");
      homeEnvironment0.setGroundColor((-2311));
      homeEnvironment0.setSkyColor(1557);
      HomeEnvironment.Property.values();
      homeEnvironment0.setLightColor((-2078));
      HomeEnvironment.Property.values();
      int int0 = 2;
      homeEnvironment0.setLightColor(2);
      homeEnvironment0.setVideoWidth((-755));
      homeEnvironment0.setWallsAlpha((-755));
      int int1 = (-659);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoHeight((-2311));
      homeEnvironment1.setCeillingLightColor((-1775));
      homeEnvironment1.setSkyColor((-1775));
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment0.setVideoFrameRate(0);
      String string1 = "1.5.0_16";
      Class<Object> class0 = Object.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "mi5?Y?7v-UeUo@iPa'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource mi5?Y?7v-UeUo@iPa'
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-136);
      homeEnvironment0.setPhotoHeight((-136));
      float float0 = 0.0F;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoHeight((-136));
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PHOTO_WIDTH", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "PHOTO_WIDTH", "PHOTO_WIDTH", "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setSubpartSizeUnderLight(0.0F);
      homeEnvironment2.setVideoFrameRate(8);
      assertEquals(8, homeEnvironment2.getVideoFrameRate());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-464));
      homeEnvironment1.getLightColor();
      homeEnvironment1.setPhotoHeight(2618);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("lRS*hW|}0u]!hbiTnXV", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "lRS*hW|}0u]!hbiTnXV", object0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setSubpartSizeUnderLight(2618);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment1.setVideoWidth(9);
      assertEquals(2618.0F, homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.627323234076236
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(8.0F);
      homeEnvironment0.setPhotoWidth(363);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setPhotoWidth(363);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoWidth((-3659));
      homeEnvironment0.getVideoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      try { 
        MockURL.URL("VIDEO_QUALITY", "VIDEO_QUALITY", (-1300), "VIDEO_QUALITY", uRLStreamHandler0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-1300
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "!/", uRLContent0, (-675), 0.0F, "!/", false);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, homeTexture0, 1908874353, 8, 2);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      homeEnvironment0.setGroundTexture(homeTexture1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1908874353, homeEnvironment0.getSkyColor());
      assertEquals(2, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(8, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-2917), (-2917));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2917), homeTexture0, (-2917), (-2917), (-2917));
      homeEnvironment0.setPhotoQuality(0);
      assertEquals((-2917), homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2917), homeEnvironment0.getGroundColor());
      assertEquals((-2917.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2917), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(5);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "", homeEnvironment0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 300, 2.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(5, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoWidth(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment2.getVideoFrameRate();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals(0, homeEnvironment1.getVideoHeight());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int int0 = (-2202);
      CatalogTexture catalogTexture0 = new CatalogTexture(":(Rv", (Content) null, (-2202), (-3143.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2202), homeTexture0, (-2202), (-2202), (-2202));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setGroundColor(300);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(5);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("x5UW0MCSPX^vztLTJi", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy1, "x5UW0MCSPX^vztLTJi", object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor((-1656));
      homeEnvironment0.setVideoWidth(11053224);
      assertEquals(5, homeEnvironment0.getVideoFrameRate());
  }
}
