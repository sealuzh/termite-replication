/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:08:16 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      System.setCurrentTimeMillis(10L);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-2967), (-2967));
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getName();
      assertEquals((-2967), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-2967), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6041887883973174
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 1, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isNullOnDelete();
      Integer integer0 = new Integer(1);
      System.setCurrentTimeMillis(282);
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isReal();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2888094008886872
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 2;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "jt", 1338, 2);
      foreignKeyConstraint0.getChildTable();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 2819, 0);
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.isRestrictDelete();
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3172820046689933
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "biz5", (-1), 2);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      System.setCurrentTimeMillis(2);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5280883009539776
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      int int0 = 0;
      String string0 = "+ /";
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "+ /", 603, 0);
      foreignKeyConstraint0.getChildTable();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+ /");
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRule();
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string1 = "Cascade on delete";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("Cascade on delete:\n Deletion of parent deletes child", "", "UTF-8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"Cascade on delete:
         //  Deletion of parent deletes child\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.11509159281281
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "biz5", 167, 3);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getChildTable();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean1 == boolean0);
      
      Integer integer0 = new Integer(1309);
      foreignKeyConstraint0.getDeleteRule();
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(167, foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", string1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9722174414234135
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "biz5", 167, 3);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      foreignKeyConstraint0.getDeleteRuleAlias();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      foreignKeyConstraint0.isRestrictDelete();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertFalse(foreignKeyConstraint0.isNullOnDelete());
      assertEquals("R", string1);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 167, (-4558));
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      assertEquals(167, foreignKeyConstraint1.getUpdateRule());
      assertFalse(boolean1 == boolean0);
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2775427281173046
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "biz5", 167, 3);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isNullOnDelete();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      assertEquals(0, int0);
      
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean1 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      
      System.setCurrentTimeMillis(0L);
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(167, foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", string2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5497812899148156
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "biz5", (-310), 296);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 296, 296);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals(4, int0);
      
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleName();
      System.setCurrentTimeMillis(296);
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals((-310), foreignKeyConstraint0.getUpdateRule());
      assertEquals(296, foreignKeyConstraint0.getDeleteRule());
      
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getChildTable();
      assertEquals(296, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4568388827557333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 167, 167);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "4", 204, 167);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(1, int0);
      
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint1.getDeleteRuleName();
      System.setCurrentTimeMillis(204);
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals(167, foreignKeyConstraint1.getDeleteRule());
      assertEquals(204, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.634818381770898
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "biz5", 167, 3);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "biz5", (-310), 296);
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.isNullOnDelete();
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      
      Integer integer0 = new Integer(282);
      System.setCurrentTimeMillis(167);
      boolean boolean2 = foreignKeyConstraint1.isReal();
      assertTrue(boolean2);
      
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint1.isNullOnDelete();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint1.getName();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(167, int0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertTrue(foreignKeyConstraint0.isRestrictDelete());
      
      foreignKeyConstraint1.getChildColumns();
      assertTrue(foreignKeyConstraint1.isReal());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.322055368667316
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "*5vS1}#@8<N", (-4516), (-239));
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getDeleteRuleName();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      boolean boolean2 = foreignKeyConstraint0.isReal();
      assertFalse(boolean2 == boolean0);
      
      boolean boolean3 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean3 == boolean1);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-239), int0);
      assertEquals((-4516), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`q[wi}$9T2C/sG1");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`q[wi}$9T2C/sG1");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "|`;8U", (-1619), 3208);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(3208, foreignKeyConstraint0.getDeleteRule());
      assertEquals((-1619), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.270135320709897
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "IKCN.^ci)", 2, 0);
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleName();
      System.setCurrentTimeMillis(0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      linkedList0.add(tableColumn0);
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0).when(resultSet0).getInt(anyString());
      doReturn((Object) null).when(resultSet0).getObject(anyString());
      doReturn((String) null, (String) null, (String) null, (String) null).when(resultSet0).getString(anyString());
      TableColumn tableColumn1 = null;
      try {
        tableColumn1 = new TableColumn((Table) null, resultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1628052500881307
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 166, 521);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 288, 1457);
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.isRestrictDelete();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "`q[wi}$9T2C/sG1";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`q[wi}$9T2C/sG1");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`q[wi}$9T2C/sG1");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "`q[wi}$9T2C/sG1", 193, 193);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.326077845272501
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3, 0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1073, (-954));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isRestrictDelete();
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null, (-310), (-310));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0847382075593552
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "biz5", 167, (-16));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isRestrictDelete();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-16), foreignKeyConstraint0.getDeleteRule());
      assertEquals(167, foreignKeyConstraint0.getUpdateRule());
      
      System.setCurrentTimeMillis((-16));
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.788458655589152
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-310), 296);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getName();
      assertEquals((-310), foreignKeyConstraint0.getUpdateRule());
      assertEquals(296, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`q[wi}$9T2C/sG1");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "`q[wi}$9T2C/sG1", (-1025), 203);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-meta");
      foreignKeyConstraint0.getParentColumns();
      assertEquals(203, foreignKeyConstraint0.getDeleteRule());
      assertEquals((-1025), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.287697053836407
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 167, 3);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-310), 296);
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.isRestrictDelete();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.019761732828532
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "+ /", 603, 0);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+ /");
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string1);
      
      System.setCurrentTimeMillis(0L);
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(603, foreignKeyConstraint0.getUpdateRule());
      assertEquals("C", string2);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5144760157905863
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3, 1338);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", (-1492), (-1539));
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint1.getDeleteRuleName();
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      foreignKeyConstraint0.isNullOnDelete();
      Integer integer0 = new Integer((-1539));
      System.setCurrentTimeMillis(1615L);
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean1 = foreignKeyConstraint1.isImplied();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean2 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = foreignKeyConstraint1.isReal();
      assertEquals((-1492), foreignKeyConstraint1.getUpdateRule());
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
      assertFalse(boolean3 == boolean0);
      assertEquals((-1539), foreignKeyConstraint1.getDeleteRule());
      assertTrue(boolean3);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5101178182775215
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "biz5", 167, 3);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "biz5", (-310), 313);
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.isNullOnDelete();
      foreignKeyConstraint0.isCascadeOnDelete();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
