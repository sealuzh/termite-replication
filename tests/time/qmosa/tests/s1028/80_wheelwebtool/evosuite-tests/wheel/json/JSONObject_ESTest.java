/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:52:04 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject.quote("");
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.optDouble(45, (double) 45);
      try { 
        jSONArray0.getJSONObject(10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[10] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.879419401793339
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Long long0 = new Long(2057L);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      String string0 = "istoString";
      stringArray0[5] = "istoString";
      stringArray0[6] = null;
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      JSONObject.getNames(jSONObject0);
      Boolean boolean0 = new Boolean("isparseFloat");
      JSONObject.getNames((Object) boolean0);
      try { 
        jSONObject0.getString("`[ks8/|W-Rb3V0Qw");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"`[ks8/|W-Rb3V0Qw\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.593194056138238
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.doubleToString((-1.0));
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("-1", "-1");
      jSONObject1.optDouble("%%u%=R");
      jSONObject0.optBoolean("-1", true);
      String string0 = "b^JWiZ?'KOE|Y]";
      jSONObject0.put("CLC9P'UfgH", (Map) hashMap0);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8408307160111372
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.doubleToString((-1.0));
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = null;
      try { 
        jSONObject0.append((String) null, "-1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.339290190922281
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.remove("ro");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject.quote("qjr");
      StringWriter stringWriter0 = new StringWriter(59);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "qjr");
      stringWriter1.append((CharSequence) "qjr");
      JSONObject.valueToString(object0, (-1888), 55);
      Integer integer0 = new Integer(1998);
      JSONObject jSONObject1 = new JSONObject();
      JSONObject jSONObject2 = new JSONObject((Object) "getvalueOf");
      jSONObject1.accumulate("\n", jSONObject2);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.optJSONObject(59);
      try { 
        jSONObject0.getJSONObject("qjr");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"qjr\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9365194643184558
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject.quote("getvalueOf");
      StringWriter stringWriter0 = new StringWriter(123);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      stringWriter1.append((CharSequence) "getvalueOf");
      JSONObject.valueToString("getvalueOf", 12, 123);
      String string0 = "[]";
      Boolean boolean0 = new Boolean("[]");
      jSONObject0.accumulate("\"java.lang.String@0000000002\"", (Object) null);
      JSONArray jSONArray0 = new JSONArray();
      int int0 = 2895;
      jSONArray0.optJSONObject(2895);
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray("Cm|bDGbw8Ex BJy)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of Cm|bDGbw8Ex BJy)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3420158589513322
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.doubleToString((-1.0));
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("-1", "-1");
      jSONObject1.optDouble("%%u%=R");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "%%u%=R";
      stringArray0[1] = "-1";
      stringArray0[2] = "dJGhOtV\"kB,Q=6|^U&J";
      Integer integer0 = new Integer((-4091));
      jSONObject1.accumulate("-1", hashMap0);
      String string0 = "";
      try { 
        Short.valueOf("%%u%=R");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"%%u%=R\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8474829942442232
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float.min(0.0F, 0.0F);
      Float.isFinite(270.6F);
      Float.sum(567.0471F, 0.0F);
      Float.sum(0.0F, 0.0F);
      String[] stringArray0 = JSONObject.getNames((Object) float0);
      Float.max(270.6F, 270.6F);
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONObject jSONObject1 = jSONObject0.put("rk^xNN)p-y", (Collection) linkedList0);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = Integer.getInteger("gettrim", 318);
      Integer.min(2241, 318);
      Double double1 = new Double(567.0471F);
      linkedList0.add(double1);
      hashMap0.put(integer0, integer0);
      jSONObject1.put("gS(jfLMuRhdSfHk", (Map) hashMap0);
      Float.sum(0.0F, 270.6F);
      jSONObject0.keys();
      jSONObject0.has("wheel.json.JSONArray");
      Double.sum(0.0, 270.6F);
      Float.max(0.0F, 0.0F);
      jSONObject0.toString(343, 343);
      try { 
        jSONObject0.getLong("rk^xNN)p-y");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"rk^xNN)p-y\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1733539249905696
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONObject.doubleToString((-2909.5123580774916));
      Boolean boolean0 = Boolean.TRUE;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "JW'f`'^[bXjfTb";
      stringArray0[1] = "-2909.5123580774916";
      stringArray0[2] = "@(B";
      stringArray0[3] = "{";
      stringArray0[4] = "tko";
      stringArray0[5] = "@(B";
      stringArray0[6] = "@(B";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.accumulate("tko", boolean0);
      JSONObject jSONObject2 = jSONObject0.put("@(B", (double) 125);
      jSONObject2.keys();
      jSONObject0.optLong("@(B");
      jSONObject2.optInt("@(B", (-934));
      jSONObject1.length();
      jSONObject0.optInt("{");
      jSONObject0.toString();
      JSONObject.getNames(jSONObject1);
      jSONObject1.remove("@(B");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9617793389523204
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Double, JSONArray> hashMap0 = new HashMap<Double, JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      jSONObject1.toString();
      hashMap0.values();
      jSONObject0.optDouble("d|PU0hWSA5", 0.0);
      JSONObject jSONObject2 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject3 = new JSONObject();
      jSONObject0.toJSONArray(jSONArray0);
      JSONObject jSONObject4 = jSONObject2.put("-6G@:@p8r`", (Map) hashMap0);
      jSONObject0.keys();
      jSONObject1.optDouble("\"K%>7WjjX]JW;*");
      jSONObject4.put("-6G@:@p8r`", false);
      Byte byte0 = new Byte((byte)18);
      Byte.compare((byte)18, (byte)44);
      Byte.compare((byte)44, (byte)125);
      JSONObject.valueToString(byte0);
      jSONObject2.optLong("");
      String string0 = "\\u";
      jSONObject1.optLong(string0, (long) (-26));
      Object object0 = JSONObject.NULL;
      jSONObject3.put("vUC", object0);
      jSONObject2.optInt("");
      jSONObject0.keys();
      try { 
        jSONObject4.getInt("0G_H2C8[p<A");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0G_H2C8[p<A\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.892050474028078
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Double, JSONArray> hashMap0 = new HashMap<Double, JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      jSONObject1.toString();
      hashMap0.values();
      jSONObject0.optDouble("d|PU0hWSA5", 0.0);
      JSONObject jSONObject2 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      JSONObject jSONObject3 = new JSONObject();
      JSONObject jSONObject4 = jSONObject2.put("-6G@:@p8r`", (Map) hashMap0);
      jSONObject0.keys();
      jSONObject1.optDouble("\"K%>7WjjX]JW;*");
      jSONObject4.put("-6G@:@p8r`", true);
      Byte byte0 = new Byte((byte)18);
      Byte.compare((byte)18, (byte)44);
      Byte.compare((byte)44, (byte)125);
      JSONObject.valueToString(byte0);
      jSONObject2.optLong("");
      String string0 = "\\u";
      jSONObject1.optLong(string0, (long) (-26));
      Object object0 = JSONObject.NULL;
      jSONObject3.put("vUC", object0);
      jSONObject2.optInt("");
      jSONObject0.keys();
      try { 
        jSONObject4.getInt("0G_H2C8[p<A");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"0G_H2C8[p<A\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.097013007997875
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Double, JSONArray> hashMap0 = new HashMap<Double, JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      String string0 = jSONObject1.toString();
      assertNotNull(string0);
      
      hashMap0.values();
      jSONObject0.optDouble("d|PU0hWSA5", 0.0);
      JSONObject jSONObject2 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject3 = new JSONObject();
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      assertNull(jSONArray1);
      
      JSONObject jSONObject4 = jSONObject2.put("-6G@:@p8r`", (Map) hashMap0);
      jSONObject0.keys();
      double double0 = jSONObject1.optDouble("\"K%>7WjjX]JW;*");
      assertEquals(Double.NaN, double0, 0.01);
      
      Integer.remainderUnsigned((byte)44, 2573);
      int int0 = jSONObject1.optInt("\"K%>7WjjX]JW;*", 44);
      assertEquals(44, int0);
      
      jSONObject4.length();
      int int1 = jSONObject1.optInt("d|PU0hWSA5");
      assertEquals(0, int1);
      
      String string1 = jSONObject3.toString();
      assertNotNull(string1);
      assertEquals("{}", string1);
      
      jSONObject1.put("Substring bounds error", (Object) "d|PU0hWSA5");
      Object object0 = new Object();
      JSONObject.getNames(object0);
      JSONArray jSONArray2 = jSONObject3.names();
      assertNull(jSONArray2);
      
      jSONObject0.put("{}", 8192);
      long long0 = jSONObject0.optLong("nCL(Y&.u0)rD>wc");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2418585836902256
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.doubleToString((-1.0));
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("-1", "-1");
      jSONObject1.optDouble("%%u%=R");
      try { 
        jSONObject0.getLong("JSONArray initial value should be a string or collection or array.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"JSONArray initial value should be a string or collection or array.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.895270074027822
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[4];
      String string0 = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[1] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[2] = "*SDeI07PA8P&d:Qm{h-";
      String string1 = "@{^56NjI,z~h.A.+SdA";
      int int0 = 58;
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Double double0 = new Double(58);
      jSONObject0.append("ishashCode", double0);
      try { 
        jSONObject0.getJSONObject("*SDeI07PA8P&d:Qm{h-");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"*SDeI07PA8P&d:Qm{h-\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Number number0 = null;
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9975806157317004
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Double, JSONArray> hashMap0 = new HashMap<Double, JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      jSONObject1.toString();
      hashMap0.values();
      jSONObject0.optDouble("d|PU0hWSA5", 0.0);
      JSONObject jSONObject2 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject3 = new JSONObject();
      jSONObject0.toJSONArray(jSONArray0);
      jSONObject2.put("-6G@:@p8r`", (Map) hashMap0);
      jSONObject2.optInt("V", 160);
      jSONObject0.keys();
      jSONObject1.optDouble("\"K%>7WjjX]JW;*");
      Byte byte0 = new Byte((byte)18);
      Byte.compare((byte)18, (byte)70);
      Byte.compare((byte)70, (byte)125);
      JSONObject.valueToString(byte0);
      jSONObject2.optLong("");
      jSONObject1.toJSONArray(jSONArray0);
      jSONObject1.names();
      try { 
        jSONArray0.getJSONObject((-1003));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[-1003] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.636963017354377
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<Double, Integer> hashMap0 = new HashMap<Double, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optLong((String) null);
      jSONObject0.optInt("Expected a ',' or ']'", (-1766));
      jSONObject0.length();
      jSONObject0.optInt("getputOpt");
      jSONObject0.toString();
      JSONObject jSONObject1 = jSONObject0.put("{}", (Object) "1NlM$c0^");
      jSONObject1.put("getputOpt", (-1766));
      try { 
        jSONObject0.getBoolean("Expected a ',' or ']'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Expected a ',' or ']'\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7337058615954013
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      jSONObject0.optLong("ro", (-2200L));
      jSONObject0.has("ro");
      Double double0 = new Double(Double.NaN);
      JSONObject jSONObject1 = jSONObject0.append("A&F", "ro");
      jSONObject1.toString(70, 12);
      JSONObject.quote("0");
      jSONObject1.put("{\"java.lang.String@0000000004\": [\"java.lang.String@0000000005\"]}", 12);
      assertEquals(2, jSONObject0.length());
      
      jSONObject0.getInt("{\"java.lang.String@0000000004\": [\"java.lang.String@0000000005\"]}");
      String string0 = jSONObject1.optString("SvKk");
      assertEquals("", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.161561450281943
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.doubleToString((-1.0));
      HashMap<Float, Float> hashMap0 = new HashMap<Float, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.append("-1", "-1");
      try { 
        jSONObject0.getInt("-1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"-1\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4572926768921821
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optBoolean("isdecode", false);
      try { 
        jSONObject0.getLong("_0c8o7/oP");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"_0c8o7/oP\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.545768442491017
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("Y", (Map) hashMap0);
      JSONObject.quote("Y");
      jSONObject1.optLong((String) null, 1651L);
      int int0 = 9;
      jSONObject1.toString(9, (-3368));
      hashMap0.clone();
      JSONObject jSONObject2 = jSONObject0.put("{\"java.lang.String@0000000003\": {}}", 0);
      String string0 = "\\f";
      try { 
        jSONObject2.getJSONArray("\f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Float float0 = new Float(2139.88426879);
      Float.max(1804.3F, 0.0F);
      Float.sum(1804.3F, 1955.0502F);
      Integer integer0 = new Integer(58);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of ~
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.799729988659142
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.remove("ro");
      jSONObject0.toString((-2345), 59);
      jSONObject0.optString("qjr", "qjr");
      jSONObject0.optString("gq^|gAZ+UA2!%]", "gq^|gAZ+UA2!%]");
      jSONObject0.optDouble(".", (-1969.47));
      JSONObject jSONObject1 = jSONObject0.put("sig", 8);
      jSONObject1.remove("gettoUnsignedLong");
      jSONObject0.keys();
      jSONObject0.optLong("Missing value", (-2200L));
      jSONObject0.has("qjr");
      Double double0 = new Double(0.0);
      jSONObject1.append("qjr", double0);
      Short short0 = new Short((short)681);
      JSONObject jSONObject2 = new JSONObject(short0);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.optJSONObject(13);
      JSONObject jSONObject3 = new JSONObject();
      assertFalse(jSONObject3.equals((Object)jSONObject1));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5376884054515494
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      float float0 = 0.0F;
      Float float1 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject(float1);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      String string0 = "getvalueOf";
      jSONObject0.optString("getvalueOf", "");
      StringWriter stringWriter0 = new StringWriter(123);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      jSONObject0.write(stringWriter1);
      Float.max(0.0F, 1285.1F);
      jSONObject0.names();
      float float2 = 0.0F;
      Float.max(0.0F, 0.0F);
      String string1 = "B;~^:u PR_w^Nx#R";
      try { 
        jSONObject0.getDouble("B;~^:u PR_w^Nx#R");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"B;~^:u PR_w^Nx#R\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.604528998335819
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[1];
      String string0 = "0SL/p_Q=n";
      jSONObject0.optDouble("");
      stringArray0[0] = "0SL/p_Q=n";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      String string1 = "";
      JSONObject jSONObject2 = jSONObject0.put("", (Map) null);
      Integer integer0 = new Integer((-880));
      jSONObject0.accumulate("", integer0);
      jSONObject2.append("0SL/p_Q=n", (Object) null);
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject3 = new JSONObject((Map) null);
      jSONObject0.append("zQ .XVD?>Sb)_", "zQ .XVD?>Sb)_");
      try { 
        jSONObject3.getJSONObject("zQ .XVD?>Sb)_");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"zQ .XVD?>Sb)_\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2322067503076204
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      try { 
        jSONObject0.getString(": ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\": \"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject(jSONObject0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.666024750076569
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("Y", (Map) hashMap0);
      JSONObject.valueToString(jSONObject1);
      String string0 = null;
      jSONObject1.optLong((String) null, 1651L);
      jSONObject1.toString(9, (-3368));
      String string1 = "221Wc6N]7)JclMc";
      hashMap0.clone();
      JSONObject jSONObject2 = jSONObject0.put("221Wc6N]7)JclMc", 0);
      String string2 = "\\f";
      try { 
        jSONObject2.getJSONArray("\f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5743378653255435
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("3sxT=}S:*,4", 1614);
      jSONObject0.isNull("yE");
      try { 
        jSONObject1.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener(")vq'<RC~50,l@;el_");
      JSONObject.testValidity("z?#ORSf%]*");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      assertEquals(0, linkedList0.size());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3469992135645263
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Long long0 = new Long(2057L);
      Long.divideUnsigned(2057L, (-88L));
      String string0 = JSONObject.numberToString(float0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Long long0 = new Long(2057L);
      Long.divideUnsigned(0L, 2057L);
      String string0 = JSONObject.numberToString(long0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3998355433155107
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[]";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.optLong("[]", 0L);
      jSONObject1.optInt("[]");
      Float float0 = new Float(148.9F);
      Float.sum(0.0F, 0.0F);
      Float.max(0.0F, 0);
      jSONObject1.names();
      Float.max((-1.0F), (-26.373657F));
      try { 
        jSONObject1.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = null;
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0645200928113994
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optBoolean("isdecode", false);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONObject jSONObject1 = jSONObject0.put("&Qu!.", (Collection) linkedList0);
      jSONObject1.put("Y%2VkFSv]wys)kh=", (Object) jSONObject0);
      try { 
        jSONObject1.getLong("gettoUnsignedLong");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"gettoUnsignedLong\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.772993505450965
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(B";
      stringArray0[1] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[2] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[3] = "ishashCode";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      Integer integer0 = new Integer(58);
      JSONObject jSONObject1 = jSONObject0.accumulate("@{^56NjI,z~h.A.+SdA", integer0);
      JSONObject jSONObject2 = new JSONObject(integer0);
      jSONObject2.optLong("Expected a ',' or ']'");
      jSONObject1.optInt("*SDeI07PA8P&d:Qm{h-", (-1766));
      jSONObject1.optBoolean("ishashCode");
      jSONObject0.optJSONArray("*SDeI07PA8P&d:Qm{h-");
      Integer.compareUnsigned((-1991), 58);
      jSONObject0.optLong("iV", (-629L));
      Object object1 = JSONObject.NULL;
      try { 
        jSONObject0.getJSONObject("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.449381481244968
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject.valueToString(float0);
      StringWriter stringWriter0 = new StringWriter(123);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      jSONObject0.write(stringWriter1);
      JSONObject.valueToString("getvalueOf", 12, 128);
      Integer integer0 = new Integer((-1888));
      jSONObject0.accumulate("java.lang.Float@0000000002", stringWriter1);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.optJSONObject(0);
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray("java.lang.Float@0000000002");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of java.lang.Float@0000000002
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0752730724587445
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(B";
      stringArray0[1] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[2] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[3] = "ishashCode";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      Integer integer0 = new Integer(58);
      JSONObject jSONObject1 = jSONObject0.accumulate("@{^56NjI,z~h.A.+SdA", integer0);
      JSONObject jSONObject2 = jSONObject1.put("T", (double) 58);
      jSONObject2.optLong("Expected a ',' or ']'");
      jSONObject1.optInt("*SDeI07PA8P&d:Qm{h-", (-1766));
      jSONObject1.length();
      jSONObject0.optInt("getparseFloat");
      jSONObject2.toString();
      JSONObject jSONObject3 = jSONObject2.put("1NlM$c0^", (Object) "Iz/ykd &80Ex7&^ZR8k");
      jSONObject3.put("Unterminated string", (-1766));
      try { 
        jSONObject0.getBoolean("] is not a Boolean.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"] is not a Boolean.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0423923721872117
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "\\Y";
      HashMap<Integer, Double> hashMap0 = new HashMap<Integer, Double>();
      JSONObject.valueToString(jSONObject0);
      String string1 = "/}V`I2B:K4u:a\\.]$";
      long long0 = new Long((-1430L));
      int int0 = (-1329);
      jSONObject0.toString((-1329), (-1329));
      HashMap<Boolean, String> hashMap1 = new HashMap<Boolean, String>();
      Boolean boolean0 = new Boolean(false);
      hashMap1.put(boolean0, "{}");
      hashMap1.clone();
      jSONObject0.isNull("wheel.json.JSONObject@0000000001");
      try { 
        jSONObject0.getJSONObject("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.148168759528343
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      jSONObject0.optLong("");
      String string1 = "] is not a Boolean.";
      JSONObject jSONObject1 = jSONObject0.accumulate("] is not a Boolean.", "");
      String string2 = "";
      Byte byte0 = new Byte((byte) (-53));
      JSONObject jSONObject2 = jSONObject1.putOpt("", byte0);
      try { 
        jSONObject2.get(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7223717598118347
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      String string0 = "!";
      String string1 = "{]T:z/W#%z";
      jSONObject0.put("{]T:z/W#%z", (-1L));
      jSONObject0.optLong("!");
      int int0 = 330;
      Double.sum(0.0, (-1478.44204392));
      Double.min((-1L), 0L);
      int int1 = 3377;
      // Undeclared exception!
      jSONObject0.toString(330, 3377);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0349225515648977
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      jSONObject0.put("", (Collection) linkedList0);
      try { 
        jSONObject0.getJSONArray("n7u+9&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"n7u+9&\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.3979134655017993
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Float float0 = new Float(2139.88426879);
      Float.max(1804.3F, 0.0F);
      Float.sum(1804.3F, 1955.0502F);
      JSONObject.quote("tri");
      StringWriter stringWriter0 = new StringWriter(123);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "tri");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "tri");
      JSONObject.valueToString(stringWriter2, 32, 12);
      Integer integer0 = new Integer((-2001));
      String[] stringArray0 = new String[7];
      Integer.sum(2, 44);
      stringArray0[0] = "\"java.io.StringWriter@0000000001\"";
      stringArray0[1] = "\"java.io.StringWriter@0000000001\"";
      stringArray0[2] = "\"tri\"";
      stringArray0[3] = "\"java.io.StringWriter@0000000001\"";
      stringArray0[4] = "tri";
      stringArray0[5] = "tri";
      stringArray0[6] = "\"java.io.StringWriter@0000000001\"";
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.accumulate("\"java.io.StringWriter@0000000001\"", "tri");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.optLong("\"java.io.StringWriter@0000000001\"", (-3592L));
      jSONArray0.optJSONObject((-312));
      try { 
        jSONObject1.getJSONObject("\"java.io.StringWriter@0000000001\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"java.io.StringWriter@0000000001\\\"\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5962595271772138
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.remove("ro");
      jSONObject0.toString((-2345), 59);
      jSONObject0.optString("qjr", "qjr");
      jSONObject0.optString("gq^|gAZ+UA2!%]", "gq^|gAZ+UA2!%]");
      StringWriter stringWriter0 = new StringWriter(59);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "ro");
      stringWriter1.append((CharSequence) "qjr");
      Boolean boolean0 = Boolean.TRUE;
      JSONObject.valueToString(boolean0, 12, (-2345));
      Integer integer0 = new Integer(12);
      jSONObject0.accumulate("{\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"}", ".");
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.optJSONObject((-2345));
      try { 
        jSONObject0.getJSONObject("isrotateRight");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isrotateRight\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1284995961172783
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Float float0 = new Float(0.0F);
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONObject.quote("getvalueOf");
      StringWriter stringWriter0 = new StringWriter(123);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      stringWriter1.append((CharSequence) "getvalueOf");
      JSONObject.valueToString("getvalueOf", 12, 123);
      Integer integer0 = new Integer((-1888));
      jSONObject0.accumulate("\"getvalueOf\"", stringWriter1);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.optJSONObject(0);
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.1049561813316413
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[4];
      stringArray0[1] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[2] = "*SDeI07PA8P&d:Qm{h-";
      Integer integer0 = new Integer(58);
      Long.getLong("$_R9}EVn>*;v>");
      JSONObject.valueToString((Object) null, 58, 58);
      Integer integer1 = new Integer(58);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.accumulate((String) null, "ishashCode");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "{";
      JSONTokener jSONTokener0 = new JSONTokener("{");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.365697613094951
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", 1534L);
      jSONObject1.append("=e", "=e");
      jSONObject0.optLong("");
      jSONObject0.accumulate("] is not a Boolean.", "");
      String string0 = "";
      Byte byte0 = new Byte((byte) (-53));
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      try { 
        jSONObject2.get(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[4];
      stringArray0[1] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[2] = "*SDeI07PA8P&d:Qm{h-";
      Integer integer0 = new Integer(58);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("&?XWS");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of &?XWS
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = null;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Long long0 = new Long(2057L);
      JSONTokener jSONTokener0 = new JSONTokener("KWD\"%");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of KWD\"%
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.862651478716261
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "@(B";
      stringArray0[1] = "tko";
      stringArray0[2] = "JW'f`'^[bXjfTb";
      JSONObject jSONObject0 = new JSONObject("@(B", stringArray0);
      jSONObject0.optLong("{");
      Object object0 = jSONObject0.remove("LR=K8msp4@>.ybQ+");
      assertNull(object0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.7871225563668323
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "@(B";
      stringArray0[1] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[2] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[3] = "ishashCode";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      Integer integer0 = new Integer(58);
      JSONObject jSONObject1 = jSONObject0.accumulate("@{^56NjI,z~h.A.+SdA", integer0);
      JSONObject jSONObject2 = jSONObject1.put("T", (double) 58);
      jSONObject2.optLong("Expected a ',' or ']'");
      jSONObject1.optBoolean("ishashCode");
      jSONObject0.optJSONArray("*SDeI07PA8P&d:Qm{h-");
      jSONObject2.putOpt("istoString", jSONObject0);
      jSONObject0.optLong("iV", (-629L));
      Object object1 = JSONObject.NULL;
      Boolean boolean0 = Boolean.valueOf(false);
      jSONObject2.putOpt("A JSONObject text must begin with '{'", boolean0);
      Boolean.logicalOr(false, false);
      try { 
        jSONObject0.getJSONArray("iV");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"iV\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.212507239787805
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[0];
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('8');
      JSONObject.quote((String) null);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "\"\"");
      jSONArray0.write(stringWriter2);
      JSONObject jSONObject0 = new JSONObject("\"\"", stringArray0);
      try { 
        jSONObject0.get("issum");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"issum\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.1130531111068542
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[4];
      stringArray0[1] = "*SDeI07PA8P&d:Qm{h-";
      stringArray0[2] = "*SDeI07PA8P&d:Qm{h-";
      JSONObject jSONObject0 = new JSONObject((Object) "*SDeI07PA8P&d:Qm{h-");
      jSONObject0.optString("uMYag/_1p|H!f|IA");
      try { 
        jSONObject0.getLong("(_;>Jgo^cyh");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"(_;>Jgo^cyh\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.98516652855013
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.remove("ro");
      jSONObject0.toString((-2345), 59);
      jSONObject0.optString("qjr", "qjr");
      jSONObject0.optString("gq^|gAZ+UA2!%]", "gq^|gAZ+UA2!%]");
      jSONObject0.optDouble(".", (-1969.47));
      Float float0 = new Float((double) (-2345));
      JSONObject jSONObject1 = jSONObject0.append("in", float0);
      jSONObject0.toString((-2345), 108);
      Boolean boolean0 = Boolean.FALSE;
      jSONObject0.optDouble(".", 2842.647874357509);
      JSONObject.getNames(jSONObject1);
      Boolean boolean1 = Boolean.FALSE;
      JSONObject.getNames((Object) boolean1);
      jSONObject1.getString("in");
      try { 
        jSONObject0.getBoolean("ro");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"ro\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.0653541154735673
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[1];
      String string0 = "0SL/p_Q=n";
      jSONObject0.optDouble("");
      stringArray0[0] = "0SL/p_Q=n";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      String string1 = "";
      JSONObject jSONObject2 = jSONObject0.put("", (Map) null);
      Integer integer0 = new Integer((-880));
      JSONObject jSONObject3 = jSONObject0.accumulate("", integer0);
      JSONObject jSONObject4 = jSONObject2.append("0SL/p_Q=n", (Object) null);
      jSONObject4.toString((-880), (-880));
      Boolean boolean0 = Boolean.FALSE;
      jSONObject3.optDouble("", (-1565.5794595));
      JSONObject.getNames(jSONObject2);
      JSONObject.getNames((Object) boolean0);
      try { 
        jSONObject1.getString("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3607054698286567
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("Y", (Map) hashMap0);
      JSONObject.valueToString(jSONObject1);
      jSONObject1.optLong((String) null, 1651L);
      String string0 = "221Wc6N]7)JclMc";
      Boolean boolean0 = Boolean.valueOf(false);
      hashMap0.put(boolean0, (String) null);
      hashMap0.clone();
      JSONObject jSONObject2 = jSONObject0.put("221Wc6N]7)JclMc", 0);
      jSONObject1.put("wheel.json.JSONObject@0000000001", (Map) hashMap0);
      jSONObject0.append("nk2", "Y");
      try { 
        jSONObject2.getJSONArray("\f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.060649125069464
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Double, JSONArray> hashMap0 = new HashMap<Double, JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("-6G@:@p8r`", (Map) hashMap0);
      try { 
        jSONObject1.getLong("-6G@:@p8r`");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"-6G@:@p8r`\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2586012441898977
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Byte byte0 = new Byte((byte)5);
      JSONObject jSONObject0 = new JSONObject(byte0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "get";
      stringArray0[1] = "wk]zI&%SWqs";
      stringArray0[2] = "wheel.json.JSONObject$Null";
      stringArray0[3] = "1PFd-zS< q";
      stringArray0[4] = "istoUnsignedString";
      stringArray0[5] = "Wy%+/$G{\"";
      stringArray0[6] = "isvalueOf";
      stringArray0[7] = "VZ";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      double double0 = jSONObject1.optDouble("isvalueOf");
      assertEquals(1, jSONObject0.length());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.9280478396261032
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Byte byte0 = new Byte((byte)11);
      JSONObject.valueToString(byte0, 93, 323);
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(boolean0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      jSONObject0.optString("");
      try { 
        jSONObject0.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HashMap<Double, Integer> hashMap0 = new HashMap<Double, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optJSONArray((String) null);
      jSONObject0.toJSONArray((JSONArray) null);
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Integer integer0 = new Integer(1320);
      Integer.max((-306), 1320);
      Integer.compare(1320, (-1895));
      Integer.min(1320, (-2961));
      Integer.compare(1320, 1320);
      String string0 = JSONObject.numberToString(integer0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.815673827222315
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HashMap<String, JSONArray> hashMap0 = new HashMap<String, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.optBoolean("] is not a JSONObject.");
      assertFalse(boolean0);
      
      int int0 = jSONObject0.optInt("&ILjL/;");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.7150998460303954
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optLong(stringArray0[0]);
      Double double0 = new Double(0L);
      Byte byte0 = new Byte((byte)123);
      Object object1 = new Object();
      try { 
        jSONObject0.getInt("rF ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"rF \"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
