/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:58:12 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.JTree;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      variableHeightLayoutCache0.getPathForRow(2714);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getModel();
      JTree jTree0 = new JTree((TreeModel) null);
      metalTreeUI0.getPathBounds(jTree0, (TreePath) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("gH5*FyGS0Wnt c");
      Integer integer0 = new Integer(1609);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 825);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DatabaseObjectType.createNewDatabaseObjectType("lM(jd,ax");
      Icon icon0 = defaultTreeCellRenderer0.getOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("|ITKS(_zb)%,r");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "tnre.y!k4RF5", "lM(jd,ax");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6811293135849485
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("x&6~%<[ Y1j>=eq.*I", "x&6~%<[ Y1j>=eq.*I", "/i;,E=?^`2L)2>", "x&6~%<[ Y1j>=eq.*I", (-3), "x&6~%<[ Y1j>=eq.*I", (-3), (-3), 2065, 1759, "x&6~%<[ Y1j>=eq.*I", ".sPocAj#D", (-2105376123), 1759, "tq=6i$}P)]Eym");
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("tq=6i$}P)]Eym");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBUtil.replaceDistinctDataType(2000, tableColumnInfo0, (ISession) null);
      DBUtil.typesAreEquivalent(2121, (-2105376123));
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Integer integer0 = new Integer(256);
      DBUtil.isBinaryType(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "Eok8B??T.j", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "tq=6i$}P)]Eym", (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The Hiearchy.setDisableOverride method has been deprecated.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "getDriverName");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("K=~\"<=A=fn%j;", "K=~\"<=A=fn%j;", "getDriverName", (String) null, (-4), "K=~\"<=A=fn%j;", 1083, (-4), 59, 1003, "mF_l$h", "K=~\"<=A=fn%j;", (-6), (-2), "BQ3B");
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "7w;0*{", "7w;0*{");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "7w;0*{";
      stringArray0[1] = "7w;0*{";
      stringArray0[2] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[3] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[4] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[5] = "7w;0*{";
      stringArray0[6] = "7w;0*{";
      stringArray0[7] = " )";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6>UYf{Q");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrl_sql.plugins.dbcopy.dbcopy", "U{16", "DBUtil.error.unknowntype", (String) null, 1003, "2#Z6zg>WH'vS", (-545), 807, 3, 3, "|ITKS(_zb)%,r", "", (-451), 1246, "lM(jd,ax");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("U{16", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("|ITKS(_zb)%,r");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      assertTrue(boolean0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Integer integer0 = new Integer((-545));
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6>UYf{Q");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("(`a_Q3LCOz.r", "", "It~~-I[T3JX)H", "", 3, "net.sourceforge.squirrl_sql.plugins.dbcopy.dbcopy", 807, 1082, 1082, 1003, "|ITKS(_zb)%,r", (String) null, 1003, 63, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("2#Z6zg>WH'vS");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer1.getOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("!fc9$wj");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "]6MYpX.i1h6l*ngmE", "lM(jd,ax");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "2#Z6zg>WH'vS", (ITableInfo) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, (String) null, (String) null);
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "childColumn", "R9zz#i<S4-", "\"J2uua*c@kA", (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("X{,", "xmxXcekm7_!4Y=vW,J", "", (String) null, 16, "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", 3, 2100, 3, 3, (String) null, (String) null, 3, 1250, "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("IH=+[E>", "squeeze", (String) null, "", 297, "IH=+[E>", 588, 1017, 1017, (-1925), "j%4%3f%H", "X{,", 3, (-2347), (String) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType("Dd'8 |tAIbx^#Ji|t", (Icon) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("jLH)&YHr*");
      DatabaseObjectType.createNewDatabaseObjectType("WHERE sequence_name = upper(?)");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TRIGGER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[6];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("U", "jLH)&YHr*", "D#*(mt}j/i<*b");
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "U{16", "DBUtil.error.unknowntype", (String) null, 1003, "2#Z6zg>WH'vS", (-545), 807, 3, 3, "|ITKS(_zb)%,r", "", (-451), 1246, "lM(jd,ax");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("|ITKS(_zb)%,r");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.setPasteMenuEnabled(true);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "sqrt", "/Vi;,E=?^`2LT)2>");
      arrayList0.add((ITableInfo) null);
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBUtil.typesAreEquivalent(5377, 88);
      DBUtil.typesAreEquivalent(3, (-6187));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("N^#ZETe/u", "%&H", "org.jfree.data.category.SlidingCategoryDataset", "", 2219, "%&H", 52, (-669), 2433, 32700, "", "getDriverName", 2219, (-3583), "D6aW$d/)w,zK4smkd");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("org.jfree.data.category.SlidingCategoryDataset");
      ImageIcon imageIcon0 = new ImageIcon("E");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "org.jfree.data.category.SlidingCategoryDataset";
      objectArray0[1] = (Object) tableColumnInfo0;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType("org.jfree.data.category.SlidingCategoryDataset", (Icon) null);
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "%&H";
      objectArray0[4] = (Object) tableColumnInfo0;
      objectArray0[5] = (Object) "E";
      objectArray0[6] = (Object) "%&H";
      JTree jTree0 = new JTree(objectArray0);
      imageIcon0.setImageObserver(jTree0);
      imageIcon0.getIconHeight();
      DatabaseObjectType.createNewDatabaseObjectType("%&H", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      variableHeightLayoutCache0.getPathForRow((-3145));
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("$\"a aevZ%%NFgFN#$", "g*nO", "", "clob", 3297, "", 3348, 2485, 3232, 1841, "U{16", "g*nO", 2001, (-2013265917), (String) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setApplicationFiles(applicationFileWrappersImpl0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin1, tableColumnInfo0, "|dr", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The Hiearchy.setDisableOverride method has been deprecated.");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Integer integer0 = new Integer((-73));
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "Ane(C'z)C0YbM?6");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("X~{,", "X~{,", "X~{,", "Qs", 2100, "X~{,", 1017, 1017, 2100, 999, "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", "", 1250, 999, "xmxXEcekm7_!4Y=vW,J");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", "", "The Hiearchy.setDisableOverride method has been deprecated.", "character_length", 2100, "X~{,", 25, 1017, 510, (-1925), "The Hiearchy.setDisableOverride method has been deprecated.", "X~{,", 32739, 0, "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("Qs, character_length", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("^zKKUSo.q=fuHk}0e", "", "org.jfree.data.category.SlidingCategoryDataset", "org.jfree.data.category.SlidingCategoryDataset", 1017, "org.jfree.data.category.SlidingCategoryDataset", 791, (-6187), 1, 1925, "org.jfree.data.category.SlidingCategoryDataset", ".Handler", (-2), (-1395), "");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("!fc9$wj", "org.jfree.data.category.SlidingCategoryDataset", "FrontBase", "select first 1 ", (-478), "FrontBase", 32739, 1, 4010, (-508), "Invalid 'index': ", "org.jfree.data.category.SlidingCategoryDataset", (-2), (-6187), "abjg9-,");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      tableColumnInfoArray0[0] = tableColumnInfo1;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("select first 1 , org.jfree.data.category.SlidingCategoryDataset", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.USER;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.PRIMARY_KEY;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      boolean boolean0 = DBUtil.typesAreEquivalent(2532, 2);
      assertFalse(boolean0);
      
      DBUtil.typesAreEquivalent(2, 93);
      boolean boolean1 = DBUtil.typesAreEquivalent(2, 2532);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(vector0);
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "*$U<Fn", (-399), "getDriverName", 2147483645, 2291, 5, 1185, "/Vi;,E=?^`2L)2>", "getDriverName", (-745), 2061, "");
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis(5);
      DBUtil.setLastStatement("getDriverName");
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      variableHeightLayoutCache0.getPathForRow((-3145));
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getModel();
      JTree jTree0 = new JTree((TreeModel) null);
      metalTreeUI1.getPathBounds(jTree0, (TreePath) null);
      metalTreeUI1.getCollapsedIcon();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("1!<DNo)i3cryhp", "U>;", "", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ISession iSession0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/Vi;,E=?^`2L)2>");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("/Vi;,E=?^`2L)2>", "/Vi;,E=?^`2L)2>", "/Vi;,E=?^`2L)2>", "/Vi;,E=?^`2L)2>", 93, "2#Z6zg>WH'vS", 4166, 4166, (-488), 4166, "2#Z6zg>WH'vS", "/Vi;,E=?^`2L)2>", 93, (-488), "2#Z6zg>WH'vS");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("2#Z6zg>WH'vS");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      DBUtil.replaceDistinctDataType((-488), tableColumnInfo0, (ISession) null);
      DBUtil.typesAreEquivalent((-669), 376);
      String string0 = null;
      DBUtil.fixCase((ISession) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, (String) null, " ADD FOREIGN KEY (", 4166);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "getDriverName";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("getDriverName", "getDriverName", "getDriverName", "getDriverName", (-669), "getDriverName", (-669), (-669), 0, 2877, "Q(", "getDriverName", (-669), (-669), "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-93);
      byteArray0[2] = (byte)28;
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-104);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      vector0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(vector0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getDisabledIcon();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("U", "The 'item' index is out f bounds.", "U", "The 'item' index is out f bounds.", 1003, (String) null, 506, 1894, 7, 1003, " CASCADE", ". Using 'length'", (-1717986916), (-1717986916), "5DY:Br{H]7");
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis(7);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.665051708997462
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getDestSession();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("rownumber() over(", "0", "gz9K", "End of parsing for \"", 2061, "menuitem.", 2061, 2061, (-2322), 2061, " CASCADE", "", 2061, 2061, "");
      DBUtil.replaceDistinctDataType(824, tableColumnInfo0, (ISession) null);
      int int0 = 612;
      DBUtil.typesAreEquivalent(612, (-2322));
      DBUtil.fixCase((ISession) null, "");
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "0", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Bk-YqzXxT.=", 1800);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "";
      String string1 = "Upv=a=VPkHhkYLx$";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sy{}H$7");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("sy{}H$7");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.USER;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.PRIMARY_KEY;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.USER;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "Dd'8 |tAIbx^#Ji|t", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("sBUti4.error.binPclobfailure", "getUserName", "V&g_l\"X4vK<ij!IRp", "sBUti4.error.binPclobfailure", 2828, "getUserName", (-328), (-526), 4842, 600, "getUserName", "+-c%@B+$\"3rgHg", 600, 3098, "sBUti4.error.binPclobfailure");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.USER;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SEQUENCE;
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertTrue(list1.isEmpty());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      vector0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(vector0);
      List<ITableInfo> list1 = DBUtil.convertObjectToTableList(vector0);
      assertNotSame(list1, list0);
      assertFalse(list1.isEmpty());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(")_Ob{B6qIR(trJ5", "O\"6T", ";9lMm\"::h~C", "_+=%fos[fOWWy\n$", 784, "aAp", 5, (-1432), (-3259), 129, "aAp", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 22, 2000, "l5\n3-k");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getExecutionLogFile();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil dBUtil0 = new DBUtil();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "aAp", "g*nO", "g*nO", 2000, "g*nO", 60, (-1700), 2000, (-155), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "g*nO", 2, 2005, "g*nO");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(2692, tableColumnInfo0, (ISession) null);
      assertEquals(2692, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      ImageIcon imageIcon0 = new ImageIcon();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("?", "TABLE", "Upv=a=VPHhkYLx$", "sRF)", 1734, "gB>?=[#.OkVW", (-1495), 1, Integer.MIN_VALUE, 1734, "TABLE", "TABLE", 510, 1734, "(`a_Q3LCOz.r");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("Upv=a=VPHhkYLx$", "sBUti4.error.binPclobfailure", "PJ!", "", 510, "sBUti4.error.binPclobfailure", 1734, (-1495), 3, 4166, "?", "sRF)", 798, (-1495), "Ui{e%}'NmGzYg`\"LIQ");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.gui.PreferencesPanel$3", "Ui{e%}'NmGzYg`\"LIQ", "Sc66O(f", "(`a_Q3LCOz.r", 798, ").d`54rY0SL/p_Q=n,", 585, (-486), 3, 798, "FNm", " ", 585, (-4054), " ");
      tableColumnInfoArray0[2] = tableColumnInfo1;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "JlD;cv/*0=O,GiDJ", "Upv=a=VPHhkYLx$");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "Range[", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ISession iSession0 = null;
      String string0 = "2#Z6zg>WH'vS";
      int int0 = (-488);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "", 0, "2#Z6zg>WH'vS", 4166, 4166, (-488), 4166, "2#Z6zg>WH'vS", "", 0, (-488), "2#Z6zg>WH'vS");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("localtime", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string1 = "jOPT.";
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("2#Z6zg>WH'vS");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil dBUtil0 = new DBUtil();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "/Vi;,E=?^`2L)2>", "/Vi;,E=?^`2L)2>", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-3432), "iYx", (-3432), 240, (-1686), (-6), "iYx", "", (-6), 70, "*#@y<84kv");
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-3432), int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "Q(", "", " from ", (-669), "", 2412, 2412, 18, 1, "org.jfree.data.category.SlidingCategoryDataset", "Q(", (-494), 502, "!fc9$wj");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl1);
      int int0 = (-4674);
      Integer integer0 = new Integer((-4674));
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, ").d`54rY0SL/p_Q=n,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ISession iSession0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Dd'8 |tAIbx^#Ji|t", "V7wL/:lXpd", "V7wL/:lXpd", "U", 2048, "^jL)&YdHrV*", 1609, 1609, (-3299), 2048, "L]dJ8);@#", "^jL)&YdHrV*", (-1442), 2945, "org.hibernate.dialect.HSQLDialect$1");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType("^jL)&YdHrV*");
      DatabaseObjectType.createNewDatabaseObjectType("WHERE sequence_name = upper(?)");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PROC_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2048, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      variableHeightLayoutCache0.getPathForRow((-3145));
      metalTreeUI0.getPathBounds((JTree) null, (TreePath) null);
      metalTreeUI0.getCollapsedIcon();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("gftDriverName", "", "gftDriverName");
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(") - table ", "U5r{h6({=KS.< ", (String) null, "key", 0, "dd MMMM yyyy", (byte)1, (byte)1, (byte)1, 254, "key", "=JP ==W3", 2000, (-896), "=JP ==W3");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl1);
      Integer integer0 = new Integer((-137));
      assertEquals((-137), (int)integer0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The Hiearchy.setDisableOverride method has been deprecated.");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "getDriverName");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, ")4c6t/-J|_%@", ")4c6t/-J|_%@", ",s3% DjEE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getDisabledIcon();
      Integer integer0 = new Integer(271);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "C*\"D`aQ*H1KB|cd", "C*\"D`aQ*H1KB|cd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The Hiearchy.setDisableOverride method has been deprecated.");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "+-c%@B+$\"3rgHg", "+-c%@B+$\"3rgHg", "sBUti4.error.binPclobfailure");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "0j78lMGz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " that matched ", (ISession) null, false, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setAutoCommitEnabled(true);
      dBCopyPreferenceBean0.setWriteScript(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBUtil.setLastStatementValues(">D\"c&b|-';M7");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "NZGlT]N,8P";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("NZGlT]N,8P", (String) null, "={vXwnFKgB:PN%", "XrL 8=rTle8.5E;@", 1457, ">D\"c&b|-';M7", 3116, 441, 3116, 1809, (String) null, ">D\"c&b|-';M7", 3116, (-122), "NZGlT]N,8P");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, ">D\"c&b|-';M7", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-21);
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte) (-98);
      byteArray0[4] = (byte) (-2);
      byteArray0[5] = (byte) (-48);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("q*Wg+", "net.sourceforge.squirrel_sql.fw.dialects.DerbyDialectExt$DerbyDialectHelper", "");
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall(")}{$Tt", (-1447), (int) (byte) (-28));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      variableHeightLayoutCache0.getPathForRow((-3145));
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.getPathBounds((JTree) null, (TreePath) null);
      metalTreeUI0.getCollapsedIcon();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "]+39(Xx^m", "-'9y%G;iwJ\"KX[HA:", (String) null, 1731);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
