/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:34:26 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.742229682624608
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.consume((-3240));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.086774953946162
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('E');
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.dollar();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer1.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.isIdentifierStartChar('E');
      Token token6 = xPathLexer1.doubleColon();
      assertEquals("co", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals("m.", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("ba?e-Y:H>?");
      Token token9 = xPathLexer2.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("ba", token9.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.191479439617341
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setXPath(":z2");
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("/d9uN^`Z4\"bO_GfUV2g");
      xPathLexer1.or();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.notEquals();
      xPathLexer1.div();
      xPathLexer1.setXPath("ee Zc?RE");
      xPathLexer0.isIdentifierStartChar('L');
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals("ee", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("Zc", token9.getTokenText());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals("?RE", token11.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6582880030804117
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals("o", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer1.notEquals();
      xPathLexer1.div();
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals(".w", token6.getTokenText());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(")");
      Token token8 = xPathLexer3.nextToken();
      assertEquals(2, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8950465447217524
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer0.at();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer1.dots();
      xPathLexer0.isIdentifierChar('{');
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer1.dots();
      assertEquals("z", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer("rZI:rp$eDx=#L");
      Token token5 = xPathLexer2.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("r", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer2.leftBracket();
      assertEquals("Z", token7.getTokenText());
      
      xPathLexer0.setXPath("y5@znw|]\"Z6,:Zu");
      XPathLexer xPathLexer5 = new XPathLexer();
      boolean boolean0 = xPathLexer5.isIdentifierStartChar('1');
      assertFalse(boolean0);
      
      Token token8 = xPathLexer3.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals("y5", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer4.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals("@", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9816609417376663
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("ee Zc?RE");
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals("e", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('E');
      Token token4 = xPathLexer1.comma();
      assertEquals("e", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.dollar();
      boolean boolean0 = xPathLexer1.hasMoreChars();
      xPathLexer0.and();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.setXPath("Ish%:xlNX>fB?9");
      boolean boolean1 = xPathLexer1.isIdentifierStartChar('E');
      assertTrue(boolean1 == boolean0);
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals(" Z", token7.getTokenText());
      
      Token token8 = xPathLexer1.notEquals();
      assertEquals("c?", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("Ish%:xlNX>fB?9", token10.getTokenText());
      assertNotSame(token10, token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6251482263776413
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer2.not();
      assertEquals("o", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer("biFDvbfK9{l@}");
      Token token1 = xPathLexer3.leftBracket();
      assertEquals("b", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer2.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer2.notEquals();
      xPathLexer3.div();
      boolean boolean0 = xPathLexer3.isIdentifierStartChar('');
      assertFalse(boolean0);
      
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("EP", token3.getTokenText());
      
      Token token4 = xPathLexer2.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("o>", token4.getTokenText());
      
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals("]", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.029754124376293
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.setXPath("ee Zc?RE");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      xPathLexer0.isIdentifierStartChar('E');
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      xPathLexer0.dollar();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      xPathLexer0.setXPath("ee Zc?RE");
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('E');
      assertTrue(boolean1 == boolean0);
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("ee", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("c?", token7.getTokenText());
      
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("RE", token9.getTokenText());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals("R", token10.getTokenText());
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("E", token11.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9567194121441158
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      Token token0 = xPathLexer0.at();
      assertEquals("y", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("@", token1.getTokenText());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('{');
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer1.dots();
      assertEquals("@", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("\"", token4.getTokenText());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("rZI:rp$eDx=#L");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer3.setXPath("@N");
      boolean boolean0 = xPathLexer2.isIdentifierStartChar('`');
      assertFalse(boolean0);
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("|]", token7.getTokenText());
      
      Token token8 = xPathLexer3.notEquals();
      assertEquals("@N", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer2.nextToken();
      Token token10 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      assertEquals("", token10.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6816705488921657
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer1.not();
      assertEquals("o", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer1.or();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.at();
      assertEquals("`", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer1.div();
      xPathLexer1.setXPath(">.IHdMy|`");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('t');
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(9, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9849148080792953
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer0.number();
      xPathLexer0.literal();
      xPathLexer0.at();
      xPathLexer0.at();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.isIdentifierChar('`');
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer1.hasMoreChars();
      xPathLexer0.and();
      Token token6 = xPathLexer1.minus();
      assertEquals("5", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("y5@znw|]\"Z6,:Zu");
      xPathLexer2.hasMoreChars();
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("y5", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      Token token9 = xPathLexer3.notEquals();
      assertEquals("y5", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer2.number();
      assertEquals(30, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      Token token11 = xPathLexer4.nextToken();
      assertEquals("y5", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4239246113448467
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8957941780536645
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(31, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals("om.werken.saxpath.XPathLexer", token4.getTokenText());
      assertNotNull(token4);
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("r", token6.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('1');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("[ ", token7.getTokenText());
      
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals("(", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.914271988017205
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(".", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("rken.saxpath.XPathLexer", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.setXPath("Z5!9!-~K");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('1');
      assertFalse(boolean0);
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("Z5", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("!", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.056537423460494
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.setXPath("h|NAoHXVK{%A");
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("|", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('_');
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("N", token7.getTokenText());
      
      boolean boolean1 = xPathLexer1.hasMoreChars();
      assertFalse(boolean1 == boolean0);
      
      xPathLexer1.and();
      xPathLexer1.minus();
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer1.setXPath("Bmn%*6]}E9Ka\"a{");
      xPathLexer1.isIdentifierStartChar('E');
      Token token9 = xPathLexer0.doubleColon();
      assertEquals("Ao", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals("HX", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer1.nextToken();
      assertEquals(15, token12.getTokenType());
      assertEquals("Bmn", token12.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.109317374420157
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.setXPath(":z2");
      Token token2 = xPathLexer0.dots();
      assertEquals(":", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("z", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("2", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("}%ig]Tc)Mgb!");
      xPathLexer1.hasMoreChars();
      xPathLexer0.and();
      Token token5 = xPathLexer1.minus();
      assertEquals("}", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("}%ig]Tc)Mgb!");
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("}", token6.getTokenText());
      
      xPathLexer0.setXPath("@dM3");
      xPathLexer0.isIdentifierStartChar('E');
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("%i", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("ee Zc?RE");
      Token token8 = xPathLexer2.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals("ee", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer1.plus();
      assertEquals("%", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0234125474293756
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2466));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.029953098984445
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.setXPath("h|NAoHXVK{%A");
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("h", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("|", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('_');
      assertTrue(boolean0);
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("N", token7.getTokenText());
      
      xPathLexer1.hasMoreChars();
      xPathLexer1.and();
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer1.setXPath("Bmn%*6]}E9Ka\"a{");
      xPathLexer1.isIdentifierStartChar('E');
      Token token10 = xPathLexer1.notEquals();
      assertEquals("Bm", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer1.number();
      assertEquals("", token11.getTokenText());
      assertEquals(30, token11.getTokenType());
      
      xPathLexer1.nextToken();
      Token token12 = xPathLexer1.getPreviousToken();
      assertEquals("n", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3815430152282797
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qbT 5lhysI#Ij");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("q", token0.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.at();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("qbT 5lhysI#Ij");
      xPathLexer1.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer1.dots();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.at();
      xPathLexer1.leftParen();
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.setXPath("qbT 5lhysI#Ij");
      xPathLexer0.consume();
      xPathLexer0.setXPath("d7tN5-%@gEV{P$8");
      xPathLexer0.and();
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      assertEquals("d7tN5-", token7.getTokenText());
      
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.764510331864812
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("as");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.notEquals();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(',');
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("com.werken.saxpath.Token", token6.getTokenText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.311348482002313
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer1.not();
      xPathLexer1.or();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer2.notEquals();
      xPathLexer2.div();
      xPathLexer0.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.doubleColon();
      Token token0 = xPathLexer3.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.91037833911598
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer0.setXPath("h|NAoHXVK{%A");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('D');
      assertTrue(boolean0);
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token9);
      
      xPathLexer0.dots();
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer0.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer0.star();
      assertEquals(20, token14.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0203728657625866
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.setXPath("ee Zc?RE");
      Token token1 = xPathLexer0.dots();
      assertEquals("e", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals(" Z", token3.getTokenText());
      
      xPathLexer0.at();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.notEquals();
      assertEquals("RE", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.dots();
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.identifier();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer2.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer1.rightBracket();
      assertEquals(4, token12.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.648962315091145
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertNotNull(token3);
      
      xPathLexer0.literal();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.dots();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.at();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer1.at();
      Token token9 = xPathLexer1.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer1.isIdentifierChar('|');
      xPathLexer1.and();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token11 = xPathLexer2.colon();
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8905988124986222
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("U", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.at();
      assertEquals("W", token2.getTokenText());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.setXPath("AUBWW");
      xPathLexer0.hasMoreChars();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("AU", token8.getTokenText());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("BW", token9.getTokenText());
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("W", token11.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9371041541141945
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer1.not();
      assertEquals("o", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer1.or();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.at();
      assertEquals("`", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer1.div();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('t');
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("lE", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("P", token6.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5068077022515487
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dots();
      int int0 = (-754);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-754));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5278189087235026
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.endPosition();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.endPosition();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.div();
      xPathLexer0.setXPath("");
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7386087627874756
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.comma();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("n", token3.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.hasMoreChars();
      Token token4 = xPathLexer0.at();
      assertEquals("w", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("|]", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.comma();
      assertEquals("\"", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("Z6", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.824871104342604
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer0.literal();
      xPathLexer0.at();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6886150029108078
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f,nl=");
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.colon();
      assertEquals(",", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.star();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftParen();
      assertEquals(1, token12.getTokenType());
      
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6963147511590722
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer1.endPosition();
      xPathLexer1.leftParen();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.2216390372997767
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer0.or();
      xPathLexer1.notEquals();
      xPathLexer1.div();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.415022343461395
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifier();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.minus();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('');
      assertTrue(boolean0);
      
      xPathLexer0.and();
      xPathLexer0.getXPath();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.221715010332512
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      Token token0 = xPathLexer0.comma();
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("U", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("BW", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("W", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer1.div();
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.operatorName();
      char char0 = xPathLexer0.LA(27);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.1817436439975193
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer0.getXPath();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.mod();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9722244055348153
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("BW", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("W", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.star();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("+dlOd'M6S");
      xPathLexer1.and();
      xPathLexer1.relationalOperator();
      xPathLexer1.or();
      xPathLexer1.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer2.slashes();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("AUBWW");
      xPathLexer3.operatorName();
      Token token10 = xPathLexer3.identifierOrOperatorName();
      assertEquals("AUBWW", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer1.slashes();
      assertEquals("d", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token12 = xPathLexer4.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.630216592237646
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-449));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.093129087593622
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("W", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("W", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("AUBWW");
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.033369637154314
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      Token token0 = xPathLexer0.comma();
      assertEquals("A", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.slashes();
      assertEquals("W", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.mod();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5359223967879723
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e)(");
      Token token0 = xPathLexer0.minus();
      assertEquals("e", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("(", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.notEquals();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(',');
      assertFalse(boolean0);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.1161756574231925
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7819677597292505
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      Token token0 = xPathLexer0.comma();
      assertEquals("A", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("U", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.consume();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.star();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftParen();
      assertEquals(1, token14.getTokenType());
      
      Token token15 = xPathLexer0.minus();
      assertEquals(6, token15.getTokenType());
      
      Token token16 = xPathLexer0.leftBracket();
      assertEquals(3, token16.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.702475393603916
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.at();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.setXPath("h|NAoHXVK{%A");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("h", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertNotNull(token6);
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer2.colon();
      assertEquals(18, token11.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("\"[YPR@9+Nc_r");
      xPathLexer0.minus();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token12 = xPathLexer4.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0668853119033748
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qbT 5lhysI#Ij");
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.at();
      Token token0 = xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('`');
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.getPreviousToken();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7563140706330707
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftParen();
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.198039004127157
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer1.not();
      xPathLexer1.or();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer1.div();
      xPathLexer1.comma();
      xPathLexer1.doubleColon();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9170118055113847
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.and();
      xPathLexer0.dollar();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.287644934658517
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qbT 5lhysI#Ij");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("q", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("hy", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      Token token6 = xPathLexer0.comma();
      assertEquals("s", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("I#", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.2315771463431613
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("as");
      Token token0 = xPathLexer0.not();
      assertEquals("a", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6842721902623454
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.star();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8300201619499366
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.at();
      assertEquals("`", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer1.div();
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("lE", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Po", token5.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.564694078227725
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.dots();
      xPathLexer0.identifier();
      xPathLexer2.dots();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.566845939005292
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifier();
      xPathLexer0.at();
      xPathLexer0.minus();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.div();
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals("[ ", token9.getTokenText());
      
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2247552477901027
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("as");
      Token token0 = xPathLexer0.not();
      assertEquals("a", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("s", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.or();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("as");
      Token token3 = xPathLexer1.identifier();
      assertEquals("as", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.844631048383504
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
  }
}
