/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:03:21 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.text.NumberFormat;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = 1.0E-6;
      doubleArray0[2] = 2456.3;
      doubleArray0[3] = 1.015625;
      doubleArray0[4] = 2456.3;
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(9, 9);
      matrix0.lu();
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, false, booleanArray0);
      assertNotSame(doubleArray0, doubleArray2);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)56;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-74);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-36);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      byteArray0[6] = (byte)80;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)80;
      byteArray1[1] = (byte)56;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      optimization_DynamicIntArray0.addElement(5);
      optimization_DynamicIntArray0.addElement(857);
      optimization_DynamicIntArray0.addElement(6);
      assertEquals(3, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[14];
      doubleArray0[0] = (-493.2);
      doubleArray0[1] = 1.0E-6;
      doubleArray0[2] = 2456.3;
      doubleArray0[3] = 1.015625;
      doubleArray0[4] = 1.0E-6;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[6] = true;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("bX5b)!");
      linkedList1.listIterator();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1, locale_FilteringMode0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("J%!B:Lg*i");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "J%!B:Lg*i");
      printWriter0.println((Object) mockPrintWriter0);
      printWriter0.print((-1244L));
      printWriter0.print("bX5b)!");
      printWriter0.print(0.0F);
      printWriter0.print(' ');
      printWriter0.append('b');
      printWriter0.write("J%!B:Lg*i");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(82, 82);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = 1.0E-6;
      doubleArray0[2] = 2456.3;
      doubleArray0[3] = 1.015625;
      doubleArray0[4] = 2456.3;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[6] = true;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("bX5b)!");
      LinkedList<String> linkedList2 = new LinkedList<String>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("J%!B:Lg*i");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "bX5b)!");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("bX5b)!", false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileOutputStream0);
      mockPrintWriter1.println(false);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter0);
      Locale locale0 = Locale.CHINESE;
      Locale locale1 = Locale.GERMANY;
      NumberFormat.getIntegerInstance(locale1);
      NumberFormat.getInstance(locale0);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[][] doubleArray0 = new double[5][8];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-493.2);
      doubleArray1[1] = 1.0E-6;
      doubleArray1[2] = 2456.3;
      doubleArray1[3] = 1.015625;
      doubleArray1[4] = 2456.3;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("}eka.core.Optimization$DynamicIntArra'");
      mockPrintWriter0.printf("Ij77", (Object[]) doubleArray0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "}eka.core.Optimization$DynamicIntArra'");
      mockPrintWriter0.format("A*B\n", (Object[]) doubleArray0);
      printWriter0.println(false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      Locale locale0 = Locale.TAIWAN;
      NumberFormat.getIntegerInstance(locale0);
      NumberFormat.getInstance(locale0);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray0);
      assertArrayEquals(new double[] {(-493.2), 1.0E-6, 2456.3, 1.015625, 2456.3}, doubleArray1, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-493.2);
      doubleArray0[1] = 1.0E-6;
      doubleArray0[2] = 2456.3;
      doubleArray0[3] = 1.015625;
      doubleArray0[4] = 2456.3;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[6] = true;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("bX5b)!");
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1, locale_FilteringMode0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("weka.core.Optimization$DynamicIntArray");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "weka.core.Optimization$DynamicIntArray");
      printWriter0.println((Object) mockPrintWriter0);
      printWriter0.print((-1244L));
      printWriter0.print(0.0F);
      double[][] doubleArray1 = new double[1][2];
      doubleArray1[0] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray1);
      double[] doubleArray2 = new double[0];
      double[] doubleArray3 = Optimization.solveTriangle(matrix0, doubleArray2, true, booleanArray0);
      assertFalse(doubleArray3.equals((Object)doubleArray2));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[][] doubleArray0 = new double[2][8];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-493.2);
      doubleArray1[1] = (-33.333254950854815);
      doubleArray1[2] = 2456.3;
      doubleArray1[3] = 1.015625;
      doubleArray1[4] = 2456.3;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("}eka.core.Optimization$DynamicIntArra'");
      mockPrintWriter0.print(0L);
      mockPrintWriter0.printf("Ij77", (Object[]) doubleArray0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "}eka.core.Optimization$DynamicIntArra'");
      printWriter0.println(false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      Locale locale0 = Locale.CHINESE;
      NumberFormat.getIntegerInstance(locale0);
      NumberFormat.getInstance(locale0);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, false, booleanArray0);
      assertEquals(5, doubleArray2.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      int int0 = 0;
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement((-1709));
      optimization_DynamicIntArray0.removeElementAt(0);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.elementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.core.Optimization$DynamicIntArray", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(25, 6, 1.000000000003638);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 25;
      doubleArray0[1] = 1.000000000003638;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 1.000000000003638;
      doubleArray0[4] = (-0.5);
      doubleArray0[5] = (double) 25;
      doubleArray0[6] = (-0.5);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = 1.0E-6;
      doubleArray0[2] = 2456.3;
      doubleArray0[3] = 1.015625;
      doubleArray0[4] = 2456.3;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[6] = true;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("bX5b)!");
      LinkedList<String> linkedList2 = new LinkedList<String>();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("J%!B:Lg*i");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "J%!B:Lg*i");
      printWriter0.println((Object) mockPrintWriter0);
      printWriter0.print((-1244L));
      Locale locale0 = Locale.ENGLISH;
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) true;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) printWriter0;
      objectArray0[3] = (Object) mockPrintWriter0;
      objectArray0[4] = (Object) "";
      mockPrintWriter0.format(locale0, "", objectArray0);
      mockPrintWriter0.print("bX5b)!");
      printWriter0.print(0.0F);
      printWriter0.print(' ');
      mockPrintWriter0.println(0.0F);
      printWriter0.append('b');
      printWriter0.write("J%!B:Lg*i");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(82, 82);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-58);
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte) (-7);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte) (-69);
      byteArray0[7] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A+B\n");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 551;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Random.setNextRandom(551);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Random.setNextRandom(551);
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(551);
      optimization_DynamicIntArray0.copy();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(13);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(1);
      int int0 = optimization_DynamicIntArray0.size();
      assertEquals(0, int0);
  }
}
