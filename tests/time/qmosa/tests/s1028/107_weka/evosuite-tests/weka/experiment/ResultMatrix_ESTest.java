/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 12:58:38 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.452818511704379
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.setCountWidth((-428));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.toStringKey();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.setCount(1, 1732.1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.setStdDevPrec(1099);
      resultMatrixHTML0.globalInfo();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.trimString("#######\n", (-738));
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixLatex0.setSignificanceWidth(174);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setRowHidden((-112), false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixLatex1.listOptions();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixLatex0.toStringKey();
      resultMatrixCSV0.isStdDev(0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.377205725834523
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.setRemoveFilterName(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML0.m_RowNameWidth = (-2153);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(1);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      int[][] intArray3 = new int[5][7];
      intArray3[0] = intArray2;
      intArray3[1] = intArray1;
      intArray3[2] = intArray1;
      intArray3[3] = intArray2;
      intArray3[4] = intArray2;
      resultMatrixGnuPlot0.setSummary(intArray0, intArray3);
      resultMatrixGnuPlot0.setColName(788, (String) null);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4079712799306496
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "-row-name-width <int>";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixGnuPlot0.getMeanPrec();
      resultMatrixCSV0.getOptions();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.m_PrintRowNames = true;
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixSignificance0.printRowNamesTipText();
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixCSV0.getStdDevPrec();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5778688032572177
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.isMean(13);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixCSV0.padString(".#~,Ab&TK@WXmMwf", 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance1.toStringKey();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.globalInfo();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.assign(resultMatrixPlainText0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixHTML1.toStringKey();
      String[][] stringArray1 = new String[7][1];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      String[] stringArray2 = new String[9];
      stringArray2[0] = "v";
      stringArray2[1] = "v";
      stringArray2[2] = "The width of the significance indicator (0 = optimal).";
      stringArray2[3] = "v";
      stringArray2[4] = "*";
      stringArray2[5] = "v";
      stringArray2[6] = " ";
      stringArray2[7] = "v";
      stringArray2[8] = " ";
      stringArray1[3] = stringArray2;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      resultMatrixSignificance2.getColSize(stringArray1, 2767);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.918496659832408
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot1.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getSummaryTitle(1);
      resultMatrixGnuPlot1.getDisplayName();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder(resultMatrixGnuPlot1.m_ColOrder);
      resultMatrixHTML0.getDisplayName();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixHTML0.getVisibleRowCount();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.149852140410445
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setPrintRowNames(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixSignificance0.removeFilterName(" |^S,[KG9");
      resultMatrixLatex0.getRowName(0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.427732663453986
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.setCountWidth((-428));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.toStringKey();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.setCount(1, 1732.1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.setStdDevPrec(1099);
      resultMatrixHTML0.globalInfo();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.trimString("#######\n", (-738));
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixLatex0.setSignificanceWidth(4);
      resultMatrixLatex0.setRowHidden(1120, false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.getMean((-996), 0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.468557763270002
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot1.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getSummaryTitle(1);
      resultMatrixGnuPlot1.getDisplayName();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.setCountWidth(1190);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixGnuPlot1);
      resultMatrixHTML1.getRevision();
      resultMatrixHTML1.toStringMatrix();
      resultMatrixHTML0.setColNameWidth(0);
      resultMatrixGnuPlot0.assign(resultMatrixGnuPlot1);
      resultMatrixGnuPlot1.getStdDevPrec();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.605358265597048
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.removeFilterName("LaTeX");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1200, 0);
      resultMatrixHTML0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot1);
      int[][] intArray0 = new int[0][6];
      resultMatrixHTML1.setRanking(intArray0);
      resultMatrixLatex0.toString();
      resultMatrixLatex0.setRowNameWidth(2243);
      resultMatrixGnuPlot0.toStringMatrix();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[5];
      try { 
        resultMatrixPlainText0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.4603008419724097
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.m_ColNameWidth = (-2768);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 15);
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setCount(13, 0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      resultMatrixHTML2.listOptions();
      resultMatrixHTML1.setStdDevPrec((-1204));
      resultMatrixHTML2.globalInfo();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 35);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = (-1204);
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 2;
      intArray0[0] = intArray1;
      resultMatrixHTML1.m_Wins = intArray0;
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.trimString("v", 29);
      resultMatrixLatex0.setSignificanceWidth((-571));
      resultMatrixLatex0.setRowHidden(1, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setColHidden((-652), false);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4813383724217632
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.m_ColNameWidth = (-2768);
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.m_MeanPrec = (-1238);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.assign(resultMatrixLatex0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.setColNameWidth((-1238));
      resultMatrixLatex0.isMean((-2));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.716977410445205
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.m_StdDevPrec = 2;
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.doubleToString(Double.NaN, 1);
      String[][] stringArray0 = new String[0][7];
      // Undeclared exception!
      try { 
        resultMatrixCSV1.getColSize(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      stringArray0[1] = "(";
      boolean boolean0 = false;
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.addHeader("oS x2GUMjPvFL*Fj", "Bmn%*6]}E9Ka\"a{");
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RowNameWidth = 0;
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 2054);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8388423653824213
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot1.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getSummaryTitle(1);
      resultMatrixGnuPlot1.getDisplayName();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot1.setRowNameWidth(2);
      resultMatrixGnuPlot1.trimString("=!PO,:@RW3/Rxp4zAZ)", (-1));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(845, 50);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.418013560007489
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[3] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setCount(43, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.setStdDevPrec(1);
      resultMatrixHTML0.globalInfo();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.trimString("row-name-width", (-1));
      resultMatrixLatex0.setSignificanceWidth(2);
      resultMatrixLatex0.setRowHidden(2, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixLatex0.setColHidden(0, false);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4605590959070716
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.setCountWidth((-428));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.toStringKey();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.setCount(1, 1732.1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.setStdDevPrec(1099);
      resultMatrixHTML0.globalInfo();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.trimString("#######\n", (-738));
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixLatex0.setSignificanceWidth(174);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex1.setRowHidden(790, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixLatex0.listOptions();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixLatex1.toStringKey();
      resultMatrixCSV0.isStdDev(25);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0832919392205507
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[5] = true;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.padString(" ", 82);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance1.setRowOrder(intArray0);
      resultMatrixSignificance1.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance2.setColOrder((int[]) null);
      resultMatrixSignificance0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getCount((-3329));
      resultMatrixCSV0.meanPrecTipText();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixCSV0.setSignificance(1640, 1, 0);
      resultMatrixHTML0.getDefaultStdDevPrec();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5267932265889477
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.setRemoveFilterName(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML0.m_RowNameWidth = (-2153);
      resultMatrixHTML0.m_RowNameWidth = 1;
      resultMatrixHTML0.setShowAverage(true);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.getRevision();
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.removeFilterName("v^/>_");
      resultMatrixHTML0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance0);
      int[][] intArray0 = new int[2][2];
      intArray0[0] = null;
      intArray0[1] = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML1.setRanking(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.536693391792683
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      stringArray0[2] = "";
      stringArray0[3] = "v";
      stringArray0[4] = "";
      stringArray0[5] = "#RuL";
      stringArray0[6] = "";
      stringArray0[7] = "";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixGnuPlot0.getColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 95);
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(95);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5391776936104162
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.m_RemoveFilterName = true;
      resultMatrixHTML0.getSummaryTitle((-3341));
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixHTML0.setStdDevWidth((-3341));
      resultMatrixHTML0.trimString("T", 178);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(2);
      resultMatrixGnuPlot0.getRevision();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ")";
      stringArray0[1] = "8034";
      stringArray0[2] = "v";
      stringArray0[3] = "8034";
      stringArray0[4] = "v";
      stringArray0[6] = "";
      stringArray0[6] = "";
      stringArray0[7] = ")";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixHTML0.toStringKey();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.462744794215186
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.setCountWidth((-428));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.toStringKey();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.setCount(1, 1732.1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.setStdDevPrec(1099);
      resultMatrixHTML0.globalInfo();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.trimString("#######\n", 1);
      resultMatrixLatex0.setSignificanceWidth(174);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex1.setRowHidden(0, false);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML1);
      resultMatrixLatex1.listOptions();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixLatex0.toStringKey();
      resultMatrixCSV0.isStdDev(2);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0980848941162398
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearSummary();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 97;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setPrintRowNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.m_RankingWins = intArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 0);
      resultMatrixCSV0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(2729, 0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixCSV0.setMeanPrec(2);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getRowName(373);
      resultMatrixSignificance0.getSignificanceCount(17, 1);
      resultMatrixSignificance0.getRowCount();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1279384779350576
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getMeanPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.isMean(16);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      String string0 = resultMatrixCSV0.padString("*", 11);
      assertEquals("*          ", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance1.toStringKey();
      resultMatrixSignificance0.setColOrder((int[]) null);
      resultMatrixSignificance1.globalInfo();
      resultMatrixHTML0.getCount(77);
      resultMatrixCSV1.meanPrecTipText();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixCSV0.setSignificance(1, 3450, 2);
      int int0 = resultMatrixHTML0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, int0);
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.348518057301798
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearSummary();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 97;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setCountWidth(2);
      resultMatrixPlainText0.toStringMatrix();
      assertEquals(2, resultMatrixPlainText0.getCountWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(21, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixLatex0);
      resultMatrixLatex0.setRowNameWidth((-331));
      resultMatrixLatex0.clear();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4880626149513585
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.isMean(13);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixCSV0.padString(".#~,Ab&TK@WXmMwf", 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance1.toStringKey();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.globalInfo();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.assign(resultMatrixPlainText0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML1.setColNameWidth(1);
      resultMatrixHTML1.setRowNameWidth(1276);
      resultMatrixPlainText0.toStringSummary();
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.510305126649146
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getMeanPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "]";
      stringArray0[3] = "v";
      stringArray0[4] = "";
      stringArray0[3] = " ";
      stringArray0[6] = "v";
      stringArray0[8] = "";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixHTML1.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.940778916570201
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.m_ColNameWidth = (-2768);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowHidden(1, false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getRevision();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixPlainText0.setPrintColNames(false);
      String string0 = resultMatrixPlainText0.padString(" ", 142, true);
      assertEquals("                                                                                                                                              ", string0);
      
      resultMatrixPlainText0.getSignificance(903, 110);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.toStringKey();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9515510913485015
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(37, 1);
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.setMeanWidth((-764));
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.setRowHidden(196, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.padString(" ", 1, false);
      resultMatrixPlainText0.getSignificance(2, 40);
      resultMatrixCSV1.getDefaultPrintRowNames();
      String string0 = resultMatrixCSV1.toStringKey();
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals("Key,\n[1],col0\n[2],col1\n[3],col2\n[4],col3\n[5],col4\n[6],col5\n[7],col6\n[8],col7\n[9],col8\n[10],col9\n[11],col10\n[12],col11\n[13],col12\n[14],col13\n[15],col14\n[16],col15\n[17],col16\n[18],col17\n[19],col18\n[20],col19\n[21],col20\n[22],col21\n[23],col22\n[24],col23\n[25],col24\n[26],col25\n[27],col26\n[28],col27\n[29],col28\n[30],col29\n[31],col30\n[32],col31\n[33],col32\n[34],col33\n[35],col34\n[36],col35\n[37],col36\n", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9814908274600618
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 180);
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.setMeanWidth(175);
      resultMatrixCSV0.setRowHidden(175, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.getSignificance(257, 1);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.toStringKey();
      assertEquals(175, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateRowNames(true);
      int int0 = 58;
      resultMatrixCSV0.setMeanWidth(58);
      boolean boolean0 = false;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.setRowHidden((-423), false);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-1), 81);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.2009787753955496
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.isMean(16);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixCSV0.padString(".#~,Ab&TK@WXmMwf", 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance1.toStringKey();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      resultMatrixSignificance0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.globalInfo();
      resultMatrixHTML0.getCount(4344);
      resultMatrixCSV0.meanPrecTipText();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixCSV0.setSignificance(703, (-1913), 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML1.setColNameWidth(3307);
      assertEquals(3307, resultMatrixHTML1.getColNameWidth());
      
      String string0 = resultMatrixCSV0.padString("s8p0T)~&p1W9qR", (-2797), true);
      assertEquals("s8p0T)~&p1W9qR", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8512878697251027
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot1.m_ColOrder = intArray0;
      String string0 = resultMatrixGnuPlot0.getSummaryTitle(1);
      assertEquals("b", string0);
      
      resultMatrixGnuPlot1.getDisplayName();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder(resultMatrixGnuPlot1.m_ColOrder);
      resultMatrixHTML0.getDisplayName();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      resultMatrixGnuPlot1.setCount((-25), 1);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.512347726659238
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getSummaryTitle((-3341));
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setStdDevWidth(1);
      resultMatrixHTML0.trimString("", 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixGnuPlot0.getRevision();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      stringArray0[2] = "#RuL";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5431564824565784
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearSummary();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 97;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setPrintRowNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.m_RankingWins = intArray0;
      resultMatrixLatex0.m_RankingDiff = null;
      resultMatrixLatex0.getDisplayName();
      resultMatrixSignificance0.removeFilterName("");
      resultMatrixLatex0.getRowName(0);
      assertEquals(97, resultMatrixLatex0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      assertEquals(2, stringArray0.length);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      
      String[] stringArray1 = new String[4];
      stringArray1[0] = "v";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = " ";
      ResultMatrixSignificance.main(stringArray1);
      resultMatrixSignificance0.getDefaultPrintRowNames();
      resultMatrixLatex0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.toStringSummary();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.8873482859664716
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9754132858715296
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.m_ShowAverage = true;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.toStringKey();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setCountWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.4975662355554515
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_PrintColNames = false;
      resultMatrixCSV0.setPrintColNames(false);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.301583328662346
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 3);
      int[] intArray0 = new int[2];
      int[][] intArray1 = new int[6][3];
      intArray1[0] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 1012.7;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 1;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      intArray1[5] = intArray0;
      resultMatrixSignificance0.setSummary(intArray1, intArray1);
      assertEquals(3, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8467446461636023
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2583);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.isRowName(1);
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 1203;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[5] = 1005;
      resultMatrixSignificance0.m_RemoveFilterName = true;
      intArray0[0] = intArray1;
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixLatex0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.716977410445205
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.m_StdDevPrec = 2;
      resultMatrixCSV1.getDefaultRowNameWidth();
      resultMatrixCSV0.doubleToString(Double.NaN, 1);
      String[][] stringArray0 = new String[0][7];
      int int0 = 0;
      // Undeclared exception!
      try { 
        resultMatrixCSV1.getColSize(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.0162949202815454
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      resultMatrixHTML0.addHeader("String should not finish with ", "(");
      resultMatrixHTML0.m_NonSigWins = intArray0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray1[6] = 3;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.367153040612227
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearSummary();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 97;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setPrintRowNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.m_RankingWins = intArray0;
      resultMatrixLatex0.m_RankingDiff = null;
      resultMatrixLatex0.getDisplayName();
      resultMatrixSignificance0.removeFilterName("");
      resultMatrixLatex0.getRowName(2);
      resultMatrixSignificance0.toArray();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      int[][] intArray1 = new int[5][7];
      int[] intArray2 = new int[1];
      intArray2[0] = 2;
      intArray1[0] = intArray2;
      resultMatrixHTML0.toArray();
      resultMatrixGnuPlot0.getOptions();
      intArray1[1] = null;
      intArray1[2] = null;
      intArray1[3] = resultMatrixLatex0.m_RankingWins;
      intArray1[4] = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.5397193820373123
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.m_RowNames = null;
      String[] stringArray0 = new String[0];
      resultMatrixHTML0.m_ColNames = stringArray0;
      ResultMatrixHTML.main(resultMatrixHTML0.m_ColNames);
      int[][] intArray0 = new int[1][1];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixLatex0.toString();
      resultMatrixHTML0.getRevision();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.4718423972152865
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.m_ColNameWidth = (-2768);
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.m_MeanPrec = (-1238);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.assign(resultMatrixLatex0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setSignificance(0, 78, 1562);
      resultMatrixHTML0.getDefaultStdDevPrec();
      assertEquals((-1238), resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixGnuPlot0.m_Mean = null;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.padString((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.92887993459394
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixGnuPlot0.m_Mean = null;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 0;
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      intArray0[7] = 2;
      intArray0[8] = 2;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      resultMatrixGnuPlot0.setShowAverage(true);
      resultMatrixGnuPlot0.getColHidden(0);
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertTrue(resultMatrixGnuPlot0.getShowAverage());
      
      int[][] intArray1 = new int[7][5];
      intArray1[0] = resultMatrixGnuPlot0.m_RankingLosses;
      intArray1[1] = resultMatrixGnuPlot0.m_RankingLosses;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = resultMatrixGnuPlot0.m_RankingLosses;
      intArray1[5] = intArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSignificance(0, 1, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = resultMatrixHTML0.getDefaultStdDevPrec();
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.093333797064729
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getMeanPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      boolean boolean0 = resultMatrixHTML0.isMean(16);
      assertTrue(boolean0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      String string0 = resultMatrixCSV1.padString("lkT7%5m8|F9i|", 1);
      assertEquals("l", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String string1 = resultMatrixSignificance1.toStringKey();
      assertEquals("Key:\n", string1);
      
      resultMatrixSignificance1.setColOrder((int[]) null);
      resultMatrixSignificance0.globalInfo();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixHTML0.getCount(2);
      resultMatrixCSV0.meanPrecTipText();
      resultMatrixPlainText0.printColNamesTipText();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixCSV0.setSignificance(2, 0, 2);
      resultMatrixHTML0.getDefaultStdDevPrec();
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0472770782777543
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getMeanPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      boolean boolean0 = resultMatrixHTML0.isMean(16);
      assertTrue(boolean0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      String string0 = resultMatrixCSV1.padString("", (-2210));
      assertEquals("", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance1.toStringKey();
      resultMatrixSignificance1.setColOrder((int[]) null);
      resultMatrixSignificance1.globalInfo();
      resultMatrixHTML0.getCount(3171);
      String string1 = resultMatrixCSV1.meanPrecTipText();
      assertEquals("The number of decimals after the decimal point for the mean.", string1);
      
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixHTML0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearSummary();
      int[][] intArray0 = new int[7][7];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = (-1289);
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 2;
      resultMatrixSignificance0.setColOrder(intArray3);
      intArray4[3] = 2;
      intArray4[4] = (-1289);
      intArray4[5] = (-3187);
      intArray4[6] = 0;
      intArray4[7] = 2;
      intArray4[8] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 1;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray5[3] = 1;
      intArray0[4] = intArray5;
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getRowCount();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(97, (-1289));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.4597896244450155
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCountWidth(5);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixLatex0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.setColNameWidth(1);
      resultMatrixLatex0.setSignificance(2, 2, 5);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9552088755878536
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.listOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixHTML0.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4362346809837407
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      
      resultMatrixPlainText0.setCountWidth(26);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.assign(resultMatrixPlainText0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.setColNameWidth(0);
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.1731027011044644
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 3);
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringRanking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.4824892572905672
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.m_ColNameWidth = 0;
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.m_MeanPrec = (-1238);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.assign(resultMatrixLatex0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.setColNameWidth(1);
      assertEquals((-1238), resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3872338921454332
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixSignificance0.removeFilterName(" ");
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getRowName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toArray();
      resultMatrixGnuPlot1.getOptions();
      resultMatrixLatex1.setRowNameWidth(97);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex1.clear();
      assertFalse(resultMatrixLatex1.getRemoveFilterName());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.040438727359169
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      stringArray0[1] = "(";
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.addHeader("oS x2GUMjPvFL*Fj", "Bmn%*6]}E9Ka\"a{");
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.getDefaultShowStdDev();
      resultMatrixPlainText0.setColHidden(1, false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_RowNameWidth = 4950;
      resultMatrixLatex0.setEnumerateRowNames(true);
      resultMatrixLatex0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 2054);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2619492310059965
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toString();
      resultMatrixLatex0.addHeader("\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n", "S&60owk3u:V[z9t{f5");
      resultMatrixLatex0.getRowName(1111);
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setStdDevPrec(1111);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(4414, 1111);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.493953733925866
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v";
      resultMatrixHTML0.m_ColNameWidth = (-2768);
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.m_MeanPrec = (-1238);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.assign(resultMatrixLatex0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      assertEquals((-1238), resultMatrixHTML0.getMeanPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getSignificanceCount((-1977), 2);
      resultMatrixSignificance0.getRowCount();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5311731979228638
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCountWidth(5);
      resultMatrixGnuPlot0.toStringSummary();
      String[][] stringArray0 = new String[3][5];
      String[] stringArray1 = new String[4];
      stringArray1[0] = ":-kmhcqfy0HL#z";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "v";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = " ";
      stringArray2[1] = " ";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 0, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.4354628530862756
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCountWidth(5);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixLatex0);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.setColNameWidth(1);
      resultMatrixGnuPlot0.toArray();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.5433263791664626
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixGnuPlot0.m_Mean = null;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 0;
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      intArray0[7] = 2;
      intArray0[8] = 2;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      resultMatrixGnuPlot0.setShowAverage(true);
      resultMatrixGnuPlot0.getColHidden(0);
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      int[][] intArray1 = new int[7][5];
      intArray1[0] = resultMatrixGnuPlot0.m_RankingLosses;
      intArray1[1] = resultMatrixGnuPlot0.m_RankingLosses;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = resultMatrixGnuPlot0.m_RankingLosses;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.2303500116319586
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.m_RemoveFilterName = false;
      resultMatrixHTML0.getSummaryTitle((-3341));
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixHTML0.getDefaultMeanPrec();
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.trimString("", 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixGnuPlot0.getRevision();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      resultMatrixHTML0.removeFilterName((String) null);
      resultMatrixHTML0.setColNameWidth(630);
      resultMatrixHTML0.setRowNameWidth(1);
      assertEquals(2, resultMatrixHTML0.getStdDevWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      resultMatrixGnuPlot0.setSize(2279, 60);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-3034), (-3034));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.491139346745748
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getMeanPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.isMean(16);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.setCountWidth(1634);
      assertEquals(1634, resultMatrixPlainText2.getCountWidth());
      
      resultMatrixPlainText1.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText3);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(0, 4391);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 1);
      resultMatrixHTML2.assign(resultMatrixLatex1);
      resultMatrixHTML2.getRevision();
      resultMatrixHTML2.assign(resultMatrixCSV1);
      resultMatrixHTML2.toStringMatrix();
      resultMatrixHTML2.setColNameWidth((-2442));
      resultMatrixCSV1.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixCSV1.getCountWidth());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.0829126413850387
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = resultMatrixCSV0.getMeanPrec();
      assertEquals(2, int0);
      
      resultMatrixCSV0.WIN_STRING = null;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = resultMatrixGnuPlot0.getSummaryTitle(1);
      assertEquals("b", string0);
      
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixCSV0.LEFT_PARENTHESES = " ";
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.clearHeader();
      int int1 = resultMatrixCSV0.getCountWidth();
      assertEquals(0, int1);
      
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      boolean boolean0 = resultMatrixCSV0.isAverage(2);
      assertFalse(boolean0);
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 25;
      intArray0[4] = 0;
      intArray0[5] = 50;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.getDisplayName();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertFalse(resultMatrixGnuPlot0.getEnumerateColNames());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.439696420228484
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1860);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixPlainText0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.setColNameWidth(25);
      assertEquals(25, resultMatrixHTML0.getColNameWidth());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.267702965736289
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot1.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getSummaryTitle(1);
      resultMatrixGnuPlot1.getDisplayName();
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixHTML1);
      resultMatrixHTML1.getRevision();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML3 = new ResultMatrixHTML();
      resultMatrixHTML3.setColNameWidth((-255));
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(2, (-3306));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.0054514728347828
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.setMeanWidth((-15));
      resultMatrixCSV0.setRowHidden((-1), false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.padString("9(", 1, false);
      resultMatrixPlainText0.getSignificance(1, 903);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getSummaryTitle(0);
      resultMatrixSignificance0.setCountWidth(1608);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1608);
      resultMatrixLatex0.setSignificanceWidth((-1));
      resultMatrixLatex0.setRowHidden((-425), false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex((-86), (-969));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.857861352378952
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(44);
      resultMatrixHTML0.getSignificance(2394, 2394);
      resultMatrixHTML0.setMean(0, 0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean boolean0 = false;
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2;
      intArray3[1] = 2394;
      intArray3[2] = 1;
      intArray3[3] = 2;
      intArray3[4] = 2;
      intArray3[5] = 2;
      intArray0[2] = intArray3;
      resultMatrixLatex0.m_Significance = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7878762280875957
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(5, 5);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixHTML0.isStdDev(2);
      Vector<Object> vector1 = new Vector<Object>();
      resultMatrixHTML0.m_HeaderKeys = vector1;
      resultMatrixHTML0.setMean(1, 0, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(5, 577);
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearSummary();
      int[][] intArray0 = new int[7][7];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = (-1289);
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray4[4] = (-1289);
      intArray4[5] = (-3187);
      intArray4[6] = 0;
      intArray4[7] = 2;
      intArray4[8] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 1;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray5[3] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 2491;
      intArray6[1] = (-3187);
      intArray6[2] = (-3187);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[7];
      intArray7[0] = 0;
      intArray7[1] = 2491;
      intArray7[2] = 2;
      intArray7[3] = (-3187);
      intArray7[4] = 1;
      intArray7[5] = 2491;
      intArray7[6] = 2;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.016338903617261
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.setMeanWidth(0);
      resultMatrixCSV0.setRowHidden((-1), false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.RIGHT_PARENTHESES = "m^&R>Ib.G]1#k'PYlyY";
      resultMatrixPlainText0.padString("9(", 1, false);
      resultMatrixPlainText0.getSignificance(1, 903);
      resultMatrixCSV0.getDefaultPrintRowNames();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV1.toStringKey();
      resultMatrixCSV0.getMean((-1), (-1));
      resultMatrixCSV0.getPrintRowNames();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize((-2090), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.083171962227478
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getMeanPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      boolean boolean0 = resultMatrixHTML0.isMean(16);
      assertTrue(boolean0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixCSV1.padString("*", 1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String string0 = resultMatrixSignificance1.toStringKey();
      assertEquals("Key:\n", string0);
      
      resultMatrixSignificance1.setColOrder((int[]) null);
      resultMatrixSignificance0.globalInfo();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      double double0 = resultMatrixHTML0.getCount(2);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0.0, double0, 0.01);
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      
      resultMatrixCSV0.meanPrecTipText();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.159816995443754
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v";
      stringArray0[1] = ")";
      stringArray0[3] = " ";
      stringArray0[4] = "(";
      stringArray0[5] = ")";
      stringArray0[6] = ")";
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.trimString("-ranking data not set-", 1567);
      resultMatrixPlainText0.m_Wins = null;
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setSignificanceWidth(2690);
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(573, 1);
      resultMatrixSignificance0.m_ColNames = resultMatrixPlainText0.m_RowNames;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringRanking();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.0271671474095863
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.setMeanWidth((-15));
      resultMatrixCSV0.setRowHidden((-1), false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.getRevision();
      String string0 = resultMatrixPlainText0.padString("9(", 1, false);
      assertEquals("9", string0);
      
      int int0 = resultMatrixPlainText0.getSignificance(1, 903);
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateRowNames());
      
      resultMatrixCSV0.getDefaultPrintRowNames();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 2);
      String string1 = resultMatrixCSV1.toStringKey();
      assertEquals("Key,\n[1],col0\n[2],col1\n", string1);
      
      resultMatrixCSV0.getMean(2, 2);
      resultMatrixCSV0.getPrintRowNames();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.519936910952663
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth(289);
      resultMatrixHTML0.showStdDevTipText();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = "(";
      stringArray0[2] = "*";
      stringArray0[3] = "(";
      stringArray0[4] = "(";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.4106726708288035
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCountWidth(5);
      resultMatrixPlainText0.toStringMatrix();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(50, 0);
      resultMatrixLatex0.RIGHT_PARENTHESES = "Dataset                                            1 col0   \n------------------------------------------------------------\nrow0                                                (0)    |\n------------------------------------------------------------\nv/ /*                                                      |\n";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.assign(resultMatrixLatex0);
      resultMatrixLatex0.setRowNameWidth(0);
      resultMatrixLatex0.clear();
      assertFalse(resultMatrixLatex0.getPrintColNames());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.4507178856854592
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[5];
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixCSV0.m_HeaderKeys = vector0;
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = " ";
      stringArray0[3] = "[";
      resultMatrixCSV0.doubleToString(1598.81323, 319);
      stringArray0[4] = "[";
      resultMatrixCSV0.setOptions(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getRemoveFilterName();
      resultMatrixSignificance0.getDisplayRow(325);
      double[][] doubleArray0 = new double[5][7];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 319;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) (-1);
      doubleArray1[5] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 319;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = 1598.81323;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[3];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 325;
      doubleArray3[2] = (double) 325;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (double) 2;
      doubleArray4[2] = (double) 2;
      doubleArray4[3] = 1598.81323;
      doubleArray4[4] = 1598.81323;
      doubleArray4[5] = (double) 2;
      doubleArray4[6] = 2093.4032264224;
      doubleArray4[7] = (double) 0;
      doubleArray4[8] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = 1598.81323;
      doubleArray0[4] = doubleArray5;
      resultMatrixSignificance0.m_StdDev = doubleArray0;
      Vector<Object> vector1 = new Vector<Object>();
      resultMatrixSignificance0.m_HeaderKeys = vector1;
      resultMatrixSignificance0.listOptions();
      resultMatrixSignificance0.getRevision();
      assertEquals(0, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 5);
      resultMatrixLatex0.getRevision();
      double[][] doubleArray0 = new double[8][9];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (-269.82);
      doubleArray1[1] = (double) 5;
      doubleArray1[2] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = 0.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 5;
      doubleArray3[2] = (-269.82);
      doubleArray3[3] = 0.0;
      doubleArray3[4] = (-269.82);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = (double) 2;
      doubleArray4[1] = (double) 5;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = (-269.82);
      doubleArray5[2] = (-269.82);
      doubleArray5[3] = (double) 0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[8];
      doubleArray6[0] = 0.0;
      doubleArray6[1] = (double) 0;
      doubleArray6[2] = (double) 1;
      doubleArray6[3] = 0.0;
      doubleArray6[4] = (double) 5;
      doubleArray6[5] = (double) 2;
      doubleArray6[6] = (double) 1;
      doubleArray6[7] = (double) 5;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[3];
      doubleArray7[0] = 0.0;
      doubleArray7[1] = (double) 0;
      doubleArray7[2] = (double) 5;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[6];
      doubleArray8[0] = 0.0;
      doubleArray8[1] = (double) 1;
      doubleArray8[2] = (double) 2;
      doubleArray8[3] = (double) 0;
      doubleArray8[4] = (double) 2;
      doubleArray8[5] = (double) 2;
      doubleArray0[7] = doubleArray8;
      resultMatrixLatex0.m_StdDev = doubleArray0;
      resultMatrixLatex0.clear();
      resultMatrixLatex0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString((-1895.898014903049), (-830));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = (-1038);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 50;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = (-1038);
      intArray0[7] = (-1038);
      intArray0[8] = (-1038);
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.removeFilterName("");
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.doubleToString(1473.77, (-1038));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.030671341114024
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_ShowStdDev = false;
      resultMatrixLatex0.TIE_STRING = " ";
      resultMatrixLatex0.LEFT_PARENTHESES = " ";
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 0;
      resultMatrixLatex0.m_ColOrder = intArray0;
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.getColNameWidth();
      resultMatrixLatex0.setShowStdDev(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.LEFT_PARENTHESES = "   <tr><td align=\"center\"><b>&gt;-&lt;</b></td><td align=\"center\"><b>&gt;</b></td><td align=\"center\"><b>&lt;</b></td><td><b>Resultset</b></td></tr>\n";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixLatex0.toStringRanking();
      assertTrue(resultMatrixLatex0.getShowStdDev());
      
      resultMatrixGnuPlot0.padString(" ", 2);
      resultMatrixGnuPlot0.stdDevWidthTipText();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.658841686907302
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      assertTrue(resultMatrixPlainText0.getRemoveFilterName());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 3);
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 25);
      resultMatrixGnuPlot0.getColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringKey();
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.559224171662904
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 3);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.toString();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setColNameWidth(1);
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.0729838234645697
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_Counts = null;
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 0;
      resultMatrixPlainText0.getColName(0);
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 0;
      intArray0[7] = 2;
      intArray0[8] = 0;
      resultMatrixPlainText0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("", 1);
      double[][] doubleArray0 = new double[5][1];
      doubleArray0[0] = null;
      doubleArray0[1] = null;
      doubleArray0[2] = null;
      doubleArray0[3] = null;
      doubleArray0[4] = null;
      resultMatrixLatex0.m_StdDev = doubleArray0;
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.getDisplayName();
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.165917516496863
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      boolean[] booleanArray0 = new boolean[1];
      resultMatrixCSV0.m_RankingDiff = null;
      booleanArray0[0] = false;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.addHeader("(", "");
      resultMatrixCSV0.clear();
      resultMatrixCSV0.getDefaultStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.removeFilterName("hline\nend{tabular} \footnotesize par}\nend{table}");
      resultMatrixPlainText0.getRevision();
      resultMatrixCSV0.setRowOrder((int[]) null);
      resultMatrixCSV0.isAverage(0);
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      String[][] stringArray0 = new String[3][3];
      String[] stringArray1 = new String[2];
      stringArray1[0] = ")/}^_K:3(H_";
      stringArray1[1] = "(";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[3];
      stringArray2[0] = "hline\nend{tabular} \footnotesize par}\nend{table}";
      stringArray2[1] = "v";
      stringArray2[2] = " ";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[8];
      stringArray3[0] = "(";
      stringArray3[1] = "hline\nend{tabular} \footnotesize par}\nend{table}";
      stringArray3[2] = "v";
      stringArray3[3] = "hline\nend{tabular} \footnotesize par}\nend{table}";
      stringArray3[4] = "Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).";
      stringArray3[5] = "[";
      stringArray3[6] = "hline\nend{tabular} \footnotesize par}\nend{table}";
      stringArray3[7] = " ";
      stringArray0[2] = stringArray3;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 1551, false, false);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(0, int0);
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.1536055503086757
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearSummary();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 97;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setPrintRowNames(true);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.m_RankingWins = intArray0;
      resultMatrixLatex0.m_RankingDiff = null;
      resultMatrixLatex0.getDisplayName();
      String string0 = resultMatrixSignificance0.getColName(92);
      assertEquals("(93)", string0);
      
      resultMatrixSignificance0.removeFilterName("");
      String string1 = resultMatrixLatex0.getRowName(2);
      assertNull(string1);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(97, resultMatrixSignificance0.getVisibleColCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixSignificance0.toArray();
      int[][] intArray1 = new int[5][7];
      int[] intArray2 = new int[1];
      intArray1[0] = intArray2;
      intArray1[1] = null;
      intArray1[2] = null;
      intArray1[3] = resultMatrixLatex0.m_RankingWins;
      intArray1[4] = null;
      resultMatrixSignificance0.getDisplayName();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.5313550293210514
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_Counts = null;
      String string0 = resultMatrixPlainText0.getColName(0);
      assertEquals("(1) col0", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      stringArray0[3] = "A$)^;2s\"#+0 >~";
      stringArray0[4] = "(";
      stringArray0[5] = "(";
      stringArray0[6] = "(1) col0";
      stringArray0[7] = "(";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = resultMatrixGnuPlot0.getColNameWidth();
      assertEquals(50, int0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.3412756702982422
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCountWidth(239);
      resultMatrixPlainText0.toStringMatrix();
      String[][] stringArray0 = new String[0][6];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 21, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.1325933576956335
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String[][] stringArray0 = new String[2][4];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "v";
      resultMatrixGnuPlot0.toString();
      stringArray1[1] = "*";
      stringArray1[2] = " ";
      stringArray0[0] = stringArray1;
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      String[] stringArray2 = new String[3];
      stringArray2[0] = " ";
      int[][] intArray0 = new int[9][5];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray2[3] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 1;
      intArray3[1] = 191;
      intArray3[2] = 1;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray3[5] = (-1006);
      intArray3[6] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 2;
      intArray4[1] = 0;
      intArray4[2] = 2424;
      intArray4[3] = (-1006);
      intArray4[4] = 191;
      intArray4[5] = 0;
      intArray4[6] = (-1006);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 1;
      intArray5[1] = 7;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[0];
      intArray0[5] = intArray6;
      int[] intArray7 = new int[0];
      intArray0[6] = intArray7;
      int[] intArray8 = new int[7];
      intArray8[0] = 0;
      intArray8[1] = 2;
      intArray8[2] = (-1006);
      intArray8[3] = 190;
      intArray8[4] = 1;
      intArray8[5] = 2424;
      intArray8[6] = 2;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[6];
      intArray9[0] = (-1);
      intArray9[1] = 0;
      intArray9[2] = 0;
      intArray9[3] = 190;
      intArray9[4] = 190;
      intArray9[5] = 2;
      intArray0[8] = intArray9;
      resultMatrixGnuPlot0.m_Wins = intArray0;
      stringArray2[1] = "";
      stringArray2[2] = "";
      stringArray0[1] = stringArray2;
      int int0 = resultMatrixGnuPlot0.getColSize(stringArray0, 3, false, false);
      assertEquals(0, int0);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }
}
