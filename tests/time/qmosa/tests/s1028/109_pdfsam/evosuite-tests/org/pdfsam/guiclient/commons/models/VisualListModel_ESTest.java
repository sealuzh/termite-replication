/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:57:38 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.Button;
import java.awt.Frame;
import java.awt.GraphicsConfiguration;
import java.awt.HeadlessException;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ComponentSampleModel;
import java.awt.image.renderable.ParameterBlock;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.NavigableSet;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.CollectionOp;
import javax.media.jai.operator.FPXDescriptor;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0992975938210185
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[2];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray0[0] = 30000;
      intArray0[1] = 112;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nB7lm");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      AffineTransform.getShearInstance(3985.4260493691327, (-2866.6479935762195));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-2866.6479935762195));
      AffineTransform affineTransform1 = AffineTransform.getTranslateInstance((-2401.41), (-2401.41));
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-2401.41);
      doubleArray0[2] = 0.0;
      affineTransform1.inverseTransform((double[]) null, (-1323), doubleArray0, (-977), (-4453));
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key2, affineTransform1);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.data = null;
      visualListModel0.updateElementAt(13, (VisualPageListItem) null);
      visualListModel0.getSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 1118;
      int[] intArray0 = new int[7];
      intArray0[0] = 13;
      intArray0[1] = 1118;
      intArray0[2] = 13;
      intArray0[3] = 0;
      intArray0[4] = 13;
      intArray0[5] = 0;
      intArray0[6] = 13;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8287814661565047
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      NavigableSet<VisualPageListItem> navigableSet0 = treeSet0.descendingSet();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 7);
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements(navigableSet0);
      visualListModel0.moveDownIndex((-150));
      visualListModel0.elementsChanged();
      visualListModel0.updateElementAt((-150), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.moveDownIndex((-1));
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[7];
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualPageListItemArray1[3] = null;
      visualPageListItemArray1[5] = visualPageListItemArray1[3];
      visualPageListItemArray1[6] = null;
      visualListModel0.setData(visualPageListItemArray1);
      visualListModel0.getElements();
      int int0 = visualListModel1.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      vector0.add((Object) parameterBlock0);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      ParameterBlock parameterBlock2 = (ParameterBlock)parameterBlock1.clone();
      vector0.add((Object) parameterBlock1);
      Vector<Object> vector1 = new Vector<Object>();
      ParameterBlock parameterBlock3 = new ParameterBlock(vector0, vector1);
      Vector<Object> vector2 = parameterBlock2.getSources();
      parameterBlock0.setParameters(vector2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3288274798399655
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      vector0.add((Object) parameterBlock0);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      parameterBlock1.clone();
      vector0.add((Object) parameterBlock1);
      ParameterBlock parameterBlock2 = new ParameterBlock(vector0, vector0);
      ParameterBlock parameterBlock3 = new ParameterBlock(vector0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      ParameterBlock parameterBlock4 = new ParameterBlock(vector1, vector0);
      ParameterBlock parameterBlock5 = new ParameterBlock(vector0, vector0);
      Hashtable<RenderingHints.Key, DefaultTableModel> hashtable0 = new Hashtable<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.moveDownIndex(0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1662);
      intArray0[1] = (-1);
      intArray0[2] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      visualListModel0.getElementAt(0);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      assertEquals(0, priorityQueue0.size());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "bw8Ex BJy)jbr@p)d");
      int int0 = 3549;
      visualListModel0.data = null;
      int int1 = 325;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(3549, 325, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.moveUpIndex(1);
      int int1 = (-1);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1466, (-241));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1466) > toIndex(-241)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nB7lm");
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      vector0.add((Object) parameterBlock0);
      parameterBlock0.add(380L);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      ParameterBlock parameterBlock2 = new ParameterBlock(vector0, vector0);
      vector0.add((Object) parameterBlock0);
      vector0.add((Object) parameterBlock1);
      ParameterBlock parameterBlock3 = new ParameterBlock(vector0, vector0);
      ParameterBlock parameterBlock4 = new ParameterBlock(vector0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)72;
      byteArray0[3] = (byte) (-22);
      byteArray0[2] = (byte)0;
      visualListModel0.moveDownIndex(1540);
      // Undeclared exception!
      try { 
        visualListModel0.subList(3202, (int) (byte) (-22), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3202) > toIndex(-22)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8840527810511
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      NavigableSet<VisualPageListItem> navigableSet0 = treeSet0.descendingSet();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 7);
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements(navigableSet0);
      VisualPageListItem visualPageListItem0 = treeSet0.pollFirst();
      visualListModel0.moveDownIndex((-150));
      visualListModel0.elementsChanged();
      visualListModel0.updateElementAt((-150), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex((-1));
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[5] = visualPageListItem0;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) treeSet0);
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nB7lm");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer.getInteger("nB7lm");
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(intArray0, false);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.getElementAt(0);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultEditorKit_DefaultKeyTypedAction0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction1 = new DefaultEditorKit.DefaultKeyTypedAction();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        renderingHints0.put((Object) null, "fZlJPETsJ'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      int int0 = 34;
      intArray0[1] = 34;
      intArray0[1] = (-26);
      int int1 = (-77);
      visualListModel0.moveUpIndex((-705));
      visualListModel0.removeElements((-26), (-77), false);
      visualListModel0.moveDownIndex(34);
      int int2 = 1;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0168805991642629
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = new Object();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(469, (Collection<VisualPageListItem>) priorityQueue1);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      assertEquals(0, visualListModel3.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue1);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      assertFalse(visualListModel2.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2096058100845513
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel0.rotateClockwiseElements(intArray0);
      AffineTransform.getShearInstance(1.0, (-2866.6479935762195));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) (-1));
      double[] doubleArray0 = new double[0];
      affineTransform0.inverseTransform(doubleArray0, (-1664), doubleArray0, (-1323), (-1323));
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key2, sunHints_Key0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndex((-1664));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[1] = 34;
      intArray0[1] = 0;
      visualListModel0.addAllElements(34, (Collection<VisualPageListItem>) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      assertEquals("[]", stack0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      parameterBlock0.add((-1L));
      vector0.add((Object) parameterBlock0);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      ParameterBlock parameterBlock2 = new ParameterBlock(vector0, vector0);
      int int0 = 30;
      visualListModel0.getElementAt(30);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      String string0 = "X";
      Frame frame0 = null;
      try {
        frame0 = new Frame("X", (GraphicsConfiguration) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      vector0.add((Object) parameterBlock0);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      parameterBlock1.clone();
      vector0.add((Object) parameterBlock1);
      ParameterBlock parameterBlock2 = new ParameterBlock(vector0, vector0);
      ParameterBlock parameterBlock3 = new ParameterBlock(vector0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      ParameterBlock parameterBlock4 = new ParameterBlock(vector1, vector0);
      ParameterBlock parameterBlock5 = new ParameterBlock(vector0, vector0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Object object0 = new Object();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      parameterBlock0.add(155.45839F);
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((-37), (Collection<VisualPageListItem>) priorityQueue0);
      assertNotSame(priorityQueue0, priorityQueue1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.subList((-387), (-387));
      visualListModel0.subList((-2768), 162);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-2768), 162, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.521121651040067
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 1;
      visualListModel0.rotateClockwiseElements(intArray1);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.descendingSet();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      int[] intArray2 = new int[2];
      intArray2[0] = 1;
      intArray2[1] = 1;
      visualListModel0.reverseElements(intArray2);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveDownIndex(1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte) (-72);
      byteArray0[4] = (byte) (-120);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[5] = (byte)102;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.log4j.spi.LoggerFactory");
      byteArray0[6] = (byte) (-10);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.449792752728442
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.subList(0, 0);
      visualListModel0.clearData();
      visualListModel0.getElementAt(1093);
      int[] intArray0 = new int[5];
      intArray0[0] = 1093;
      intArray0[1] = 1093;
      intArray0[2] = 2253;
      intArray0[3] = 5;
      intArray0[4] = 1093;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.getElements();
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.subList(0, 0, false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertNotSame(visualListModel0, visualListModel1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Object object0 = new Object();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (-1662);
      intArray0[2] = 0;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel1.data = vector0;
      intArray0[3] = (-1662);
      intArray0[4] = 0;
      // Undeclared exception!
      try { 
        visualListModel1.subList(34, (-1021), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(34) > toIndex(-1021)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.descendingSet();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      HashSet<VisualPageListItem> hashSet1 = new HashSet<VisualPageListItem>(treeSet0);
      visualListModel0.appendAllElements(hashSet1);
      visualListModel0.reverseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>(priorityQueue0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.clone();
      visualListModel0.setData(vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      AffineTransform affineTransform0 = new AffineTransform(191.0F, 1.0F, 0.0F, 1229.56F, 191.0F, 1.0F);
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      AffineTransform affineTransform1 = AffineTransform.getTranslateInstance(0.0F, 0.0F);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform1, renderingHints0);
      BufferedImage bufferedImage0 = null;
      int int0 = 0;
      int int1 = (-1);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 5;
      intArray0[2] = 5;
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock1.getParameters();
      parameterBlock1.add((Object) vector1);
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      parameterBlock0.add((-2.7814534F));
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      vector1.addElement(pdfGraphics2D_HyperLinkKey0);
      visualListModel0.getValidElements();
      CollectionOp collectionOp0 = new CollectionOp("1<#x0", parameterBlock2, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"1<#x0\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2147340152127564
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.appendAllElements(linkedHashSet0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      int int0 = 34;
      intArray0[1] = 34;
      int int1 = 0;
      intArray0[1] = 0;
      int int2 = (-77);
      visualListModel0.moveUpIndex((-705));
      visualListModel0.removeElements(0, (-77), false);
      visualListModel0.moveDownIndex(34);
      int int3 = 1;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.042632211710285
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(2126);
      visualListModel0.removeElements(0, 1426, true);
      visualListModel0.moveDownIndex(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.removeElementAt(2, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.removeElements(5696, 0, false);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 7);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndex((-1096));
      visualListModel0.updateElementAt((-1096), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel1.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      BufferedImage bufferedImage0 = null;
      Rotation rotation0 = Rotation.DEGREES_270;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(Integer.MAX_VALUE, 1, false);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 558, false, "", "", rotation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1653);
      visualListModel0.subList((-1), (-1653));
      intArray0[1] = (-1);
      AffineTransform.getShearInstance((-2884.539), (-2694.0675855696));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      AffineTransform.getShearInstance(10.0, (-1344.55367710237));
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      ComponentSampleModel componentSampleModel0 = null;
      try {
        componentSampleModel0 = new ComponentSampleModel((-1653), (-1), 2592, 256, (-2707), (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ComponentSampleModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nB7lm");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      parameterBlock0.setParameters(vector0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (int) integerArray0[0];
      visualListModel0.undeleteElements(intArray1);
      assertEquals(1, intArray1.length);
  }
}
