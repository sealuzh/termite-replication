/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 10:54:24 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3384481491346487
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Integer integer0 = new Integer(0);
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.close();
      simpleNode0.dump((String) null, stringWriter0);
      stringWriter0.close();
      stringWriter0.flush();
      simpleNode0.toString((String) null);
      simpleNode0.setIdentifier("{");
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.dump("nullCompilationUnit", stringWriter0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'y';
      charArray0[1] = '9';
      charArray0[2] = ']';
      charArray0[3] = '`';
      charArray0[4] = 'l';
      charArray0[5] = '1';
      // Undeclared exception!
      try { 
        stringWriter0.write(charArray0, (-2028293384), (-2028293384));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2186637966972418
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CompilationUnit");
      StringWriter stringWriter0 = new StringWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.dump("", stringWriter0);
      simpleNode0.id = 1;
      stringWriter0.close();
      stringWriter0.flush();
      simpleNode0.toString("3e.{");
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.setIdentifier(";");
      simpleNode1.setIdentifier("*lshft");
      SimpleNode simpleNode2 = new SimpleNode(1);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit");
      simpleNode1.dump("*lshft", stringWriter1);
      simpleNode1.jjtSetParent(simpleNode0);
      SimpleNode simpleNode3 = new SimpleNode(21);
      simpleNode3.dump("*lshft", stringWriter1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1719783433741497
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Integer integer0 = new Integer(0);
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter(0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter1 = new StringWriter(0);
      char[] charArray0 = new char[1];
      stringWriter1.write(charArray0, 0, (int) integer0);
      simpleNode0.dump("", stringWriter1);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("CompilationUnit");
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.dump("CompilationUnit", stringWriter0);
      simpleNode0.jjtSetParent(simpleNode0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, 21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5161748174504592
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">");
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.append((CharSequence) "CompilationUnit", 0, 1);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("CompilationUnit");
      simpleNode0.setIdentifier("CompilationUnit");
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.dump("", stringWriter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      SimpleNode simpleNode1 = new SimpleNode(2);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.dump(">", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode1.jjtGetChild(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-4806));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4806
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3720499790128586
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(0);
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0, 0, 0);
      simpleNode0.toString("*lt");
      simpleNode0.setIdentifier(">");
      SimpleNode simpleNode1 = new SimpleNode((-4202));
      StringWriter stringWriter3 = new StringWriter();
      stringWriter0.flush();
      stringWriter3.flush();
      simpleNode0.dump("knT:1gLxFkJ};ssULR", stringWriter2);
      simpleNode1.dump((String) null, stringWriter1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Uj78lMGz");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "{");
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.flush();
      stringWriter2.flush();
      simpleNode0.dump("Uj78lMGz", stringWriter3);
      StringReader stringReader0 = new StringReader("rF2");
      stringReader0.reset();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("Uj78lMGz");
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      try { 
        javaParser0.EqualityExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: {
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.367504943932727
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      Integer integer0 = new Integer(0);
      int int0 = 0;
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.append((CharSequence) "CompilationUnit");
      StringWriter stringWriter1 = new StringWriter(0);
      char[] charArray0 = new char[0];
      stringWriter1.write(charArray0, 0, (int) integer0);
      simpleNode0.dump("", stringWriter1);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("a");
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.setIdentifier("CompilationUnit");
      simpleNode0.dump("CompilationUnit", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.toString("CompilationUnit");
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "CompilationUnit");
      simpleNode0.dump("CompilationUnitCompilationUnit :  : a : CompilationUnit", stringWriter2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0787466051710823
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ">");
      StringWriter stringWriter2 = new StringWriter(0);
      stringWriter1.append((CharSequence) "");
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0, 0, 0);
      simpleNode0.dump("<", stringWriter1);
      simpleNode0.toString("*lt");
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier("");
      SimpleNode simpleNode1 = new SimpleNode((-4202));
      StringWriter stringWriter3 = new StringWriter();
      stringWriter0.flush();
      stringWriter3.flush();
      simpleNode0.dump("knT:1gLxFkJ};ssULR", stringWriter2);
      StringReader stringReader0 = new StringReader("\">=\"");
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 4829);
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4573224391243074
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CompilationUnit");
      StringWriter stringWriter0 = new StringWriter(10);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit", 0, 0);
      simpleNode0.toString("CompilationUnit");
      simpleNode0.setIdentifier("&");
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.dump("CompilationUnit", stringWriter1);
      simpleNode0.dump("Literal", stringWriter0);
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.jjtAddChild(simpleNode0, 5410);
      simpleNode0.toString("CompilationUnitCompilationUnit");
      StringWriter stringWriter2 = new StringWriter();
      char char0 = 'R';
      StringWriter stringWriter3 = stringWriter0.append('R');
      stringWriter3.append((CharSequence) "CompilationUnitCompilationUnitCompilationUnit : &");
      StringWriter stringWriter4 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("CompilationUnit", stringWriter0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4293695403110283
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CompilationUnit");
      StringWriter stringWriter0 = new StringWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit", 0, 1);
      simpleNode0.dump("", stringWriter1);
      simpleNode0.id = 1;
      stringWriter1.flush();
      simpleNode0.toString("");
      simpleNode0.setIdentifier("0/");
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.dump("", stringWriter1);
      simpleNode0.jjtSetParent(simpleNode1);
      SystemInUtil.addInputLine("B");
      simpleNode0.toString();
      Node node0 = simpleNode0.jjtGetParent();
      assertNotSame(simpleNode0, node0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.id = 0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      SystemInUtil.addInputLine("p.~~[");
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetParent();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4955809264104396
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">");
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.append((CharSequence) "CompilationUnit", 0, 1);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("CompilationUnit");
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.dump("", stringWriter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      SimpleNode simpleNode1 = new SimpleNode(2);
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.dump(">", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode1.jjtGetChild(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = (-4806);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.setIdentifier(">");
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode1.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(89);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2477979170805598
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(0);
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0, 0, 0);
      simpleNode0.toString("*lt");
      simpleNode0.setIdentifier(">");
      SimpleNode simpleNode1 = new SimpleNode((-4202));
      StringWriter stringWriter3 = new StringWriter();
      stringWriter0.flush();
      stringWriter3.flush();
      simpleNode0.dump("knT:1gLxFkJ};ssULR", stringWriter2);
      simpleNode1.jjtAddChild(simpleNode0, 2355);
      // Undeclared exception!
      try { 
        simpleNode1.dump((String) null, stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtGetParent();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtAddChild((Node) null, 10);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(10);
      arrayList0.addAll((Collection<? extends String>) simpleNode0.identifiers);
      arrayList0.add("*lt");
      simpleNode0.toString("X/&9~9o]Aj#VRf7V");
      arrayList0.iterator();
      simpleNode0.toString("X/&9~9o]Aj#VRf7V");
      // Undeclared exception!
      try { 
        simpleNode0.dump("<", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.331457524513021
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "CompilationUnit", 0, 1);
      simpleNode0.dump("", stringWriter2);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("CompilationUnit");
      Node node0 = simpleNode0.parent;
      simpleNode0.dump("", stringWriter2);
      simpleNode0.jjtAddChild((Node) null, 5421);
      simpleNode0.toString("");
      StringWriter stringWriter3 = new StringWriter();
      stringWriter1.append((CharSequence) "CompilationUnit :  : CompilationUnit");
      simpleNode0.dump("2fBvGC4^QD", stringWriter3);
      assertEquals(5422, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4383788332536493
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Integer integer0 = new Integer(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter(0);
      char[] charArray0 = new char[1];
      stringWriter1.write(charArray0, 0, (int) integer0);
      simpleNode0.dump("", stringWriter1);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.dump("CompilationUnit", stringWriter0);
      simpleNode0.jjtSetParent(simpleNode0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, 21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1885909442463163
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4");
      StringWriter stringWriter0 = new StringWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "CompilationUnit", 0, 0);
      simpleNode0.dump("", stringWriter2);
      simpleNode0.toString("");
      simpleNode0.setIdentifier("</");
      simpleNode0.setIdentifier("CompilationUnit");
      simpleNode0.toString("CompilationUnit");
      StringWriter stringWriter3 = new StringWriter();
      stringWriter1.append('K');
      simpleNode0.dump("tFH4XCkr@]q;<nMy", stringWriter1);
      StringReader stringReader0 = new StringReader("</");
      StringReader stringReader1 = new StringReader("</");
      stringReader1.reset();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      stringReader0.read();
      simpleNode0.dump("B4a\"`7c{AWmqy_8iKhT", stringWriter0);
      simpleNode0.toString();
      simpleNode0.dump("i%kuBpIaJouQ?$rxeKT", stringWriter3);
      assertEquals("<CompilationUnit>\n  <identifier></</identifier>\n  <identifier>CompilationUnit</identifier>\n</CompilationUnit>\n", stringWriter3.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3723278339725695
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CompilationUnit");
      StringWriter stringWriter0 = new StringWriter(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.dump("", stringWriter0);
      simpleNode0.id = 9;
      JavaParser javaParser0 = new JavaParser("</identifier>");
      simpleNode0.parser = javaParser0;
      stringWriter0.close();
      stringWriter0.flush();
      simpleNode0.toString("");
      simpleNode0.setIdentifier("CompilationUnit");
      SimpleNode simpleNode1 = new SimpleNode(9);
      simpleNode0.dump("", stringWriter0);
      JavaParser javaParser1 = new JavaParser("CompilationUnit");
      simpleNode0.dump("CompilationUnit", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(9);
      JavaParser javaParser2 = new JavaParser(pipedInputStream0);
      JavaParser javaParser3 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.EqualityExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-11));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 20);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-11));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -11
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      File file0 = MockFile.createTempFile("NameListCompilationUnit", "NameListCompilationUnit");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-3813));
      SimpleNode simpleNode1 = new SimpleNode((-3813));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-3813));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4707592539272447
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z%Oc");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode((-13));
      StringReader stringReader1 = new StringReader("z%Oc");
      javaParser0.ReInit((Reader) stringReader1);
      stringReader0.reset();
      javaParser0.EqualityExpression();
      stringReader0.read();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-13));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtOpen();
      String string0 = "";
      Writer writer0 = null;
      simpleNode0.dump("", (Writer) null);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('A');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "");
      char[] charArray0 = new char[7];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      charArray0[4] = 'A';
      charArray0[5] = 'N';
      charArray0[6] = 'A';
      // Undeclared exception!
      try { 
        stringWriter2.write(charArray0, 0, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.id = 0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-968));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -968
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1431));
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte) (-6);
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte) (-61));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2862));
      // Undeclared exception!
      try { 
        simpleNode0.toString("fI{L|z_ru=Q");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2862
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1104284965));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jsjHsSO~?OGfUg@wy");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-143));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -143
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e#&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2893), (-2893));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
