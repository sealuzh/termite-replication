/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 11:05:22 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8444828867742449
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3, 3);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5104605475108208
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '_';
      charArray0[2] = '[';
      charArray0[3] = '4';
      stringReader0.read(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read();
      StringReader stringReader2 = new StringReader("");
      stringReader2.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream1.adjustBeginLineColumn(2662, 2662);
      javaCharStream1.adjustBeginLineColumn(6, 308);
      assertEquals(308, javaCharStream1.getBeginColumn());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.482856956024611
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "\"1~;5G8rcUJ,1";
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      stringReader1.read();
      int int0 = 4428;
      StringReader stringReader2 = new StringReader("\"1~;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.ReInit((Reader) stringReader2, 34, 928);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      int int0 = 0;
      JavaCharStream.hexval('f');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4230555572853665
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("%9ut]6$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.GetImage();
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1583), 0);
      javaCharStream1.inBuf = 3279;
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((Reader) stringReader0, (-1583), 446, (-1225));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.819920466321558
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      StringReader stringReader1 = new StringReader("");
      stringReader1.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-732), 1);
      javaCharStream1.backup((-1));
      javaCharStream1.GetImage();
      StringReader stringReader2 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 16, 656);
      javaCharStream1.getEndLine();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream1.GetImage();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0, (-1), 679);
      // Undeclared exception!
      try { 
        javaCharStream2.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8927196533458254
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(93);
      JavaCharStream.hexval('a');
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mNn");
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '{';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("\"1~;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 5, 91, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      JavaCharStream.hexval('6');
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8144612036438519
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "\"1~;5G8rcUJ,1";
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '{';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("\"1~;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 5, 91, 0);
      javaCharStream0.ReInit((Reader) stringReader1, 13, 5, 0);
      javaCharStream0.FillBuff();
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.336724853660327
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = 0;
      char[] charArray0 = new char[9];
      charArray0[0] = '2';
      charArray0[1] = 'E';
      charArray0[2] = 'k';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader1 = new StringReader("jiGO~RB0M&f,0C");
      StringReader stringReader2 = new StringReader("UXCQ}NG\"dIV(i");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 0, (-798), 1);
      javaCharStream0.AdjustBuffSize();
      char char0 = javaCharStream1.BeginToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('U', char0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2231780359199775
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '';
      charArray0[2] = '[';
      charArray0[3] = '4';
      charArray0[4] = 'E';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader2 = new StringReader("\"1C;5G'rcUJNJ<1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2961, 0, 0);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('_');
      assertEquals(2961, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8144612036438519
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '{';
      charArray0[2] = '[';
      charArray0[3] = '4';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader0.read(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader2 = new StringReader("V{P$8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 13, 0, 0);
      javaCharStream0.ReInit((Reader) stringReader2, 75, 11, 6);
      javaCharStream0.FillBuff();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int1 = JavaCharStream.hexval('8');
      assertEquals(8, int1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.542138913807713
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2570), (-2570));
      StringReader stringReader0 = new StringReader("]\ncd;X=DW6z;WlJkLD");
      javaCharStream0.ReInit((Reader) stringReader0, 4428, 2997);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4465277458495227
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      stringReader0.reset();
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
      javaCharStream0.getBeginLine();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '2';
      charArray0[1] = '{';
      charArray0[2] = '[';
      charArray0[3] = '4';
      charArray0[4] = 'E';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 6144, 6144);
      // Undeclared exception!
      try { 
        javaCharStream1.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(81);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6570519392541554
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      javaCharStream0.tokenBegin = 0;
      StringReader stringReader1 = new StringReader("");
      stringReader1.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-732), 1);
      javaCharStream1.backup((-1));
      javaCharStream1.GetImage();
      javaCharStream1.ReadByte();
      javaCharStream1.readChar();
      javaCharStream1.getColumn();
      javaCharStream1.AdjustBuffSize();
      assertEquals(1, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Reader reader0 = null;
      int int0 = 11;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 11, 11, 11);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3723430740389058
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      StringReader stringReader1 = new StringReader("");
      stringReader1.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-732), 1);
      javaCharStream1.backup((-1));
      javaCharStream1.GetImage();
      javaCharStream1.ReInit((Reader) stringReader1, (-1), 4353, 683);
      javaCharStream0.FillBuff();
      JavaCharStream.hexval('C');
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 66, (-1));
      try { 
        javaCharStream2.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0834763040946214
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("%9ut]6$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.adjustBeginLineColumn((-1), 2250);
      assertEquals(2250, javaCharStream1.getBeginColumn());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2356454875197467
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '{';
      charArray0[2] = '[';
      charArray0[3] = '4';
      charArray0[4] = 'E';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader2 = new StringReader("\"1C;5G8rcUJ<1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-2230), 2961);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-685), (-760));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 4067, 4071);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 4067, (-1));
      char char0 = javaCharStream1.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('h', char0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4981111357804588
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("%9ut]6$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      stringReader0.read();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3841635808619235
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader2 = new StringReader("");
      stringReader0.read();
      stringReader1.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2567, 34);
      javaCharStream0.readChar();
      stringReader2.read();
      JavaCharStream.hexval('0');
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.714814204300817
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2570), 0);
      StringReader stringReader0 = new StringReader("]cd;X=DW6z;WlJkLD");
      javaCharStream0.ReInit((Reader) stringReader0, 0, 2997);
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      sequenceInputStream0.read(byteArray0, 2997, 0);
      stringReader0.read();
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)0;
      stringReader0.markSupported();
      stringReader0.skip((byte)0);
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)0;
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.GetSuffix((byte)0);
      assertEquals(2997, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3303466540076667
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4376), 0, 2708);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2936242918399534
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      StringReader stringReader1 = new StringReader("");
      stringReader1.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-732), 1);
      javaCharStream1.backup((-1));
      javaCharStream1.GetImage();
      javaCharStream1.ReInit((Reader) stringReader1, (-1), 4353, 683);
      javaCharStream0.FillBuff();
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
      javaCharStream2.adjustBeginLineColumn(1, (byte)0);
      javaCharStream1.adjustBeginLineColumn(1026, 441);
      int int0 = javaCharStream1.getBeginLine();
      assertEquals(441, javaCharStream1.getBeginColumn());
      assertEquals(1027, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.703527340927562
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2570), (-2570));
      StringReader stringReader0 = new StringReader("]\ncd;X=DW6z;WlJkLD");
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, (-199), 2);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4232442583778515
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("%9ut]6$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1?~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1?~;5G8rcUJ,1");
      StringReader stringReader2 = new StringReader("N;K1&v)>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1), (-1));
      javaCharStream1.prevCharIsCR = false;
      char char0 = javaCharStream1.ReadByte();
      assertEquals('N', char0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0639668904755375
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '%';
      charArray0[1] = 'W';
      charArray0[2] = 'Q';
      charArray0[3] = '6';
      charArray0[4] = 'A';
      charArray0[5] = 'S';
      stringReader0.read(charArray0);
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 6, 9);
      javaCharStream0.FillBuff();
      JavaCharStream.hexval('5');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.8144612036438519
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '{';
      charArray0[2] = '[';
      charArray0[3] = '4';
      charArray0[4] = 'E';
      charArray0[5] = ')';
      stringReader0.read(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 11, 0);
      javaCharStream0.ReInit((Reader) stringReader1, (-4842), (-4842), 0);
      javaCharStream0.FillBuff();
      JavaCharStream.hexval('5');
      MockFile mockFile0 = new MockFile("", "");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.3342185879961668
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 0, 9);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getLine();
      assertEquals(9, javaCharStream0.getBeginLine());
      assertEquals(9, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 17);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (byte)70, (-731), (byte) (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = 0;
      char[] charArray0 = new char[9];
      charArray0[0] = '2';
      charArray0[1] = 'E';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)69;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.bufpos = (int) 'k';
      charArray0[1] = 'g';
      charArray0[4] = 'd';
      charArray0[5] = 'n';
      charArray0[6] = '(';
      charArray0[3] = 'm';
      char[] charArray1 = javaCharStream0.GetSuffix(81);
      assertEquals(81, charArray1.length);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9732617547983051
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-267), (byte)4);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)4, (-302));
      long long0 = 1708L;
      javaCharStream0.prevCharIsLF = true;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('2');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 1592;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1592, 3307);
      byteArrayInputStream0.read();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 1592, (-1523));
      javaCharStream0.Done();
      byteArrayInputStream0.read();
      byteArrayInputStream0.skip(2980L);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.2712196594138563
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ<1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 0, 9);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(9, javaCharStream0.getBeginLine());
      assertEquals('1', char0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 2267, 88, 1225);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '{';
      charArray0[2] = '[';
      charArray0[3] = '4';
      charArray0[4] = 'E';
      charArray0[5] = ')';
      stringReader0.read(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 11, 0);
      javaCharStream0.ReInit((Reader) stringReader1, (-4842), (-4842), 0);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 6, (-1173));
      char char0 = javaCharStream1.ReadByte();
      assertEquals('8', char0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7414180849434708
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      sequenceInputStream0.read(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, pipedInputStream0);
      StringReader stringReader0 = new StringReader(".9+~f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1), 9);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('.', char0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("]cd;X=DW6z;WlJkLD");
      stringReader0.read();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      stringReader0.close();
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)9;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)0;
      sequenceInputStream0.read(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)0, 96);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 1535, 13, 68);
      javaCharStream0.Done();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-94);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-63);
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream1, (int) (byte)0, 1, (int) (byte)0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 12, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2570), 0);
      javaCharStream0.prevCharIsCR = false;
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 97, 2048);
      javaCharStream0.backup(12);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader2 = new StringReader("*?:QC* :JzBSF");
      StringReader stringReader3 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader4 = new StringReader("*?:QC* :JzBSF");
      stringReader3.markSupported();
      javaCharStream0.ReInit((Reader) stringReader1);
      String string0 = javaCharStream0.GetImage();
      assertNotNull(string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.line = 0;
      javaCharStream0.maxNextCharInd = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.adjustBeginLineColumn((byte)0, (-1));
      int int0 = javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader1.read(charArray0);
      stringReader1.ready();
      int int0 = 42;
      InputStream inputStream0 = null;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      try { 
        JavaCharStream.hexval('~');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '2';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'g';
      charArray0[4] = 'd';
      JavaCharStream.hexval('d');
      MockFile mockFile0 = new MockFile("/U}YPDgC:ikI]", "");
      MockFile mockFile1 = new MockFile("/U}YPDgC:ikI]", "");
      mockFile1.toPath();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile1, "JiN10>B=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"JiN10>B=\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-711));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mNn");
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 70, '_', 385);
      char[] charArray1 = javaCharStream0.GetSuffix(81);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(81, charArray1.length);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)99;
      byteArray0[6] = (byte)118;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)102;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4194), 1842);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)99, 1539, (byte)5);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)73;
      byteArray1[1] = (byte)64;
      byteArray1[2] = (byte) (-70);
      byteArray1[3] = (byte)54;
      sequenceInputStream0.read(byteArray1);
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)16;
      sequenceInputStream0.read(byteArray0, 0, (int) (byte)16);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream0.read();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sequenceInputStream0.skip((-1));
      dataInputStream0.mark(15);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 1, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y?entlwwPe9PPJY6L,L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('G');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, (-2978), (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 2616, 1350);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1~;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1~;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '{';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, '_', 6);
      javaCharStream0.backup((-1816));
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader2 = new StringReader("*?:QC* :JzBSF");
      StringReader stringReader3 = new StringReader("*?:QC* :JzBSF");
      StringReader stringReader4 = new StringReader("\"1~;5G8rcUJ,1");
      stringReader1.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0);
      String string0 = javaCharStream0.GetImage();
      assertNotNull(string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-94);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-63);
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream1, (int) (byte)0, 1, (int) (byte)0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-94);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-63);
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('e', char0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      char[] charArray0 = new char[2];
      charArray0[0] = '%';
      charArray0[1] = 'O';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.maxNextCharInd = 1;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
