/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:17:41 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-2146));
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('\\');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (\\)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.51195622385697
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-encoding");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getLineSeparator();
      outputFormat0.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-encoding";
      OutputFormat.createCompactFormat();
      stringArray0[3] = "-encoding";
      int int0 = 1;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('\u001E');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (\u001E)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.68478541691352
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("5EZA^O|<Xd+v~r7Z");
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals("5EZA^O|<Xd+v~r7Z", outputFormat0.getIndent());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8164590628390678
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmhl", true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "hmWJ}I4EgZ0r+'$EcoFX";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-expandEmpty";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndent((String) null);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(false);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5403102606135093
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", false, "-omitEncoding");
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "-omitEncoding";
      stringArray0[6] = "-omitEncoding";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      outputFormat2.setNewlines(false);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-omitEncoding";
      stringArray1[1] = "-omitEncoding";
      stringArray1[2] = "-omitEncoding";
      stringArray1[3] = "-omitEncoding";
      stringArray1[4] = "-omitEncoding";
      stringArray1[5] = "-omitEncoding";
      stringArray1[6] = "du8S%u";
      stringArray1[7] = "-omitEncoding";
      outputFormat3.parseOptions(stringArray1, 0);
      assertTrue(outputFormat3.isOmitEncoding());
      
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      assertEquals('\"', outputFormat4.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char char0 = '&';
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('&');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (&)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("");
      outputFormat0.setPadText(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndentSize((-1));
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndentSize((-113));
      outputFormat0.setTrimText(false);
      outputFormat0.setLineSeparator("l26pc9:j,rC");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.getIndent();
      assertEquals("l26pc9:j,rC", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4162134738653434
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setTrimText(false);
      outputFormat1.setSuppressDeclaration(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "  ";
      outputFormat1.setLineSeparator("OB=vT&HfauO");
      stringArray0[1] = "  ";
      stringArray0[2] = "  ";
      stringArray0[3] = "  ";
      stringArray0[4] = "  ";
      stringArray0[5] = "  ";
      stringArray0[6] = " ";
      stringArray0[7] = "  ";
      stringArray0[8] = "=rd21wC96kGhOt~";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-1137));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1137
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1579247678555973
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = new OutputFormat((String) null);
      outputFormat2.setTrimText(true);
      OutputFormat outputFormat4 = new OutputFormat("");
      outputFormat2.isNewLineAfterDeclaration();
      OutputFormat outputFormat5 = new OutputFormat("");
      outputFormat2.setTrimText(true);
      outputFormat1.isSuppressDeclaration();
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("3YdNVJxX?6@M1+lE", true);
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isPadText());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isTrimText());
      assertEquals("  ", outputFormat1.getIndent());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertFalse(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isXHTML());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isPadText());
      
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', char0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("3YdNVJxX?6@M1+lE", outputFormat0.getIndent());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0103904401323787
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getIndent();
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = "L3xJyOb2kXfKq|t>";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 2019);
      outputFormat0.setIndent(true);
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      outputFormat1.setLineSeparator((String) null);
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5443840184088953
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("du8S%u");
      outputFormat0.isPadText();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "du8S%u";
      outputFormat0.setPadText(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setXHTML(true);
      String[] stringArray1 = new String[6];
      outputFormat0.setOmitEncoding(true);
      stringArray1[0] = "du8S%u";
      stringArray1[1] = "du8S%u";
      stringArray1[2] = "du8S%u";
      stringArray1[3] = "du8S%u";
      outputFormat0.setNewlines(true);
      stringArray1[4] = "du8S%u";
      stringArray1[5] = "du8S%u";
      outputFormat0.isTrimText();
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.352073001943266
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "p- %b&S\u0004C 4T";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("J3");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize((-443));
      outputFormat1.setEncoding("HZlv2xl2");
      assertEquals("HZlv2xl2", outputFormat1.getEncoding());
      
      outputFormat0.setIndent(true);
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.528800626331699
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlqV+OXc2@_eMRn", true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlqV+OXc2@_eMRn", true, "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtmlqV+OXc2@_eMRn";
      stringArray0[1] = "-xhtmD9u%";
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewlines(true);
      outputFormat1.setEncoding("-expandEmptyg)pL_Yf$t+(,.6VAf");
      OutputFormat outputFormat2 = new OutputFormat("");
      outputFormat2.setIndent((String) null);
      outputFormat0.setOmitEncoding(true);
      outputFormat2.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat3.isSuppressDeclaration();
      outputFormat3.setEncoding((String) null);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat4 = new OutputFormat("-padText", true);
      outputFormat1.setIndent(false);
      assertEquals("-expandEmptyg)pL_Yf$t+(,.6VAf", outputFormat1.getEncoding());
      
      boolean boolean0 = outputFormat4.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9862697651626724
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("HZlv2x2", true);
      OutputFormat outputFormat1 = new OutputFormat("org.dom4j.io.OutputFormat", true, "-xhtmD9u%");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.dom4j.io.OutputFormat";
      stringArray0[1] = "HZlv2x2";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("HZlv2x2");
      outputFormat0.setIndent((String) null);
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding("HZlv2x2");
      outputFormat1.setIndent(true);
      OutputFormat outputFormat2 = new OutputFormat((String) null, true);
      outputFormat2.setIndent(true);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("HZlv2x2", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6284617679692186
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("HZ&lv2x2", true);
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "HZ&lv2x2";
      stringArray0[1] = "HZ&lv2x2";
      outputFormat0.setIndent("HZ&lv2x2");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("mIo9yN^qr[g;>");
      outputFormat1.setLineSeparator("H9DX5Rk~Co3b3E)M0w");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setTrimText(true);
      outputFormat0.setEncoding("mIo9yN^qr[g;>");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isOmitEncoding();
      outputFormat0.getEncoding();
      assertEquals("mIo9yN^qr[g;>", outputFormat0.getIndent());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6858035341170652
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "hmWJ}I4EgZ0r+'$EcoFX";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndent(" ");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      assertEquals(" ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6565955846378957
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("HZlv2x2", true);
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Rs&OOX}2I]$L@6p";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setIndent("Rs&OOX}2I]$L@6p");
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setIndent("Rs&OOX}2I]$L@6p");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding("p- %b&S\u0004C 4T");
      assertEquals("p- %b&S\u0004C 4T", outputFormat0.getEncoding());
      
      boolean boolean0 = outputFormat1.isExpandEmptyElements();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3643247268937695
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("du8S%u");
      outputFormat0.isPadText();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "du8S%u";
      outputFormat0.setPadText(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setXHTML(true);
      String[] stringArray1 = new String[6];
      outputFormat0.setOmitEncoding(true);
      stringArray1[0] = "du8S%u";
      stringArray1[1] = "du8S%u";
      stringArray1[2] = "du8S%u";
      outputFormat0.setPadText(true);
      stringArray1[3] = "du8S%u";
      outputFormat0.setNewlines(true);
      stringArray1[4] = "du8S%u";
      stringArray1[5] = "du8S%u";
      outputFormat0.parseOptions(stringArray1, 2);
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("E#>/T_Jh05");
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding("du8S%u");
      outputFormat0.isPadText();
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "HZlv2x";
      stringArray0[1] = "E#>/T_Jh05";
      stringArray0[2] = "E#>/T_Jh05";
      stringArray0[3] = "du8S%u";
      stringArray0[4] = "E#>/T_Jh05";
      stringArray0[5] = "E#>/T_Jh05";
      stringArray0[6] = "du8S%u";
      stringArray0[7] = "E#>/T_Jh05";
      stringArray0[8] = "E#>/T_Jh05";
      outputFormat0.parseOptions(stringArray0, 433);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.isTrimText();
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7366162102910074
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent("org.dom4j.io.OutputFormat");
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.dom4j.io.OutputFormat";
      stringArray0[1] = "org.dom4j.io.OutputFormat";
      stringArray0[2] = "org.dom4j.io.OutputFormat";
      stringArray0[3] = "org.dom4j.io.OutputFormat";
      stringArray0[0] = "org.dom4j.io.OutputFormat";
      stringArray0[5] = "org.dom4j.io.OutputFormat";
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.setIndent("mIo9yN^qr[g;>");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding("org.dom4j.io.OutputFormat");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2022643500));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2022643500
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3800014440440727
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setTrimText(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isXHTML();
      outputFormat0.setIndent(".#c8ES*");
      assertEquals(".#c8ES*", outputFormat0.getIndent());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.47094007591334
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setTrimText(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isXHTML();
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat0.setIndent(".#c8ES*");
      assertEquals("", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("D b*8JMP]bq?i>ji");
      assertEquals("D b*8JMP]bq?i>ji", outputFormat0.getEncoding());
      
      outputFormat0.setEncoding("");
      outputFormat0.getLineSeparator();
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7913352772834346
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmhl", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setNewLineAfterNTags(1);
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-xhtmhl";
      stringArray0[3] = "hmWJ}I4EgZ0+'$EcoFX";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndentSize(1);
      outputFormat0.setEncoding((String) null);
      assertEquals(" ", outputFormat0.getIndent());
      
      outputFormat0.setIndent(" ");
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.919952035505172
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmhl", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-xhtmhl";
      stringArray0[3] = "hmWJ}I4EgZ0+'$EcoFX";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndentSize(1);
      outputFormat0.setEncoding((String) null);
      assertEquals(" ", outputFormat0.getIndent());
      
      outputFormat0.setIndent(" ");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.isNewlines();
      boolean boolean0 = outputFormat1.isTrimText();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.026522790307467
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.getLineSeparator();
      outputFormat0.setIndentSize(0);
      outputFormat0.setLineSeparator("");
      outputFormat0.isPadText();
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(1228);
      outputFormat0.isNewlines();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isTrimText();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setLineSeparator("Rs&OOX}2I]$L@6p");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.setIndent("-trimText");
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("-trimText", outputFormat0.getIndent());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7612326268173626
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlqV+OXc2@_eMRn", true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlqV+OXc2@_eMRn", true, "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtmlqV+OXc2@_eMRn";
      stringArray0[1] = "-xhtmD9u%";
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[2] = "";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setIndent(":%`5p|");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent(" ");
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setIndentSize(0);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding((String) null);
      outputFormat2.setIndent(true);
      outputFormat0.setIndent(true);
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat3.getIndent());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.478517912662359
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlqV+OXc2@_eMRn", true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlqV+OXc2@_eMRn", true, "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtmlqV+OXc2@_eMRn";
      stringArray0[1] = "-xhtmD9u%";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setEncoding("-expandEmptyg)pL_Yf$t+(,.6VAf");
      OutputFormat outputFormat2 = new OutputFormat("");
      outputFormat2.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat2.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat3.isSuppressDeclaration();
      outputFormat3.setEncoding((String) null);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat4 = new OutputFormat("-padText", true);
      outputFormat1.setIndent(false);
      assertEquals("-expandEmptyg)pL_Yf$t+(,.6VAf", outputFormat1.getEncoding());
      
      boolean boolean0 = outputFormat4.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmhl", false);
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[6] = "-xhtmhl";
      stringArray0[3] = "hmWJ}I4EgZ0+'$EcoFX";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("3YNVJxX?6@M+MlE", false);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setTrimText(false);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("3YNVJxX?6@M+MlE", false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding("3YNVJxX?6@M+MlE");
      outputFormat0.setIndent(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setTrimText(false);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("3YNVJxX?6@M+MlE", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("3YNVJxX?6@M+MlE", false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('@');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (@)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
