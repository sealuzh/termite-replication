/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:05:05 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.6942421210036693
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9w6b~U/L{w:uWl");
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9w6b~U/L{w:uWl";
      User user0 = new User("9w6b~U/L{w:uWl", "9w6b~U/L{w:uWl");
      user0.setAffiliation("");
      user0.setEmail("9w6b~U/L{w:uWl");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setCounty("");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("variable.category.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      valueLabel0.setMissingValue(false);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.278652206252129
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~UfL{(DW");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9U6b~UfL{(DW";
      assertEquals("9U6b~UfL{(DW", derivedVariable0.getDisplayName());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("qjw: NgcuaA[$#'");
      ontologyTerm1.getDisplayName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "v%AGwW;&/RH";
      rawVariable0.setCoded(false);
      rawVariable0.setCategory("%GV1}Y9?5\"=");
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      user0.setUserID("9U6b~U/L{w(:uWl");
      rawVariable0.setIdentifier((-1588));
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("%GV1}Y9?5\"=", rawVariable0.getCategory());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9172299880444386
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("9w6b~U/L{w:uWl");
      derivedVariable0.setName("9w6b~U/L{w:uWl");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getColumnEnd();
      User user0 = new User("9U6b~U/L{w(:uWl", "9Fn>gOO-cAaZmh_");
      user0.setAffiliation("blank");
      user0.setEmail((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setColumnEnd("");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getAlternativeVariable();
      assertEquals("9w6b~U/L{w:uWl", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("Q7,cJTKTTcPdC");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue(" {hltS\"QE)?NmF5R]");
      ontologyTerm1.setDescription("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9175426508896702
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      supportingDocument0.setFilePath("p1[");
      RawVariable[] rawVariableArray0 = new RawVariable[9];
      rawVariableArray0[0] = rawVariable0;
      rawVariableArray0[1] = rawVariable0;
      RawVariable rawVariable1 = new RawVariable();
      rawVariableArray0[2] = rawVariable1;
      RawVariable rawVariable2 = new RawVariable();
      rawVariableArray0[3] = rawVariable2;
      rawVariableArray0[4] = rawVariable0;
      rawVariableArray0[5] = rawVariable0;
      rawVariableArray0[6] = rawVariable0;
      rawVariableArray0[7] = rawVariable0;
      rawVariableArray0[8] = rawVariable0;
      arrayList0.toArray(rawVariableArray0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      supportingDocument0.clone();
      supportingDocument0.setFileName("");
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      rawVariable1.setValueLabels(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      supportingDocument0.setTitle("");
      derivedVariable0.removeSupportingDocuments(arrayList2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setColumnEnd(",n");
      assertEquals(",n", derivedVariable0.getColumnEnd());
      
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      rawVariable0.getCleaningDescription();
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.7388729910650507
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setPassword("qkdt");
      user0.setPhone("qkdt");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setLabel("qkdt");
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("qkdt", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.626699772019484
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setLabel("");
      derivedVariable0.setQuestionNumber("");
      String string0 = null;
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      System.setCurrentTimeMillis(1711L);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      rawVariable0.setCodeBookNumber("");
      UnaryOperator.identity();
      arrayList0.add((Variable) rawVariable0);
      // Undeclared exception!
      try { 
        arrayList0.set(1, derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.8717899015274178
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~U/L{w(:uWl");
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      user0.setAffiliation("");
      user0.setEmail("9U6b~U/L{w(:uWl");
      user0.setCounty("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setCounty("");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      valueLabel0.setMissingValue(false);
      derivedVariable0.getValueLabels();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.addOntologyTerm(ontologyTerm0);
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningStatus();
      Variable.validateFields(derivedVariable0);
      derivedVariable2.setAlternativeVariable(derivedVariable1);
      assertEquals("9U6b~U/L{w(:uWl", derivedVariable1.getDisplayName());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getLabel();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable2.setSourceVariables(arrayList0);
      derivedVariable4.getDisplayItemIdentifier();
      assertEquals("Unknown", derivedVariable4.getAvailability());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5444174468056624
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      supportingDocument0.setFilePath("p1[");
      RawVariable[] rawVariableArray0 = new RawVariable[9];
      rawVariableArray0[0] = rawVariable0;
      rawVariableArray0[1] = rawVariable0;
      RawVariable rawVariable1 = new RawVariable();
      rawVariableArray0[2] = rawVariable1;
      RawVariable rawVariable2 = new RawVariable();
      rawVariableArray0[3] = rawVariable2;
      rawVariableArray0[4] = rawVariable0;
      rawVariableArray0[5] = rawVariable0;
      rawVariableArray0[6] = rawVariable0;
      rawVariableArray0[7] = rawVariable0;
      rawVariableArray0[8] = rawVariable0;
      arrayList0.toArray(rawVariableArray0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      Object object0 = supportingDocument0.clone();
      supportingDocument0.setFileName("");
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      arrayList1.add((SupportingDocument) object0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.remove((Object) valueLabel0);
      supportingDocument0.setTitle("");
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("VARIABLE");
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User((String) null, (String) null);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.getDisplayName();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.addValueLabel(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setIdentifier(1968);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      ArrayList<OntologyTerm> arrayList1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9648040053930025
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("-LHA");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("-LHA");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningStatus();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getForm();
      assertEquals("-LHA", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.636241956808697
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setLabel("variable.columnStart.label");
      User user0 = new User((String) null, "Os{W 1+^Kc.[o");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("variable.columnStart.label", derivedVariable0.getLabel());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable3.removeSourceVariables(arrayList0);
      rawVariable0.getName();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "v%AGwW;&/RH";
      rawVariable0.setCoded(false);
      rawVariable0.codeBookNumber = "v%AGwW;&/RH";
      rawVariable0.setCategory("%GV1}Y9?5\"=");
      rawVariable0.createVariableSummary();
      rawVariable0.getCategory();
      assertEquals("%GV1}Y9?5\"=", rawVariable0.getCategory());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.248805199377267
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~U/L{w(:uWl");
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = null;
      User user0 = new User();
      derivedVariable0.isCleaned();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.spliterator();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("9U6b~U/L{w(:uWl");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("@X04");
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable1.containsOntologyTerm(ontologyTerm1);
      valueLabel0.setMissingValue(true);
      derivedVariable0.getCleaningStatus();
      Variable.validateFields(derivedVariable0);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable1.getOntologyTerms();
      assertEquals("9U6b~U/L{w(:uWl", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("U,*W]PCv%{vF%f.v", "U,*W]PCv%{vF%f.v");
      user0.setAddressLine1(";)&K");
      user0.setIdentifier(738);
      user0.setUserID("CJu");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setName("9Fn>gOO-cAaZmh_");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(derivedVariable0.isCoded());
      
      rawVariable0.createVariableSummary();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~U/L{w(:uWl");
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = null;
      User user0 = new User();
      user0.setEmail("9U6b~U/L{w(:uWl");
      user0.setCounty("");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("");
      rawVariable0.getSupportingDocuments();
      supportingDocument1.setTitle("cK1gvY");
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7720993354168804
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getNotes();
      User user0 = new User("", (String) null);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<RawVariable> arrayList0 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>(arrayList0);
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8816224050082146
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      ontologyTerm0.setNewRecord(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList1.size());
      
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getLabel();
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.798205063035886
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~U/L{w(:uWl");
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9U6b~U/L{w(:uWl";
      User user0 = new User("9U6b~U/L{w(:uWl", "9U6b~U/L{w(:uWl");
      user0.setAffiliation("");
      user0.setEmail("9U6b~U/L{w(:uWl");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setCounty("");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("variable.category.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      valueLabel0.setMissingValue(false);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      arrayList0.remove(0);
      derivedVariable1.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList1);
      derivedVariable0.setCoded(false);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable2.removeValueLabel(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable2.isCoded();
      derivedVariable0.getAvailability();
      assertEquals("9U6b~U/L{w(:uWl", derivedVariable0.getNotes());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable3);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.688514447186191
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      ontologyTerm0.setNewRecord(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      supportingDocument1.setFileName("4,?Rc%'}KY^RgI0k;1x");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean1 = rawVariable1.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean1 == boolean0);
      
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable1.getName();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      User user0 = new User("", "4,?Rc%'}KY^RgI0k;1x");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, (Variable) null);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertNull(macawChangeEvent0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getSupportingDocuments();
      User user1 = new User();
      String string0 = "NON_EXISTENT_VARIABLE_ASSOCIATION";
      user0.setEmail("NON_EXISTENT_VARIABLE_ASSOCIATION");
      user1.setCounty("NON_EXISTENT_VARIABLE_ASSOCIATION");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.8991638200670087
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.isCleaned();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.spliterator();
      derivedVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable1.getCleaningStatus();
      Variable.validateFields(derivedVariable1);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.getLabel();
      derivedVariable1.addValueLabel((ValueLabel) null);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User("9Qql5Vv", (String) null);
      user0.setAffiliation("-LHA");
      user0.setEmail("macaw.businessLayer.Variable");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("uw(Q%.G{Y");
      User user1 = new User((String) null, (String) null);
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.getAlternativeVariable();
      assertEquals("uw(Q%.G{Y", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.165007390703491
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("ERROR #");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("Q7,cJTKTTcPdC");
      rawVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.codeBookNumber = "ERROR #";
      derivedVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.add(supportingDocument1);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      supportingDocument1.setDocumentCode("");
      supportingDocument1.setDocumentCode("ERROR #");
      rawVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.isNewRecord();
      derivedVariable0.getSourceVariables();
      rawVariable0.columnEnd = "Q7,cJTKTTcPdC";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User();
      user1.setLastName("");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      rawVariable0.getAlias();
      derivedVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertEquals("ERROR #", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9701754186958174
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setCleaningStatus("macaw.businessLayer.VariableSummary");
      rawVariable0.getDisplayItemIdentifier();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.createVariableSummary();
      rawVariable1.setCodeBookNumber("macaw.businessLayer.VariableSummary");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      assertEquals("macaw.businessLayer.VariableSummary", rawVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      RawVariable[] rawVariableArray0 = new RawVariable[3];
      arrayList0.toArray(rawVariableArray0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("macaw.util.ValidationUtility");
      String string0 = "";
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFileName("!|%:=q'P%");
      derivedVariable0.getSupportingDocuments();
      supportingDocument2.setTitle("");
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, rawVariableArray0[2], derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.802849942097052
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("$");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(true);
      derivedVariable0.setCoded(false);
      User user0 = new User();
      user0.setCounty("$");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setYear("$");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      derivedVariable1.setName("");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList0.addAll((Collection<? extends Variable>) arrayList1);
      arrayList0.addAll((Collection<? extends Variable>) arrayList1);
      arrayList0.add((Variable) derivedVariable0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.forEach(consumer0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable1.setCoded(true);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.setAlias("");
      derivedVariable0.clone();
      derivedVariable0.clone();
      Variable.validateFields(derivedVariable1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      ontologyTerm0.setNewRecord(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue((String) null);
      ontologyTerm0.setDescription("variable.questionNumber.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      User user0 = new User();
      user0.setUserID("u7ve~_R6");
      RawVariable rawVariable0 = new RawVariable();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.getName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7513639063246216
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      ontologyTerm0.setNewRecord(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      rawVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      supportingDocument1.setFileName("4,?Rc%'}KY^RgI0k;1x");
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable1.getName();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument3);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
      
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      arrayList0.add((SupportingDocument) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      derivedVariable0.columnStart = "LHA";
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("");
      supportingDocument1.setIsNewRecord(true);
      supportingDocument1.setDocumentCode("4]'_%V]");
      arrayList1.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.getLabel();
      derivedVariable0.getDisplayName();
      derivedVariable0.setCleaningDescription("C+XUF+S");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setCoded(true);
      assertEquals("C+XUF+S", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      ontologyTerm0.setNewRecord(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      String string0 = rawVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      supportingDocument1.setFileName("4,?Rc%'}KY^RgI0k;1x");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      ontologyTerm1.setOntologyName("Unknown");
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm0);
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCoded());
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.714692119256665
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      User user0 = new User("*;K1o8NGhC/pxPe", "*;K1o8NGhC/pxPe");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.notes = "9Fn>gOO-cAaZmh_";
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("9Fn>gOO-cAaZmh_", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      valueLabel0.setValue("t5Gqm");
      ValueLabel.validateFields(valueLabel0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.columnStart = "";
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.questionNumber = "mK[v9";
      valueLabel0.setMissingValue(false);
      derivedVariable0.setColumnEnd("macaw.businessLayer.User");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setColumnStart(":bjTGkwDK&@)@)DY/");
      derivedVariable0.getValueLabels();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("+o|$kn2zJX2");
      ontologyTerm0.getDisplayName();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(true);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isCoded();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getFilePath();
      assertEquals(":bjTGkwDK&@)@)DY/", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("-LHA", "-LHA");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.setQuestionNumber("-LHA");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("-LHA");
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      arrayList0.add((ValueLabel) null);
      arrayList0.add((ValueLabel) null);
      arrayList0.add((ValueLabel) null);
      arrayList0.remove(0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm3);
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addValueLabel((ValueLabel) null);
      derivedVariable1.isCoded();
      derivedVariable0.getColumnEnd();
      assertEquals("-LHA", derivedVariable0.getQuestionNumber());
      
      derivedVariable1.getFilePath();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.68644405381145
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("j*\u0003tBJY0");
      Variable.validateFields(rawVariable0);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      assertEquals("j*\u0003tBJY0", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.isNewRecord();
      derivedVariable1.setCategory("q$,");
      derivedVariable1.setAvailability("variable.cleaningStatus.label");
      boolean boolean0 = derivedVariable1.isNewRecord();
      assertEquals("variable.cleaningStatus.label", derivedVariable1.getAvailability());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7574442526529053
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.stream();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      ontologyTerm0.setNewRecord(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.getCleaningStatus();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaningStatus("general.error.blankField");
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getName();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable1.setCleaned(true);
      rawVariable1.containsSupportingDocument(supportingDocument3);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      
      derivedVariable0.setCodeBookNumber((String) null);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "v%AGwW;&/RH";
      rawVariable0.setCoded(false);
      rawVariable0.setCategory("%GV1}Y9?5\"=");
      rawVariable0.setIdentifier(121);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCleaned(false);
      rawVariable0.getColumnStart();
      rawVariable0.getColumnEnd();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setCategory("");
      rawVariable0.getColumnEnd();
      assertEquals("", rawVariable0.getCategory());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Variable variable0 = null;
      arrayList0.clone();
      arrayList0.add((Variable) null);
      arrayList0.add((Variable) null);
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable1);
      arrayList1.ensureCapacity(0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList1.addAll(0, (Collection<? extends OntologyTerm>) linkedList0);
      ontologyTerm1.setOntologyName("variable.name.label");
      arrayList1.clear();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.810129108232614
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~U/L{w(:uWl");
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9U6b~U/L{w(:uWl";
      User user0 = new User();
      user0.setAffiliation("");
      user0.setEmail("9U6b~U/L{w(:uWl");
      user0.setCounty("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setCounty("");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("variable.category.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      valueLabel0.setMissingValue(false);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      derivedVariable0.setYear("8)2?2AD~moT}4$");
      arrayList0.remove(0);
      derivedVariable1.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable2.removeValueLabel(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable2.isCoded();
      derivedVariable0.getColumnEnd();
      derivedVariable1.getFilePath();
      derivedVariable1.getYear();
      assertEquals("9U6b~U/L{w(:uWl", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("E:D|WI)oMv", "E:D|WI)oMv");
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.setIdentifier(0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      valueLabel0.setValue("t5Gqm");
      ValueLabel.validateFields(valueLabel0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.columnStart = "";
      derivedVariable0.setSourceVariables(arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setMissingValue(true);
      valueLabel1.setLabel("ERROR #");
      derivedVariable0.setColumnEnd("");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setColumnStart("");
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCoded());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("9U6b~U/L{w(:uWl");
      ontologyTerm0.getDisplayName();
      derivedVariable0.setCoded(true);
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getFilePath();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.516316711401333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("9Fn>gOO-cAaZmh_", "y|E*C AyKT:u4");
      user0.setAffiliation("V}p^}");
      user0.setEmail("variable.cleaningStatus.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5782737395252497
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~UfL{(DW");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      user0.setAffiliation("9U6b~UfL{(DW");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      ontologyTerm1.setOntologyName("");
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable1.getName();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("9U6b~UfL{(DW", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.8024685994334115
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      RawVariable[] rawVariableArray0 = new RawVariable[3];
      rawVariableArray0[0] = rawVariable0;
      rawVariableArray0[1] = rawVariable0;
      rawVariableArray0[2] = rawVariable0;
      arrayList1.toArray(rawVariableArray0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      supportingDocument0.clone();
      supportingDocument0.setFileName("");
      supportingDocument0.setTitle("variable.cleaningStatus.label");
      derivedVariable0.removeSupportingDocuments(arrayList1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.setAlternativeVariable(derivedVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.cleaningStatus.label");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.8246778111148125
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clone();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setCategory("49ugDuj$U-SJ$");
      derivedVariable0.setCodeBookNumber((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.1287022893600915
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.stream();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      ontologyTerm0.setNewRecord(true);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.getCleaningStatus();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("_X%7D$");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setCleaned(true);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable2.getName();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable2.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.694124545362909
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.setName("9U6b~U/L{w(:uWl");
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9U6b~U/L{w(:uWl";
      User user0 = new User("9U6b~U/L{w(:uWl", "9U6b~U/L{w(:uWl");
      user0.setAffiliation("");
      user0.setEmail("9U6b~U/L{w(:uWl");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd(",n");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel1);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("9w6b~U/L{w:uWl");
      derivedVariable0.setName("9w6b~U/L{w:uWl");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getColumnEnd();
      Variable.validateFields(derivedVariable0);
      Variable.validateFields(derivedVariable0);
      assertEquals("9w6b~U/L{w:uWl", derivedVariable0.getName());
      assertEquals("9w6b~U/L{w:uWl", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.addValueLabel(valueLabel0);
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm2);
      rawVariable1.getQuestionNumber();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      RawVariable rawVariable1 = new RawVariable();
      assertEquals("Unknown", rawVariable1.getCategory());
      
      rawVariable1.setCategory("%GV1}Y9?5\"=");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.addValueLabel(valueLabel0);
      rawVariable1.createVariableSummary();
      rawVariable1.getCategory();
      boolean boolean0 = rawVariable1.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.000570825001368
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~U/L{w(:uWl");
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9U6b~U/L{w(:uWl";
      User user0 = new User();
      user0.setAffiliation("");
      user0.setEmail("9U6b~U/L{w(:uWl");
      User user1 = new User();
      User.detectFieldChanges(user1, user1, user0);
      user0.setCounty("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.getAlternativeVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable0.isCleaned();
      derivedVariable1.setForm("p/AIQ^GQ9");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      User user2 = new User((String) null, "9U6b~U/L{w(:uWl");
      derivedVariable1.getQuestionNumber();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("9U6b~U/L{w(:uWl", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.9085688792088034
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("-LHA", "-LHA");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.setQuestionNumber("-LHA");
      derivedVariable0.cloneAttributes(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      arrayList0.remove(0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getSourceVariables();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.setCoded(false);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.addValueLabel(valueLabel1);
      derivedVariable0.isCoded();
      assertEquals("-LHA", derivedVariable0.getQuestionNumber());
      
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getAvailability();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.753266128233367
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      User user0 = new User("Q7,cJTKTTcPdC", "(3Y>");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      user0.setCounty("(3Y>");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("<s32l7");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "ERROR #";
      derivedVariable0.cloneAttributes(rawVariable0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setMissingValue(true);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.add(valueLabel1);
      arrayList1.add(valueLabel1);
      ArrayList<ValueLabel> arrayList2 = rawVariable0.getValueLabels();
      ValueLabel valueLabel2 = arrayList2.remove(0);
      derivedVariable0.setValueLabels(arrayList2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList3 = derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList3);
      derivedVariable1.setCoded(true);
      ValueLabel valueLabel3 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel2);
      derivedVariable1.addValueLabel(valueLabel2);
      derivedVariable1.isCoded();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getFilePath();
      assertEquals("ERROR #", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.7075862036882743
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("ALIAS_FILE_PATH");
      derivedVariable0.form = "ALIAS_FILE_PATH";
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setMissingValue(true);
      derivedVariable0.clone();
      User user0 = new User();
      user0.clone();
      user0.setLastName("");
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.subList(1, 704);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 704
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("-LHA", "-LHA");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.setQuestionNumber("-LHA");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("-LHA");
      ontologyTerm0.setDescription("0ST!ag;N;j");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningStatus();
      assertEquals("-LHA", derivedVariable0.getQuestionNumber());
      
      user0.setUserID("0ST!ag;N;j");
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.8904209137250625
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~UfL{(DW");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9U6b~UfL{(DW";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      ArrayList<ValueLabel> arrayList0 = derivedVariable1.getValueLabels();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList2);
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel2 = new ValueLabel();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeValueLabel(valueLabel1);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel3);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.isCoded();
      derivedVariable1.getColumnEnd();
      derivedVariable3.getFilePath();
      derivedVariable0.getForm();
      assertEquals("", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setForm("nF3&v=#eAIS");
      arrayList0.remove((Object) null);
      rawVariable0.addSupportingDocuments(arrayList0);
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getAlias();
      rawVariable0.getAvailability();
      assertEquals("nF3&v=#eAIS", rawVariable0.getForm());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8821103874851657
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setFilePath("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setAlias("`P?tx){");
      // Undeclared exception!
      try { 
        arrayList0.subList((-1206), (-3234));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1206
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.45126227595883
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("j*\u0003tBJY0");
      Variable.validateFields(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("j*\u0003tBJY0", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.9652336595201243
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getSupportingDocuments();
      supportingDocument0.setFilePath("p1[");
      RawVariable[] rawVariableArray0 = new RawVariable[9];
      rawVariableArray0[0] = rawVariable0;
      rawVariableArray0[1] = rawVariable0;
      RawVariable rawVariable1 = new RawVariable();
      rawVariableArray0[2] = rawVariable1;
      RawVariable rawVariable2 = new RawVariable();
      rawVariableArray0[3] = rawVariable2;
      rawVariableArray0[4] = rawVariable0;
      rawVariableArray0[5] = rawVariable0;
      supportingDocument0.setFileName("p1[");
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      supportingDocument0.setTitle("p1[");
      derivedVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable2.setCodeBookNumber("v9X_Q#vVT");
      rawVariable0.setLabel("!|%:=q'P%");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.columnStart = "u2P.kJmR,7Z";
      rawVariable1.setLabel("NaI");
      rawVariable0.getAvailability();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.625021221653296
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("VARIABLE");
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User((String) null, (String) null);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.getDisplayName();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.addValueLabel(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setIdentifier(1968);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      user0.setCounty("uGlLL3xJyOb2k");
      valueLabel0.setLabel("ONTOLOGY_TERM");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      valueLabel0.setMissingValue(false);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      // Undeclared exception!
      try { 
        arrayList0.remove(1968);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1968, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.155944505320905
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("_X%7D$");
      arrayList0.add(supportingDocument0);
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCategory();
      derivedVariable0.getCategory();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.getCleaningStatus();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("_X%7D$");
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getName();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.containsSourceVariable(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7941820653816287
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9U6b~UfL{(DW");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9U6b~UfL{(DW";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      ontologyTerm1.setOntologyName("qjw: NgcuaA[$#'");
      ontologyTerm1.getDisplayName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm2);
      Variable.validateFields(derivedVariable0);
      assertEquals("9U6b~UfL{(DW", derivedVariable0.getDisplayName());
      assertEquals("9U6b~UfL{(DW", derivedVariable0.getName());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      user0.setUserID("\"ZjeswYF5R*Voi.oH;");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<DerivedVariable> arrayList0 = new ArrayList<DerivedVariable>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList1.size());
      
      rawVariable0.getAlternativeVariable();
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.7821021605863696
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("9w6b~U/L{w:uWl");
      derivedVariable0.getColumnEnd();
      derivedVariable0.notes = "9w6b~U/L{w:uWl";
      User user0 = new User("9w6b~U/L{w:uWl", "9w6b~U/L{w:uWl");
      user0.setAffiliation("");
      user0.setEmail("9w6b~U/L{w:uWl");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      user0.setCounty("");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("variable.category.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      valueLabel0.setMissingValue(false);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable3.getValueLabels();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = arrayList0.remove(0);
      derivedVariable1.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable2.removeSourceVariables(arrayList1);
      derivedVariable1.setCoded(true);
      ValueLabel valueLabel2 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel2);
      derivedVariable0.addValueLabel(valueLabel1);
      derivedVariable0.isCoded();
      derivedVariable3.getColumnEnd();
      derivedVariable1.getFilePath();
      assertEquals("9w6b~U/L{w:uWl", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.6669919055686817
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getLabel();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }
}
