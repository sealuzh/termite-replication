/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 02:26:55 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.509632127680959
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[8];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 2521;
      resultMatrixSignificance0.LEFT_PARENTHESES = "";
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 1;
      intArray0[0] = intArray1;
      resultMatrixSignificance0.m_NonSigWins = intArray0;
      resultMatrixSignificance0.getCount(480);
      resultMatrixSignificance0.padString("~<e?;gP-vF ", 480);
      resultMatrixSignificance0.getDefaultPrintColNames();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1268461319453733
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 35);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.setStdDevPrec((-1642));
      resultMatrixPlainText0.setMeanWidth(1659);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = (-1009);
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 1;
      resultMatrixCSV0.m_RowOrder = intArray0;
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setMean(1659, 0, 0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.3698617192691884
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.removeFilterName("");
      resultMatrixLatex0.m_MeanPrec = 496;
      resultMatrixLatex0.getColHidden(69);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setEnumerateRowNames(true);
      int[][] intArray0 = new int[0][0];
      resultMatrixPlainText0.setRanking(intArray0);
      resultMatrixPlainText0.m_StdDevPrec = 2636;
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9274829883654565
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-653);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.m_RowOrder = intArray0;
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setMeanWidth((-1));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      resultMatrixPlainText0.setMeanWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.toStringKey();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5724852920734067
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.addHeader("OY", "WaJfaM}");
      resultMatrixHTML0.toString();
      resultMatrixHTML0.setRowNameWidth((-163));
      resultMatrixHTML0.toStringHeader();
      resultMatrixHTML0.setSignificance(1714, 1714, 1714);
      int[] intArray0 = new int[8];
      intArray0[0] = 1714;
      intArray0[5] = (-163);
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[2] = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = "p";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      stringArray0[4] = "*";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText2.setRowHidden(46, true);
      resultMatrixPlainText2.getMean(18, 1714);
      resultMatrixPlainText1.addHeader("(", "*");
      resultMatrixHTML0.toStringRanking();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0829126413850387
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 3);
      resultMatrixPlainText0.getSummaryTitle(3);
      resultMatrixPlainText0.setStdDevPrec(34);
      resultMatrixPlainText0.setMeanWidth(3);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.toStringKey();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2160681192165166
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.getAverage(0);
      resultMatrixGnuPlot0.trimString("$\bullet$", 1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.542148681242061
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 35);
      int[] intArray0 = new int[1];
      intArray0[0] = 40;
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[6] = "*xy7-7O";
      stringArray0[7] = "*";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.setCount((-3630), (-1839.752122227001));
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixGnuPlot0.padString("*", 513);
      resultMatrixSignificance0.getDefaultShowStdDev();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8979325974734653
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder(intArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(56, 61);
      resultMatrixLatex0.setSignificance((-4478), 0, 0);
      resultMatrixLatex0.getAverage(61);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[][] intArray1 = new int[6][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      resultMatrixGnuPlot0.setSummary(intArray1, intArray1);
      // Undeclared exception!
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9274829883654556
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getSummaryTitle((-29));
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixPlainText0.setMeanWidth((-421));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.toStringKey();
      resultMatrixCSV0.getColName(1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5887702934205064
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-653);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.m_RowOrder = intArray0;
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setMeanWidth((-1));
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.removeFilterName("0tP.hy)EO.*b");
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = "(";
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      resultMatrixSignificance0.m_RowHidden = booleanArray0;
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText1.setRowHidden((-653), false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixPlainText1.setRowName((-1), "v");
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.setCount(418, 0.0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixPlainText0.getDefaultMeanWidth();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4654945723181054
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.addHeader("OY", "WaJfaM}");
      resultMatrixHTML0.toString();
      resultMatrixHTML0.setRowNameWidth((-163));
      resultMatrixHTML0.toStringHeader();
      resultMatrixHTML0.setSignificance(1714, 1714, 1714);
      int[] intArray0 = new int[8];
      intArray0[0] = 1714;
      intArray0[5] = (-163);
      intArray0[2] = 2;
      intArray0[3] = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSignificance(0, 2, 1714);
      resultMatrixLatex0.getAverage(0);
      resultMatrixLatex0.getDisplayRow(1714);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      int[][] intArray1 = new int[7][8];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[5];
      intArray2[0] = 2;
      intArray2[1] = (-233);
      intArray2[2] = (-1);
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray1, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.5724852920734067
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.addHeader("OY", "F^!V");
      resultMatrixHTML0.toString();
      resultMatrixHTML0.setRowNameWidth(1382);
      resultMatrixHTML0.toStringHeader();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.setSignificance(2, 20, (-1599));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1599);
      intArray0[1] = 1;
      intArray0[2] = 20;
      resultMatrixPlainText1.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(resultMatrixHTML1);
      resultMatrixPlainText0.setRowHidden(1714, true);
      ResultMatrixPlainText resultMatrixPlainText4 = new ResultMatrixPlainText(resultMatrixHTML1);
      resultMatrixPlainText4.getMean((-2), 8);
      resultMatrixPlainText1.addHeader("Q/me@v>VR2ME'X]]=", "*");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.5635771502183986
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.addHeader("OY", "WaJfaM}");
      resultMatrixHTML0.toString();
      resultMatrixHTML0.setRowNameWidth((-163));
      resultMatrixHTML0.toStringHeader();
      resultMatrixHTML0.setSignificance(1714, 1714, 1714);
      int[] intArray0 = new int[8];
      intArray0[0] = 1714;
      intArray0[5] = (-163);
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[2] = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder(intArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "(";
      stringArray0[2] = "v";
      stringArray0[3] = "col-name-width";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.setPrintRowNames(true);
      resultMatrixSignificance0.setPrintRowNames(true);
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance1.setCount(1, 0.0);
      resultMatrixSignificance0.setPrintRowNames(true);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5428141043155468
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder(intArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      stringArray0[4] = "4OC";
      stringArray0[5] = "j`";
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText1);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      resultMatrixPlainText0.setRowHidden(2, true);
      resultMatrixPlainText0.getMean(0, 1);
      resultMatrixPlainText2.addHeader("0", "*");
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.6747728075668142
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 3);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[][] intArray0 = new int[9][6];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 3;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      int[] intArray2 = new int[5];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 2;
      intArray2[4] = 2;
      resultMatrixPlainText1.setColOrder(intArray2);
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.setRowHidden(1, true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getDefaultRowNameWidth();
      resultMatrixPlainText0.setRowName(0, "2");
      resultMatrixPlainText0.setOptions((String[]) null);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.099704350637984
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setStdDevPrec(1675);
      resultMatrixPlainText0.setMeanWidth(1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 1;
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.setMean(0, 1, 1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.4044794788071098
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.addHeader("OY", "");
      resultMatrixHTML0.toString();
      resultMatrixHTML0.setRowNameWidth((-163));
      resultMatrixHTML0.toStringHeader();
      resultMatrixHTML0.setSignificance(1714, 1714, 1714);
      int[][] intArray0 = new int[7][6];
      int[] intArray1 = new int[8];
      intArray1[0] = 1714;
      intArray1[1] = (-163);
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 3688;
      intArray1[7] = (-163);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1714;
      intArray2[1] = 0;
      intArray2[2] = 3688;
      intArray2[3] = (-163);
      intArray2[4] = 0;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = (-163);
      intArray3[1] = 0;
      intArray3[2] = 3688;
      intArray3[3] = 0;
      intArray3[5] = 1714;
      intArray3[6] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = (-163);
      intArray4[1] = (-163);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 3688;
      intArray6[1] = 0;
      intArray6[2] = 2434;
      intArray6[3] = 3688;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 3688;
      intArray7[1] = 3688;
      intArray7[2] = 804;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.830650293601349
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 57;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 40);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      int[][] intArray1 = new int[3][7];
      resultMatrixGnuPlot0.setStdDevWidth(95);
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixGnuPlot1.trimString("", 0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.897932597473466
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 35);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      boolean boolean0 = resultMatrixPlainText0.getDefaultEnumerateColNames();
      assertTrue(boolean0);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 40;
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixPlainText0.setRowHidden(11, true);
      resultMatrixPlainText0.meanPrecTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColHidden(3, false);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3425359764412272
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "(";
      resultMatrixPlainText0.setOptions(stringArray0);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setStdDevPrec(30);
      boolean boolean0 = resultMatrixGnuPlot0.getRemoveFilterName();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.402325528380457
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixSignificance1);
      resultMatrixPlainText1.toString();
      resultMatrixPlainText1.setStdDevPrec(37);
      resultMatrixPlainText1.getRowHidden(2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(6, 2);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8578613523789507
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 35);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      int[] intArray0 = new int[1];
      intArray0[0] = 40;
      resultMatrixPlainText0.setColOrder(intArray0);
      resultMatrixPlainText0.setRowHidden(11, true);
      resultMatrixPlainText0.setRowHidden(2, true);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getMean(11, 11);
      assertEquals(0, resultMatrixPlainText1.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixPlainText1.getRowCount());
      assertEquals(1, resultMatrixPlainText1.getColCount());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.594973923595445
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSummaryTitle(0);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixPlainText0.setStdDevPrec(1675);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ")";
      stringArray0[1] = "*";
      stringArray0[2] = "a";
      stringArray0[3] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = "(";
      stringArray0[6] = "a";
      stringArray0[7] = " ";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.setRowHidden(1675, true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixPlainText0.setRowName(2, "a");
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.setCount(418, 1675);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6316121865953988
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(27, 27);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setStdDevPrec(2);
      resultMatrixCSV0.clearRanking();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      resultMatrixCSV0.clear();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixHTML0.printColNamesTipText();
      assertEquals(27, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(27, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[6];
      resultMatrixGnuPlot0.setRowNameWidth(7);
      intArray0[0] = 0;
      intArray0[1] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColName((-3327));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(470, 622);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.5428141043155468
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder(intArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.setRowHidden(1, true);
      resultMatrixPlainText0.getMean(1, (-2270));
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(592, 3);
      resultMatrixPlainText0.m_RowOrder = null;
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder((int[]) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[6][9];
      intArray0[0] = null;
      intArray0[1] = null;
      intArray0[2] = null;
      intArray0[3] = null;
      intArray0[4] = null;
      intArray0[5] = null;
      int[][] intArray1 = new int[4][1];
      int[] intArray2 = new int[2];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray1[0] = intArray2;
      intArray1[1] = null;
      intArray1[2] = null;
      intArray1[3] = null;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray0, intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.845638493134258
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2261, 0);
      resultMatrixLatex0.getAverage((-693));
      resultMatrixLatex0.getDisplayRow(0);
      resultMatrixLatex0.getCountWidth();
      resultMatrixLatex0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(50, 2261);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.19055349530931
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 3);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[][] intArray0 = new int[9][6];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 3;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[3] = 3;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 3;
      intArray3[1] = 1;
      intArray3[2] = 1;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = 3;
      intArray4[2] = 2;
      intArray4[3] = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.getAverage(1);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(2, (-622));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.3626909365899262
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 57;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText1.toString();
      int int0 = (-1749);
      resultMatrixPlainText0.setStdDevPrec((-1749));
      resultMatrixPlainText1.getRowHidden(0);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.5652429068472755
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText2);
      resultMatrixSignificance0.setMeanWidth((-157));
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "j@Mdo;,MTpfk";
      stringArray0[2] = "(";
      stringArray0[3] = " ";
      stringArray0[4] = "(";
      stringArray0[5] = "*";
      stringArray0[6] = "";
      stringArray0[7] = "*";
      stringArray0[8] = "(";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText1.setRowHidden((-377), false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      
      resultMatrixPlainText0.setRowName(1, "");
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.555315179776107
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 102);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.setColOrder(intArray0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText1.setRowHidden(60, false);
      assertEquals(2, resultMatrixPlainText1.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(125, 2);
      resultMatrixPlainText0.m_PrintColNames = false;
      resultMatrixSignificance1.getDefaultRowNameWidth();
      resultMatrixPlainText0.setRowName(1, "(");
      resultMatrixSignificance0.getVisibleRowCount();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.1953977629542814
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot();
      int[][] intArray1 = new int[5][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[4];
      resultMatrixGnuPlot3.getOptions();
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray1[3] = intArray2;
      intArray1[4] = intArray0;
      int[][] intArray3 = new int[4][9];
      intArray3[0] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.setSummary(intArray1, intArray3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.9671507217284234
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(25, 25);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.WIN_STRING = ")";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.padString("-summary data not set-", 2);
      resultMatrixLatex0.setSignificance(0, 0, 56);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[0][3];
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.5590811668541544
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-653);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setMeanWidth((-2286));
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "[CUPO/$!Ta*T=(c-i";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = " ";
      stringArray0[6] = "";
      stringArray0[7] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance1.toStringKey();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixSignificance1.setPrintRowNames(false);
      resultMatrixSignificance0.setPrintRowNames(false);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "Key:\n1 col0\n";
      stringArray1[2] = "v";
      ResultMatrixLatex.main(stringArray1);
      resultMatrixSignificance0.setCount(2, 0.0);
      resultMatrixSignificance0.setPrintRowNames(true);
      boolean boolean0 = resultMatrixSignificance1.isAverage(0);
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertFalse(boolean0);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixSignificance1.getPrintColNames());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0008303170414576
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-653);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 40);
      assertEquals(3, resultMatrixGnuPlot0.getColCount());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = "v";
      stringArray0[3] = "";
      stringArray0[4] = " ";
      stringArray0[5] = "*";
      stringArray0[6] = " ";
      stringArray0[7] = "*";
      stringArray0[8] = " ";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      resultMatrixLatex0.setSignificance(40, (-653), 282);
      double double0 = resultMatrixLatex0.getAverage((-653));
      assertEquals(0.0, double0, 0.01);
      
      int int0 = resultMatrixLatex0.getDisplayRow(316);
      assertEquals((-1), int0);
      
      int int1 = resultMatrixLatex0.getCountWidth();
      assertEquals(0, int1);
      
      resultMatrixLatex0.clearHeader();
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6023807799324836
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 57;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 40);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "]";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      int[][] intArray1 = new int[3][7];
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.m_HeaderValues = vector0;
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5652429068472755
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 3);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 3;
      intArray0[2] = 0;
      resultMatrixPlainText0.listOptions();
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = ")";
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText1);
      resultMatrixSignificance0.setMeanWidth((-1770));
      assertEquals(3, resultMatrixSignificance0.getVisibleColCount());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      stringArray0[3] = ")";
      stringArray0[4] = "v";
      stringArray0[5] = " ";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText1.setRowHidden((-1), false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixPlainText1.setRowName(1, "");
      resultMatrixSignificance0.setShowAverage(false);
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(5, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.529881130591447
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(25, 25);
      int int0 = 279;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setMeanWidth(1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "(";
      stringArray0[4] = ")";
      resultMatrixHTML0.setShowAverage(true);
      stringArray0[5] = ")";
      stringArray0[6] = " ";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2610, 1065);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.5485425934110837
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(592, 3);
      resultMatrixPlainText0.m_RowOrder = null;
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder((int[]) null);
      assertEquals(3, resultMatrixPlainText0.getVisibleRowCount());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.m_ColOrder = null;
      resultMatrixPlainText0.setRowHidden(5, true);
      resultMatrixPlainText0.getMean(24, 24);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.isRowName(3);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 40);
      int[][] intArray1 = new int[1][6];
      intArray1[0] = intArray0;
      resultMatrixGnuPlot0.setRanking(intArray1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.clearSummary();
      assertEquals(40, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(3, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.15163389384129
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[5][7];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = 2;
      intArray3[3] = 610;
      intArray3[4] = 1;
      intArray3[5] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 1;
      intArray5[1] = 0;
      intArray5[2] = 1;
      intArray5[3] = 1;
      intArray5[4] = 0;
      intArray0[4] = intArray5;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setPrintRowNames(true);
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex0.getDisplayRow(0);
      int int1 = resultMatrixLatex0.getCountWidth();
      assertTrue(int1 == int0);
      
      resultMatrixLatex0.clearHeader();
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.enumerateRowNamesTipText();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.802072251817903
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[5][7];
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.clearRanking();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 49);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(resultMatrixHTML1);
      resultMatrixHTML2.setStdDevWidth(610);
      resultMatrixHTML1.getDefaultStdDevPrec();
      resultMatrixHTML0.getDisplayName();
      assertFalse(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.9934240420397407
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(25, 25);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.WIN_STRING = "0uQ3*:}V_";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      String string0 = resultMatrixLatex0.doubleToString(0, 2);
      assertEquals("0.00", string0);
      
      String string1 = resultMatrixLatex0.padString("-summary data not set-", 2);
      assertEquals("-s", string1);
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex1.setSignificance(0, 0, 56);
      double double0 = resultMatrixLatex0.getAverage((-2));
      assertEquals(0.0, double0, 0.01);
      
      int int0 = resultMatrixLatex1.getDisplayRow(14);
      assertEquals(14, int0);
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      
      resultMatrixLatex0.getCountWidth();
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML0.addHeader("*", "v");
      int[][] intArray0 = new int[8][0];
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 1;
      intArray3[3] = (-2074);
      intArray3[4] = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML1);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      String string0 = resultMatrixLatex0.colNameWidthTipText();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals("The maximum width of the column names (0 = optimal).", string0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.181948456407898
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 35);
      resultMatrixPlainText0.printRowNamesTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 1);
      assertEquals(2, resultMatrixGnuPlot1.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot1.toStringMatrix();
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 '' ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\nreplot \"plot.dat\" using 1:3 with lines title \"col1\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.419412367797824
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[4][0];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 0;
      intArray1[7] = 0;
      intArray1[8] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText1.toString();
      resultMatrixPlainText1.setStdDevPrec(0);
      resultMatrixPlainText0.getRowHidden(1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(6, 1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.5680319755131236
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 35);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      int[] intArray0 = new int[1];
      intArray0[0] = 40;
      resultMatrixPlainText0.setColOrder(intArray0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.setRowHidden(0, true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixPlainText0.setRowName((-847), "-supervised..*");
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9884228485276774
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder(intArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(56, 61);
      resultMatrixLatex0.setSignificance((-4478), 0, 0);
      double double0 = resultMatrixLatex0.getAverage(61);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixLatex0.getDisplayRow(0);
      assertEquals(56, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      int[][] intArray1 = new int[8][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      resultMatrixGnuPlot1.setSummary(intArray1, intArray1);
      resultMatrixGnuPlot1.assign(resultMatrixGnuPlot0);
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot1.getDefaultShowStdDev());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(25, 25);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.WIN_STRING = "0uQ3*:}V_";
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getDisplayCol(28);
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals((-1), int0);
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5887702934205064
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-653);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.m_RowOrder = intArray0;
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setMeanWidth((-1));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = "(";
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      resultMatrixSignificance0.m_RowHidden = booleanArray0;
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText1.setRowHidden((-653), false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixPlainText1.setRowName((-1), "v");
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.setCount(418, 0.0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixSignificance0.getDefaultCountWidth();
      assertEquals(5, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.9678486540041416
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.doubleToString((-246.97180017), 1882);
      resultMatrixLatex0.getColOrder();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.getRevision();
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.toStringKey();
      assertFalse(resultMatrixGnuPlot1.getEnumerateRowNames());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.917018025490165
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.doubleToString((-246.97180017), 1882);
      resultMatrixLatex0.getColOrder();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.toStringKey();
      resultMatrixLatex0.assign(resultMatrixCSV0);
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
      
      resultMatrixGnuPlot1.enumerateColNamesTipText();
      resultMatrixGnuPlot1.getDefaultColNameWidth();
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.5539172126094667
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      stringArray0[1] = "(";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText1.getVisibleColCount();
      resultMatrixPlainText0.removeFilterName("KPcy^Hv%.DkkuOQ1");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixPlainText1.clear();
      resultMatrixPlainText1.padString("", 2, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText1);
      String[] stringArray1 = new String[4];
      stringArray1[0] = ")";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCountWidth(2);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixPlainText0.getMeanWidth();
      resultMatrixHTML0.toStringSummary();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.6296046347202133
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      stringArray0[1] = "*";
      stringArray0[2] = ")";
      resultMatrixPlainText0.padString("iYsAx,", 0);
      stringArray0[3] = "v";
      stringArray0[4] = "(";
      resultMatrixPlainText0.setOptions(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixPlainText0.m_HeaderValues = vector0;
      vector0.remove((Object) "u\"P}Q(+dWShg");
      vector0.trimToSize();
      resultMatrixPlainText0.padString("u\"P}Q(+dWShg", (-1818), true);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.toString();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setColNameWidth((-829));
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getMeanPrec();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringRanking();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.185256796640907
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 35);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex1.getColCount());
      
      resultMatrixLatex1.toArray();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex1);
      double double0 = resultMatrixLatex2.getAverage(3);
      assertEquals(0.0, double0, 0.01);
      assertEquals(2, resultMatrixLatex2.getStdDevPrec());
      assertEquals(1, resultMatrixLatex2.getVisibleRowCount());
      assertTrue(resultMatrixLatex2.getPrintRowNames());
      
      String string0 = resultMatrixGnuPlot0.trimString("$circ$", 339);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals("$circ$", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[2];
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.listOptions();
      intArray0[0] = 1;
      intArray0[1] = 1;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      int int0 = (-304);
      resultMatrixSignificance0.trimString((String) null, (-304));
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize((-304), (-397));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.4342629372277247
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = 40;
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = "*";
      stringArray0[3] = ")";
      stringArray0[4] = "9*05lv-ub/)9h(QuU";
      stringArray0[5] = ")";
      stringArray0[6] = ")";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.getVisibleColCount();
      resultMatrixPlainText0.removeFilterName(")");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3706, 210);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.456201183276466
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[][] intArray1 = new int[1][7];
      int[] intArray2 = new int[1];
      intArray2[0] = 2;
      intArray1[0] = intArray2;
      resultMatrixGnuPlot1.setSummary(intArray1, intArray1);
      resultMatrixGnuPlot0.assign(resultMatrixGnuPlot1);
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot1.getEnumerateRowNames());
      assertFalse(resultMatrixGnuPlot1.getDefaultShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot1.getRowCount());
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.5344988816472194
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "(";
      stringArray0[5] = "v";
      stringArray0[6] = ")";
      int[][] intArray0 = new int[7][0];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 1;
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText2);
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      
      resultMatrixSignificance0.setMeanWidth(6);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText();
      resultMatrixPlainText3.setRowHidden(6, true);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixPlainText3.setRowName((-377), " lines");
      assertEquals(25, resultMatrixPlainText3.getRowNameWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.5467321616784386
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSummaryTitle(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setMeanWidth(57);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[5][5];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 2;
      intArray3[1] = 3;
      intArray3[2] = 57;
      intArray3[3] = 2;
      intArray3[4] = 10;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 1;
      intArray4[1] = 3;
      intArray4[2] = 3;
      intArray4[3] = (-32);
      intArray4[4] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[7];
      intArray5[0] = (-2);
      intArray5[1] = 0;
      intArray5[2] = 1;
      intArray5[3] = 0;
      intArray5[4] = 2;
      intArray5[5] = 2;
      intArray5[6] = 1;
      intArray0[4] = intArray5;
      resultMatrixSignificance0.m_Wins = intArray0;
      resultMatrixPlainText2.setRowHidden(1, false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(resultMatrixPlainText0);
      assertTrue(resultMatrixPlainText3.getPrintColNames());
      assertEquals(0, resultMatrixPlainText3.getStdDevWidth());
      
      resultMatrixPlainText2.setRowName((-1567), ")");
      assertEquals(1, resultMatrixPlainText2.getVisibleRowCount());
      assertFalse(resultMatrixPlainText2.getEnumerateRowNames());
      assertEquals(25, resultMatrixPlainText2.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText2.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText2.getMeanPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.558881486459393
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-653);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.m_RowOrder = intArray0;
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setMeanWidth((-1));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = "(";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText1.setRowHidden((-653), false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      
      resultMatrixPlainText1.setRowName((-1), "v");
      resultMatrixPlainText1.setColOrder((int[]) null);
      assertEquals(2, resultMatrixPlainText1.getDefaultStdDevPrec());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.546625096649972
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "v";
      int[] intArray0 = new int[8];
      intArray0[0] = 279;
      intArray0[1] = 279;
      intArray0[2] = 279;
      intArray0[3] = 0;
      intArray0[4] = 279;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 2;
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.setMeanWidth(279);
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.assign(resultMatrixSignificance0);
      resultMatrixSignificance1.toStringKey();
      resultMatrixSignificance1.setPrintRowNames(false);
      resultMatrixSignificance1.setPrintRowNames(true);
      String[] stringArray1 = new String[0];
      ResultMatrixLatex.main(stringArray1);
      resultMatrixSignificance1.setCount(0, 2);
      assertEquals(279, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance1.getCountWidth());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.1496942847305873
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[6];
      intArray0[0] = 3;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 0;
      int[][] intArray1 = new int[4][8];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[5];
      intArray2[0] = 765;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 0;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixCSV0.m_Significance = intArray1;
      intArray0[4] = 1;
      intArray0[5] = 0;
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.m_CountWidth = 0;
      resultMatrixCSV0.WIN_STRING = "";
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.setMeanWidth(278);
      resultMatrixCSV0.getStdDev(765, 97);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.040438727359169
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean[] booleanArray0 = null;
      resultMatrixLatex0.m_ShowStdDev = false;
      int int0 = 2435;
      resultMatrixLatex0.m_EnumerateRowNames = false;
      resultMatrixLatex0.getColName(2435);
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.clearHeader();
      resultMatrixLatex0.m_ColHidden = null;
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.removeFilterName("-ranking data not set-");
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString(621.0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.615943935369156
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-653);
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.8428806153171315
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      stringArray0[3] = "v";
      int[] intArray0 = new int[8];
      intArray0[0] = 279;
      intArray0[1] = 279;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(6, 14);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(14, 97);
      int[][] intArray1 = new int[6][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int[] intArray2 = new int[2];
      intArray2[0] = 6;
      intArray2[1] = 2;
      intArray1[5] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.meanPrecTipText();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.isStdDev(657);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.6511160547620025
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 3);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[][] intArray0 = new int[9][6];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 3;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 2;
      intArray2[3] = 3;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 3;
      intArray3[1] = 1;
      intArray3[2] = 1;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = 3;
      intArray4[2] = 2;
      intArray4[3] = 1;
      intArray4[4] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = (-2942);
      intArray5[1] = 0;
      intArray5[2] = 1;
      intArray5[3] = 1078;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = 3;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[2];
      intArray7[0] = 2;
      intArray7[1] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = 0;
      intArray8[1] = 1;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[7];
      intArray9[0] = 3;
      intArray9[1] = 0;
      intArray9[2] = 2;
      intArray9[3] = 1078;
      intArray9[4] = 2;
      intArray9[5] = 2;
      intArray9[6] = 1;
      intArray0[8] = intArray9;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.546625096649972
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(25, 25);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.WIN_STRING = "0uQ3*:}V_";
      int[][] intArray0 = new int[4][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setMeanWidth((-278));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = ")";
      stringArray0[2] = "(";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.toStringKey();
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(2, 44);
      resultMatrixSignificance2.setPrintRowNames(false);
      resultMatrixSignificance1.setPrintRowNames(false);
      ResultMatrixLatex.main(stringArray0);
      resultMatrixSignificance0.setCount(0, 0);
      assertEquals(25, resultMatrixSignificance0.getVisibleColCount());
      
      resultMatrixSignificance2.setPrintRowNames(true);
      resultMatrixSignificance2.getDefaultSignificanceWidth();
      assertEquals(44, resultMatrixSignificance2.getVisibleRowCount());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.8978877746891887
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setCountWidth(2);
      resultMatrixPlainText0.padString(" yerrorbars", 490, false);
      resultMatrixPlainText0.setMeanWidth(765);
      assertEquals(765, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(592, 3);
      resultMatrixPlainText0.m_RowOrder = null;
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColOrder((int[]) null);
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCountWidth((-1242));
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[5];
      try { 
        resultMatrixLatex0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.4919032977391646
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "$circ$";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      stringArray0[4] = "(";
      stringArray0[5] = "(";
      resultMatrixLatex0.toArray();
      stringArray0[6] = "$circ$";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.toStringMatrix();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.5772505844413014
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 35);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setMeanWidth(2568);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "$\bullet$";
      stringArray0[1] = "(";
      stringArray0[2] = "$circ$";
      stringArray0[3] = ")";
      stringArray0[4] = "(";
      stringArray0[5] = " ";
      stringArray0[6] = "";
      stringArray0[7] = " ";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.setRowHidden(2, false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.setRowName(40, "yM3}v&-AO0E");
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      
      resultMatrixPlainText1.setStdDevWidth(2);
      assertEquals(35, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixPlainText1.getPrintColNames());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int[] intArray0 = new int[12];
      intArray0[0] = 57;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 40);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      int[][] intArray1 = new int[3][7];
      intArray1[2] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.065071157184263
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.doubleToString(1384.929690563921, 3384);
      String string0 = resultMatrixLatex0.padString(")", 0);
      assertEquals(")", string0);
      
      resultMatrixLatex0.LOSS_STRING = "'Oz1fPFMv";
      assertEquals(1, resultMatrixLatex0.getRowCount());
      
      resultMatrixLatex0.setSignificance(0, 0, 0);
      double double0 = resultMatrixLatex0.getAverage((-228));
      assertEquals(0.0, double0, 0.01);
      
      int int0 = resultMatrixLatex0.getDisplayRow(570);
      assertEquals((-1), int0);
      
      int int1 = resultMatrixLatex0.getCountWidth();
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(0, int1);
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.2522695733518288
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "(";
      stringArray0[5] = "v";
      stringArray0[6] = ")";
      int[][] intArray0 = new int[7][0];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 2;
      intArray2[4] = 0;
      intArray2[5] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray3[3] = 2;
      intArray3[4] = 2;
      intArray3[5] = 1;
      intArray3[6] = 1;
      intArray3[7] = 0;
      intArray3[8] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 1;
      intArray4[1] = 30;
      intArray4[2] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 30;
      intArray5[1] = 0;
      intArray5[2] = 2;
      intArray5[3] = 0;
      intArray5[4] = 1;
      intArray5[5] = 1;
      intArray5[6] = 1;
      intArray5[7] = 30;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 1;
      intArray6[1] = 30;
      intArray6[2] = 2;
      intArray6[3] = 2;
      intArray6[4] = 1;
      intArray6[5] = 30;
      intArray6[6] = 2;
      intArray6[7] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 233;
      intArray7[1] = 0;
      intArray7[2] = 30;
      intArray7[3] = 30;
      intArray7[4] = 30;
      intArray0[6] = intArray7;
      resultMatrixPlainText0.m_Wins = intArray0;
      stringArray0[7] = "(";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.setStdDevPrec((-1098));
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.4044794788071098
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.addHeader("v", "WaJfaM}");
      resultMatrixHTML0.toString();
      resultMatrixHTML0.setRowNameWidth(2);
      resultMatrixHTML0.toStringHeader();
      resultMatrixHTML0.setSignificance(1714, 1714, 1714);
      int[][] intArray0 = new int[7][6];
      int[] intArray1 = new int[8];
      intArray1[0] = 1714;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 3688;
      intArray1[7] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1714;
      intArray2[1] = 0;
      intArray2[2] = 3688;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 3688;
      intArray3[3] = 3688;
      intArray3[4] = 2;
      intArray3[5] = 1714;
      intArray3[6] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 1;
      intArray4[1] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 3688;
      intArray6[1] = 0;
      intArray6[2] = 2434;
      intArray6[3] = 3688;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 3688;
      intArray7[1] = 3688;
      intArray7[2] = 3688;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.241971710311007
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.getRowName(2);
      resultMatrixLatex0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString((-246.97180017), (-1484));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.5433263791664626
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(25, 25);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.WIN_STRING = "0uQ3*:}V_";
      int[][] intArray0 = new int[4][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setMeanWidth((-278));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = ")";
      stringArray0[2] = "(";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(2, 44);
      resultMatrixSignificance1.getDefaultRowNameWidth();
      assertFalse(resultMatrixSignificance1.getPrintColNames());
      assertEquals(0, resultMatrixSignificance1.getStdDevWidth());
      assertEquals(25, resultMatrixSignificance1.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance1.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 509);
      resultMatrixPlainText0.setRowName((-5213), "0uQ3*:}V_");
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.LEFT_PARENTHESES = null;
      String string0 = resultMatrixPlainText0.padString(")", 0, false);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(")", string0);
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.4044794788071098
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.addHeader("OY", "WaJfaM}");
      resultMatrixHTML0.toString();
      resultMatrixHTML0.setRowNameWidth((-163));
      resultMatrixHTML0.toStringHeader();
      resultMatrixHTML0.setSignificance(1714, 1714, 1714);
      int[][] intArray0 = new int[7][6];
      int[] intArray1 = new int[8];
      intArray1[0] = 1714;
      intArray1[1] = (-163);
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 3688;
      intArray1[7] = (-163);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1714;
      intArray2[1] = (-1552);
      intArray2[2] = 3688;
      intArray2[3] = (-163);
      intArray2[4] = 0;
      intArray2[5] = 1714;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = (-163);
      intArray3[1] = 0;
      intArray3[2] = 3688;
      intArray3[3] = 3688;
      intArray3[4] = 2;
      intArray3[5] = 1714;
      intArray3[6] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = (-163);
      intArray4[1] = (-163);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 3688;
      intArray6[1] = 0;
      intArray6[2] = 2434;
      intArray6[3] = 3688;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = (-1552);
      intArray7[1] = 3688;
      intArray7[2] = 804;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3, 3);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean boolean0 = resultMatrixCSV0.getEnumerateRowNames();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(3, resultMatrixCSV0.getRowCount());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(3, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.69690085000884
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      String string0 = resultMatrixHTML1.toStringKey();
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertFalse(resultMatrixHTML1.getDefaultShowAverage());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.5652429068472755
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2397, 1);
      resultMatrixPlainText1.setEnumerateRowNames(false);
      assertEquals(1, resultMatrixPlainText1.getRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = "(";
      stringArray0[3] = "yM3}v&-AO0E";
      stringArray0[4] = " ";
      stringArray0[5] = "$circ$";
      stringArray0[6] = " ";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText3.setRowHidden(111, false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      
      resultMatrixPlainText3.setRowName(59, " ");
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText3.getSignificanceWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[7][0];
      int[] intArray1 = new int[4];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[1] = 30;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 30;
      intArray5[7] = 30;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[1] = 30;
      intArray6[5] = 30;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 233;
      intArray2[3] = 30;
      intArray7[3] = 30;
      intArray0[6] = intArray7;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getColCount());
      
      String[] stringArray1 = new String[4];
      stringArray1[0] = "(";
      stringArray1[1] = ")";
      stringArray1[2] = "$circ$";
      stringArray1[3] = "(";
      resultMatrixLatex0.m_ColNames = stringArray1;
      resultMatrixLatex0.headerKeys();
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }
}
