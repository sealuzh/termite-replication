/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:09:05 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.NativeGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.firebirdsql.jdbc.field.FBLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5636500566407334
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.addFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      TransactionParameterBufferImpl transactionParameterBufferImpl1 = new TransactionParameterBufferImpl();
      fBCachedFetcher0.beforeFirst();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      fBCachedFetcher0.isLast();
      FBObjectListener.ResultSetListener fBObjectListener_ResultSetListener0 = mock(FBObjectListener.ResultSetListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = fBCachedFetcher0.relative(39);
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][9];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)72;
      byteArray1[1] = (byte) (-48);
      byteArray1[2] = (byte)8;
      byteArray1[3] = (byte)88;
      byteArray1[4] = (byte) (-104);
      byteArray1[5] = (byte)22;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      linkedList0.iterator();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.320486387162678
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)98;
      byteArray1[1] = (byte)25;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte)34;
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      FBLongVarCharField[] fBLongVarCharFieldArray1 = new FBLongVarCharField[7];
      fBLongVarCharFieldArray1[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray1[6] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray1);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][4];
      byte[] byteArray1 = new byte[5];
      byte byte0 = (byte) (-7);
      byteArray1[0] = (byte) (-7);
      byteArray1[2] = (byte) (-64);
      byteArray1[3] = (byte)55;
      byteArray1[4] = (byte) (-110);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-110);
      byteArray2[1] = (byte) (-2);
      byteArray2[2] = (byte) (-7);
      byteArray2[3] = (byte) (-64);
      byteArray2[4] = (byte)55;
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[8];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobFieldArray0[4];
      fBCachedBlobFieldArray0[7] = fBCachedBlobFieldArray0[6];
      linkedList0.toArray(fBCachedBlobFieldArray0);
      byteArray2[5] = (byte)55;
      byteArray2[6] = (byte) (-110);
      byteArray2[7] = (byte)55;
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9386484387931637
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.clear();
      fBCachedFetcher0.last();
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[2] = (byte)98;
      byteArray1[1] = (byte)25;
      byteArray1[2] = (byte)107;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte)34;
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[4];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray0);
      byteArray1[5] = (byte) (-69);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-59);
      byteArray2[1] = (byte)98;
      byteArray2[2] = (byte)39;
      byteArray2[3] = (byte)107;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.previous();
      linkedList0.add(byteArray0);
      Consumer<byte[][]> consumer0 = (Consumer<byte[][]>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      try { 
        fBCachedFetcher0.absolute((byte)0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1940875411870104
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.addFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(2978);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.addFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.updateRow(byteArray0);
      //  // Unstable assertion: assertTrue(fBCachedFetcher0.isBeforeFirst());
      //  // Unstable assertion: assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4952873753338283
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.addFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      transactionParameterBufferImpl0.deepCopy();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      fBCachedFetcher0.isLast();
      FBObjectListener.ResultSetListener fBObjectListener_ResultSetListener0 = mock(FBObjectListener.ResultSetListener.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.422159755765203
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.addFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.afterLast();
      // Undeclared exception!
      try { 
        fBManagedConnectionFactory0.getDefaultConnectionRequestInfo();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Specified GDS type PURE_JAVA is unknown.
         //
         verifyException("org.firebirdsql.gds.impl.GDSFactory", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.parallelStream();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][4];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-63);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-63);
      byteArray2[1] = (byte) (-63);
      byteArray2[2] = (byte) (-63);
      byteArray2[3] = (byte) (-63);
      byteArray2[4] = (byte) (-63);
      byteArray2[5] = (byte) (-63);
      linkedList2.add(byteArray0);
      byteArray2[6] = (byte) (-63);
      byteArray2[7] = (byte) (-63);
      byteArray2[8] = (byte) (-63);
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList4.clear();
      byte[][] byteArray3 = new byte[6][7];
      byteArray3[0] = byteArray2;
      byteArray3[1] = byteArray2;
      byteArray3[2] = byteArray2;
      byteArray3[3] = byteArray2;
      byteArray3[4] = byteArray1;
      byteArray3[5] = byteArray1;
      linkedList1.add(byteArray3);
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList6 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList7 = new LinkedList<byte[][]>(linkedList2);
      LinkedList<byte[][]> linkedList8 = new LinkedList<byte[][]>();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
      
      boolean boolean1 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.265443679754371
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.isBeforeFirst();
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      GDSType.getType("blobBufferSize");
      FBConnectionProperties fBConnectionProperties1 = new FBConnectionProperties();
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null, fBConnectionProperties1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      byte[][] byteArray0 = new byte[2][6];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)0;
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.addFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6745460275183657
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.parallelStream();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(326, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      ScheduledFuture<String> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule(callable0, 300L, timeUnit0);
      delayQueue0.add((Delayed) scheduledFuture0);
      delayQueue0.poll();
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[9];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[7] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[8] = fBCachedBlobField0;
      linkedList1.toArray(fBCachedBlobFieldArray0);
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList2, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.first();
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher1.isLast());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-7);
      byteArray1[2] = (byte) (-64);
      byteArray1[3] = (byte)55;
      byteArray1[4] = (byte) (-110);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-110);
      byteArray2[1] = (byte) (-2);
      byteArray2[2] = (byte) (-7);
      byteArray2[3] = (byte) (-64);
      byteArray2[4] = (byte)55;
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[8];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobFieldArray0[4];
      fBCachedBlobFieldArray0[7] = fBCachedBlobFieldArray0[6];
      linkedList0.toArray(fBCachedBlobFieldArray0);
      byteArray2[5] = (byte)55;
      byteArray2[6] = (byte) (-110);
      byteArray2[7] = (byte)55;
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[10][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      isc_stmt_handle_impl0.setRsrId(336330807);
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, 219, (-2063), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(32664);
      assertEquals(32664, fBCachedFetcher0.getFetchSize());
      
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList3, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher1.isLast());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9896217341979847
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte)25;
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[7];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray0);
      byte[][] byteArray1 = new byte[1][4];
      byteArray1[0] = byteArray0;
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9844935290697798
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.parallelStream();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      delayQueue0.remove((Object) linkedList0);
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(326, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      ScheduledFuture<String> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule(callable0, 300L, timeUnit0);
      delayQueue0.add((Delayed) scheduledFuture0);
      Delayed delayed0 = delayQueue0.poll();
      linkedList0.removeFirstOccurrence(delayed0);
      linkedList0.add((byte[][]) null);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      fBConnectionProperties0.setBlobBufferSize(5487);
      FBManagedConnectionFactory fBManagedConnectionFactory1 = new FBManagedConnectionFactory();
      // Undeclared exception!
      try { 
        fBManagedConnectionFactory1.getTpb(3596);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Specified GDS type PURE_JAVA is unknown.
         //
         verifyException("org.firebirdsql.gds.impl.GDSFactory", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)98;
      byteArray1[1] = (byte)25;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte)34;
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[7] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[8] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.isFirst();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      FBResultSet fBResultSet0 = null;
      try {
        fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.field.FBField", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0108940605206342
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.addFirst((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet0);
      fBCachedFetcher0.afterLast();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = isc_stmt_handle_impl0.getRsr_rdb();
      assertNull(isc_db_handle_impl0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.parallelStream();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList2);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      Comparator<byte[][]> comparator0 = (Comparator<byte[][]>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList2, fBResultSet0);
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.removeLastOccurrence((Object) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.absolute((-2));
      NativeGDSImpl nativeGDSImpl0 = null;
      try {
        nativeGDSImpl0 = new NativeGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.parallelStream();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(326, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      scheduledThreadPoolExecutor0.schedule(callable0, 300L, timeUnit0);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList1);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList1.sort(comparator0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList2, fBResultSet0);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)98;
      byteArray1[1] = (byte)25;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte)34;
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[7] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[8] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-7);
      byteArray1[2] = (byte) (-64);
      byteArray1[3] = (byte)55;
      byteArray1[4] = (byte) (-110);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-110);
      byteArray2[1] = (byte) (-2);
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[8];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[7] = fBCachedBlobField0;
      linkedList0.toArray(fBCachedBlobFieldArray0);
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isEmpty());
      
      boolean boolean0 = fBCachedFetcher0.relative((byte) (-110));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)98;
      byteArray1[1] = (byte)25;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte)34;
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[7] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[8] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((byte)39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<Delayed> linkedList1 = new LinkedList<Delayed>();
      linkedList0.removeAll(linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.add((byte[][]) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-7);
      byteArray1[1] = (byte) (-2);
      byteArray1[2] = (byte) (-64);
      byteArray1[3] = (byte)55;
      byteArray1[4] = (byte) (-110);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-110);
      byteArray2[1] = (byte) (-2);
      byteArray2[2] = (byte) (-7);
      byteArray2[3] = (byte) (-64);
      byteArray2[4] = (byte)55;
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[8];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[7] = fBCachedBlobFieldArray0[6];
      linkedList0.toArray(fBCachedBlobFieldArray0);
      byteArray2[5] = (byte)55;
      byteArray2[6] = (byte) (-110);
      byteArray2[7] = (byte)55;
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((byte) (-7));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][2];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)42;
      byteArray1[1] = (byte) (-44);
      byteArray1[2] = (byte) (-62);
      byteArray1[3] = (byte) (-128);
      byteArray1[4] = (byte)116;
      byteArray1[5] = (byte)10;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)42;
      byteArray2[1] = (byte) (-44);
      byteArray2[2] = (byte) (-128);
      byteArray2[3] = (byte) (-128);
      byteArray2[4] = (byte)116;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte)10;
      byteArray3[1] = (byte)42;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)10;
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.clear();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.parallelStream();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(326, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      ScheduledFuture<String> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule(callable0, 300L, timeUnit0);
      delayQueue0.add((Delayed) scheduledFuture0);
      Delayed delayed0 = delayQueue0.poll();
      linkedList0.removeFirstOccurrence(delayed0);
      linkedList0.add((byte[][]) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][3];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-16);
      byteArray2[1] = (byte) (-44);
      byteArray2[2] = (byte) (-63);
      byteArray2[3] = (byte)60;
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.clear();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
