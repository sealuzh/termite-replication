/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:09:38 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.renderable.ParameterBlock;
import java.io.FileNotFoundException;
import java.time.Month;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Function;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7584209838818394
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(357, 4096, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, 1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1955230216918316
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addElement(visualPageListItemArray0[4]);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.888599504919186
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(0, 0, true);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 1102);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("x");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1810814653491217
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = (-513);
      int[] intArray0 = new int[2];
      intArray0[0] = (-513);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -513
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.prependAllElements(stack0);
      assertEquals("[null, null, null, null]", stack0.toString());
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.377875407866384
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(0, 0, false);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 1102);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, linkedList0);
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1102;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 2;
      int[] intArray0 = new int[2];
      intArray0[1] = 677;
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8282495135936656
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[11];
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.593240982865726
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElement(visualPageListItemArray0[6]);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.221839667773992
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(2, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.getSize();
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      stack1.listIterator();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack3 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack3);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack2);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(2, (Collection<VisualPageListItem>) arrayDeque0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      Hashtable<RenderingHints.Key, Month> hashtable0 = new Hashtable<RenderingHints.Key, Month>();
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Hashtable<RenderingHints.Key, Object> hashtable1 = new Hashtable<RenderingHints.Key, Object>();
      HashMap<RenderingHints.Key, String> hashMap2 = new HashMap<RenderingHints.Key, String>();
      RenderingHints renderingHints2 = new RenderingHints(hashMap2);
      visualListModel0.moveUpIndex(2);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.669435108494575
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-486);
      intArray0[1] = (-486);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -486
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3150745853722885
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[2];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8512196535223662
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 2;
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      arrayDeque0.clear();
      visualListModel0.addAllElements(2, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      int int1 = 677;
      intArray0[0] = 677;
      visualListModel0.getSize();
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 677
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[1] = (-486);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-485)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2653188729187956
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 125;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addAllElements(739, (Collection<VisualPageListItem>) stack0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2653188729187956
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      visualListModel0.addAllElements(739, (Collection<VisualPageListItem>) stack0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = (-486);
      intArray0[1] = (-486);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -486
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3204863871626777
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = (-486);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Month> stack0 = new Stack<Month>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(stack0);
      visualListModel0.removeListDataListener(jComboBox0);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -486
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6232173987556875
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      VisualListModel visualListModel5 = new VisualListModel();
      visualListModel4.reverseElements(intArray0);
      VisualListModel visualListModel6 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      assertFalse(visualListModel2.equals((Object)visualListModel6));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.615537791432606
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElement(visualPageListItemArray0[6]);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.rotateClockwiseElements(intArray0);
      visualListModel3.addElement(visualPageListItemArray0[0]);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(9, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[1];
      intArray0[0] = 125;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 124
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3562103582442204
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = (-513);
      int[] intArray0 = new int[2];
      intArray0[0] = (-513);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -513
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      int[] intArray0 = new int[2];
      visualListModel0.clearData();
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5044904925605085
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      visualListModel0.moveDownIndexes(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3643764676852554
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1223;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      arrayDeque0.clear();
      int[] intArray0 = new int[6];
      intArray0[0] = (-1);
      intArray0[1] = 677;
      intArray0[2] = 2;
      intArray0[3] = (-1);
      intArray0[4] = 677;
      intArray0[5] = (-1);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Function<RenderingHints.Key, PdfGraphics2D.HyperLinkKey> function0 = (Function<RenderingHints.Key, PdfGraphics2D.HyperLinkKey>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any(java.awt.RenderingHints.Key.class));
      hashMap0.computeIfAbsent(sunHints_Key0, function0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1321);
      boolean boolean0 = true;
      visualListModel0.removeElements((-857), (-857), true);
      int int0 = 0;
      VisualPageListItem visualPageListItem0 = null;
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0, stack0);
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>(2447, 2447);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      boolean boolean1 = false;
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "qhi", parameterBlock0, renderingHints0, false);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"qhi\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = (-486);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      stack0.stream();
      visualListModel0.setData(visualPageListItemArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>(stack0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayList0);
      visualListModel0.addElementAt(visualPageListItemArray0[6], (-2385));
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(9, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, integer0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(1, (-3554), 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (1) and height (-3554) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addElement(visualPageListItemArray0[6]);
      visualListModel0.removeElementAt(5, true);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      int[] intArray1 = null;
      visualListModel2.moveUpIndexes(intArray0);
      visualListModel2.moveDownIndexes(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel5 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int int0 = 0;
      visualListModel0.removeElements(0, 0, false);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 1102);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      String string0 = "WARN";
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("WARN");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-278);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-278), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -278
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Month> stack0 = new Stack<Month>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(stack0);
      visualListModel0.addListDataListener(jComboBox0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements((-1230), (Collection<VisualPageListItem>) arrayList0);
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3572850199521964
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.elementsChanged();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.getValidElements();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel3.undeleteElements(intArray0);
      visualListModel2.removeElements(intArray0, true);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel5 = new VisualListModel();
      visualListModel4.rotateAnticlockwiseElements(intArray0);
      visualListModel4.undeleteElements(intArray0);
      visualListModel2.undeleteElements(intArray0);
      Object object0 = visualListModel2.getElementAt(1024);
      assertNull(object0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1766));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1766
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.removeElements((-860), 5, false);
      int int0 = 0;
      Vector<Month> vector0 = new Vector<Month>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.subList(0, (-1108), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1108)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 125;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int0 = (-1);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      visualListModel0.moveDownIndex(0);
      Hashtable<RenderingHints.Key, VisualPageListItem> hashtable0 = new Hashtable<RenderingHints.Key, VisualPageListItem>();
      visualListModel0.moveUpIndex(5);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      // Undeclared exception!
      try { 
        renderingHints0.put((Object) null, sunHints_Key0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 360;
      visualListModel0.removeElements(intArray0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      Object object0 = new Object();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((-267), (Collection<VisualPageListItem>) null);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(2, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      intArray0[0] = 677;
      Object object0 = new Object();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(1, (-1415), 677);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 677
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1069895807761196
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1321);
      visualListModel0.removeElements((-860), (-860), true);
      Vector<Month> vector0 = new Vector<Month>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.moveDownIndex(0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1321;
      intArray0[1] = 0;
      intArray0[2] = 1321;
      intArray0[3] = 0;
      visualListModel0.moveUpIndex((-860));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      visualListModel0.moveUpIndex(0);
      visualListModel0.moveDownIndex(4698);
      visualListModel0.removeElements(0, 1321, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-860), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -860
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addElementAt((VisualPageListItem) null, 2);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      RenderingHints renderingHints1 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      Hashtable<RenderingHints.Key, Month> hashtable0 = new Hashtable<RenderingHints.Key, Month>();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      RenderingHints renderingHints2 = new RenderingHints(hashMap2);
      visualListModel0.updateElementAt(2, (VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1321);
      visualListModel0.removeElements(1321, 2, false);
      Vector<Month> vector0 = new Vector<Month>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.subList(3363, 4096, true);
      visualListModel0.moveDownIndex(0);
      Hashtable<RenderingHints.Key, VisualPageListItem> hashtable0 = new Hashtable<RenderingHints.Key, VisualPageListItem>();
      visualListModel0.moveUpIndex((-2425));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key1, (Object) null);
      renderingHints0.add(renderingHints1);
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints2 = new RenderingHints(hashMap1);
      assertEquals(0, renderingHints2.size());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey1);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-646), 1, 1790);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 1790
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(1);
      BufferedImage bufferedImage0 = new BufferedImage(3555, 11, 1);
      Hashtable<RenderingHints.Key, Month> hashtable0 = new Hashtable<RenderingHints.Key, Month>();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      assertTrue(renderingHints0.isEmpty());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(125, 125);
      int int0 = (-278);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-278), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -278
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      int int0 = 570;
      // Undeclared exception!
      try { 
        visualListModel0.subList(570, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(570) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5100200881344885
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-486);
      intArray0[1] = (-486);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-486), 1328, true);
      visualListModel0.moveDownIndex((-541));
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      assertFalse(visualListModel1.equals((Object)visualListModel2));
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.481240517964154
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList(0, 0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = null;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.undeleteElements(intArray0);
      Object object0 = new Object();
      visualListModel0.undeleteElements(intArray0);
      Object object1 = new Object();
      int int0 = 2090;
      int int1 = 853;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(2090, 2090, 853);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 853
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7723221396381754
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<Month> vector0 = new Vector<Month>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.subList(0, Integer.MAX_VALUE, false);
      visualListModel0.moveDownIndex(Integer.MAX_VALUE);
      Hashtable<RenderingHints.Key, VisualPageListItem> hashtable0 = new Hashtable<RenderingHints.Key, VisualPageListItem>();
      visualListModel0.moveUpIndex(1956);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      visualListModel0.moveUpIndex((-1377));
      visualListModel0.moveDownIndex((-3169));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      int int1 = (-1359);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1359), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1359)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1, 1197, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.3092813506787335
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.undeleteElements(intArray0);
      visualListModel3.removeElements(439, (-484), true);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      visualListModel0.addListDataListener(jComboBox0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TreeSet<PdfGraphics2D.HyperLinkKey> treeSet0 = new TreeSet<PdfGraphics2D.HyperLinkKey>();
      PriorityQueue<PdfGraphics2D.HyperLinkKey> priorityQueue0 = new PriorityQueue<PdfGraphics2D.HyperLinkKey>((SortedSet<? extends PdfGraphics2D.HyperLinkKey>) treeSet0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      stack0.retainAll(treeSet0);
      visualListModel0.prependAllElements(stack0);
      assertEquals(10, stack0.capacity());
  }
}
