/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:11:16 GMT 2019
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import freemind.view.mindmapview.MultipleImage;
import java.awt.AWTEventMulticaster;
import java.awt.Button;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyListener;
import java.awt.event.InputEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.ImageObserver;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.JToggleButton;
import javax.swing.plaf.basic.BasicScrollBarUI;
import org.apache.batik.css.parser.Parser;
import org.apache.batik.dom.svg.SVGDOMImplementation;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.xml.serializer.ToUnknownStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.08241167864196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      Locale locale0 = new Locale("day", "day");
      jDayChooser0.setLocale(locale0);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser0.weekPanel = (JPanel) jDayChooser1;
      jDayChooser0.setDay(900);
      System.setCurrentTimeMillis((-52));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1900824706815674
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      AWTEventMulticaster.remove((KeyListener) jDayChooser0, (KeyListener) jDayChooser1);
      assertEquals(14, jDayChooser1.getDay());
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = new Boolean("day");
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      jDayChooser0.createToolTip();
      Locale locale0 = Locale.CANADA_FRENCH;
      jDayChooser0.setLocale(locale0);
      jDayChooser1.setDay((-992));
      System.setCurrentTimeMillis((-992));
      jDayChooser1.isWeekOfYearVisible();
      jDayChooser0.getSelectedDay();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.096578338635442
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Color color0 = new Color((-85), true);
      color0.getColorSpace();
      jDayChooser0.setWeekdayForeground(color0);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 8747, (String) null, 0);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.22778613979162
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getFocusTraversalPolicy();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "day");
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.updateUI();
      Date date1 = jDayChooser0.setMaxSelectableDate(date0);
      SystemColor systemColor0 = SystemColor.textText;
      Color.getColor("", (Color) systemColor0);
      Color.getColor("day", (-1133));
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      jDayChooser0.setMaxSelectableDate(date1);
      InputEvent.getModifiersExText((-1133));
      jDayChooser0.setMaxDayCharacters(98304);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4447165909717197
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setEnabled(false);
      jDayChooser0.init();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setMaxSelectableDate(date0);
      Date date1 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.getWeekdayForeground();
      MultipleImage multipleImage0 = new MultipleImage(1.7976931348623157E308);
      multipleImage0.getImage();
      jDayChooser0.prepareImage((Image) null, (-2631), (-1353), (ImageObserver) null);
      jDayChooser0.setFocus();
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(0, int0);
      
      jDayChooser0.updateUI();
      JSlider jSlider0 = new JSlider(0);
      KeyEvent keyEvent0 = new KeyEvent(jSlider0, (-2631), (-486L), (-2631), 84, 'o');
      jDayChooser0.keyReleased(keyEvent0);
      jDayChooser0.addListeners(0);
      jDayChooser0.setSelectableDateRange(date1, date1);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertNotSame(date1, date0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 8747, (String) null, 0);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 228);
      jDayChooser0.focusGained(focusEvent0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.1509776724370013
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBordersVisible(false);
      SVGDOMImplementation sVGDOMImplementation0 = new SVGDOMImplementation();
      sVGDOMImplementation0.getLocale();
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0967547282919528
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getVetoableChangeListeners();
      Color color0 = Color.white;
      jDayChooser0.sundayForeground = color0;
      color0.getRGBComponents((float[]) null);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-1001.1103F);
      floatArray0[1] = 2039.5173F;
      floatArray0[2] = 464.25F;
      jDayChooser0.updateUI();
      floatArray0[3] = 0.0F;
      floatArray0[4] = 1616.5F;
      jDayChooser0.setBackground(color0);
      float[] floatArray1 = color0.getRGBComponents(floatArray0);
      color0.getRGBColorComponents(floatArray1);
      int int0 = (-9);
      jDayChooser0.firePropertyChange("aGZ&", 116, (-9));
      jDayChooser0.decorationBordersVisible = false;
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.init();
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners((-1026));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1608966978625985
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      java.sql.Date date0 = new java.sql.Date(50L);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      Date date1 = mockSimpleDateFormat0.get2DigitYearStart();
      jDayChooser0.setSelectableDateRange(date1, date0);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = 5;
      jDayChooser0.contains(5, 5);
      jDayChooser0.getMaxDayCharacters();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDayPanel();
      // Undeclared exception!
      try { 
        TimeZone.getTimeZone((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TimeZone", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1338013620262806
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "West";
      stringArray0[1] = "(d";
      stringArray0[2] = "";
      MultipleImage multipleImage0 = new MultipleImage(50.0);
      multipleImage0.getImage();
      int int0 = 0;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.prepareImage((Image) null, 0, 17, (ImageObserver) null);
      jDayChooser0.setFocus();
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.updateUI();
      jDayChooser0.initDecorations();
      // Undeclared exception!
      try { 
        HsqlProperties.argArrayToProps(stringArray0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.isDecorationBordersVisible();
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.141533300437538
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      jDayChooser0.drawDays();
      jDayChooser0.setIgnoreRepaint(true);
      jDayChooser0.getDaysInMonth();
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      Locale locale0 = Locale.GERMAN;
      JDayChooser jDayChooser2 = new JDayChooser(false);
      JDayChooser jDayChooser3 = new JDayChooser(false);
      Parser parser0 = new Parser();
      parser0.getLocale();
      // Undeclared exception!
      try { 
        jDayChooser3.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.170868855249165
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getTransferHandler();
      InputEvent.getModifiersExText(2414);
      BasicScrollBarUI basicScrollBarUI0 = new BasicScrollBarUI();
      jDayChooser0.setLayout(basicScrollBarUI0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 2414, (-1833L), 2414, (-2641), 'T');
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(2414, (-2641), (-3870), (-2641), (-3870), (-2641));
      mockGregorianCalendar0.set((-2641), 144, (-2641));
      keyEvent0.setSource(mockGregorianCalendar0);
      jDayChooser0.keyTyped(keyEvent0);
      jDayChooser0.drawDays();
      jDayChooser0.setIgnoreRepaint(false);
      jDayChooser0.getDaysInMonth();
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      jDayChooser_DecoratorButton0.getTopLevelAncestor();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      SystemColor systemColor0 = SystemColor.text;
      jDayChooser0.setSundayForeground(systemColor0);
      KeyEvent keyEvent1 = null;
      try {
        keyEvent1 = new KeyEvent(jDayChooser_DecoratorButton0, 0, 0, 15, (-2641), 'T', (-3870));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1336798095581577
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InputEvent.getModifiersExText(2414);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(2414, (-2641), (-3870), (-2641), (-3870), (-2641));
      mockGregorianCalendar0.set((-2641), 144, (-2641));
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getTopLevelAncestor();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      SystemColor systemColor0 = SystemColor.text;
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 0, 0, 15, (-2641), 'T', (-3870));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.1609096373188827
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2153);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 8747, (String) null, 0);
      jDayChooser0.getClientProperty(integer0);
      actionEvent0.setSource((Object) null);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 8747, (String) null, 0);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JToggleButton jToggleButton0 = new JToggleButton("");
      int int0 = 10138;
      ItemEvent itemEvent0 = new ItemEvent(jToggleButton0, 10138, "", (-968));
      jDayChooser0.dispatchEvent(itemEvent0);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection((HsqlProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcConnection", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.167784642256785
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.drawWeeks();
      jDayChooser0.setEnabled(false);
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3027768840111857
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getTransferHandler();
      jDayChooser0.setMaxDayCharacters(0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, (-1L), (-3047), 332, 'a');
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener2 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      AWTEventMulticaster.remove(hierarchyListener2, hierarchyListener2);
      jDayChooser0.addHierarchyListener((HierarchyListener) null);
      keyEvent0.setKeyCode(3);
      jDayChooser0.getSelectedDay();
      keyEvent0.getExtendedKeyCode();
      jDayChooser0.keyPressed(keyEvent0);
      // Undeclared exception!
      try { 
        JDayChooser.main((String[]) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.2404039483744196
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setName("j~3}isIG:3");
      AWTEventMulticaster.remove((KeyListener) jDayChooser0, (KeyListener) jDayChooser0);
      jDayChooser0.isPaintingForPrint();
      jDayChooser0.addKeyListener((KeyListener) null);
      jDayChooser0.getWidth();
      jDayChooser0.firePropertyChange("^ZLP<a{?yaX7Bw6Iv1", 2430L, 2116L);
      jDayChooser0.getLocale();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 0, 0, 0, 'j');
      keyEvent0.setKeyCode(0);
      keyEvent0.getExtendedKeyCode();
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.getSelectedDay();
      MockFile.createTempFile("CURRENT_TIMESTAMP", (String) null);
      ToUnknownStream toUnknownStream0 = new ToUnknownStream();
      // Undeclared exception!
      try { 
        toUnknownStream0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.serializer.SerializerBase", e);
      }
  }
}
