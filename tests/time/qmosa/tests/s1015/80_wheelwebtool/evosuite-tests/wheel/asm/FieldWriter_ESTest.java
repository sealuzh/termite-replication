/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:08:28 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2628154125456366
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      fieldWriter0.getSize();
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "'L4", (String) null, ".s.IFJDCS");
      Attribute attribute0 = new Attribute("'L4");
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.320450210087618
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "'L4", (String) null, "'L4");
      fieldWriter1.getSize();
      ClassWriter classWriter2 = new ClassWriter(2);
      ByteVector byteVector0 = classWriter1.pool;
      byteVector0.put12(6, 6);
      byteVector0.length = 134;
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      classWriter0.version = (-1);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putLong(0L);
      ByteVector byteVector1 = byteVector0.putShort(2);
      byteVector1.putByte(184);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2971903581495132
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.visitSource((String) null, "wheel.asm.FieldWriter");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      fieldWriter0.getSize();
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "'L4", (String) null, ".s.IFJDCS");
      fieldWriter1.getSize();
      fieldWriter1.getSize();
      ClassWriter classWriter2 = new ClassWriter(2);
      fieldWriter1.next = fieldWriter0;
      fieldWriter1.next.getSize();
      // Undeclared exception!
      try { 
        fieldWriter1.next.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3145127355809594
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "gDu#N@S", "Invalid IOCase name: ", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-20));
      String string0 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-20), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Attribute attribute1 = attribute0.next;
      attribute0.next = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.122932565397214
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.visitSource((String) null, "wheel.asm.FieldWriter");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 57, "RuntimeVisibleAnnotati`ns", "RuntimeVisibleAnnotati`ns", (String) null, (Object) null);
      fieldWriter0.getSize();
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotati`ns", "'L4", (String) null, ".s.IFJDCS");
      fieldWriter1.getSize();
      int int0 = fieldWriter1.getSize();
      assertEquals(22, int0);
      
      ClassWriter classWriter2 = new ClassWriter(2);
      ByteVector byteVector0 = classWriter2.pool;
      fieldWriter1.next = fieldWriter0;
      int int1 = fieldWriter1.next.getSize();
      assertEquals(8, int1);
      
      FieldWriter fieldWriter2 = new FieldWriter(classWriter0, 36, ">qg\";bOSdXAtzL?O}i", "byte", "StackMapTable", "");
      fieldWriter1.next.getSize();
      int int2 = fieldWriter1.next.getSize();
      assertEquals(24, int2);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0303970627479953
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.visit((-1), (-1), "RuntimeVisibleAnnotations", "", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2260), "wheel.asm.MethodWriter", "wheel.asm.FieldWriter", "RuntimeVisibleAnnotations", "wheel.asm.FieldWriter");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.517229042621043
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "'L4", (String) null, "'L4");
      fieldWriter1.getSize();
      ClassWriter classWriter2 = new ClassWriter(2);
      ByteVector byteVector0 = classWriter1.pool;
      fieldWriter1.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("MLZIR>H", true);
      fieldWriter1.put(byteVector0);
      fieldWriter0.visitAnnotation("MLZIR>H", true);
      fieldWriter1.visitAnnotation("&", true);
      fieldWriter1.getSize();
      fieldWriter0.put(byteVector0);
      assertFalse(fieldWriter0.equals((Object)fieldWriter1));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4308281068778042
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(3);
      Attribute attribute0 = new Attribute("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)127;
      byteVector1.data = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      byteVector1.putByte(2);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("RuntimeVisibleAnnotations");
      Attribute attribute1 = attribute0.next;
      byte[] byteArray0 = null;
      int int0 = 3;
      ByteVector byteVector0 = new ByteVector();
      int int1 = 1;
      ByteVector byteVector1 = byteVector0.put12(1, (-465));
      byteVector1.put11(49, 2);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5876302662159738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Sensitive", "Sensitive", "Sensitive", "Sensitive");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.visitAnnotation("Sensitive", false);
      fieldWriter0.next = fieldWriter1;
      fieldWriter0.next.next = fieldWriter1;
      Attribute attribute0 = new Attribute("Sensitive");
      Attribute attribute1 = attribute0.next;
      fieldWriter0.next.getSize();
      fieldWriter0.next.next.visitAnnotation("Sensitive", true);
      ByteVector byteVector0 = new ByteVector(1124);
      ByteVector byteVector1 = byteVector0.putLong(1124);
      ByteVector byteVector2 = byteVector1.putInt((-1268));
      byteVector2.putByte(0);
      ByteVector byteVector3 = classWriter0.pool;
      fieldWriter0.next.put(byteVector3);
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-20));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-20), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      Attribute attribute1 = attribute0.next;
      attribute0.next = null;
      Attribute attribute2 = new Attribute((String) null);
      ByteVector byteVector1 = byteVector0.putShort(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteVector byteVector2 = byteVector1.putUTF8("wheel.asm.ClassReader");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteVector1.putInt(2);
      fieldWriter0.put(byteVector2);
      assertSame(byteVector0, byteVector2);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Class not found", "P<u5mLJk", "Class not found", "Class not found");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)4;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Attribute attribute0 = new Attribute("?' ahQacc#%X,1S~");
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteVector0.length = 0;
      ByteVector byteVector1 = byteVector0.put11(28, 1987);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-855));
      Item[] itemArray0 = new Item[5];
      Item item0 = classWriter0.newFloat(1809);
      itemArray0[0] = item0;
      Item item1 = classWriter0.newClassItem("");
      itemArray0[1] = item1;
      Item item2 = new Item((-1574), item1);
      itemArray0[2] = item2;
      Item item3 = classWriter0.key2;
      itemArray0[3] = item3;
      Item item4 = new Item();
      itemArray0[4] = item4;
      classWriter0.typeTable = itemArray0;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1809, "Signature", "", "", mockFileInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.io.MockFileInputStream@3846ad1c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 4, "", "", "", bufferedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
