/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 03:04:14 GMT 2020
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("}");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of }
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HashMap<Boolean, Object> hashMap0 = new HashMap<Boolean, Object>();
      Long long0 = new Long((-2024L));
      hashMap0.put((Boolean) null, long0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString();
      assertNull(string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HashMap<Boolean, Object> hashMap0 = new HashMap<Boolean, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("] not [nd.", (-1L));
      double double0 = jSONObject0.optDouble("] not [nd.");
      assertEquals((-1.0), double0, 0.01);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("D)a;)tEvfPx6ADR&:=|", 1.0);
      Object object0 = jSONObject0.opt("D)a;)tEvfPx6ADR&:=|");
      assertEquals(1.0, object0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.length();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("NN:c-y.", (Object) "NN:c-y.");
      int int0 = jSONObject1.length();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1285962936622183
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.keys();
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4016171508386506
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.append("{\n\"java.lang.String@0000000005\": {},\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}", "");
      jSONObject0.has("{\n\"java.lang.String@0000000005\": {},\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6354502583387052
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      jSONObject0.put("", (Map) hashMap0);
      jSONObject0.getString("");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5228146795137598
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject1 = jSONObject0.put("", (Map) hashMap0);
      jSONObject1.get("");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0888999753452238
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-10));
      String string0 = JSONObject.valueToString(byte0, (byte) (-10), (byte) (-10));
      assertNotNull(string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      String string0 = JSONObject.valueToString(boolean0, 0, 0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.719647346918785
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.toString(57, 0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.719647346918785
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.toString(0, (-12473307));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HashMap<Object, Float> hashMap0 = new HashMap<Object, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString((-1));
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Long long0 = Long.getLong("wheel.json.JSONTokener", (long) 0);
      JSONObject.testValidity(long0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Double double0 = new Double((-3615.34455179267));
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.remove("");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = JSONObject.quote((String) null);
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = JSONObject.quote("9yN^qr");
      assertEquals("\"9yN^qr\"", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.putOpt((String) null, (Object) null);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2013670042689852
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.putOpt("`&f}+VIuRX/-,}k'P", jSONObject0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", false);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("NN:c-y.", (Map) null);
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      Boolean boolean0 = Boolean.TRUE;
      hashMap0.put(boolean0, "|a\fY..MTM");
      JSONObject jSONObject1 = jSONObject0.put("D)a;)tEvfPx6ADR&:=|", (Map) hashMap0);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1285962936622185
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Integer integer0 = new Integer(34);
      JSONObject jSONObject0 = new JSONObject(integer0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject0.put("", (Collection) linkedList0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9736489231972635
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Integer integer0 = new Integer(34);
      JSONObject jSONObject0 = new JSONObject(integer0);
      jSONObject0.put("", (Object) jSONObject0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put("getgetOrDefault", 0L);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      try { 
        jSONObject0.put((String) null, (long) 8192);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", (-1L));
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", 47);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (double) (-417L));
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", 1.0);
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString((String) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.2337380151460802
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "] not [nd.");
      jSONObject0.optString("", "");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Double double0 = new Double((-3615.34455179267));
      JSONObject jSONObject0 = new JSONObject(double0);
      String string0 = jSONObject0.optString(" &H--yJOU");
      assertEquals("", string0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7248301468410545
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optLong("", 0L);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6792706702716655
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      long long0 = jSONObject0.optLong((String) null, (-1371L));
      assertEquals(1, jSONObject0.length());
      assertEquals((-1371L), long0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6423651354584372
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "");
      long long0 = jSONObject0.optLong("", 1L);
      assertEquals(1L, long0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Integer integer0 = new Integer(34);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject((String) null);
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.optInt("D)a;)tEvfPx6ADR&:=|", (-3785));
      assertEquals((-3785), int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.optInt((String) null, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.optInt(";PT1i", 32);
      assertEquals(32, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.optInt("", 903);
      assertEquals(903, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Integer integer0 = new Integer(34);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      int int0 = jSONObject0.optInt((String) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6414480415035768
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      int int0 = jSONObject0.optInt("z>4Qm)%fl@g{v]");
      assertEquals(1, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("'5,Kd~y10r<s)g=;", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("get", (double) (-417L));
      assertEquals((-417.0), double0, 0.01);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.2706817223249798
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Integer integer0 = new Integer(34);
      JSONObject jSONObject0 = new JSONObject(integer0);
      double double0 = jSONObject0.optDouble("000", 1094.0600238730844);
      assertEquals(1, jSONObject0.length());
      assertEquals(1094.0600238730844, double0, 0.01);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("", 2888.2052494);
      assertEquals(2888.2052494, double0, 0.01);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("");
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6354502583387052
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      boolean boolean1 = jSONObject0.optBoolean((String) null, true);
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.optBoolean("", true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1285962936622185
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.opt("{\n\"java.lang.String@0000000005\": {},\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Double double0 = new Double((-3615.34455179267));
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.opt("");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.4016171508386506
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      boolean boolean1 = jSONObject0.isNull((String) null);
      assertTrue(boolean1);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      boolean boolean0 = jSONObject0.has((String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.has("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Integer integer0 = new Integer(34);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.6816102690529532
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.getString(",:]}/\"[{;=#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",:]}/\\\"[{;=#\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5228146795137598
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HashMap<Integer, Long> hashMap0 = new HashMap<Integer, Long>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.4016171508386506
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Integer integer0 = new Integer(34);
      JSONObject jSONObject0 = new JSONObject(integer0);
      try { 
        jSONObject0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = JSONObject.doubleToString(32);
      assertEquals("32", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Integer integer0 = new Integer(34);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      try { 
        jSONObject0.append((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject1 = jSONObject0.append("", jSONArray0);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.2446725381717776
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      try { 
        jSONObject0.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<JSONArray, String> hashMap0 = new HashMap<JSONArray, String>();
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Integer integer0 = new Integer(34);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      try { 
        jSONObject0.put((String) null, (-491));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1752045970807579
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      try { 
        jSONObject0.put((String) null, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.488507861129921
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Short short0 = new Short((short)8192);
      JSONObject jSONObject0 = new JSONObject(short0);
      try { 
        jSONObject0.getLong("k$q");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"k$q\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4795008699302592
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      try { 
        jSONObject0.getInt("gettoOctalString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"gettoOctalString\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4795008699302592
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      try { 
        jSONObject0.getDouble("z>4Qm)%fl@g{v]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"z>4Qm)%fl@g{v]\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.3928958667778673
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      try { 
        jSONObject0.get("MrtOok.5psz%I");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"MrtOok.5psz%I\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("null");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of null
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject(jSONObject0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.849916406680119
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      JSONObject jSONObject1 = jSONObject0.append("{\n\"java.lang.String@0000000005\": {},\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}", "");
      StringWriter stringWriter0 = new StringWriter(2876);
      jSONObject1.write(stringWriter0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8499164066801193
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject1 = jSONObject0.put("", (Map) hashMap0);
      StringWriter stringWriter0 = new StringWriter(2876);
      jSONObject1.write(stringWriter0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      String string0 = JSONObject.valueToString(hashMap0, 2370, 1497);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.9050240488701304
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.append("{\n\"java.lang.String@0000000005\": {},\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}", "");
      jSONObject0.toString((-1579), (-522));
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0, (-150), 2592);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null, 1324, 2395);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      String string0 = JSONObject.valueToString(linkedList0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String string0 = JSONObject.valueToString(jSONArray0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.2925718370167558
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      JSONObject.valueToString(jSONObject0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.9007424525224197
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject1 = jSONObject0.put("null", (Map) hashMap0);
      jSONObject1.toString((-522), 49);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8008293981022103
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "yWF");
      String string0 = jSONObject0.toString();
      assertNotNull(string0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float(Double.NaN);
      try { 
        jSONObject0.append("`&f}+VIuRX/-,}k'P", float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JSONObject.testValidity((Object) null);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5161819323144374
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "N!X}Qvi.-Za`$!");
      try { 
        jSONObject0.getBoolean("\t");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\t\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.7112904312903248
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      Float float0 = new Float(0.0);
      jSONObject0.append("`&f}+VIuRX/-,}k'P", float0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "`&f}+VIuRX/-,}k'P";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Expected a ':' after a key";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put(";PT1i", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1285962936622183
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.put("`&f}+VIuRX/-,}k'P", true);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Long long0 = new Long((-2743L));
      jSONObject0.put("D)a;)tEvfPx6ADR&:=|", (Object) long0);
      String string0 = jSONObject0.optString("D)a;)tEvfPx6ADR&:=|", "Expected a ',' or '}'");
      assertNotNull(string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5228146795137598
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject1 = jSONObject0.put("", (Map) hashMap0);
      jSONObject1.optJSONObject("");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.3097558619082146
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Short short0 = new Short((short)8192);
      JSONObject jSONObject0 = new JSONObject(short0);
      jSONObject0.optJSONObject("wheel.json.JSONArray");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.6769877743224175
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HashMap<Float, Double> hashMap0 = new HashMap<Float, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.append("op", jSONObject0);
      JSONArray jSONArray0 = jSONObject0.optJSONArray("op");
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.2337380151460804
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "N!X}Qvi.-Za`$!");
      jSONObject0.optJSONArray("{");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("\"] not [nd.\"", 0.0);
      double double0 = jSONObject0.optDouble("\"] not [nd.\"");
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Long long0 = Long.getLong("wheel.json.JSONTokener", (long) 0);
      String string0 = JSONObject.numberToString(long0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.8884699676219987
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "\"9yN\\^qr\"");
      // Undeclared exception!
      jSONObject0.toString(2130, 2130);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.8200759753606217
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("l", "l");
      JSONArray jSONArray0 = jSONObject1.names();
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Integer integer0 = new Integer(34);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = JSONObject.getNames(object0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = JSONObject.getNames((Object) jSONObject0);
      assertEquals(1, stringArray0.length);
      assertNotNull(stringArray0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.4562909245092568
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Double double0 = new Double((-3615.34455179267));
      JSONObject jSONObject0 = new JSONObject(double0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNotNull(stringArray0);
      assertEquals(3, jSONObject0.length());
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.8033694845203663
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Short short0 = new Short((short)8192);
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject jSONObject1 = jSONObject0.put("wheel.json.JSONArray", false);
      long long0 = jSONObject1.optLong("wheel.json.JSONArray");
      assertEquals(2, jSONObject0.length());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.3718061232922234
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put(";PT1i", false);
      try { 
        jSONObject0.getJSONObject(";PT1i");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\";PT1i\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5406465859104317
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      Float float0 = new Float(0.0);
      jSONObject0.append("`&f}+VIuRX/-,}k'P", float0);
      jSONObject0.getJSONArray("`&f}+VIuRX/-,}k'P");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.3961001489141087
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("g0gBrUk}W,vvRQY5<r", 1075.92075311);
      try { 
        jSONObject0.getJSONArray("g0gBrUk}W,vvRQY5<r");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"g0gBrUk}W,vvRQY5<r\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("D)a;)tEvfPx6ADR&:=|", 1.0);
      int int0 = jSONObject0.getInt("D)a;)tEvfPx6ADR&:=|");
      assertEquals(1, int0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("D)a;)tEvfPx6ADR&:=|", 1.0);
      double double0 = jSONObject1.getDouble("D)a;)tEvfPx6ADR&:=|");
      assertEquals(1.0, double0, 0.01);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.6425559869377246
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.accumulate("wheel.json.JSONException", "");
      boolean boolean0 = jSONObject0.optBoolean("wheel.json.JSONException", false);
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.581573107414146
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Long long0 = new Long((-2743L));
      jSONObject0.put("D)a;)tEvfPx6ADR&:=|", (Object) long0);
      boolean boolean0 = jSONObject0.optBoolean("D)a;)tEvfPx6ADR&:=|");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-1440.501409497));
      assertEquals("-1440.501409497", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String string0 = JSONObject.doubleToString(0.0);
      assertEquals("0", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = JSONObject.doubleToString(Double.NaN);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5247073930301438
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("wo/v~W/+", 0.0);
      try { 
        jSONObject0.append("wo/v~W/+", "Expected '");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[wo/v~W/+] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HashMap<Boolean, Object> hashMap0 = new HashMap<Boolean, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      jSONObject0.put("] not [nd.", (Collection) linkedList0);
      JSONObject jSONObject1 = jSONObject0.accumulate("] not [nd.", "8\biZkvib<`'-2a1k%");
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HashMap<Boolean, Object> hashMap0 = new HashMap<Boolean, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("] not [nd.", (-1L));
      JSONObject jSONObject1 = jSONObject0.accumulate("] not [nd.", "}2I]");
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      try { 
        jSONObject0.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.5751765904639274
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.append("{\n\"java.lang.String@0000000005\": {},\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}", "");
      boolean boolean1 = jSONObject0.isNull("{\n\"java.lang.String@0000000005\": {},\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\"\n}");
      assertEquals(2, jSONObject0.length());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.7913563426828252
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.toString(115);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.5842088652180688
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      long long0 = jSONObject0.optLong("W5;/q38I/TDE)cS3");
      assertEquals(0L, long0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.7833836094401962
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      int int0 = jSONObject0.optInt("");
      assertEquals(1, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.1285962936622185
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.put("wheel.json.JSONTokener", 0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.740511704323769
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Long long0 = new Long(456);
      JSONObject jSONObject0 = new JSONObject(long0);
      boolean boolean0 = jSONObject0.optBoolean((String) null);
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.5622590391891036
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      long long0 = jSONObject0.optLong("getnotify", 5785L);
      assertEquals(1, jSONObject0.length());
      assertEquals(5785L, long0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.507587880637416
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      boolean boolean1 = jSONObject0.optBoolean("{\n\"java.lang.String@0000000005\": {},\n\"java.lang.String@0000000002\": \"java.lang.Class@0000000003\",\n\"java.lang.String@0000000007\": [\"java.lang.String@0000000005\"]\n}", true);
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.4016171508386506
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.optString("");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{}");
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.0505150321144856
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      JSONObject jSONObject1 = jSONObject0.put("", (Map) hashMap0);
      int int0 = jSONObject1.optInt("");
      assertEquals(2, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = jSONObject0.remove("yWF");
      assertNull(object0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Double double0 = new Double((-3615.34455179267));
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("va", (-1943L));
      long long0 = jSONObject0.getLong("va");
      assertEquals(4, jSONObject0.length());
      assertEquals((-1943L), long0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.1752045970807579
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
