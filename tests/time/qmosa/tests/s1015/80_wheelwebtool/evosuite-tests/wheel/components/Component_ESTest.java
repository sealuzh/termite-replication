/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:32:25 GMT 2019
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.Calendar;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.CheckboxGroup;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Image;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.RadioGroup;
import wheel.components.Select;
import wheel.components.StandaloneComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Component component0 = null;
      String string0 = "mX\"p+u<x$2m@o";
      Hidden hidden0 = new Hidden((Component) null, "CHECKCAST [D", "mX\"p+u<x$2m@o");
      String string1 = "";
      hidden0.value("");
      String string2 = "*";
      // Undeclared exception!
      try { 
        hidden0.id("*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6912038861628376
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "5~Tnt|3|@!Dpfab&vt";
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(37, 1051, 37, (-1192), 3328, 19);
      errorPage0.q((Object) mockGregorianCalendar0);
      // Undeclared exception!
      try { 
        mockGregorianCalendar0.clear(19);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("java.util.Calendar", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "name";
      Form form0 = new Form("name");
      form0._setComponentId("name");
      form0.getComponentName();
      // Undeclared exception!
      try { 
        form0.kbd((Object) "Form");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.692287897002946
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MXSerializer mXSerializer0 = new MXSerializer();
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.renderHint("type");
      Component component1 = component0.h2();
      assertTrue(component1._isGeneratedId());
      assertEquals("wheel_ErrorPage", component0.getComponentId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.138171090153557
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CharBuffer charBuffer0 = CharBuffer.allocate(31);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      Table table0 = new Table(image0, "Finder expression didn't evaluate to a boolean value.");
      table0.div();
      Table table1 = table0.renderHint(charBuffer0);
      Table table2 = table1.id(">{qK)A$;JV[,\"owS7");
      Checkbox checkbox0 = new Checkbox(table2, "Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      ErrorPage errorPage1 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(table2, "765;t44d~apCs\"P");
      charBuffer0.flip();
      errorPage1.ul();
      // Undeclared exception!
      try { 
        image0.ins();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8993290177239106
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      String string0 = "[x";
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", ".QPRHV$ni,>");
      String string1 = "";
      Double double0 = new Double(0.0);
      Component component0 = tableRow0.legend((Object) double0);
      Double.min(0.0, (-5323.923564222691));
      double double1 = 0.0;
      // Undeclared exception!
      try { 
        component0.add(submit0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot add a form element. No surrounding form found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.000575457356425
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      String string0 = "[x";
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      errorPage0.attribute("xE", "xE");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      String string1 = "C;$b6A<4X1\\";
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      String string2 = "";
      String[] stringArray0 = new String[6];
      stringArray0[0] = "C;$b6A<4X1";
      stringArray0[1] = "C;$b6A<4X1";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "[x";
      stringArray0[5] = "xE";
      formElement0.attributes(stringArray0);
      double double0 = 0.0;
      Double double1 = new Double(0.0);
      tableRow0.legend((Object) double1);
      // Undeclared exception!
      try { 
        errorPage0.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "2K'i ]qaD2QcD$Aruo";
      Form form0 = new Form("2K'i ]qaD2QcD$Aruo");
      // Undeclared exception!
      try { 
        form0.samp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.869529660060474
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      Double double0 = new Double(0.0);
      ActionExpression actionExpression0 = new ActionExpression("{collection token:<<");
      ActionExpression actionExpression1 = actionExpression0.updateComponent("C;$b6A<4X1");
      Hidden hidden0 = new Hidden(checkbox0, "", "start tag not allowed in epilog but got ");
      actionExpression1.parameter("start tag not allowed in epilog but got ");
      actionExpression0.event("{collection token:<<");
      String string0 = ":)izDcAxj:h$d8j-sq|";
      Hidden hidden1 = new Hidden(errorPage0, ":)izDcAxj:h$d8j-sq|", "xE");
      // Undeclared exception!
      try { 
        hidden1.wrapSelf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "TW@U s4jHbWTivy\"";
      Form form0 = new Form("TW@U s4jHbWTivy\"");
      // Undeclared exception!
      try { 
        form0.dd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "*-GN4MdUSM,3\"^Hu>l-";
      Form form0 = new Form("*-GN4MdUSM,3\"^Hu>l-");
      Form form1 = form0.addFormValidationRule("*-GN4MdUSM,3\"^Hu>l-", "?");
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        form1.big();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4176009478884435
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.var((Object) ">{qK)A$;J[,\"owS7");
      ActionExpression actionExpression0 = new ActionExpression("");
      ActionExpression actionExpression1 = actionExpression0.parameter("Finder expression didn't evaluate to a boolean value.");
      ActionExpression actionExpression2 = actionExpression1.event("$j=z[1kl\" JutU");
      ActionExpression actionExpression3 = actionExpression2.updateComponent("'c:<PvP=o#w");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) actionExpression0;
      actionExpression3.parameters(objectArray0);
      ActionExpression actionExpression4 = actionExpression3.parameters(objectArray0);
      Component component1 = component0.form("dt", actionExpression4);
      component1.h3();
      Component component2 = component1.h2((Object) "$j=z[1kl\" JutU");
      Table table0 = new Table(component2, ">{qK)A$;J[,\"owS7");
      Table table1 = table0.renderHint(actionExpression4);
      table1.id("TableRow_1");
      // Undeclared exception!
      try { 
        actionExpression4.getActionUrl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "\"7)i]I,";
      String string1 = "";
      Form form0 = new Form("");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "\"7)i]I,";
      String string2 = "PUon\"";
      stringArray0[1] = "PUon\"";
      stringArray0[2] = "S'Q6u2U1r";
      stringArray0[3] = "</";
      stringArray0[4] = "";
      stringArray0[5] = "S'Q6u2U1r";
      // Undeclared exception!
      try { 
        form0.h6((Object) "S'Q6u2U1r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9386106129905905
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      ElExpression elExpression0 = new ElExpression("div");
      ElExpression elExpression1 = elExpression0.errorMessage("gc`<9_ $a#T]Xo");
      RadioGroup radioGroup0 = new RadioGroup(checkbox0, "gc`<9_ $a#T]Xo", "[x", (ISelectModel) null, elExpression1);
      radioGroup0.cite();
      // Undeclared exception!
      try { 
        radioGroup0.buildComponent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Couldn't read value with binding div in class wheel.ErrorPage
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2303397336657103
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CharBuffer charBuffer0 = CharBuffer.allocate(31);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      Table table0 = new Table(image0, "Finder expression didn't evaluate to a boolean value.");
      Component component0 = table0.div();
      Table table1 = table0.renderHint(charBuffer0);
      Table table2 = table1.id(">{qK)A$;JV[,\"owS7");
      Checkbox checkbox0 = new Checkbox(table2, "Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      ErrorPage errorPage1 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(table2, "7]65;t44d~ahpCs\"P");
      Any any0 = tableBlock0.col();
      tableBlock0.base(">{qK)A$;JV[,\"owS7");
      any0.defaultTagName();
      component0.u((Object) tableBlock0);
      Checkbox checkbox1 = new Checkbox(errorPage1, "m&Qd4Ka|", "s");
      checkbox0.validationRule("wheel_ErrorPage", "z0d2\"owXq{n]nB`");
      Table table3 = new Table(errorPage1, "wheel_ErrorPage");
      // Undeclared exception!
      try { 
        table3.id("wheel_ErrorPage");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.890972132576479
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      String string0 = "xE";
      FormElement formElement0 = checkbox0.addValidationError("xE");
      String string1 = "C;$b6A<4X1\\";
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      Integer integer0 = new Integer(95);
      Link link0 = new Link(errorPage0, submit0);
      link0.defaultTagName();
      errorPage0.li();
      // Undeclared exception!
      try { 
        formElement0.acronym();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5540509506688474
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CharBuffer charBuffer0 = CharBuffer.allocate(31);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      Form form0 = new Form("5~Tnt|3|@!Dpfab&vt");
      form0._setComponentId((String) null);
      form0.getComponentName();
      // Undeclared exception!
      try { 
        form0.acronym();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "HiqdoR=\"";
      Form form0 = new Form("HiqdoR=\"");
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = new Locale("HiqdoR=\"", "HiqdoR=\"");
      locale0.stripExtensions();
      // Undeclared exception!
      try { 
        form0.dfn((Object) timeZone0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8946998727110316
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "type";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("type");
      MXSerializer mXSerializer0 = new MXSerializer();
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.entity("type");
      errorPage0.kbd();
      // Undeclared exception!
      try { 
        xmlEntityRef0.imageSubmit("Failed to initialize SimpleDateFormat with pattern '", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.886158017859936
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("type");
      MXSerializer mXSerializer0 = new MXSerializer();
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.renderHint("type");
      xmlEntityRef0.renderComponent(mXSerializer0);
      errorPage0.placeholder("!t=r)mV-]{~3iC");
      component0.renderHint("!t=r)mV-]{~3iC");
      // Undeclared exception!
      try { 
        xmlEntityRef0.remove((Component) errorPage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1268887050222767
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      tableBlock0.a();
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      String string0 = "C;$b6A<4X1\\";
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      errorPage0.afterAdd();
      tableRow0._setComponentId("93`(R0HY!)9lJ");
      ErrorPage errorPage1 = new ErrorPage();
      errorPage1._setGeneratedId(false);
      errorPage1._setPageRewinding(true);
      Component component0 = errorPage0.h4();
      // Undeclared exception!
      try { 
        component0.numberInput("xE", (CharSequence) "C;$b6A<4X1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.319410109391854
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      Double double0 = new Double(0.0);
      Component component0 = tableRow0.legend((Object) double0);
      Double.min(0.0, (-5323.923564222691));
      Double.sum((-5323.923564222691), 0.0);
      component0.address((Object) tableRow0);
      component0.bdo("[x");
      submit0.addInternalRenderHint("");
      tableBlock0.big((Object) "");
      checkbox0.date();
      tableRow0.td();
      checkbox0._clear();
      errorPage0._setPageRewinding(false);
      tableBlock0.getComponents();
      errorPage0.h4();
      // Undeclared exception!
      try { 
        submit0.samp((Object) checkbox0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9786466561669287
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      String string0 = "gN";
      Submit submit0 = new Submit(tableRow0, "strong", "[x");
      errorPage0.afterAdd();
      ErrorPage errorPage1 = new ErrorPage();
      errorPage1._setGeneratedId(true);
      errorPage0._setPageRewinding(true);
      errorPage0.h4();
      // Undeclared exception!
      try { 
        submit0.end("5~Tnt|3|@!Dpfab&vt");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression '5~Tnt|3|@!Dpfab&vt'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8409347643503273
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("type");
      MXSerializer mXSerializer0 = new MXSerializer();
      mXSerializer0.getFeature("type");
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._getRenderableChildren();
      errorPage0.renderHint("type");
      xmlEntityRef0.renderComponent(mXSerializer0);
      errorPage0.placeholder("!t=r)mV-]{~3iC");
      // Undeclared exception!
      try { 
        xmlEntityRef0.remove("type");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0447969209589383
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "2K'i ]qaD2QcD$Aruo";
      Form form0 = new Form("2K'i ]qaD2QcD$Aruo");
      // Undeclared exception!
      try { 
        form0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2448999724663743
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Component component0 = null;
      String string0 = "mX\"p+u<x$2m@o";
      Hidden hidden0 = new Hidden((Component) null, "CHECKCAST [D", "mX\"p+u<x$2m@o");
      String string1 = "";
      FormElement formElement0 = hidden0.value("");
      String string2 = "*";
      // Undeclared exception!
      try { 
        formElement0.fileInput("*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "Failed to initialize SimpleDateFormat with pattern '";
      // Undeclared exception!
      try { 
        errorPage0.message("java.lang.String@0000000009");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      // Undeclared exception!
      try { 
        errorPage0.rollback();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.297150407935775
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ISelectModel iSelectModel0 = null;
      String string0 = "!$4zYM_v";
      ElExpression elExpression0 = new ElExpression("!$4zYM_v");
      InitialFieldValue initialFieldValue0 = new InitialFieldValue(elExpression0, "y3");
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.iframe();
      Block block0 = new Block(errorPage0);
      Select select0 = new Select(block0, "big", "-x", "-x", (ISelectModel) null, true);
      errorPage0.form("x/Fd\"8010Z:m*X4");
      Checkbox checkbox0 = new Checkbox(select0, "a%tI4", (String) null);
      // Undeclared exception!
      try { 
        checkbox0.required();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "type";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("type");
      MXSerializer mXSerializer0 = new MXSerializer();
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        xmlEntityRef0.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Form form0 = new Form((String) null);
      DynamicSelectModel dynamicSelectModel0 = form0.selectModel();
      ElExpression elExpression0 = new ElExpression("name");
      ElExpression elExpression1 = elExpression0.errorMessage("TGxB");
      CheckboxGroup checkboxGroup0 = null;
      try {
        checkboxGroup0 = new CheckboxGroup(form0, (String) null, "name", dynamicSelectModel0, elExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.397957356542973
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      Submit submit0 = new Submit(tableRow0, "strong", "[x");
      errorPage0.afterAdd();
      ErrorPage errorPage1 = new ErrorPage();
      errorPage1._setGeneratedId(true);
      errorPage0._setPageRewinding(true);
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale locale0 = Locale.JAPAN;
      locale0.getDisplayLanguage();
      Locale.lookupTag(linkedList0, list0);
      Image image0 = new Image(errorPage1, "[x", (CharSequence) null);
      image0.defaultTagName();
      // Undeclared exception!
      try { 
        tableBlock0.remove("Thead component can be added only to a Table.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.096689382271551
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = new Locale("HiqdoR=\"", "HiqdoR=\"");
      Locale locale1 = locale0.stripExtensions();
      MockCalendar.getInstance(timeZone0, locale1);
      Calendar.getAvailableCalendarTypes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h4();
      errorPage0.requestFocus();
      Submit submit0 = new Submit(component0, "script", "At?R%3^`");
      errorPage0.acronym((Object) "script");
      // Undeclared exception!
      try { 
        submit0.numberInput("java.lang.String@0000000009", (CharSequence) "java.lang.String@0000000009");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1835394336557887
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CharBuffer charBuffer0 = CharBuffer.allocate(31);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      Table table0 = new Table(image0, "Finder expression didn't evaluate to a boolean value.");
      table0.div();
      Table table1 = table0.renderHint(charBuffer0);
      Table table2 = table1.id(">{qK)A$;J[,\"owS7");
      Checkbox checkbox0 = new Checkbox(table2, "Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      ErrorPage errorPage1 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(table2, "7]65;t44d~ahpCs\"P");
      errorPage0._setPageRewinding(false);
      tableBlock0.col();
      ElExpression elExpression0 = new ElExpression("?}<b<&,+zMI`");
      TextInput textInput0 = new TextInput(tableBlock0, "G=1^ w % ", "G=1^ w % ");
      TextInput textInput1 = new TextInput(checkbox0, "mnt&(ao\"xBQvT`", "");
      textInput1.defaultTagName();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("input");
      Integer integer0 = new Integer(46);
      // Undeclared exception!
      try { 
        textInput1.h2((Object) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.948622070670781
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "8$5w0WGu");
      TableBlock tableBlock0 = table0.tbody();
      Component component0 = table0.table();
      component0.p();
      String string0 = null;
      String string1 = "EKk";
      Checkbox checkbox0 = new Checkbox(tableBlock0, (String) null, "EKk");
      MXSerializer mXSerializer0 = new MXSerializer();
      // Undeclared exception!
      try { 
        mXSerializer0.startTag("8$5w0WGu", (String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // setOutput() must called set before serialization can start
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.3057808320560365
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "C;$b6A<4X1";
      stringArray0[1] = "C;$b6A<4X1";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "[x";
      stringArray0[5] = "xE";
      formElement0.attributes(stringArray0);
      Double double0 = new Double(0.0);
      Component component0 = tableRow0.legend((Object) double0);
      Double.min(0.0, (-5323.923564222691));
      component0.address((Object) tableRow0);
      component0.bdo("[x");
      submit0.addInternalRenderHint("");
      tableBlock0.big((Object) "");
      checkbox0.date();
      tableRow0.td();
      checkbox0._clear();
      errorPage0._setPageRewinding(false);
      errorPage0.h4();
      // Undeclared exception!
      try { 
        submit0.samp((Object) checkbox0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "2K'i ]qaD2QcD$Aruo";
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try { 
        form0.samp((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6196922301787344
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "type";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("type");
      MXSerializer mXSerializer0 = new MXSerializer();
      ErrorPage errorPage0 = new ErrorPage();
      String string1 = "Failed to initialize SimpleDateFormat with pattern '";
      errorPage0.entity("type");
      String string2 = "";
      // Undeclared exception!
      try { 
        xmlEntityRef0.imageSubmit("Failed to initialize SimpleDateFormat with pattern '", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.8961310373153095
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      tableRow0.rawText(tableBlock0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      String string0 = "C;$b6A<4X1\\";
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      Double double0 = new Double(0.0);
      tableRow0.legend((Object) double0);
      Double.min(0.0, (-5323.923564222691));
      Form form0 = new Form("RS}Ea");
      Form form1 = form0.renderHint("");
      Hidden hidden0 = null;
      try {
        hidden0 = new Hidden(form1, "&p1|Y<M@V", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "tr";
      Form form0 = new Form("tr");
      // Undeclared exception!
      try { 
        form0.em();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0446342892023344
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "C;$b6A<4X1";
      stringArray0[1] = "C;$b6A<4X1";
      ActionExpression actionExpression0 = new ActionExpression("{collection token:<<");
      ActionExpression actionExpression1 = actionExpression0.submissible(true);
      Form form0 = new Form(tableRow0, "{collection token:<<", actionExpression1);
      Form form1 = form0.renderHint("xE");
      Form form2 = form1.addFormValidationRule("C;$b6A<4X1", "tr");
      Component component0 = form2.dd();
      assertEquals("Block_1", component0.getComponentId());
      
      form0.b();
      form2.em();
      Text text0 = new Text(form1, "[x");
      form0.p((Object) text0);
      assertFalse(form1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "[x";
      Double double0 = new Double(0.0);
      Double.min(0.0, 0.0);
      String string1 = "";
      // Undeclared exception!
      try { 
        errorPage0.textInput("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "]&P8%Tk-%&J,%V/G2u";
      Form form0 = new Form("]&P8%Tk-%&J,%V/G2u");
      String string1 = "</";
      ElExpression elExpression0 = new ElExpression("]&P8%Tk-%&J,%V/G2u");
      elExpression0.codePoints();
      ElExpression elExpression1 = elExpression0.errorMessage("]&P8%Tk-%&J,%V/G2u");
      String string2 = "area";
      RadioGroup radioGroup0 = new RadioGroup(form0, "area", "</", (ISelectModel) null, elExpression1);
      // Undeclared exception!
      try { 
        radioGroup0.dfn();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.137159316551232
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      String string0 = "xE";
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      String string1 = "";
      double double0 = 0.0;
      Double double1 = new Double(0.0);
      Component component0 = tableRow0.legend((Object) double1);
      Double.min(0.0, (-5323.923564222691));
      component0.bdo("[x");
      tableBlock0.big((Object) "");
      // Undeclared exception!
      try { 
        tableRow0.checkbox("xE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.91396512793771
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CharBuffer charBuffer0 = CharBuffer.allocate(31);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      String string0 = "org.mvel.conversion.StringCH";
      String string1 = "9[Cj4di8_x";
      Checkbox checkbox0 = new Checkbox(errorPage0, "org.mvel.conversion.StringCH", "9[Cj4di8_x");
      checkbox0.addValidationError("org.mvel.conversion.StringCH");
      String string2 = "C;$b6A<4X1\\";
      Submit submit0 = new Submit(image0, "org.mvel.conversion.StringCH", "Ht)y=e5A3DUDe");
      Double double0 = new Double((-750.5987297));
      TableRow tableRow0 = new TableRow(errorPage0);
      tableRow0.legend((Object) checkbox0);
      Double.min(0.0, (-2861.0));
      tableRow0.address((Object) checkbox0);
      // Undeclared exception!
      try { 
        submit0.bdo("xE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.785229509700346
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      String string0 = "[x";
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      String string1 = "xE";
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      errorPage0.afterAdd();
      tableRow0._setComponentId("93`(R0HY!)9lJ");
      Class<MockGregorianCalendar> class0 = MockGregorianCalendar.class;
      String string2 = "";
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance("[x", class0);
      xmlPullWrapperFactory0.getFactory();
      // Undeclared exception!
      try { 
        checkbox0.h4((Object) formElement0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.8766791407769863
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      String string0 = "strong";
      Submit submit0 = new Submit(tableRow0, "strong", "[x");
      errorPage0.afterAdd();
      errorPage0.clasS("strong");
      ErrorPage errorPage1 = new ErrorPage();
      errorPage1._setGeneratedId(true);
      errorPage0.add(tableRow0);
      errorPage0._setPageRewinding(true);
      errorPage0.h4();
      String string1 = "processing instruction can not have PITarget with reserveld xml name";
      // Undeclared exception!
      try { 
        errorPage1.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0605030841196212
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      Double double0 = new Double(0.0);
      Component component0 = tableRow0.legend((Object) double0);
      Component component1 = component0.address((Object) tableRow0);
      component0.bdo("[x");
      submit0.addInternalRenderHint("");
      checkbox0.date();
      assertEquals("[x", checkbox0.getComponentId());
      
      Double.min(0.0, (-4209.5));
      Form form0 = new Form("act`3ba6m`%gxOn");
      Form form1 = form0.addFormValidationRule("U8LD} 3", "act`3ba6m`%gxOn");
      form1._isBuilt();
      assertEquals("act`3ba6m`%gxOn", form1.getComponentId());
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.lookupTag(linkedList0, set0);
      Image image0 = new Image(errorPage0, (CharSequence) null, "xE");
      image0.defaultTagName();
      StandaloneComponent standaloneComponent0 = component1._getTopLevelComponent(false);
      assertEquals("wheel_ErrorPage", standaloneComponent0.getComponentId());
      assertTrue(component1._isGeneratedId());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Form form0 = new Form("name");
      form0._setComponentId("name");
      form0.getComponentName();
      // Undeclared exception!
      try { 
        form0.htmlText("name");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.035661235046781
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "tApe";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("tApe");
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.renderHint("tApe");
      // Undeclared exception!
      try { 
        errorPage0.buildComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7350435701895277
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "type";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("type");
      MXSerializer mXSerializer0 = new MXSerializer();
      mXSerializer0.getFeature("type");
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._getRenderableChildren();
      errorPage0.renderHint("type");
      Class<MockGregorianCalendar> class0 = MockGregorianCalendar.class;
      String string1 = "1j<HY:tD2> W'";
      ActionExpression actionExpression0 = new ActionExpression("type");
      Form form0 = new Form(errorPage0, "1j<HY:tD2> W'", actionExpression0);
      // Undeclared exception!
      try { 
        form0.id("!t=r)mV-]{~3iC");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.placeholder("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.9790035153002012
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("type");
      assertEquals("type", xmlEntityRef0.getComponentId());
      
      MXSerializer mXSerializer0 = new MXSerializer();
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.renderHint("type");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      errorPage0.u();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale locale0 = Locale.GERMANY;
      locale0.getDisplayLanguage();
      Locale.lookupTag(linkedList0, list0);
      TableRow tableRow0 = new TableRow(errorPage0);
      tableRow0.defaultTagName();
      Image image0 = new Image(component0, (CharSequence) null, "tr");
      image0.defaultTagName();
      Table table0 = new Table(errorPage0, "tr");
      table0.colgroup();
      assertEquals("tr", table0.getComponentId());
      
      image0.requestFocus();
      assertEquals("wheel_ErrorPage", component0.getComponentId());
      assertTrue(image0._isGeneratedId());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2408792083179905
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Form form0 = new Form("");
      Checkbox checkbox0 = new Checkbox(form0, "", "ZZ");
      FormElement formElement0 = checkbox0.fieldBinding("ZZ");
      Radio radio0 = null;
      try {
        radio0 = new Radio(formElement0, "", "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.201074889103098
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      String string0 = "xE";
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      Double double0 = new Double(0.0);
      Component component0 = tableRow0.legend((Object) double0);
      Double.min(0.0, (-5323.923564222691));
      component0.address((Object) tableRow0);
      component0.bdo("[x");
      submit0.addInternalRenderHint("");
      tableBlock0.big((Object) "");
      // Undeclared exception!
      try { 
        tableRow0.checkbox("xE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.292383413757783
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      Double double0 = new Double(0.0);
      Component component0 = tableRow0.legend((Object) double0);
      component0.address((Object) tableRow0);
      component0.bdo("[x");
      submit0.addInternalRenderHint("");
      tableBlock0.big((Object) "");
      checkbox0.date();
      tableRow0.td();
      checkbox0._clear();
      Object object0 = new Object();
      tableBlock0.pre(object0);
      tableRow0.el("C;$b6A<4X1");
      DateInput dateInput0 = new DateInput(tableRow0, "", "[x", "xE");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "xE";
      stringArray0[1] = "[+4!6vkvV[bb8|~9P";
      stringArray0[2] = "[x";
      stringArray0[3] = "xE";
      stringArray0[4] = "";
      stringArray0[5] = "[x";
      // Undeclared exception!
      try { 
        dateInput0._setSubmitValue(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern 'xE'.
         //
         verifyException("wheel.components.DateInput", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.9776539263198565
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      FormElement formElement0 = checkbox0.addValidationError("xE");
      Submit submit0 = new Submit(formElement0, "xE", "C;$b6A<4X1");
      Double double0 = new Double(0.0);
      Component component0 = tableRow0.legend((Object) double0);
      Double.min(0.0, (-5323.923564222691));
      component0.bdo("[x");
      tableBlock0.big((Object) "");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("C;$b6A<4X1");
      // Undeclared exception!
      try { 
        xmlEntityRef0.remove(")g=;hf8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.074858070656935
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = new Locale("HiqdoR=\"", "HiqdoR=\"");
      Locale locale1 = locale0.stripExtensions();
      MockCalendar.getInstance(timeZone0, locale1);
      Calendar.getAvailableCalendarTypes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h4();
      Component component1 = component0.requestFocus();
      String string0 = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      Submit submit0 = new Submit(errorPage0, "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "{collection token:<<");
      Long long0 = new Long((-922L));
      component1.acronym((Object) long0);
      Component component2 = errorPage0.iframe();
      // Undeclared exception!
      try { 
        component2.wBlock("HiqdoR=\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.7948290676071714
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("type");
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h4();
      // Undeclared exception!
      try { 
        component0.end("TW@U s4jHbWTivy\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression 'TW@U s4jHbWTivy\"'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.6912038861628376
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.big((Object) "Finder expression didn't evaluate to a boolean value.");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = "S'Q6u2U1r";
      ElExpression elExpression0 = new ElExpression("</");
      elExpression0.errorMessage("S'Q6u2U1r");
      RadioGroup radioGroup0 = new RadioGroup((Component) null, "</", "S'Q6u2U1r", (ISelectModel) null, elExpression0);
      // Undeclared exception!
      try { 
        radioGroup0.cite();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.199920884657295
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CharBuffer charBuffer0 = CharBuffer.allocate(31);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      String string0 = "Finder expression didn't evaluate to a boolean value.";
      Table table0 = new Table(image0, "Finder expression didn't evaluate to a boolean value.");
      table0.div();
      Table table1 = table0.renderHint(charBuffer0);
      String string1 = ">{qK)A$;J[,\"owS7";
      Table table2 = table1.id(">{qK)A$;J[,\"owS7");
      Checkbox checkbox0 = new Checkbox(table2, "Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      ErrorPage errorPage1 = new ErrorPage();
      String string2 = "7]65;t44d~ahpCs\"P";
      TableBlock tableBlock0 = new TableBlock(table2, "7]65;t44d~ahpCs\"P");
      errorPage0._setPageRewinding(false);
      Any any0 = tableBlock0.col();
      any0.defaultTagName();
      Hidden hidden0 = new Hidden(checkbox0, "JH;EhV4T0l 4-fZZ1", "vKQddsaRO/C+{");
      // Undeclared exception!
      try { 
        table0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.081397583645935
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ElExpression elExpression0 = new ElExpression("7oC?h[am~xG7Z&");
      ElExpression elExpression1 = elExpression0.errorMessage("S'Q6u2U1r");
      RadioGroup radioGroup0 = new RadioGroup((Component) null, "7oC?h[am~xG7Z&", "^r7x8gHS", (ISelectModel) null, elExpression1);
      ElExpression elExpression2 = elExpression1.errorMessage("<U@");
      elExpression2.codePoints();
      elExpression2.errorMessage("^r7x8gHS");
      RadioGroup radioGroup1 = new RadioGroup(radioGroup0, "S'Q6u2U1r", "GET", (ISelectModel) null, elExpression2);
      TextInput textInput0 = new TextInput((Component) null, "WS", "7oC?h[am~xG7Z&");
      FormElement formElement0 = textInput0.value("S'Q6u2U1r");
      RadioGroup radioGroup2 = new RadioGroup(formElement0, "GET", "GET", (ISelectModel) null, elExpression2);
      // Undeclared exception!
      try { 
        radioGroup2.buildComponent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.8810441905952278
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("3*nR,aH~D4)CX0N");
      elExpression0.codePoints();
      ElExpression elExpression1 = elExpression0.errorMessage("(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
      RadioGroup radioGroup0 = new RadioGroup(errorPage0, "3*nR,aH~D4)CX0N", "Finder expression didn't evaluate to a boolean value.", (ISelectModel) null, elExpression1);
      radioGroup0.li((Object) "3*nR,aH~D4)CX0N");
      // Undeclared exception!
      try { 
        radioGroup0.buildComponent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Couldn't read value with binding 3*nR,aH~D4)CX0N in class wheel.ErrorPage
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.611739104290196
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("t.ype");
      MXSerializer mXSerializer0 = new MXSerializer();
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.entity("Failed to initialize SimpleDateFormat with pattern '");
      assertEquals("Failed to initialize SimpleDateFormat with pattern '", component0.getComponentId());
      
      ErrorPage errorPage1 = new ErrorPage();
      Object object0 = new Object();
      Text text0 = new Text(errorPage1, object0);
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
      assertTrue(text0._isGeneratedId());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6741078003059187
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      TableBlock tableBlock0 = new TableBlock(tableRow0);
      Checkbox checkbox0 = new Checkbox(tableBlock0, "[x", "[x");
      ElExpression elExpression0 = new ElExpression("[x");
      elExpression0.chars();
      ElExpression elExpression1 = new ElExpression("[x");
      RadioGroup radioGroup0 = new RadioGroup(tableBlock0, "[x", "[x", (ISelectModel) null, elExpression1);
      elExpression0.chars();
      ElExpression elExpression2 = new ElExpression("nH^JWuRB5-{p^?4#m>");
      RadioGroup radioGroup1 = new RadioGroup(checkbox0, "", "small", (ISelectModel) null, elExpression2);
      ElExpression elExpression3 = new ElExpression("small");
      RadioGroup radioGroup2 = new RadioGroup(radioGroup0, "internal error: threshold must be less than capacity: 13", "internal error: threshold must be less than capacity: 13", (ISelectModel) null, elExpression3);
      // Undeclared exception!
      try { 
        radioGroup2.radio("#&r0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = "\"7)i]I,";
      Form form0 = new Form("");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "\"7)i]I,";
      String string1 = "PUon\"";
      stringArray0[1] = "PUon\"";
      stringArray0[2] = "S'Q6u2U1r";
      stringArray0[3] = "</";
      stringArray0[4] = "";
      String string2 = "bdo";
      // Undeclared exception!
      try { 
        form0.checkbox("W%YG|ek KWbebBvsIx");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.255027120807909
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.var((Object) ">{qK)A$;J[,\"owS7");
      assertTrue(component0._isGeneratedId());
      
      errorPage0._setPageRewinding(false);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      
      ActionExpression actionExpression0 = new ActionExpression("");
      ActionExpression actionExpression1 = actionExpression0.parameter("Finder expression didn't evaluate to a boolean value.");
      ActionExpression actionExpression2 = actionExpression1.event("$j=z[1kl\" JutU");
      ActionExpression actionExpression3 = actionExpression2.updateComponent("'c:<PvP=o#w");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) actionExpression0;
      actionExpression2.submitForm(false);
      actionExpression3.parameters(objectArray0);
      ActionExpression actionExpression4 = actionExpression3.parameters(objectArray0);
      Component component1 = component0.form("dt", actionExpression4);
      component1.h3();
      Component component2 = component1.h2((Object) "$j=z[1kl\" JutU");
      assertTrue(component2._isGeneratedId());
      assertEquals("dt", component1.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.285149829679032
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = "TPbhe21I>";
      Form form0 = new Form("TPbhe21I>");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = new ElExpression("-ux.p[sJDgj");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(form0, "*t:Ep.3 gu9MH\"", "-ux.p[sJDgj", (ISelectModel) null, elExpression0);
      // Undeclared exception!
      try { 
        form0.strong((Object) checkboxGroup0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.1846757764811278
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double.min(0.0, (-5323.923564222691));
      Form form0 = new Form("RS}Ea");
      Form form1 = form0.renderHint("");
      // Undeclared exception!
      try { 
        form1.kbd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "ins";
      // Undeclared exception!
      try { 
        errorPage0.passwordInput("ins");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = "";
      ElExpression elExpression0 = new ElExpression("");
      String string1 = "dt^;xwqajrR$Z\"3";
      ElExpression elExpression1 = new ElExpression("");
      elExpression1.codePoints();
      RadioGroup radioGroup0 = new RadioGroup((Component) null, "", "dt^;xwqajrR$Z\"3", (ISelectModel) null, elExpression1);
      // Undeclared exception!
      try { 
        radioGroup0.dfn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Form form0 = new Form("*-GN4MdUSM,3\"^Hu>l-");
      Form form1 = new Form((String) null);
      // Undeclared exception!
      try { 
        form1.abbr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.24630492377351
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ElExpression elExpression0 = new ElExpression("S'Q6u2U1r");
      ElExpression elExpression1 = elExpression0.errorMessage("</");
      RadioGroup radioGroup0 = new RadioGroup((Component) null, "S'Q6u2U1r", "</", (ISelectModel) null, elExpression1);
      // Undeclared exception!
      try { 
        radioGroup0.li((Object) elExpression1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Form form0 = new Form("*-GN4MdUSM,3\"^Hu>l-");
      ElExpression elExpression0 = new ElExpression("");
      ElExpression elExpression1 = elExpression0.errorMessage("</");
      RadioGroup radioGroup0 = new RadioGroup(form0, "</", "</", (ISelectModel) null, elExpression1);
      DateInput dateInput0 = new DateInput(form0, "H7", "{./!q7B+$'", "*-GN4MdUSM,3\"^Hu>l-");
      // Undeclared exception!
      try { 
        radioGroup0.address((Object) dateInput0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String string0 = "*-GN4MdUSM,3\"^Hu>l-";
      Form form0 = new Form("*-GN4MdUSM,3\"^Hu>l-");
      form0.addFormValidationRule("*-GN4MdUSM,3\"^Hu>l-", "");
      // Undeclared exception!
      try { 
        form0.nbsp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.1846757764811278
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String string0 = "]&P8%Tk-%&J,%V/G2u";
      Form form0 = new Form("]&P8%Tk-%&J,%V/G2u");
      Form form1 = form0.renderHint("]&P8%Tk-%&J,%V/G2u");
      // Undeclared exception!
      try { 
        form1.a();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.2623477045221727
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ElExpression elExpression0 = new ElExpression("7oC?h[am~xG7Z&");
      ElExpression elExpression1 = elExpression0.errorMessage("S'Q6u2U1r");
      RadioGroup radioGroup0 = new RadioGroup((Component) null, "7oC?h[am~xG7Z&", "^r7x8gHS", (ISelectModel) null, elExpression1);
      Checkbox checkbox0 = new Checkbox(radioGroup0, "GET", "ovkV9O'MV2)-hf");
      // Undeclared exception!
      try { 
        radioGroup0.address((Object) checkbox0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Form form0 = new Form("UFnK-P[k4]'");
      Component component0 = form0.actionBinding("UFnK-P[k4]'");
      assertEquals("UFnK-P[k4]'", component0.getComponentId());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String string0 = "*-GN4MdUSM,3\"^Hu>l-";
      Form form0 = new Form("*-GN4MdUSM,3\"^Hu>l-");
      String string1 = "";
      Form form1 = form0.addFormValidationRule("*-GN4MdUSM,3\"^Hu>l-", "");
      String string2 = "";
      // Undeclared exception!
      try { 
        form0.dd((Object) form1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Form form0 = new Form("TPbhe21I>");
      // Undeclared exception!
      try { 
        form0.abbr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9702534066311674
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      String string0 = "!$4zYM_v";
      ElExpression elExpression0 = new ElExpression("!$4zYM_v");
      elExpression0.errorMessage("setOutput() must called set before serialization can start");
      Form form0 = new Form("!$4zYM_v");
      // Undeclared exception!
      try { 
        form0.renderHint(elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.2000388083730633
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CharBuffer charBuffer0 = CharBuffer.allocate(31);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      Table table0 = new Table(image0, "Finder expression didn't evaluate to a boolean value.");
      Component component0 = table0.div();
      Table table1 = table0.renderHint(charBuffer0);
      Table table2 = table1.id(">{qK)A$;JV[,\"owS7");
      Checkbox checkbox0 = new Checkbox(table2, "Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      ErrorPage errorPage1 = new ErrorPage();
      String string0 = "765;t44d~apCs\"P";
      TableBlock tableBlock0 = new TableBlock(table2, "765;t44d~apCs\"P");
      charBuffer0.flip();
      errorPage0._setPageRewinding(false);
      Any any0 = tableBlock0.col();
      any0.defaultTagName();
      component0.u((Object) tableBlock0);
      Checkbox checkbox1 = new Checkbox(errorPage1, "m&Qd4Ka|", "");
      String string1 = "z0d2\"owXq{n]nB`";
      checkbox0.validationRule("wheel_ErrorPage", "z0d2\"owXq{n]nB`");
      Table table3 = new Table(errorPage1, "wheel_ErrorPage");
      // Undeclared exception!
      try { 
        table3.id("wheel_ErrorPage");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.2148221239143426
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      String string0 = "HiqdoR=\"";
      ErrorPage errorPage0 = new ErrorPage();
      String string1 = "(ZVJf)gTAIK(~kpvS\\@";
      // Undeclared exception!
      try { 
        errorPage0.id("(ZVJf)gTAIK(~kpvS@");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Form form0 = new Form((String) null);
      Form form1 = form0.addFormValidationError("Could not find component with id '");
      // Undeclared exception!
      try { 
        form1.id("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ElExpression elExpression0 = new ElExpression("S'Q6u2U1r");
      ElExpression elExpression1 = elExpression0.errorMessage("</");
      RadioGroup radioGroup0 = new RadioGroup((Component) null, "S'Q6u2U1r", "</", (ISelectModel) null, elExpression1);
      // Undeclared exception!
      try { 
        radioGroup0.buildComponent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      String string0 = "*-GN4MdUSM,3\"^Hu>l-";
      Form form0 = new Form("*-GN4MdUSM,3\"^Hu>l-");
      Form form1 = form0.addFormValidationRule("*-GN4MdUSM,3\"^Hu>l-", "?");
      ErrorPage errorPage0 = new ErrorPage();
      String string1 = "";
      // Undeclared exception!
      try { 
        form1.title("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.810246414793266
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CharBuffer charBuffer0 = CharBuffer.allocate(31);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      String string0 = "Finder expression didn't evaluate to a boolean value.";
      Table table0 = new Table(image0, "Finder expression didn't evaluate to a boolean value.");
      table0.div();
      String string1 = "P@!]yQ0'r.s^tVP$";
      String string2 = "http://www.w3.org/2001/XMLSchema";
      ElExpression elExpression0 = new ElExpression("Finder expression didn't evaluate to a boolean value.");
      String string3 = "edHA";
      ElExpression elExpression1 = elExpression0.errorMessage("edHA");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Component component0 = null;
      String string0 = "sup";
      ActionExpression actionExpression0 = new ActionExpression("sup");
      Form form0 = null;
      try {
        form0 = new Form((Component) null, "sup", actionExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.0358196128697856
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Form form0 = new Form("UFnK-P[k4]'");
      // Undeclared exception!
      try { 
        form0.placeholder("UFnK-P[k4]'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "QChjD311u$-xN", "QChjD311u$-xN");
      FormElement formElement0 = checkbox0.setBinding("QChjD311u$-xN");
      // Undeclared exception!
      try { 
        formElement0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.1002492841234757
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      int int0 = 0;
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      Image image0 = new Image(errorPage0, charBuffer0, charBuffer0);
      Table table0 = new Table(image0, "Finder expression didn't evaluate to a boolean value.");
      table0.renderHint(charBuffer0);
      Checkbox checkbox0 = new Checkbox(table0, "Finder expression didn't evaluate to a boolean value.", "Finder expression didn't evaluate to a boolean value.");
      FormElement formElement0 = checkbox0.validationRule("Finder expression didn't evaluate to a boolean value.");
      // Undeclared exception!
      try { 
        formElement0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.516812815074829
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      String string0 = " in class ";
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.div();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      String string0 = "{";
      Form form0 = new Form("{");
      NumberInput numberInput0 = new NumberInput(form0, "CWv&&:M>", "CWv&&:M>");
      String string1 = "Tbody component can be added only to a Table.";
      TextArea textArea0 = new TextArea(numberInput0, "Tbody component can be added only to a Table.", "1njLHZ&lv2x2X");
      // Undeclared exception!
      try { 
        form0.tt((Object) "{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      String string0 = "S'Q6u2U1r";
      Checkbox checkbox0 = new Checkbox((Component) null, "</", "S'Q6u2U1r");
      // Undeclared exception!
      try { 
        checkbox0.getPage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.2584261358947217
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, ";", ";");
      FormElement formElement0 = radio0.value(";");
      // Undeclared exception!
      try { 
        formElement0.h2((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      String string0 = "HiqdoR=\"";
      Form form0 = new Form("HiqdoR=\"");
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = new Locale("HiqdoR=\"", "HiqdoR=\"");
      Locale locale1 = locale0.stripExtensions();
      Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale1);
      // Undeclared exception!
      try { 
        form0.label((Object) calendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      String string0 = "S'Q6u2U1r";
      Form form0 = new Form("");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "\"7)i]I,";
      String string1 = "PUon\"";
      stringArray0[1] = "PUon\"";
      stringArray0[2] = "S'Q6u2U1r";
      stringArray0[3] = "</";
      stringArray0[4] = "";
      stringArray0[5] = "S'Q6u2U1r";
      stringArray0[6] = "\"7)i]I,";
      stringArray0[7] = "";
      // Undeclared exception!
      try { 
        form0.isValid("PUon\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }
}
