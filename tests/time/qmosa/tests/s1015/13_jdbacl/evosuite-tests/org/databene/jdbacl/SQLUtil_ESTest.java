/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:05:37 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.Writer;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.io.vfmem.DataStore;
import org.apache.derby.impl.io.vfmem.VirtualFile;
import org.databene.commons.AssertionError;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.value.ValueLobDb;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7627925747848114
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Expression.srapCondition";
      stringArray0[1] = "LxCFp^+P}% Ve";
      stringArray0[2] = "Expression.srapCondition";
      stringArray0[3] = "LxCFp^+P}% Ve";
      stringArray0[4] = "LxCFp^+P}% Ve";
      SQLUtil.normalize("Ml*o+kH ", true);
      SQLUtil.renderColumnNames(stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Z0n");
      stringBuilder0.insert(0, (double) 0);
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      stringBuilder0.append(charArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Z0n";
      stringArray0[1] = "WAD8Y=uQ5R9eXZ1/&h";
      stringArray0[2] = "Z0n";
      stringArray0[4] = "Z0n";
      MockPrintStream mockPrintStream0 = new MockPrintStream("Z0n");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "8w+Bgyu]o0Yl}7:t", (Object[]) stringArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      StringBuilder stringBuilder1 = new StringBuilder((CharSequence) "Z0n");
      stringBuilder1.append(charArray0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2936866524411568
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall("");
      String string0 = "DATE";
      DBSchema dBSchema0 = new DBSchema("DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      SQLUtil.isProcedureCall("DATE");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable0);
      SQLUtil.mutatesStructure("create table");
      SQLUtil.isDDL("");
      DBDataType.getInstance((-1663), "Zn");
      Integer integer0 = new Integer((-582074039));
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Unknown constraint type: ", defaultDBTable1, (DBDataType) null, integer0, integer1);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8826785636527092
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      String string0 = SQLUtil.renderColumnListWithTableName("", stringArray0);
      assertEquals(".", string0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string1);
      
      String string2 = SQLUtil.innerJoin((String) null, stringArray0, "", (String) null, stringArray0);
      assertEquals(" as null on null. = null.", string2);
      
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, "()", "DERBY_J4BCnRESILT_ST ");
      dBCheckConstraint0.toString();
      boolean boolean0 = SQLUtil.isProcedureCall(",s`9");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string3 = SQLUtil.typeAndName(dBCheckConstraint0);
      assertEquals("check constraint constraint", string3);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("CHECK DERBY_J4BCnRESILT_ST ");
      assertTrue(boolean1.equals((Object)boolean0));
      
      SQLUtil.isDDL(" and ");
      DBDataType dBDataType0 = DBDataType.getInstance((-641), "");
      Integer integer0 = new Integer((-1663));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(".", defaultDBTable0, dBDataType0, integer0, integer0);
      String string4 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("(-1663,-1663)", string4);
      
      Integer integer1 = Integer.getInteger("l6A?aDz", integer0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("delete0n-lapt", defaultDBTable0, dBDataType0, integer0, integer1);
      String string5 = SQLUtil.substituteMarkers("Illegal column type format: ", "Qr'1 u", "()");
      assertEquals("Illegal column type format: ", string5);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2471378907500625
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(2023);
      SQLUtil.mutatesDataOrStructure("Expression.sraCCondition");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "LxCFp^+P}% Ve";
      stringArray0[1] = "LxCFp^+P}% Ve";
      stringArray0[2] = "Expression.sraCCondition";
      stringArray0[3] = "LxCFp^+P}% Ve";
      stringArray0[4] = "LxCFp^+P}% Ve";
      SQLUtil.isQuery("Expression.sraCCondition");
      SQLUtil.normalize("Expression.sraCCondition", false);
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("rb?", (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5170786500307516
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("create table ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R^~0");
      DBDataType dBDataType0 = DBDataType.getInstance(375, "R^~0");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("R^~0", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.normalize("create table ", false);
      assertEquals("create table", string0);
      
      DataStore dataStore0 = new DataStore("create table ");
      VirtualFile virtualFile0 = new VirtualFile("illega", dataStore0);
      virtualFile0.getOutputStream();
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("create table", defaultDBTable0, 5729, "illega");
      SQLUtil.removeComments("illega");
      boolean boolean1 = SQLUtil.isProcedureCall("calldelete0n-lapt");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8022525455871325
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLUtil.isDML("create table ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R^~0");
      DBDataType dBDataType0 = DBDataType.getInstance(375, "R^~0");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("R^~0", defaultDBTable0, dBDataType0);
      SQLUtil.renderColumn(defaultDBColumn0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      DataStore dataStore0 = new DataStore("create table ");
      VirtualFile virtualFile0 = new VirtualFile("illega", dataStore0);
      OutputStream outputStream0 = virtualFile0.getOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "create table ");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("create table R^~0", stringBuilder0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5179872908529675
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "create table ");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, (double) 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      StringBuilder stringBuilder2 = stringBuilder0.append(charArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("WAD8Y=uQ5R9eXZ1/&h");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) stringBuilder2;
      objectArray0[1] = (Object) stringBuilder0;
      objectArray0[2] = (Object) defaultDBTable0;
      objectArray0[3] = (Object) "WAD8Y=uQ5R9eXZ1/&h";
      objectArray0[4] = (Object) "create table ";
      objectArray0[5] = (Object) "8w+Bgyu]o0Yl}7:t";
      objectArray0[6] = (Object) stringBuilder0;
      objectArray0[7] = (Object) mockPrintStream0;
      objectArray0[8] = (Object) stringBuilder1;
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "WAD8Y=uQ5R9eXZ1/&h", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4379446853081665
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall("");
      DBSchema dBSchema0 = new DBSchema("DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (DBDataType) null);
      defaultDBColumn0.getNotNullConstraint();
      defaultDBColumn0.setNotNullConstraint((DBNotNullConstraint) null);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, "");
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "");
      stringBuilder2.append((long) 0);
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, (-2464.1674756901502));
      stringBuilder3.append((Object) "DATE");
      StringBuilder stringBuilder4 = SQLUtil.addRequiredCondition("B:yl@='QUm<5}W\"", stringBuilder2);
      SQLUtil.addOptionalCondition("Zn", stringBuilder4);
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("Zn", (String[]) null, "getUpdateVTIResultSet", "B:yl@='QUm<5}W\"", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("@7H");
      int int0 = 2023;
      Integer integer0 = new Integer(2023);
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "mmq|t|:wtvj";
      int int1 = 302;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("IS_NULL ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4516629215075656
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall("");
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (DBDataType) null);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      StringBuilder stringBuilder1 = new StringBuilder("");
      StringBuilder stringBuilder2 = stringBuilder0.insert(0, (double) 0);
      StringBuilder stringBuilder3 = stringBuilder2.append((Object) "Zn");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("create materialized view0n-lapt", defaultDBTable0, 32, "org.apache.derby.impl.sql.compile.TablePrivilegesNode");
      SQLUtil.renderValue(stringBuilder1);
      System.setCurrentTimeMillis(32);
      SQLUtil.addOptionalCondition((String) null, stringBuilder3);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn1, stringBuilder3);
      assertEquals("0.0ZnZn or nullORG.APACHE.DERBY.IMPL.SQL.COMPILE.TABLEPRIVILEGESNODE", stringBuilder3.toString());
      assertEquals("0.0ZnZn or nullORG.APACHE.DERBY.IMPL.SQL.COMPILE.TABLEPRIVILEGESNODE", stringBuilder0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ValueLobDb.createSmallLob((-449), byteArray0, (-449));
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      StringBuilder stringBuilder0 = new StringBuilder(15);
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("LOCAL ", compositeDBObject0);
      tableContainer0.getTable("Mq&w,bZ^Qf~");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      JdbcConnectionPool.create("dele", "dele", "(J-U(");
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      JdbcConnectionPool.create((ConnectionPoolDataSource) pGConnectionPoolDataSource1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("LOCAL ");
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.150886315715538
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall("");
      DBSchema dBSchema0 = new DBSchema("DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (DBDataType) null);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, "");
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "");
      StringBuilder stringBuilder3 = stringBuilder2.append((long) 0);
      StringBuilder stringBuilder4 = new StringBuilder();
      stringBuilder3.reverse();
      SQLUtil.addRequiredCondition("Zn", stringBuilder0);
      StringBuilder stringBuilder5 = new StringBuilder((CharSequence) "el<NV");
      SQLUtil.addOptionalCondition("el<NV", stringBuilder5);
      assertEquals("el<NV or el<NV", stringBuilder5.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4986543787008317
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("create table ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("L010");
      boolean boolean1 = SQLUtil.isQuery("R^~0");
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "R^~0";
      stringArray0[1] = "L010";
      stringArray0[2] = "L010";
      stringArray0[3] = "L010";
      stringArray0[4] = "L010";
      stringArray0[5] = "create table ";
      stringArray0[6] = "create table ";
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "L010";
      objectArray0[1] = (Object) defaultDBTable0;
      objectArray0[2] = (Object) "create table ";
      objectArray0[3] = (Object) "create table ";
      objectArray0[4] = (Object) "L010";
      objectArray0[5] = (Object) defaultDBTable0;
      objectArray0[6] = (Object) "L010";
      objectArray0[7] = (Object) defaultDBTable0;
      String string0 = SQLUtil.renderWhereClause(stringArray0, objectArray0);
      assertEquals("R^~0 = 'L010' AND L010 = L010 AND L010 = 'create table ' AND L010 = 'create table ' AND L010 = 'L010' AND create table  = L010 AND create table  = 'L010'", string0);
      
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create table ", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (R^~0, L010, L010, L010, L010, create table , create table )", string1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.26368224870517
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R^~0");
      SQLUtil.isQuery("update");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "update";
      stringArray0[1] = "R^~0";
      SQLUtil.innerJoin("R^~0", stringArray0, "update", "UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?", stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance((-195), "UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("update", defaultDBTable0, dBDataType0, integer0, (Integer) null);
      SQLUtil.renderColumn(defaultDBColumn0);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("R^~0", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append((double) (-195));
      char[] charArray0 = new char[4];
      charArray0[0] = 'R';
      charArray0[1] = '%';
      charArray0[2] = 'C';
      charArray0[3] = 'Y';
      StringBuilder stringBuilder3 = stringBuilder2.append(charArray0);
      SQLUtil.addOptionalCondition("update as UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ? on R^~0.update = UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?.update and R^~0.R^~0 = UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?.R^~0", stringBuilder3);
      assertEquals("R^~0-195.0R%CY or update as UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ? on R^~0.update = UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?.update and R^~0.R^~0 = UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?.R^~0", stringBuilder2.toString());
      assertEquals("R^~0-195.0R%CY or update as UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ? on R^~0.update = UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?.update and R^~0.R^~0 = UPDATE INFORMATION_SCHEMA.LOBS SET TABLE = ? WHERE ID = ?.R^~0", stringBuilder3.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8442266465293593
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)6;
      ValueLobDb valueLobDb0 = ValueLobDb.createSmallLob(200, byteArray0, 0L);
      ValueLobDb valueLobDb1 = valueLobDb0.copyToTemp();
      Reader reader0 = valueLobDb1.getReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      SQLUtil.renderNumber(streamTokenizer0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "kVMx8T:q8.";
      SQLUtil.renderColumnListWithTableName("WAD8Y=uQ5R9eXZ1/&=xh", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(">#oM2Qv");
      DBDataType dBDataType0 = DBDataType.getInstance(178, "- 0");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("- 0", defaultDBTable0, dBDataType0, integer0, (Integer) 17);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      Integer.getInteger("WAD8Y=uQ5R9eXZ1/&=xh", (Integer) null);
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.ABORT;
      Integer.getInteger("jVf", integer2);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("^1fEZ8]2AYSMSpB-^/", defaultDBTable0, dBDataType0, (Integer) 22, (Integer) 22);
      assertTrue(defaultDBColumn1.isNullable());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "%69#$L(E";
      Integer integer0 = new Integer(2023);
      Integer integer1 = RawTransaction.COMMIT;
      SQLUtil.normalize("%69#$L(E", true);
      Boolean.valueOf(true);
      int int0 = (-1625095459);
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-1625095459), (long) 2023);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1625095459
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0160111384877113
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("HH");
      Integer integer0 = new Integer(2023);
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      StringBuilder stringBuilder0 = new StringBuilder();
      TableContainer tableContainer0 = new TableContainer((String) null, defaultDBTable0);
      tableContainer0.getTable((String) null);
      JdbcConnectionPool.create("LOCAL ", "0N-LaPT", "dele");
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable1);
      SQLUtil.mutatesStructure("dele");
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R^~0");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("update");
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.567944147734173
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[9];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-128);
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "pc9:j,rC%m/KyH";
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      Object object0 = new Object();
      objectArray0[1] = object0;
      String string0 = SQLUtil.normalize("pc9:j,rC%m/KyH", true);
      assertEquals("pc9 : j, rC % m / KyH", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R^~0");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("NCLOB");
      DBDataType dBDataType0 = DBDataType.getInstance(375, "calldelete0n-lapt");
      dBDataType0.isAlpha();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("calldelete0n-lapt", defaultDBTable1, dBDataType0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "\nFROM ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\nFROM ");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2381744996028692
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "CLOB";
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[8];
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.normalize(" on ", true);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9852589892268226
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)118;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableContainer tableContainer0 = new TableContainer("3fX%8c0!s", compositeDBObject0);
      Object object0 = new Object();
      Object object1 = new Object();
      SQLUtil.normalize("3fX%8c0!s", true);
      SQLUtil.mutatesDataOrStructure("create table");
      String string0 = "LxCFp^+P}% Ve";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.databene.jdbacl.SQLUtil";
      SQLUtil.innerJoin("PRIMARY KEY ", stringArray0, "3fX%8c0!s", "PRIMARY KEY ", stringArray0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.150886315715538
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.isProcedureCall("");
      DBSchema dBSchema0 = new DBSchema("DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, "");
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "");
      stringBuilder2.append((long) 0);
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, (-2464.1674756901502));
      stringBuilder3.append((Object) "DATE");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Zn", defaultDBTable0, 44, "create materialized view0n-lapt");
      SQLUtil.removeComments("");
      boolean boolean1 = SQLUtil.isProcedureCall("+q2w@~c");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4529400607157394
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall("");
      DBSchema dBSchema0 = new DBSchema("DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (DBDataType) null);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, "");
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "");
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, (double) 0);
      StringBuilder stringBuilder4 = stringBuilder3.append((Object) "DATE");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("create materialized view0n-lapt", defaultDBTable0, 32, "org.apache.derby.impl.sql.compile.TablePrivilegesNode");
      SQLUtil.renderValue(defaultDBColumn1);
      stringBuilder1.insert(0, (float) 32);
      System.setCurrentTimeMillis(32);
      SQLUtil.addOptionalCondition("", stringBuilder1);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder0 = new StringBuilder();
      Integer integer1 = RawTransaction.ABORT;
      StringBuilder stringBuilder1 = new StringBuilder();
      StringBuilder stringBuilder2 = stringBuilder0.reverse();
      SQLUtil.addRequiredCondition("el<NV", stringBuilder1);
      SQLUtil.addOptionalCondition("el<NV", stringBuilder0);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("el<NV", dBCatalog0);
      dBSchema0.getDatabase();
      DBCatalog dBCatalog1 = new DBCatalog("el<NV", (Database) null);
      SQLUtil.typeAndName(dBCatalog1);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("el<NV", defaultDBTable0, 0, "drop materialized view");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder2);
      assertEquals("el<NVDROP MATERIALIZED VIEW", stringBuilder2.toString());
      assertEquals("el<NVDROP MATERIALIZED VIEW", stringBuilder0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4890300699462409
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SQLUtil.isDML("create table ");
      SQLUtil.normalize("drop table", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "create table ";
      stringArray0[1] = "drop table";
      stringArray0[2] = "drop table";
      stringArray0[3] = "create table ";
      stringArray0[4] = "drop table";
      stringArray0[5] = "YdI/`*baw/[!Zq)";
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "YdI/`*baw/[!Zq)";
      objectArray0[1] = (Object) "YdI/`*baw/[!Zq)";
      objectArray0[2] = (Object) "drop table";
      objectArray0[3] = (Object) "create table ";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      StringBuilder stringBuilder0 = new StringBuilder();
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "el<NV";
      stringArray0[1] = "el<NV";
      stringArray0[2] = "&=n]";
      SQLUtil.renderColumnListWithTableName("el<NV", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9809787598716668
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      SQLUtil.isProcedureCall("");
      SQLUtil.isProcedureCall("");
      DBSchema dBSchema0 = new DBSchema("DATE");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      dBSchema0.setOwner(compositeDBObject0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) boolean0;
      objectArray0[1] = (Object) dBSchema0;
      objectArray0[2] = (Object) dBSchema0;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.2856995114849454
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)6;
      ValueLobDb valueLobDb0 = ValueLobDb.createSmallLob(200, byteArray0, 0L);
      ValueLobDb valueLobDb1 = valueLobDb0.copyToTemp();
      Reader reader0 = valueLobDb1.getReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      SQLUtil.renderNumber(streamTokenizer0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "kVMx8T:q8.";
      SQLUtil.renderColumnListWithTableName("WAD8Y=uQ5R9eXZ1/&h", stringArray0);
      SQLUtil.normalize("- 0", false);
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition(stringArray0[0], (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4793530122008116
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      SQLUtil.isProcedureCall("");
      boolean boolean0 = SQLUtil.isProcedureCall("");
      assertFalse(boolean0);
      
      Integer integer0 = new Integer((-1719314413));
      Integer integer1 = RawTransaction.COMMIT;
      SQLUtil.normalize("", true);
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("=y%'/4-%;(n");
      assertNull(boolean1);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.databene.jdbacl.SQLUtil");
      boolean boolean2 = SQLUtil.isQuery("");
      assertFalse(boolean2);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.171417801900708
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringArray0[0] = "CLOB";
      stringArray0[1] = "";
      stringArray0[2] = "pc9:j,rC%m/KyH";
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) " on ";
      objectArray0[3] = (Object) "CLOB";
      objectArray0[4] = (Object) sQLUtil0;
      boolean boolean0 = SQLUtil.isProcedureCall(",s`9");
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      assertNotNull(string0);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("delete0n-lapt");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte byte0 = (byte)0;
      DBConstraint dBConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8212565066006587
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 2023;
      Integer integer0 = new Integer(2023);
      String string0 = "Expression.sraCCondition";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("DERBY_J4BCnRESILT_ST ", false, "Expression.sraCCondition", "DERBY_J4BCnRESILT_ST ");
      String string1 = "nv<|6hs 7YK+:pkVP0V";
      dBCheckConstraint0.setName("nv<|6hs 7YK+:pkVP0V");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "<E|W(,ANA1";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("<E|W(,ANA1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: <E|W(,ANA1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("insert");
      String string0 = "getProjectRestrictResultSet";
      DBTable dBTable0 = null;
      // Undeclared exception!
      try { 
        DBDataType.getInstance("WheZ?t!&'7}7^$m");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.397585505990371
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      SQLUtil.renderColumnListWithTableName("", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.innerJoin((String) null, stringArray0, "", (String) null, stringArray0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, "()", "DERBY_J4BCnRESILT_ST ");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1642585569697879
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = SQLUtil.isProcedureCall("");
      DBSchema dBSchema0 = new DBSchema("DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      DataStore dataStore0 = new DataStore("illega");
      DataStore dataStore1 = new DataStore("XBM07.D");
      VirtualFile virtualFile0 = new VirtualFile("selecting ", dataStore1);
      OutputStream outputStream0 = virtualFile0.getOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);
      String string0 = SQLUtil.normalize("XBM07.D", true);
      assertEquals("XBM07.D", string0);
      
      boolean boolean2 = SQLUtil.isQuery("Z");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer(2023);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Expression.srapCondition";
      stringArray0[1] = "LxCFp^+P}% Ve";
      stringArray0[2] = "Expression.srapCondition";
      stringArray0[3] = "LxCFp^+P}% Ve";
      String string0 = SQLUtil.normalize("NbJYfl@i7", false);
      assertEquals("NbJYfl @ i7", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.758918015768042
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      SQLUtil.renderColumnListWithTableName("", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.innerJoin((String) null, stringArray0, "yDhnm`ibF'S^", "8X?0M n0lZ_JgtVV", stringArray0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("yDhnm`ibF'S^", false, "create table ", "DERBY_JDBC_RESULT_SET ");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      DBSchema dBSchema0 = new DBSchema(".");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "\u0001\u0137", false, stringArray0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("HH");
      Integer integer0 = new Integer(2023);
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "0N-LaPT";
      stringArray0[1] = "select into3y+euao5=2y\"(xu)";
      stringArray0[2] = "select into3y+euao5=2y\"(xu)";
      stringArray0[4] = ",bq:";
      stringArray0[5] = "6z$vgpZOAyk{G+6X";
      stringArray0[6] = "HH";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.3183056868918186
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("create unique index0n-lapt");
      Integer integer0 = RawTransaction.ABORT;
      String string0 = SQLUtil.substituteMarkers("eK9", "executedelete0n-lapt", integer0);
      assertEquals("eK9", string0);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.3169392047597572
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = " (";
      stringArray0[1] = " on ";
      stringArray0[2] = "";
      String string0 = SQLUtil.leftJoin("", stringArray0, "pc9:j,rC%m/KyH", " (", stringArray0);
      assertEquals("left join pc9:j,rC%m/KyH as  ( on . ( =  (. ( and . on  =  (. on  and . =  (. and .null =  (.null and .null =  (.null and .null =  (.null and .null =  (.null and .null =  (.null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "F:O?n-z", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, false, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.setTable(defaultDBTable0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("pc9:j,rC%m/KyH", false, dBTable0, stringArray0, dBTable0, stringArray0);
      dBForeignKeyConstraint0.setName("unKT9DD&Ug.qB[7+");
      String string1 = SQLUtil.renderValue(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT unKT9DD&Ug.qB[7+ FOREIGN KEY ( (,  on , , , , , , ) REFERENCES ( (,  on , , , , , , )", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("( (,  on , , , , , , )", string2);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2931736495697863
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringArray0[0] = "CLOB";
      stringArray0[1] = "";
      stringArray0[2] = "pc9:j,rC%m/KyH";
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) " on ";
      objectArray0[3] = (Object) "CLOB";
      objectArray0[4] = (Object) sQLUtil0;
      SQLUtil.isProcedureCall(",s`9");
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable0);
      SQLUtil.mutatesStructure("CLOB");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("");
      defaultDBTable1.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.125819826989774
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "ZY7V|";
      stringArray0[1] = "ZY7V|";
      stringArray0[2] = "ZY7V|";
      stringArray0[3] = "ZY7V|";
      SQLUtil.renderColumnListWithTableName("ZY7V|", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.innerJoin("ZY7V|", stringArray0, "ZY7V|", "8X?0M n0lZ_JgtVV", stringArray0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("ZY7V|", false, "ZY7V|", "rename");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      DBSchema dBSchema0 = new DBSchema("- ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\u0001\u0137", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "getNString(int)", false, stringArray0);
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.mutatesDataOrStructure("NUL}lj");
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec1);
      StringBuilder stringBuilder0 = new StringBuilder(1809);
      // Undeclared exception!
      try { 
        stringBuilder0.append((CharSequence) "getNString(int)", 1809, 32);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 1809, end 32, s.length() 15
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CLOB");
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("&apos", (String[]) null, "F*g&dKR~@A+", "callnul}lj", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.1171019303194956
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("create materialized view");
      assertTrue(boolean0);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.isProcedureCall("create materialized view");
      DBSchema dBSchema0 = new DBSchema("Zn");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Zn", dBSchema0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Zn");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, "create materialized view");
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "create materialized view");
      stringBuilder2.append((long) 0);
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, (-2464.1674756901502));
      stringBuilder3.append((Object) "Zn");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create materialized view0n-lapt", defaultDBTable0, 32, "org.apache.derby.impl.sql.compile.TablePrivilegesNode");
      SQLUtil.removeComments("create materialized view0n-lapt");
      boolean boolean1 = SQLUtil.isProcedureCall("create materialized view0n-lapt");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.1782356557936127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object object0 = new Object();
      boolean boolean0 = SQLUtil.isProcedureCall("select into");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("alter tabledrop tablepwxm,%]b join +ytcfl-3,u_z as ish~-pk9fzn.f+q7x on \u0001\u00E7.null = ish~-pk9fzn.f+q7x.null and \u0001\u00E7.odhf\\lyv}:j[^1(' = ish~-pk9fzn.f+q7x.odhf\\lyv}:j[^1(' and \u0001\u00E7.ish~-pk9fzn.f+q7x = ish~-pk9fzn.f+q7x.ish~-pk9fzn.f+q7x drop tablepwxm,%]b join +ytcfl-3,u_z as ish~-pk9fzn.f+q7x on \u0001\u00E7.null = ish~-pk9fzn.f+q7x.null and \u0001\u00E7.odhf\\lyv}:j[^1(' = ish~-pk9fzn.f+q7x.odhf\\lyv}:j[^1(' and \u0001\u00E7.ish~-pk9fzn.f+q7x = ish~-pk9fzn.f+q7x.ish~-pk9fzn.f+q7x null", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage((String) null, dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure("8gs5@Z`SS5l)T", dBPackage0);
      String string0 = SQLUtil.typeAndName(dBProcedure0);
      assertNotNull(string0);
      assertEquals("procedure 8gs5@Z`SS5l)T", string0);
      
      Boolean boolean1 = SQLUtil.mutatesStructure(",s`9");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.1782356557936127
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      Object object0 = new Object();
      SQLUtil.isDDL(",s`9");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("alter tabledrop tablepwxm,%]b join +ytcfl-3,u_z as ish~-pk9fzn.f+q7x on \u0001\u00E7.null = ish~-pk9fzn.f+q7x.null and \u0001\u00E7.odhf\\lyv}:j[^1(' = ish~-pk9fzn.f+q7x.odhf\\lyv}:j[^1(' and \u0001\u00E7.ish~-pk9fzn.f+q7x = ish~-pk9fzn.f+q7x.ish~-pk9fzn.f+q7x drop tablepwxm,%]b join +ytcfl-3,u_z as ish~-pk9fzn.f+q7x on \u0001\u00E7.null = ish~-pk9fzn.f+q7x.null and \u0001\u00E7.odhf\\lyv}:j[^1(' = ish~-pk9fzn.f+q7x.odhf\\lyv}:j[^1(' and \u0001\u00E7.ish~-pk9fzn.f+q7x = ish~-pk9fzn.f+q7x.ish~-pk9fzn.f+q7x null", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("select into", dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure(",s`9", dBPackage0);
      String string0 = SQLUtil.typeAndName(dBProcedure0);
      assertNotNull(string0);
      assertEquals("procedure ,s`9", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure(",s`9");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName(" on ", stringArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, " on ");
      String string0 = SQLUtil.normalize("83u\"xB!9Nfw[&h", false);
      assertEquals("83u \"xB!9Nfw[&h\"", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = ":?";
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition(":?", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = " (";
      stringArray0[1] = " on ";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = " (";
      stringArray0[6] = "";
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("n\"Q4_", stringBuilder0);
      SQLUtil.addOptionalCondition("", stringBuilder1);
      assertEquals("n\"Q4_ or ", stringBuilder1.toString());
      assertEquals("n\"Q4_ or ", stringBuilder0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2589462541926926
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String[] stringArray0 = new String[7];
      boolean boolean0 = SQLUtil.isDML("BLOB");
      DBSchema dBSchema0 = new DBSchema((String) null);
      dBSchema0.getSequences(true);
      dBSchema0.getPackages();
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("null", string0);
      
      String string1 = SQLUtil.join("N#6wKR5bl!CBL/", "N#6wKR5bl!CBL/", stringArray0, "ISH~-Pk9FZn.F+Q7x", (String) null, stringArray0);
      assertEquals("N#6wKR5bl!CBL/ join ISH~-Pk9FZn.F+Q7x as null on N#6wKR5bl!CBL/.null = null.null and N#6wKR5bl!CBL/.null = null.null and N#6wKR5bl!CBL/.null = null.null and N#6wKR5bl!CBL/.null = null.null and N#6wKR5bl!CBL/.null = null.null and N#6wKR5bl!CBL/.null = null.null and N#6wKR5bl!CBL/.null = null.null", string1);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("execute|+#\"6+k}9[l!");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = "jNXV4\"-r08n9Fiqo";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jNXV4\"-r08n9Fiqo";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("jNXV4\"-r08n9Fiqo", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = stringBuilder0.append((-2575.8901F));
      StringBuilder stringBuilder2 = stringBuilder1.append((double) (-2575.8901F));
      char[] charArray0 = new char[4];
      charArray0[0] = '&';
      charArray0[1] = '=';
      charArray0[2] = 'T';
      charArray0[3] = '1';
      int int0 = (-278);
      // Undeclared exception!
      try { 
        stringBuilder2.insert((-87609128), charArray0, (-87609128), (-278));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -87609128
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.806754853779283
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = 2023;
      Integer integer0 = new Integer(2023);
      String string0 = "Expression.sraCCondition";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("DERBY_J4BCnRESILT_ST ", false, "Expression.sraCCondition", "DERBY_J4BCnRESILT_ST ");
      String string1 = "nv<|6hs 7YK+:pkVP0V";
      dBCheckConstraint0.setName("nv<|6hs 7YK+:pkVP0V");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = " (";
      stringArray0[1] = " on ";
      stringArray0[2] = "";
      stringArray0[3] = "pc9:j,rC%m/KyH";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray1 = new String[0];
      SQLUtil.renderWhereClause(stringArray1, stringArray0);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9809787598716668
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
      
      SQLUtil.isProcedureCall("");
      boolean boolean1 = SQLUtil.isProcedureCall("");
      assertFalse(boolean1);
      
      DBSchema dBSchema0 = new DBSchema("DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (DBDataType) null);
      defaultDBColumn0.getForeignKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder();
      VersionNumber versionNumber0 = VersionNumber.valueOf(" NULL");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase(" NULL", "~", versionNumber0);
      String string0 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals(".", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("", "ODr'", versionNumber0);
      String string0 = SQLUtil.ownerDotComponent(defaultDatabase0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SQLUtil.typeAndName((DBObject) null);
      TableContainer tableContainer0 = new TableContainer("");
      // Undeclared exception!
      try { 
        tableContainer0.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.TableContainer", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "drop tablepwxm,%]b join +ytcfl-3,u_z as ish~-pk9fzn.f+q7x on \u0001\u00E7.null = ish~-pk9fzn.f+q7x.null and \u0001\u00E7.odhf\\\\lyv}:j[^1(\\' = ish~-pk9fzn.f+q7x.odhf\\\\lyv}:j[^1(\\' and \u0001\u00E7.ish~-pk9fzn.f+q7x = ish~-pk9fzn.f+q7x.ish~-pk9fzn.f+q7x";
      String string1 = "R^~0";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R^~0");
      int int0 = 375;
      String string2 = "el<NV";
      String string3 = "O7";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" k3rMI@qk]Y(.AW{", false, defaultDBTable0, "O7");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SQLUtil.isQuery("create unique index0n-lapt");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "CLOB";
      stringArray0[1] = "";
      stringArray0[2] = "pc9:j,rC%m/KyH";
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) " on ";
      objectArray0[3] = (Object) "CLOB";
      boolean boolean0 = SQLUtil.isQuery("create unique index0n-lapt");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "CLOB";
      stringArray0[1] = "CLOB";
      stringArray0[2] = "";
      SQLUtil.leftJoin("CLOB", stringArray0, "(;", "", stringArray0);
      SQLUtil.renderValue("CLOB");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      boolean boolean0 = false;
      NameSpec nameSpec0 = NameSpec.NEVER;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((Writer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ValueLobDb valueLobDb0 = ValueLobDb.createSmallLob((-449), byteArray0, (-449));
      ValueLobDb valueLobDb1 = valueLobDb0.copyToTemp();
      Reader reader0 = valueLobDb1.getReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      SQLUtil.renderValue(reader0);
      System.setCurrentTimeMillis(18);
      String string0 = "y?.JK(=$7exJ`-|+NzQ";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "truncate0n-lapt", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      dBUniqueConstraint0.addColumnName("drop tableexpression.srapcondition");
      StringBuilder stringBuilder1 = stringBuilder0.append('k');
      // Undeclared exception!
      try { 
        stringBuilder1.insert(9, "Bm;\"T_^<h+NGV");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = "EXwdW+krt|";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "EXwdW+krt|";
      stringArray0[1] = "EXwdW+krt|";
      stringArray0[2] = "drop tabledatabase";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "is@h";
      stringArray1[1] = "is@h";
      stringArray1[2] = "drop tabledatabase";
      stringArray1[3] = "EXwdW+krt|";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray1[4] = "is@h";
      stringArray1[5] = "is@h";
      stringArray1[6] = "EXwdW+krt|";
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      stringArray1[7] = "drop tabledatabase";
      SQLUtil.leftJoin("EXwdW+krt|", stringArray0, "is@h", "drop tabledatabase", stringArray1);
      StringBuilder stringBuilder0 = new StringBuilder("EXwdW+krt|");
      int int0 = (-1271);
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-1271), "VO6)!3LbE~5Z|usB");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1271
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ArrayList<DBColumn> arrayList0 = new GenericDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = " NOT NULL";
      stringArray0[1] = " NOT NULL";
      stringArray0[2] = " NOT NULL";
      String string0 = "n/Wey9:yYN1mN*bY";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join("LB?ER[~O&r{sr'np$%", " NOT NULL", stringArray0, " NOT NULL", "n/Wey9:yYN1mN*bY", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^6zV T#X\">h";
      stringArray0[1] = ";Lu\"P}Q(+dWShgC+XU";
      String string0 = " ADD ";
      stringArray0[2] = " ADD ";
      stringArray0[3] = ";Lu\"P}Q(+dWShgC+XU";
      stringArray0[4] = "^6zV T#X\">h";
      stringArray0[5] = ";Lu\"P}Q(+dWShgC+XU";
      SQLUtil.join(";Lu\"P}Q(+dWShgC+XU", "^6zV T#X\">h", stringArray0, "#2k4Kj9&N$ryC", " ADD ", stringArray0);
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("^6zV T#X\">h");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '^6zV T#X\">h' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema(" on ");
      dBSchema0.getTable(" on ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("C96kGhOt~`", (DBTable) null, 2385, "C96kGhOt~`");
      defaultDBColumn0.setDefaultValue("org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      String[] stringArray0 = new String[10];
      stringArray0[0] = " on ";
      stringArray0[1] = " on ";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      try {
        dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, (DBTable) null, stringArray0, (DBTable) null, stringArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // refereeTable is not supposed to be null
         //
         verifyException("org.databene.commons.Assert", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Integer integer0 = new Integer(2023);
      boolean boolean0 = SQLUtil.isDDL("Expression.srapCondition");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("drop index0n-lapt");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "MMq|T|:WTVj|jWH_s\"X";
      stringArray0[1] = "cRtiQ*'TwL";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "MMq|T|:WTVj|jWH_s\"X";
      stringArray1[1] = "create table ";
      stringArray1[2] = "MMq|T|:WTVj|jWH_s\"X";
      stringArray1[3] = "MMq|T|:WTVj|jWH_s\"X";
      String string0 = SQLUtil.innerJoin("drop table", stringArray1, "MMq|T|:WTVj|jWH_s\"X", "MMq|T|:WTVj|jWH_s\"X", stringArray0);
      assertEquals("MMq|T|:WTVj|jWH_s\"X as MMq|T|:WTVj|jWH_s\"X on drop table.MMq|T|:WTVj|jWH_s\"X = MMq|T|:WTVj|jWH_s\"X.MMq|T|:WTVj|jWH_s\"X and drop table.create table  = MMq|T|:WTVj|jWH_s\"X.cRtiQ*'TwL and drop table.MMq|T|:WTVj|jWH_s\"X = MMq|T|:WTVj|jWH_s\"X.null and drop table.MMq|T|:WTVj|jWH_s\"X = MMq|T|:WTVj|jWH_s\"X.null", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.join("", "", (String[]) null, "0qA:CS=M^43", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
