/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:57:32 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 166, 166);
      foreignKeyConstraint0.isReal();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setShortType("vTOZ+HO}:");
      tableColumn0.setShortType("vTOZ+HO}:");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      tableColumn0.setShortType("net.sourceforge.schemaspy.model.ForeignKeyConstraint");
      tableColumn0.setIsAutoUpdated(true);
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getName();
      tableColumn0.unlinkChildren();
      ForeignKeyConstraint foreignKeyConstraint1 = null;
      try {
        foreignKeyConstraint1 = new ForeignKeyConstraint(tableColumn0, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.234604690596442
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Restrict delete", 1, 3);
      Integer integer0 = new Integer((-2457));
      Integer integer1 = new Integer(936);
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1572, 2);
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string2);
      
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      System.setCurrentTimeMillis(1L);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "' to ", 3, 936);
      boolean boolean2 = foreignKeyConstraint2.isRestrictDelete();
      boolean boolean3 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean3 == boolean2);
      
      foreignKeyConstraint2.getDeleteRuleDescription();
      assertEquals(3, foreignKeyConstraint2.getUpdateRule());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.266914708793633
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "`SD**fcF*MO~y)zWS<", 2451, 2451);
      foreignKeyConstraint0.getChildTable();
      Integer integer0 = new Integer(2451);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertEquals(2451, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      assertEquals(2451, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.setComments((String) null);
      tableColumn1.unlinkParents();
      tableColumn0.unlinkChildren();
      tableColumn1.removeParent(tableColumn0);
      tableColumn1.removeParent(tableColumn0);
      tableColumn1.removeAParentFKConstraint();
      tableColumn0.removeChild(tableColumn1);
      tableColumn0.setIsAutoUpdated(true);
      tableColumn0.unlinkChildren();
      tableColumn0.setIsAutoUpdated(true);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7935868607173573
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer(944);
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", (-1469), 2);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis((-1));
      foreignKeyConstraint0.getDeleteRuleName();
      System.setCurrentTimeMillis((-1));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.432359458100156
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", 0, 1);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "gWtr(g.n_F", 1702, 2);
      foreignKeyConstraint0.getDeleteRuleName();
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
      
      foreignKeyConstraint0.isNullOnDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis(1702);
      boolean boolean2 = foreignKeyConstraint1.isRestrictDelete();
      assertTrue(boolean2 == boolean1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string2);
      
      foreignKeyConstraint1.getName();
      assertTrue(foreignKeyConstraint1.isNullOnDelete());
      assertEquals(1702, foreignKeyConstraint1.getUpdateRule());
      
      foreignKeyConstraint0.getParentTable();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1562371055889518
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-3826), 111);
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis(111);
      foreignKeyConstraint0.isRestrictDelete();
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Table.getFullName("K\"Jx<", (String) null, "selectIndexesSql", "30b'tv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      System.setCurrentTimeMillis((byte)87);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.08086723981742
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", 0, 1);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string1);
      
      Config.getInstance();
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "gWtr(g.n_F", 1702, 2);
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, (String) null, 3887, 0);
      String string2 = foreignKeyConstraint2.getDeleteRuleDescription();
      assertEquals(3887, foreignKeyConstraint2.getUpdateRule());
      assertFalse(foreignKeyConstraint2.isRestrictDelete());
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.367420033319239
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 193);
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis((-3826));
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-3741), 0);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "", 0, (-3826));
      // Undeclared exception!
      try { 
        foreignKeyConstraint2.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("m_Ed[D!z");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 2461);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("m_Ed[D!z");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      foreignKeyConstraint0.isReal();
      Config config0 = null;
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("Is3^");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "d~P,^Q");
      String string0 = "m_Ed[D!z";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.isImplied();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("", "I+|6k'", "BK}h!w");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Meta directory \"\" must contain a file named \"BK}h!w.meta.xml\"
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3327765444055757
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", 0, 1);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "gWtr(g.n_F", 1702, 2);
      foreignKeyConstraint0.getParentColumns();
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string2);
      
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis(1702);
      boolean boolean2 = foreignKeyConstraint1.isRestrictDelete();
      assertTrue(boolean2 == boolean1);
      
      int int0 = foreignKeyConstraint1.getDeleteRule();
      assertTrue(foreignKeyConstraint1.isNullOnDelete());
      assertEquals(1702, foreignKeyConstraint1.getUpdateRule());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.80276727550424
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 117, 117);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(117, int0);
      
      foreignKeyConstraint0.isRestrictDelete();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(117, foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.312177921314727
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-3741), (-3741));
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis((-3741));
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte) (-42);
      byteArray0[6] = (byte)87;
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-3741), 2);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, " references ", 4771, (-3741));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = foreignKeyConstraint2.isNullOnDelete();
      assertFalse(boolean1);
      
      boolean boolean2 = foreignKeyConstraint1.isNullOnDelete();
      assertFalse(boolean2 == boolean0);
      
      System.setCurrentTimeMillis((byte)95);
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      assertEquals("Null on delete", string0);
      assertEquals((-3741), foreignKeyConstraint1.getUpdateRule());
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-3741), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.016496301416993
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-3741), 0);
      foreignKeyConstraint0.getChildTable();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-1L));
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-3741), foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3153963981322243
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", 0, 1);
      foreignKeyConstraint0.getChildTable();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1);
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "4<#Y,TMabR)(,R", 0, 0);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string1);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4491844267688556
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Hw", (-3826), 111);
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis(111);
      foreignKeyConstraint0.isRestrictDelete();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Table.getFullName("K\"Jx<", (String) null, "selectIndexesSql", "30b'tv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      foreignKeyConstraint0.getDeleteRuleName();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (byte)87, (-2685));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis((-47L));
      foreignKeyConstraint1.getDeleteRuleDescription();
      System.setCurrentTimeMillis((byte)87);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.132999251994992
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TYkdQ");
      System.setCurrentTimeMillis((-1L));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "TYkdQ", 0, (-3741));
      foreignKeyConstraint0.getParentColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-3741), foreignKeyConstraint0.getDeleteRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2261289670319746
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "TYkdQ", 0, (-1488));
      System.setCurrentTimeMillis((-1329L));
      foreignKeyConstraint0.getParentColumns();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(0, int0);
      
      foreignKeyConstraint0.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean1 == boolean0);
      assertEquals((-1488), foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Table table0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "ne.sourceforge.schemaspy.model.ForeignKeyContraint", 4, 4);
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis(1L);
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 4, 1829);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "~W/+z,", 1829, 18);
      // Undeclared exception!
      try { 
        foreignKeyConstraint2.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4542023479158086
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", 0, 1);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "gWtr(g.n_F", 1702, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string1);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean1 == boolean0);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string2);
      
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals((-7), int0);
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      assertEquals(1702, foreignKeyConstraint1.getUpdateRule());
      assertTrue(foreignKeyConstraint1.isNullOnDelete());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1648951142469604
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, (-673));
      System.setCurrentTimeMillis((-3826));
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis((-673));
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getParentTable();
      System.setCurrentTimeMillis(1376L);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "config", (-10), 1);
      Integer integer0 = new Integer(608);
      Integer integer1 = new Integer(111);
      Config.getInstance();
      System.setCurrentTimeMillis(111);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      assertEquals((-10), foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", foreignKeyConstraint0.getDeleteRuleAlias());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0306549790158956
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 193);
      System.setCurrentTimeMillis((-3826));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isNullOnDelete();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis((-3826));
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(193, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3177988005346264
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 193);
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis((-3826));
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-3741), 0);
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint1.getDeleteRuleName();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "", (-3505), 2816);
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint2.isNullOnDelete();
      foreignKeyConstraint1.isNullOnDelete();
      System.setCurrentTimeMillis(2816);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "OPEN");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "COLLATION");
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.offerLast((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.38615474653985
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TYkdQ");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "TYkdQ", (-3741), 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      foreignKeyConstraint0.getChildColumns();
      System.setCurrentTimeMillis((-1489L));
      foreignKeyConstraint0.getParentColumns();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-3741), int0);
      
      foreignKeyConstraint0.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5120736133881842
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-3826), 111);
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis(111);
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-3741), 2);
      foreignKeyConstraint1.isReal();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "_[V8=tk>2disAzJrfQ", 4771, 111);
      foreignKeyConstraint0.getDeleteRuleName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint2.getDeleteRuleDescription();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint2.isNullOnDelete();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "CzSYY|{u!2UFB9m>sQs";
      int int0 = 125;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "CzSYY|{u!2UFB9m>sQs", 125, (-2766));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      int int0 = 0;
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn0, 0, (-176));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
