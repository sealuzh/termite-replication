/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:31:21 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("7jA`%N9zX");
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[1] = 'l';
      charArray0[2] = 'r';
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9305117329982587
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
      
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)39;
      byteArray1[1] = (byte)90;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (byte)0, (byte) (-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, 4096, 82);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)36;
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.542138913807713
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1_`SgX4Sql:5#3De`Xp");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1Q\"Luk]{qBm");
      javaCharStream0.ReInit((Reader) stringReader0, 491, (-2058), 92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark((-442));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 876, 876, 96);
      javaCharStream0.Done();
      sequenceInputStream0.markSupported();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte) (-92);
      sequenceInputStream0.read(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(876);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1675069751831566
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-644), (byte)36, 1658);
      javaCharStream0.backup(1);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('c');
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.079375644430732
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "oeO~";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 54, 13, (byte)91);
      javaCharStream0.backup(84);
      javaCharStream0.UpdateLineColumn('>');
      javaCharStream0.getEndLine();
      javaCharStream0.readChar();
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.adjustBeginLineColumn((-2640), (-1273));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (-1), 71, (-1388));
      // Undeclared exception!
      try { 
        javaCharStream1.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.321613019380618
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('c');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("=Z|^;F5mecZV#{");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader1);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream1.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6524715975965707
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("7jA`%N9zX");
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[1] = 'l';
      charArray0[2] = 'r';
      charArray0[3] = 'Q';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 778, (-1), 825);
      javaCharStream0.backup((byte)0);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('2');
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(601);
      javaCharStream0.UpdateLineColumn('7');
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      assertEquals(778, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6908972399640176
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      StringReader stringReader0 = new StringReader("oeO~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)10, 0, 0);
      StringReader stringReader1 = new StringReader("oeO~");
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      JavaCharStream.hexval('1');
      javaCharStream0.adjustBeginLineColumn(0, 62);
      assertEquals(62, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)10;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "oeO~";
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[1] = '2';
      JavaCharStream.hexval('F');
      int int0 = (-1);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-450), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.231406878205085
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = '\'';
      charArray0[2] = 'z';
      stringReader0.read(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(1941);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.getEndColumn();
      javaCharStream0.GetSuffix(1941);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('\'');
      assertEquals(2156, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)98;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3398), (byte)58);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 65, (-1541), (byte)12);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7231539840551235
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)44;
      byteArray0[2] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4, (byte)44, (-3551));
      javaCharStream0.backup((byte)1);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4095, 491);
      javaCharStream0.BeginToken();
      javaCharStream1.AdjustBuffSize();
      JavaCharStream.hexval('D');
      char[] charArray1 = javaCharStream1.buffer;
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('m');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.421630996027326
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      String string0 = "Gp\\Pfgl";
      StringReader stringReader0 = new StringReader("GpPfgl");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 59, (byte) (-1), (byte)36);
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)36, (int) (byte) (-1), 74);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8273209655580012
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-644), (byte)36, 1658);
      javaCharStream0.backup(1);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('c');
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix((byte)0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      javaCharStream0.backup(1658);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('\u0000');
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('x');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6621228439087559
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      char[] charArray0 = new char[4];
      stringReader0.read();
      charArray0[0] = '!';
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)125;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 73, (byte)125, (byte)125);
      javaCharStream0.backup((-805));
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('0');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)36, 0);
      javaCharStream1.BeginToken();
      javaCharStream0.AdjustBuffSize();
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.816315886803333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 13, (byte) (-2), (byte) (-2));
      javaCharStream0.backup((-1273));
      javaCharStream0.UpdateLineColumn('.');
      javaCharStream0.getEndLine();
      javaCharStream0.readChar();
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.adjustBeginLineColumn((-1), (byte)0);
      javaCharStream0.getLine();
      javaCharStream0.getLine();
      StringReader stringReader0 = new StringReader("8xvtD2`@X0");
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-22);
      byteArray0[6] = (byte)60;
      byteArray0[7] = (byte) (-24);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.getBeginColumn();
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = '@';
      charArray0[2] = '|';
      charArray0[3] = 'r';
      javaCharStream0.nextCharBuf = charArray0;
      stringReader0.skip((-1));
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.read();
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.512154222195797
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte) (-18);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-2), (-891), (-126));
      javaCharStream0.backup((byte) (-18));
      javaCharStream0.UpdateLineColumn('.');
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-2521), (-1625));
      javaCharStream1.BeginToken();
      javaCharStream0.GetImage();
      int int0 = javaCharStream1.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-2521), int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[1] = '2';
      charArray0[2] = ';';
      charArray0[3] = '2';
      charArray0[4] = '|';
      charArray0[5] = '2';
      charArray0[6] = '|';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-702), 778, '2');
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9732617547983051
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)10, (byte) (-18), 9);
      javaCharStream0.backup((byte)10);
      javaCharStream0.UpdateLineColumn('.');
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(4086, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 81, 81);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.skip(3098L);
      char[] charArray0 = new char[4];
      stringReader0.read();
      charArray0[0] = '!';
      charArray0[1] = ';';
      charArray0[2] = '\u0082';
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.687783763465787
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      javaCharStream0.getColumn();
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader2);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.645654670524559
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, (-1205), 1546);
      javaCharStream0.adjustBeginLineColumn((-1), 756);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("z^P4K|P/V//*C~F_e2-");
      StringReader stringReader3 = new StringReader("");
      stringReader2.ready();
      javaCharStream1.ReInit((Reader) stringReader1);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5531577432135644
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)12;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[3] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-4575), 79);
      byteArrayInputStream0.skip((-559L));
      javaCharStream0.adjustBeginLineColumn((-4575), 74);
      byteArrayInputStream0.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)92;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (byte)0, (byte)8, 72);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3810838649119437
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = '|';
      charArray0[5] = '2';
      charArray0[6] = '|';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("oeO~");
      StringReader stringReader2 = new StringReader("oeO~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 62, (-2144));
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)102;
      byteArray0[8] = (byte) (-126);
      sequenceInputStream0.read(byteArray0);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.080600672479842
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-2), (-1), (-1723));
      javaCharStream0.backup(44);
      javaCharStream0.UpdateLineColumn('.');
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4810065234245133
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      StringReader stringReader0 = new StringReader(".mdrN=K%$=?^QLg");
      char[] charArray0 = new char[1];
      charArray0[0] = 'D';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte) (-18), 2695, 89);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      javaCharStream0.backup(88);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('z');
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      javaCharStream1.ReInit((InputStream) sequenceInputStream0, 1, (int) (byte) (-18), (int) (byte)36);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5390443660090978
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 13, (byte) (-2), (byte) (-2));
      javaCharStream0.backup((-1273));
      javaCharStream0.UpdateLineColumn('.');
      javaCharStream0.readChar();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 13, (-11));
      javaCharStream0.GetSuffix(1);
      assertEquals(0, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2890713983064828
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "oeO~";
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[2] = '2';
      charArray0[3] = '2';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, '2');
      javaCharStream0.FillBuff();
      javaCharStream0.ReInit((Reader) stringReader0, 111, 0, 2492);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      char[] charArray0 = new char[4];
      stringReader0.read();
      charArray0[0] = '!';
      charArray0[1] = ';';
      charArray0[2] = '\u0082';
      PipedInputStream pipedInputStream0 = new PipedInputStream(80);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.476030985958194
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 13, (byte) (-2), (byte) (-2));
      javaCharStream0.backup((-1273));
      javaCharStream0.UpdateLineColumn('.');
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6869715375680836
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-644), (byte)36, 1658);
      javaCharStream0.backup(1);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('c');
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix((byte)0);
      javaCharStream0.UpdateLineColumn('9');
      javaCharStream0.getBeginLine();
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("$", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-2426));
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.542138913807713
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1Q\"Luk]{qBm");
      javaCharStream0.ReInit((Reader) stringReader0, 491, (-2058), 92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6603655148421974
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      int int0 = 4;
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      int[] intArray0 = new int[4];
      intArray0[0] = (int) '^';
      intArray0[1] = 491;
      stringReader0.close();
      intArray0[2] = 4;
      intArray0[3] = 491;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3420158589513322
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      StringReader stringReader0 = new StringReader("oeO~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)10, 0, 0);
      StringReader stringReader1 = new StringReader("oeO~");
      StringReader stringReader2 = new StringReader("oeO~");
      stringReader1.ready();
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 0, 1);
      // Undeclared exception!
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MFp1=ea/U@0SYi");
      int int0 = (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.available = (-1);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 88, 73);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 8, 3440, 8);
      StringReader stringReader0 = new StringReader("$ryCdElP;P\"n3:tmHP");
      stringReader0.mark(3440);
      javaCharStream0.ReInit((Reader) stringReader0, (-2421), (-340));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-2426));
      javaCharStream0.inBuf = (-2426);
      javaCharStream0.line = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4395720605004327
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      char[] charArray0 = new char[4];
      stringReader0.read();
      charArray0[3] = '!';
      charArray0[1] = ';';
      charArray0[2] = '\u0082';
      StringReader stringReader1 = new StringReader("oeO~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream(4283);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      pushbackInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 5308);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.586577333232116
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      stringReader0.close();
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)92;
      javaCharStream0.bufsize = (int) (byte)8;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)102;
      byteArray0[8] = (byte) (-126);
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 597, (-727));
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 1, (-1));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      char[] charArray0 = new char[1];
      charArray0[0] = '|';
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('I');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.1123229474816387
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte byte0 = (byte) (-2);
      String string0 = "~4U~Fu";
      StringReader stringReader0 = new StringReader("~4U~Fu");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      int int0 = 13;
      javaCharStream0.available = 13;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~4U~Fu");
      stringReader0.skip((byte) (-2));
      javaCharStream0.ReInit((Reader) stringReader0, (int) '~', (int) (byte) (-2), (int) '~');
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.377367567113771
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = "z^P4K|P/V//*C~F_e2-";
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      MockFile mockFile0 = new MockFile("z^P4K|P/V//*C~F_e2-");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7630778442575603
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(4);
      javaCharStream0.getEndColumn();
      javaCharStream0.ReadByte();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringReader stringReader0 = new StringReader("];");
      stringReader0.markSupported();
      char[] charArray0 = new char[4];
      stringReader0.read();
      charArray0[1] = 'G';
      charArray0[2] = '\u0082';
      StringReader stringReader1 = new StringReader("];");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(']', char0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.4688533187360577
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[2] = '2';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 778, 81);
      javaCharStream0.adjustBeginLineColumn(80, 3393);
      StringReader stringReader1 = new StringReader("oeO~");
      StringReader stringReader2 = new StringReader("oeO~");
      StringReader stringReader3 = new StringReader("h6Pe|qUX1Ii^>r:");
      boolean boolean0 = javaCharStream0.prevCharIsLF;
      javaCharStream0.ReInit((Reader) stringReader2);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-1), 10, (byte)0);
      javaCharStream0.backup(80);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(896);
      assertEquals(4016, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.457801771039058
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[1] = '2';
      charArray0[3] = '2';
      charArray0[4] = '|';
      charArray0[5] = '2';
      charArray0[6] = '|';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 'e', 778, '2');
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.backup(3);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('D');
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(111);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('|');
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      assertEquals(2, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`t_Gi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 726, 2);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(5405);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.0957074289137867
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      String string0 = " column ";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.skip((byte) (-18));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, (-1759), (int) (byte)36, 91);
      javaCharStream0.readChar();
      MockFile mockFile0 = new MockFile(" column ");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = "z^P4K|P/V//*C~F_e2-";
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.skip(0L);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-4409), (-4409), (-4409));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      StringReader stringReader0 = new StringReader("^{44(n+aLnM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 95, (int) (byte)0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.markSupported();
      char[] charArray0 = new char[4];
      charArray0[0] = 'K';
      charArray0[1] = 'a';
      charArray0[2] = '*';
      charArray0[3] = '}';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 3504);
      try { 
        JavaCharStream.hexval(' ');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.mark((-1318));
      sequenceInputStream0.close();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      sequenceInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.4395720605004327
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":(yW+dFLHX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(':', char0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('h');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 152, 152);
      javaCharStream0.column = 152;
      sequenceInputStream0.mark(152);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.437276904257042
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 13, (byte) (-2), (byte) (-2));
      javaCharStream0.backup((-1273));
      javaCharStream0.UpdateLineColumn('A');
      javaCharStream0.getEndLine();
      javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.adjustBeginLineColumn((-1), (byte)0);
      javaCharStream0.getLine();
      javaCharStream0.getLine();
      javaCharStream0.UpdateLineColumn('A');
      int int0 = javaCharStream0.getLine();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String string0 = " clum ";
      StringReader stringReader0 = new StringReader(" clum ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      MockFile mockFile0 = new MockFile(" clum ");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.20571469225704
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oeO~");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = '|';
      charArray0[5] = '2';
      charArray0[6] = '|';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, 778, 756);
      javaCharStream0.adjustBeginLineColumn(778, 756);
      StringReader stringReader1 = new StringReader("oeO~");
      StringReader stringReader2 = new StringReader("oeO~");
      StringReader stringReader3 = new StringReader("h6Pe|qUX1Ii^>r:");
      stringReader3.ready();
      javaCharStream0.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
