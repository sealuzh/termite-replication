/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 02:37:30 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1143);
      JavaCharStream.hexval('b');
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      pipedOutputStream1.write((int) (byte)10);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)0;
      pipedOutputStream0.write(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 85, (byte)10, (byte)10);
      javaCharStream0.available = (-3711);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaCharStream.hexval('d');
      JavaCharStream.hexval('d');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 'd', 13, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N+P3%s\"gnC&7q0$D1h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte byte0 = (byte)92;
      byte byte1 = (byte) (-1);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)0;
      int int0 = (-2464);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-2464), (byte)36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.615039504573918
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      int int0 = 6;
      stringReader0.skip(6);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6);
      JavaCharStream.hexval('a');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4067646784544716
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VN");
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn(3262, 3262);
      assertEquals(3263, javaCharStream0.getBeginLine());
      
      JavaCharStream.hexval('E');
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      pipedOutputStream0.write(byteArray0);
      StringReader stringReader0 = new StringReader("@0|)UunF->m2Mfp");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3044, (byte)102, 1);
      javaCharStream1.FillBuff();
      javaCharStream1.ReadByte();
      javaCharStream1.ReInit((InputStream) pipedInputStream0, 73, (-872));
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      char char0 = javaCharStream1.BeginToken();
      assertEquals('f', char0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.498237725941019
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@0|)UunF->m2Mfp");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte) (-74);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn((-359), 79);
      JavaCharStream.hexval('E');
      pipedOutputStream0.write(byteArray0);
      StringReader stringReader0 = new StringReader("@0|)UunF->m2Mfp");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      javaCharStream1.ReInit((InputStream) pipedInputStream0, 79, (int) (byte) (-1));
      javaCharStream0.BeginToken();
      javaCharStream1.backup(2122);
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6598720137848268
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      javaCharStream0.GetImage();
      int int0 = 0;
      javaCharStream0.adjustBeginLineColumn(1184, 0);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7260597362696211
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      javaCharStream0.adjustBeginLineColumn(1184, 0);
      byteArray0[0] = (byte) (-1);
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte1 = (byte) (-1);
      JavaCharStream.hexval('6');
      javaCharStream0.getBeginColumn();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0898810398247725
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("hj%V|UJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(66, 66);
      int int0 = 992;
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0, 992);
      stringReader0.skip(0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      int int1 = 75;
      int int2 = (-4213);
      stringReader0.skip(1L);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 3141, 75);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3470089872021687
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.GetSuffix(4);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      stringReader0.skip(0);
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[8];
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 85, 1305);
      byteArray0[0] = (byte) (-34);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip(6);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6);
      JavaCharStream.hexval('c');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.43303370312733
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      javaCharStream0.adjustBeginLineColumn(1184, 0);
      javaCharStream0.adjustBeginLineColumn(1184, 1305);
      JavaCharStream.hexval('E');
      pipedOutputStream0.write(byteArray0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 14, 195);
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4226990963983788
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@0|)UunF->m2Mfp");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn((-359), 79);
      JavaCharStream.hexval('E');
      pipedOutputStream0.write(byteArray0);
      StringReader stringReader0 = new StringReader("@0|)UunF->m2Mfp");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-1), (byte)10, 0);
      javaCharStream1.ReInit((InputStream) pipedInputStream0, (-359), 64);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      javaCharStream2.BeginToken();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(79, javaCharStream0.getBeginColumn());
      assertEquals((-358), int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1143);
      boolean boolean0 = JavaCharStream.staticFlag;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('d');
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3489809724359387
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip(9);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 9);
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 483, 4, 483);
      JavaCharStream.hexval('9');
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-1);
      StringReader stringReader1 = new StringReader("z^P4K|P/V//*C~F_e2-");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.write(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      javaCharStream1.ReInit((InputStream) bufferedInputStream0, 47, 82);
      char char0 = javaCharStream1.BeginToken();
      assertEquals(82, javaCharStream1.getBeginColumn());
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-17);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-4);
      String string0 = "5{`u";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "5{`u");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('1');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        pipedInputStream0.read(byteArray0, 66, (int) (byte) (-17));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte byte0 = (byte) (-1);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4923585333144511
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      String string0 = javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[9];
      javaCharStream0.adjustBeginLineColumn(1184, 0);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      JavaCharStream.hexval('5');
      pipedOutputStream0.write(byteArray0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, (-1));
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader(string0);
      stringReader0.skip(0);
      javaCharStream0.ReInit((Reader) stringReader0, 6, (int) (byte)0, (int) (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.7905634275549727
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 44, (-1));
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(63, (-2918));
      JavaCharStream.hexval('8');
      pipedOutputStream0.write(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 92, (-2672));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[3] = (byte) (-1);
      byte byte0 = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-1);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.582589050767347
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = 1184;
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1078), 1184);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, (-1078));
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1065773332321154
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = 1184;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<ObjectInputStream> enumeration1 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1184, 1050, 1184);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9697764683159094
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      StringReader stringReader0 = new StringReader("AMm8]:;}{`imi,Xh(h");
      int int0 = 597;
      stringReader0.mark(835);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "AMm8]:;}{`imi,Xh(h");
      byte byte0 = (byte)0;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.BeginToken();
      stringReader0.ready();
      javaCharStream1.UpdateLineColumn('A');
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('h');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)36, (byte) (-1), (byte)0);
      javaCharStream0.backup((byte) (-2));
      javaCharStream0.UpdateLineColumn('M');
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(109);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte) (-1);
      char char0 = 'M';
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4226990963983788
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      javaCharStream0.adjustBeginLineColumn(1184, 0);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      JavaCharStream.hexval('5');
      pipedOutputStream0.write(byteArray0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 4062, 4062);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1143);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = " 5${+FG4M";
      StringReader stringReader0 = new StringReader(" 5${+FG4M");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2458), (-2458));
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      stringReader0.close();
      intArray0[1] = (-1);
      intArray0[2] = (-2458);
      intArray0[3] = 32;
      intArray0[4] = (-1);
      intArray0[5] = (-2458);
      intArray0[6] = 32;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.ReInit((Reader) stringReader0);
      intArray0[7] = 91;
      javaCharStream0.bufcolumn = intArray0;
      int int0 = 662;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-2458), 662);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char char0 = 'Y';
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.inBuf = (-2426);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.line = (-6);
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)10;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[5] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("6X8qSSgc=2P!Ic*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1287), (byte)10);
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('6');
      javaCharStream0.BeginToken();
      stringReader0.ready();
      javaCharStream0.GetImage();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("Invalid escape character at line ");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":(yW+dFLHX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((-4167), (-4167));
      assertEquals((-4167), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4689732714597973
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[2] = (byte)102;
      byteArray0[2] = (byte) (-126);
      byteArray0[0] = (byte) (-67);
      byteArray0[2] = (byte)92;
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (int) (byte) (-126), (-1870));
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      int int0 = 80;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 491, 80);
      int int1 = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, (-1685), 0, (-1685));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.08418915289513
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.mark(1469);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      javaCharStream0.BeginToken();
      stringReader0.ready();
      javaCharStream1.GetImage();
      javaCharStream0.getEndLine();
      try { 
        JavaCharStream.hexval('z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 60);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@0|)UunF->m2Mfp");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-64);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[2] = (byte)10;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)10;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]dN!<9Ut/LYf>Vyr");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1214203231153572
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.reset();
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      javaCharStream0.BeginToken();
      stringReader0.ready();
      javaCharStream0.GetImage();
      javaCharStream0.getEndLine();
      JavaCharStream.hexval('3');
      javaCharStream0.getBeginColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('N', char0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2320555836111624
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)12;
      javaCharStream0.BeginToken();
      stringReader0.ready();
      javaCharStream0.GetImage();
      javaCharStream0.getEndLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 1, 89);
      javaCharStream1.ReInit((Reader) stringReader0, 98, (int) (byte)0);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8891591637540215
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 8, 3440, 8);
      StringReader stringReader0 = new StringReader("$ryCdElP;P\"n3:tmHP");
      stringReader0.skip(862L);
      stringReader0.ready();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream1, (-1173), (-1020), (-1020));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.304401796159769
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      String string0 = javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      javaCharStream0.adjustBeginLineColumn(1184, 0);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      pipedOutputStream0.write(byteArray0);
      StringReader stringReader0 = new StringReader(string0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      javaCharStream2.ReInit((InputStream) pipedInputStream0, (-4159), (int) (byte)0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3373496508692947
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.7905634275549727
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 92, 4096);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((-3905), 748);
      assertEquals((-3904), javaCharStream0.getBeginLine());
      
      JavaCharStream.hexval('7');
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      pipedOutputStream0.write(byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.ExpandBuff(false);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.372817331423687
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.GetSuffix(4);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) stringReader0, 491, (-1));
      stringReader0.skip((-1));
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[8];
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 85, 1305);
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GXbd+jL");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1559), (-1559));
      char[] charArray0 = new char[7];
      charArray0[0] = 'R';
      charArray0[1] = '+';
      charArray0[2] = '$';
      charArray0[3] = '{';
      charArray0[4] = '7';
      charArray0[5] = 'F';
      charArray0[6] = 'O';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5990147122062977
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      javaCharStream0.adjustBeginLineColumn(1184, 0);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (byte)0, 1901);
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream2.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.228494938596246
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getEndLine();
      JavaCharStream.hexval('3');
      int int0 = 1341;
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1341);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Reader reader0 = null;
      int int0 = 95;
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 597, 95, 1926);
      // Undeclared exception!
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte byte0 = (byte) (-1);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.3959943267714063
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.GetSuffix(4);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      stringReader0.skip(0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      stringReader0.read(charArray0);
      pipedOutputStream0.flush();
      javaCharStream0.BeginToken();
      stringReader0.ready();
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.178884033360716
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      int int0 = 4;
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      int[] intArray0 = new int[4];
      intArray0[0] = (int) '^';
      intArray0[1] = 491;
      stringReader0.close();
      intArray0[2] = 4;
      intArray0[3] = 491;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.819528603834425
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)10;
      JavaCharStream.hexval('a');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      int int0 = (-1972);
      // Undeclared exception!
      try { 
        javaCharStream2.ReInit((InputStream) null, (-1972), 92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MFp1=ea/U@0SYi");
      stringReader0.read();
      int int0 = (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.available = (-1);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2946, 2946);
      javaCharStream0.line = 0;
      stringReader0.reset();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7222607218500245
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N+P3%s\"gnC&7q0$D1h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte byte0 = (byte)92;
      javaCharStream0.readChar();
      byte byte1 = (byte)101;
      javaCharStream0.adjustBeginLineColumn((byte)92, (byte)92);
      javaCharStream0.ExpandBuff(true);
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)10, (-1273), 9);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8121428103584718
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-4);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "5{`u");
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 101, (-1383));
      sequenceInputStream0.read(byteArray0, 1, (int) (byte) (-18));
      javaCharStream0.backup(96);
      javaCharStream0.UpdateLineColumn('G');
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((byte) (-18));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.375144674471753
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.ready();
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.backup(122);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.GetSuffix(4);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      stringReader0.skip(370);
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[8];
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 85, 1305);
      byteArray0[0] = (byte) (-34);
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Reader reader0 = null;
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-2426));
      javaCharStream0.inBuf = (-2426);
      javaCharStream0.line = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)102;
      try { 
        JavaCharStream.hexval(',');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.9722469794234416
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte byte0 = (byte) (-1);
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte) (-2);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-1), (byte) (-2));
      try { 
        javaCharStream1.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.164971389803808
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      javaCharStream0.adjustBeginLineColumn(1184, 1184);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
      pipedOutputStream1.write(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream1, (-1), 2846);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 66, (-1));
      assertEquals(1184, javaCharStream0.getBeginColumn());
      
      javaCharStream1.BeginToken();
      assertEquals((-1), javaCharStream1.getLine());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.372817331423687
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReadByte();
      char[] charArray0 = javaCharStream0.GetSuffix(4);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) stringReader0, 491, (-1));
      stringReader0.skip((-1));
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[8];
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), 1305);
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.reset();
      stringReader0.markSupported();
      stringReader0.reset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 3504);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('`');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1968, 1968);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      StringReader stringReader0 = new StringReader("MFp1=ea/U@0SYi");
      int int0 = (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.available = (-1);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReInit((Reader) stringReader0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("m/KyH");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 8, 3440, 8);
      StringReader stringReader0 = new StringReader("$ryCdElP;P\"n3:tmHP");
      stringReader0.skip(862L);
      stringReader0.ready();
      javaCharStream0.ReInit((Reader) stringReader0, (-2421), (-350));
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.300916828780534
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.GetSuffix(4);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      stringReader0.skip(0);
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[8];
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 85, 1305);
      byteArray0[0] = (byte) (-34);
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.148365610638593
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      javaCharStream0.BeginToken();
      stringReader0.ready();
      javaCharStream0.GetImage();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      stringReader0.ready();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval('g');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = "z^P4K|P/V//*C~F_e2-";
      char char0 = '<';
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5");
      CharBuffer charBuffer0 = CharBuffer.allocate(1586);
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      charBuffer0.chars();
      stringReader0.read(charBuffer0);
      int int0 = 6;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6, 6);
      javaCharStream0.AdjustBuffSize();
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.0590443660090973
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)10);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 100, 66);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(100, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3N,P%s\"gnu&7q0$D1h");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 96);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, 1, 1, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
