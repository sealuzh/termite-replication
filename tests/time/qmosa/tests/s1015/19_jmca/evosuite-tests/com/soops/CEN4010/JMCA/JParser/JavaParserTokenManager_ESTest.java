/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:58:15 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5687449567839487
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1804, (byte)84, 1804);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1804);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1804. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1147260080530885
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_`SgX4Sql:5#3De`X");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)63;
      byteArray0[5] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 52, 31, (byte)63);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(1180);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1180. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9649462002484093
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("<OCTAL_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 296, (-3326), 115);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.skip((-3326));
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-3325), javaCharStream0.getBeginColumn());
      assertEquals((-3313), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.591118363019619
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("<OCTAL_LITERAL>");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte) (-4);
      byteArray0[4] = (byte) (-4);
      byteArray0[5] = (byte)37;
      byteArray0[6] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)107, (byte) (-4), 833);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (int) (byte) (-4));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9531838031723041
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 100, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)26;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 35, 61, 0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("aX", token0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9276678184677676
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("aX(j2AVh\"9ff_zz");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)36;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1912, (-2164), (-2164));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("$$$$", token0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.551187384491472
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.ready();
      stringReader0.reset();
      int int0 = 9;
      stringReader0.mark(9);
      StringReader stringReader1 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("aX(j2AVh\"9ff_zz");
      char[] charArray0 = new char[7];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[2] = '\'';
      charArray0[3] = '\\';
      charArray0[5] = '\'';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1430, 100, 1430);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1430, column 108.  Encountered: <EOF> after : \"\\\"9ff_zz\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8935066395193128
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1036, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)107, (byte) (-4), (byte)31);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      char[] charArray0 = new char[4];
      charArray0[0] = 'a';
      charArray0[1] = ':';
      charArray0[2] = 'K';
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 43, 17, (-1));
      JavaParserTokenManager javaParserTokenManager5 = null;
      try {
        javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream2, (-1945));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1945. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 100, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte) (-109);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)88, 365, (byte) (-109));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream1.nextCharInd = (int) (byte) (-109);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager3.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5292653751490874
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("P4'_'");
      char[] charArray0 = new char[7];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)111, 37, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(38, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4553757830364698
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 100, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[5];
      charArray0[0] = '[';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 'j', 100, 100);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(102, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6505737034335781
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 100, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-126);
      byteArray0[3] = (byte) (-109);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-126), 365, (byte) (-109));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager3.getNextToken();
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager4.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9727686207591204
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aXj2Ah\"9ff_z");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 118, 118, 118);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = 25;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)64;
      StringReader stringReader1 = new StringReader("M*%");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)26, (byte)64, 25);
      javaCharStream0.AdjustBuffSize();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.jjround = (-1591);
      stringReader0.skip(0L);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(123, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3139813647103749
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte) (-109);
      byteArray0[4] = (byte) (-126);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-6), (byte) (-126), (byte) (-126));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -6, column -126.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5583780077868705
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)63, 25, (byte)106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(25, javaCharStream0.getBeginColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4795939423958253
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 100, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte) (-109);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)88, 365, (byte) (-109));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream1.column = 2929;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager3.getNextToken();
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager4.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.367420033319239
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1036, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)107, (byte) (-4), (byte)31);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-1), 105);
      javaCharStream1.ReInit((Reader) stringReader0, 16, 16);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, (byte)31, 16);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream3);
      javaParserTokenManager2.ReInit(javaCharStream2);
      stringReader0.skip(839L);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream2, 0);
      assertFalse(javaCharStream2.equals((Object)javaCharStream0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4591853068459937
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      StringReader stringReader0 = new StringReader("FFD')L:dZu3A");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, 111, 111);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte) (-109);
      byteArray0[5] = (byte)109;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)88;
      byteArray0[8] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 80, (-2778), 1203);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(113, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9647138941158753
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("<OCTAL_LITERAL>");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 296, (-3326), 115);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.skip((-3326));
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.963858777522308
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 100, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 9, 100, (byte)110);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(77, token0.kind);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4851534570548566
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      stringReader0.read();
      stringReader0.mark(50);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 118);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 118, 21, 114);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 15, 21, 1379);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 118, column 21.  Encountered: \"\\u001d\" (29), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 0, 78, 0);
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.Done();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = new Token();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0645849606710729
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]");
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 0, 78, 0);
      javaCharStream0.ExpandBuff(false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)118;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 35, 23, 0);
      StringReader stringReader0 = new StringReader("]");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4539437903316657
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("\"//\"");
      char[] charArray0 = new char[3];
      int int0 = JavaParserConstants.REMASSIGN;
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1, 117);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 3, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3299825171242272
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(99);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1, 1, (byte)96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.input_stream = null;
      StringReader stringReader0 = new StringReader("--");
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("P4'_'");
      char[] charArray0 = new char[7];
      StringReader stringReader3 = new StringReader("-esL!Pk 9(x/r2.");
      stringReader3.read(charArray0);
      StringReader stringReader4 = new StringReader("d2; O-&c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, 3, 14, 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader4.close();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      StringReader stringReader0 = new StringReader("FFD')L:dZu3A");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, 111, 111);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte) (-109);
      byteArray0[5] = (byte)109;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)88;
      byteArray0[8] = (byte)109;
      char[] charArray0 = new char[3];
      charArray0[0] = '[';
      charArray0[1] = 'K';
      charArray0[2] = ';';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)109, (byte)4, 1);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, (byte)4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]");
      Token token0 = new Token();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.beginLine = 0;
      Token token1 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9734799083039718
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 100, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)88;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0, (byte)1);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(101, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("");
      int int0 = 30;
      char[] charArray0 = new char[1];
      charArray0[0] = '8';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1850, 1850, 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(6);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 6. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 0, 78, 0);
      javaCharStream0.maxNextCharInd = 0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = new Token();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(99);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager0.SwitchTo(1);
      Token token0 = Token.newToken((-92));
      token0.kind = 1625;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 99);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 99. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4497735421401112
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aX(j2AVh\"9ff_zz");
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("P4'_'");
      char[] charArray0 = new char[7];
      charArray0[0] = '*';
      charArray0[1] = '\'';
      charArray0[2] = '\'';
      charArray0[3] = '\\';
      charArray0[4] = '\'';
      charArray0[5] = '\'';
      charArray0[6] = 'A';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 1430, 35, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("P4", token0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream0);
      int int0 = 128;
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 128, 128);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 83);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 83. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xPeH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3111, 1856, 363);
      char[] charArray0 = new char[9];
      charArray0[0] = 'Z';
      charArray0[1] = 'm';
      charArray0[2] = 'h';
      charArray0[3] = '_';
      charArray0[4] = '*';
      charArray0[5] = '^';
      charArray0[6] = 'F';
      charArray0[7] = 'A';
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-4971));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -4971. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.166330769463752
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      javaParserTokenManager0.input_stream = null;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, (-1457));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1457. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]");
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 0, 78, 0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.maxNextCharInd = 0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = new Token();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 66);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 66. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.adjustBeginLineColumn(333, 109);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
