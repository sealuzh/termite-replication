/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:21:46 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.691735059102455
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Player player0 = new Player(599, "", ",0Rd*", 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(3485, "OE!O+ip", (String) null, 644);
      player1.setJoinOK(player0, true);
      player0.pack();
      player0.setY(3485);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.isJoinOK(player0, true);
      assertEquals(3485.0F, player0.getY(), 0.01F);
      
      player1.getName();
      assertEquals(644, player1.getPictureId());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1634), "", "", (-1634));
      player0.setMoney(0.2F);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*f}/ r)Xz}rmI`J;R=");
      Player player1 = new Player(1398);
      player0.setJoinOK(player1, false);
      player0.setDead((long) (-1634));
      player0.setDead();
      player0.pack();
      player0.getZ();
      player0.remove((Party) null);
      player0.getX();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.2F, player0.getMoney(), 0.01F);
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5782737395252497
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(599, "", ",0Rd*", 0);
      Player player1 = new Player(3485, "OE!O+ip", (String) null, 591);
      player1.setJoinOK(player0, false);
      player0.pack();
      player0.setY(3485);
      player1.isJoinOK(player0, true);
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((File) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(1, "5)&%g#5:ZK", "", 1, 1);
      player0.pack();
      Player player1 = new Player();
      player0.prev = (Party) player1;
      player0.setY(1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      player0.add(player1);
      byteArray0[0] = (byte)96;
      byteArray0[2] = (byte)10;
      player0.prev = (Party) player1;
      byteArray0[3] = (byte) (-15);
      player1.unpack(byteArray0);
      player0.getZ();
      player1.reset(true);
      Player player2 = new Player((-2287), "Player.unpack(): *** WARNING *** data is not of proper type!", "@T@.", (byte) (-15), (-490));
      player0.isJoinOK(player2, true);
      assertEquals(1.0F, player0.getY(), 0.01F);
      
      int int0 = player2.gangStrength();
      assertEquals((-490), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t");
      Player player0 = new Player((-417), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "E!-'2oELA 6auo", 747, 599);
      player0.pack();
      player0.setY((-417));
      Party party0 = player0.prev;
      player0.add((Party) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("E!-'2oELA 6auo", true);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      Object object0 = new Object();
      Locale locale0 = Locale.CHINA;
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ";
      objectArray0[1] = (Object) "5)&%g#5:ZK";
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      Player player1 = new Player();
      player0.getY();
      player0.setX((-184.0F));
      assertEquals((-184.0F), player0.getX(), 0.01F);
      
      int int0 = Packable.TEXT_MESSAGE;
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(0, "", "", 165);
      Player player1 = new Player((-4900), "", "", 3263);
      player0.boss = (Party) player1;
      player0.toString();
      player0.getX();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)61;
      byteArray0[3] = (byte) (-12);
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte) (-38);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((-819));
      dataInputStream0.read();
      dataInputStream0.readShort();
      // Undeclared exception!
      try { 
        dataInputStream0.read(byteArray0, (int) (byte) (-116), (int) (byte)61);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(1550, "vMv)", 96);
      player0.setY(96);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("u%1", false);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) player0;
      objectArray0[1] = (Object) objectOutputStream0;
      Player player1 = new Player(1714, "", "", 96, 1);
      player1.isJoinOK(player0, false);
      player0.getY();
      Player player2 = new Player(1550, "", ",NQ NBMN&P&M\"gSIW7", (short)4919);
      player1.setX((-3256.6958F));
      int int0 = Packable.TEXT_MESSAGE;
      float float0 = player0.getZ();
      assertEquals(96.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.1262368167947456
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-78), "", "", (-78));
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      player0.setY(0.1F);
      player0.add(player1);
      player1.unpack(byteArray0);
      player0.getZ();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player1.setY(0.2F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.isJoinOK(player0, true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player0.unpack(dataInputStream0);
      player0.getIP();
      player0.getY();
      float float0 = player0.getX();
      assertEquals(0.1F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1034354550763315
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-1798));
      player0.gangStrength();
      player0.next = null;
      player0.setZ(106);
      Player player1 = new Player(106, (String) null, (String) null, 10537);
      player0.head = (Party) player1;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      player0.setDead((-187L));
      player0.unpack(byteArray0);
      player1.setJoinOK(player0, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      player1.setJoinOK(player0, false);
      player0.isJoinOK(player1, true);
      player1.toString();
      player0.isJoinOK(player1, false);
      player0.getTimeOfDeath();
      player1.type();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, 1031);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-187L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.382435249959657
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(0, "OX2@g&j~R", "OX2@g&j~R", 0, (-3985));
      player0.getSubparty();
      player0.getSubparty();
      player0.pack();
      Player player1 = new Player();
      player1.setConnected(true);
      player1.setJoinOK(player0, false);
      Player player2 = new Player();
      player2.setConnected(false);
      player1.setDead((-529L), false);
      player0.getStrength();
      Player player3 = new Player((short)4919, "NRt 6Kv]", "Bj[Nqj$nO1wSeiJ", 948, (-3985));
      player3.setY(642.3F);
      player1.getX();
      Player player4 = new Player(0, "OX2@g&j~R", 948);
      player4.remove(player1);
      player0.getSubparty();
      Player player5 = new Player();
      player5.reset(false);
      player2.isJoinOK(player1, true);
      player1.setX((short)4919);
      player4.getX();
      float float0 = player1.getZ();
      assertEquals(4919.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-1160), "", 3041);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player1 = new Player();
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertFalse(boolean0);
      
      player0.getName();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(3041, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 1;
      Player player0 = new Player();
      player0.setY(1);
      String string0 = "HY";
      Player player1 = new Player((short)4919, "state.Party", "HY", 1);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9440256153973703
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Player player0 = new Player((-437), "HNKC<a* KA", ".*[.]class$", (-437));
      int int0 = 4;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player((-437), ".*[.]class$", ".*[.]class$", 4);
      player0.setJoinOK(player1, false);
      player0.pack();
      player1.next = (Party) player0;
      player1.setMoney(4);
      player1.setZ(4);
      player0.getMoney();
      player1.gangStrength();
      player0.pack();
      player1.getZ();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-78), "", "", (-78));
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-91);
      player0.setConnected(false);
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-21);
      player0.getX();
      Player player1 = new Player((-1120), "", 3190);
      Player player2 = new Player(889, "", "", (byte) (-21));
      player2.getSubparty();
      player2.unpack(byteArray0);
      player1.isJoinOK(player0, false);
      player2.setX((-1075.47F));
      assertEquals((-1075.47F), player2.getX(), 0.01F);
      
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8542306045431616
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 659;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player0 = new Player(659, "HNKC<a* KA", "sg2x>\"k{yab\"H50pp$B", 659);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player((short)4919, "sg2x>\"k{yab\"H50pp$B", ".*[.]class$", 0);
      player1.setJoinOK(player0, true);
      player0.pack();
      player0.setMoney((-1.0F));
      player0.getMoney();
      player0.gangStrength();
      player1.pack();
      player0.getZ();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(".*[.]class$");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)65;
      sequenceInputStream0.read(byteArray0, (-1284), (-1980));
      Player player1 = new Player((byte)65, "i5S7$VtnM$", "", (-1020));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player1.unpack(dataInputStream0);
      assertEquals("i5S7$VtnM$", player1.getIP());
      assertEquals((-1020), player1.getPictureId());
      
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertFalse(boolean0);
      
      String string0 = player0.toString();
      assertEquals("Player-1", string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.027841181869761
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, "OX2@g&j~R", "r", 23, 0);
      player0.setX(23);
      player0.setDead((long) 23, true);
      player0.setConnected(true);
      player0.setZ(0);
      player0.gangStrength();
      player0.gangBoss();
      player0.setConnected(true);
      assertEquals(23L, player0.getTimeOfDeath());
      
      Player player1 = new Player((short)4919, ")az+D$=KD_5.$wSn^", ")az+D$=KD_5.$wSn^", 23, 0);
      player1.setDead();
      player1.setY((short)4919);
      player1.setX(0);
      player1.getIP();
      assertEquals(23, player1.getPictureId());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-78), "", "", (-78));
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-21);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      Player player1 = new Player((-1120), "", 3190);
      Player player2 = new Player(889, "", "", (byte) (-21));
      player2.getSubparty();
      boolean boolean0 = player1.isConnected();
      assertTrue(boolean0);
      
      float float1 = player1.getZ();
      assertEquals(3190, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0.0F, float1, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.242894687106955
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-2488), "aEIv]ekp^W(", "aEIv]ekp^W(", (-2488));
      byte[] byteArray0 = new byte[1];
      player0.setConnected(false);
      byteArray0[0] = (byte)4;
      player0.unpack(byteArray0);
      player0.setZ(2275);
      player0.getSubparty();
      player0.reset(false);
      Player player1 = new Player((-2488), "aEIv]ekp^W(", (String) null, 2275, (-1812));
      player0.remove(player1);
      player0.setConnected(true);
      player0.isDead();
      player1.isDead();
      player0.setDead();
      player0.getX();
      player1.getIP();
      player0.isDead();
      player1.getIP();
      player1.id = (-2488);
      player1.getZ();
      player1.setDead((long) (short)4919, false);
      player0.getMoney();
      player0.getX();
      player1.setDead((long) (-1812));
      assertEquals((-1812L), player1.getTimeOfDeath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 3;
      String string0 = "";
      Player player0 = new Player(3, "4>2>B2SIQ<wb(", "", 3);
      int int1 = 1;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      pipedOutputStream0.close();
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      Player player0 = new Player(599);
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      player0.setY(0.1F);
      player1.add(player0);
      player1.unpack(byteArray0);
      player1.getZ();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      player1.setY(0.2F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      player0.isJoinOK(player1, false);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player1.unpack(dataInputStream0);
      player1.getIP();
      player0.getY();
      float float0 = player1.getX();
      assertEquals(87, player1.getId());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4530014063936125
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Player player0 = new Player(599, "", ",0Rd*", 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(3485, "OE!O+ip", (String) null, 644);
      player1.setJoinOK(player0, true);
      player0.pack();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.isJoinOK(player0, true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      // Undeclared exception!
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player((-78), "", "", (-78));
      byte byte0 = (byte) (-14);
      byte byte1 = (byte) (-110);
      Player player1 = new Player();
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-422), "Hwj0X'wZ,~TgtrT", "Hwj0X'wZ,~TgtrT", 2);
      player0.getIP();
      Player player1 = new Player((-422), "dAbC&KT$q}[s~cQ\"", "dAbC&KT$q}[s~cQ\"", 0);
      player1.prev = (Party) player0;
      player1.gangStrength();
      player1.gangStrength();
      player0.boss = (Party) player1;
      player0.getZ();
      player0.getPictureId();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-78), "", "", (-78));
      player0.getX();
      int int0 = 0;
      Player player1 = new Player(10537, "", 4919);
      player1.setMoney(0.0F);
      player1.getMoney();
      player0.gangStrength();
      player0.pack();
      player1.getZ();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("N p~f\"`n");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-1160), "", 3041);
      Player player1 = new Player((-2085), (String) null, "module.ModuleBrowserDialog$ModuleFilter", 10537);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player2 = new Player();
      player2.isJoinOK(player1, true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte) (-21);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0, (String) null, 10);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      
      player0.setMoney(0.1F);
      player0.getMoney();
      Player player1 = new Player(0, (String) null, "", 10, (short)4919);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player2 = new Player();
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(599, "", ",0Rd*", 0);
      Player player1 = new Player(3485, "OE!O+ip", (String) null, 644);
      Player player2 = new Player(3485, "D9(W{~?ML30M3za$!w", "Player.unpack(): *** WARNING *** data is not of proper type!", 2147340491);
      player0.setDead((long) (short)4919);
      player0.setJoinOK(player2, false);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte) (-110);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)65;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)2;
      byteArray0[8] = (byte)65;
      player0.unpack(byteArray0);
      player0.setX((-5888.3F));
      player0.getName();
      assertEquals((-5888.3F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(50, "", "", 50);
      float float0 = player0.getY();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(50, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(0);
      player1.next = (Party) player0;
      player0.setJoinOK(player1, true);
      player1.setDead();
      player0.boss = (Party) player1;
      player0.setDead(0L);
      Player player2 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 4919;
      Player player0 = new Player(0, "=sIQ2M>O7m,!Uz", "=sIQ2M>O7m,!Uz", 0, 4919);
      player0.setX(10.0F);
      player0.getStrength();
      player0.id = 0;
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        dataInputStream0.readDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(1550, "vMv)", 96);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("u%1", false);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) player0;
      objectArray0[1] = (Object) objectOutputStream0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) mockFileOutputStream0;
      objectArray0[4] = (Object) "-vDt FXOzp&b(0RB5";
      objectArray0[5] = (Object) "u%1";
      objectArray0[6] = (Object) "u%1";
      int int0 = player0.getStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals(96, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9410699503727398
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      player0.getX();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      
      Player player1 = new Player((byte) (-91), "w#~9J, K-X", 7);
      player0.setMoney(0.1F);
      player0.getMoney();
      player1.gangStrength();
      player0.pack();
      Party party0 = new Party();
      party0.head = (Party) player0;
      player0.add(party0);
      player0.getZ();
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player1.getY();
      player0.type();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte) (-91);
      byteArray0[1] = (byte) (-21);
      Player player0 = new Player((-1120), "", 3190);
      player0.getSubparty();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X;g@@tqwAQQO)GFQ");
      player0.setX((byte) (-91));
      player0.getX();
      float float0 = player0.getY();
      assertEquals((-91.0F), player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-1322));
      int int0 = player0.getPictureId();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1322", player0.getName());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t");
      Player player0 = new Player((-417), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "E!-'2oELA 6auo", 717, 609);
      player0.pack();
      player0.setY((-417));
      Party party0 = player0.prev;
      player0.add((Party) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("E!-'2oELA 6auo", true);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      Object object0 = new Object();
      Locale locale0 = Locale.CHINA;
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ";
      objectArray0[1] = (Object) "5)&%g#5:ZK";
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      Player player1 = new Player((short)4919, "(}!-yj}C", "(}!-yj}C", 609);
      player0.getY();
      player0.setX((-184.0F));
      assertEquals((-184.0F), player0.getX(), 0.01F);
      
      int int0 = Packable.TEXT_MESSAGE;
      player1.getZ();
      player1.getName();
      assertEquals(609, player1.getPictureId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0L, long0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3244414142316545
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-2488), "aEIv]ekp^W(", "aEIv]ekp^W(", (-2488));
      byte[] byteArray0 = new byte[1];
      player0.setConnected(false);
      byteArray0[0] = (byte)4;
      player0.unpack(byteArray0);
      player0.setZ(2275);
      player0.getSubparty();
      player0.reset(false);
      Player player1 = new Player((-2488), "aEIv]ekp^W(", (String) null, 2275, (-1812));
      player0.remove(player1);
      player0.setConnected(true);
      player0.isDead();
      player1.isDead();
      player0.setDead();
      player0.getX();
      player1.getIP();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.getIP();
      player1.id = (-2488);
      player1.getZ();
      player1.setDead((long) (short)4919, false);
      player0.getMoney();
      player0.getX();
      player1.setDead((long) (-1812));
      long long0 = player1.getTimeOfDeath();
      assertEquals((-1812L), long0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oJzCv$5Pr'", false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile((String) null, ",0Rd*");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[0];
      mockPrintStream0.format("", objectArray0);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(bufferedOutputStream0);
      bufferedOutputStream0.flush();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(dataOutputStream0);
      Player player0 = new Player(599, "", "*Z4H%hn&iK]JU|", 0, 599);
      DataOutputStream dataOutputStream2 = new DataOutputStream(dataOutputStream0);
      player0.pack(dataOutputStream2);
      assertEquals(0, player0.getPictureId());
      assertEquals("", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(599, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.261950424367441
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(603, "5)&%g#5:ZK", "", 603, 603);
      player0.pack();
      Player player1 = new Player();
      player0.prev = (Party) player1;
      player0.setY(603);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      player0.add(player1);
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-15);
      player1.unpack(byteArray0);
      player0.getZ();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player1.setY((-1197.1945F));
      player1.getX();
      player0.setY(1.0F);
      Player player2 = new Player(537, "", 3);
      player1.getSubparty();
      Player player3 = new Player();
      player1.reset(false);
      player0.isJoinOK(player3, false);
      player0.setX((byte) (-15));
      assertEquals((-15.0F), player0.getX(), 0.01F);
      
      player3.getIP();
      assertEquals(10.0F, player3.getX(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-3619), "Gj_#OE:_NLz7{=", "Gj_#OE:_NLz7{=", 10);
      player0.reset(true);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party((-78));
      player0.add(party0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&kS.@$Mc");
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte) (-14);
      byteArray0[4] = (byte)65;
      player0.unpack(byteArray0);
      Player player1 = new Player(4919, "i5S7$VtnM$", "", (-1020));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player1.unpack(dataInputStream0);
      assertEquals((-1020), player1.getPictureId());
      assertEquals("i5S7$VtnM$", player1.getIP());
      
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("!t");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      PrintStream printStream0 = mockPrintStream1.append((CharSequence) "8/wFr,+dW0GN3i\"nn35");
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(dataOutputStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(mockPrintStream1);
      Player player0 = new Player((-4522));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.69674006410746
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = null;
      int int0 = 0;
      Player player0 = new Player(599, "", "D0Rd*", 0);
      Player player1 = new Player(3485, "OE!O+ip", (String) null, 644);
      player1.setJoinOK(player0, true);
      player0.pack();
      player0.setY(3485);
      player1.isJoinOK(player0, true);
      player1.setZ((short)4919);
      Player player2 = new Player(0, "", "module.ModuleBrowserDialog$ModuleFilter", (short)4919);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(1668);
      Party party0 = player0.gangBoss();
      player0.head = party0;
      player0.setDead((-1L), false);
      Party party1 = new Party();
      party1.prev = (Party) player0;
      player0.prev = party1;
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(1668);
  }
}
