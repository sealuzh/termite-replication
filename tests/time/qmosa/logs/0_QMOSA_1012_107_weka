* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2864
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Search finished after 125s and 7 generations, 10188 statements, best individual has fitness: 4376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 217
* Number of covered goals: 162
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 428
* Number of covered goals: 218
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 260
* Number of covered goals: 201
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 428
* Number of covered goals: 215
* Generated 51 tests with total length 1143
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2862
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:40:50.130 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:40:50.174 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:40:50.176 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:40:50.433 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:40:50.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:40:50.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Search finished after 123s and 31 generations, 19744 statements, best individual has fitness: 9192.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 152
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 242
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 191
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 72
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 242
* Number of covered goals: 64
* Generated 42 tests with total length 786
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 22:45:00.794 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 22:45:01.310 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2867
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2868
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:45:30.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:45:30.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:45:30.997 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:45:31.077 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:45:31.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:45:31.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Using seed 1012
* Starting evolution
[MASTER] 22:45:38.860 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:45:38.881 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:45:38.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:45:38.902 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 22:45:44.352 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 22:45:54.077 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 22:45:54.077 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 18 generations, 15917 statements, best individual has fitness: 5248.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 56%
* Total number of goals: 338
* Number of covered goals: 188
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 194
* Number of covered goals: 92
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 476
* Number of covered goals: 242
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 112
* Number of covered goals: 48
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 194
* Number of covered goals: 92
* Generated 48 tests with total length 1012
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 35 generations, 32638 statements, best individual has fitness: 16728.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 9%
* Total number of goals: 620
* Number of covered goals: 58
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 36
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 36
* Generated 15 tests with total length 387
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 22:55:09.801 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_1_1575413709642/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_1_1575413709642/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.java]]
[MASTER] 22:55:09.802 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:09.802 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:09.806 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 22:55:09.807 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_1_1575413709642/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 22:55:09 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.stemmers.SnowballStemmer;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_1_tmp__ESTest extends NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.2823087094872125
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
28:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
29:       String string0 = naiveBayesMultinomialText0.lowercaseTokensTipText();
30:       assertEquals("Whether to convert all tokens to lowercase", string0);
31:       
32:       naiveBayesMultinomialText0.stemmerTipText();
33:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
34:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
35:       String string1 = naiveBayesMultinomialText3.useWordFrequenciesTipText();
36:       assertEquals("Use word frequencies rather than binary bag of words representation", string1);
37:       assertEquals(0, naiveBayesMultinomialText3.getPeriodicPruning());
38:       
39:       naiveBayesMultinomialText1.pruneDictionary();
40:       String string2 = naiveBayesMultinomialText2.stopwordsTipText();
41:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string2);
42:       
43:       String[] stringArray0 = new String[6];
44:       stringArray0[0] = "The file containing the stopwords (if this is a directory then the default ones are used).";
45:       stringArray0[1] = "The file containing the stopwords (if this is a directory then the default ones are used).";
46:       stringArray0[2] = "The file containing the stopwords (if this is a directory then the default ones are used).";
47:       stringArray0[3] = "Whether to convert all tokens to lowercase";
48:       stringArray0[4] = "Use word frequencies rather than binary bag of words representation";
49:       stringArray0[5] = "Use word frequencies rather than binary bag of words representation";
50:       naiveBayesMultinomialText2.setOptions(stringArray0);
51:       naiveBayesMultinomialText2.LNormTipText();
52:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("-norm <num>");
53:       snowballStemmer0.getStemmer();
54:       SnowballStemmer snowballStemmer1 = new SnowballStemmer();
55:       snowballStemmer1.setOptions(stringArray0);
56:       NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
57:       naiveBayesMultinomialText4.setStemmer(snowballStemmer1);
58:       naiveBayesMultinomialText1.getStemmer();
59:       NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
60:       String string3 = naiveBayesMultinomialText2.useStopListTipText();
61:       assertFalse(naiveBayesMultinomialText2.getNormalizeDocLength());
62:       assertEquals("If true, ignores all words that are on the stoplist.", string3);
63:       assertFalse(naiveBayesMultinomialText2.getLowercaseTokens());
64:       assertFalse(naiveBayesMultinomialText2.getUseStopList());
65:       assertFalse(naiveBayesMultinomialText2.getUseWordFrequencies());
66:       
67:       String string4 = naiveBayesMultinomialText3.minWordFrequencyTipText();
68:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string4);
69:       
70:       String string5 = naiveBayesMultinomialText0.periodicPruningTipText();
71:       assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string5);
72:       
73:       String string6 = naiveBayesMultinomialText3.stemmerTipText();
74:       assertEquals("The stemming algorithm to use on the words.", string6);
75:       
76:       String string7 = naiveBayesMultinomialText0.tokenizerTipText();
77:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
78:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
79:       assertEquals("The tokenizing algorithm to use on the strings.", string7);
80:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
81:   }
82: }
RegularFileObject[/tmp/EvoSuite_1_1575413709642/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 22:55:09 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.filters.unsupervised.instance.RemoveWithValues",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.core.Version",
144:       "weka.classifiers.meta.MultiClassClassifier$Code",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.FindWithCapabilities",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.core.neighboursearch.PerformanceStats",
169:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.classifiers.trees.DecisionStump",
184:       "weka.core.Randomizable",
185:       "weka.classifiers.functions.SGD",
186:       "weka.core.EuclideanDistance",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.filters.unsupervised.attribute.MakeIndicator",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.core.Attribute",
226:       "weka.core.ProtectedProperties",
227:       "weka.core.Instances",
228:       "weka.core.AbstractInstance",
229:       "weka.core.DenseInstance",
230:       "weka.core.neighboursearch.balltrees.BallNode",
231:       "weka.classifiers.RandomizableClassifier",
232:       "weka.core.Tag",
233:       "weka.classifiers.functions.SGDText",
234:       "weka.core.SerializedObject",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.NearestNeighbourSearch",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.NormalizableDistance",
241:       "weka.core.EuclideanDistance",
242:       "weka.core.Range",
243:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.stemmers.SnowballStemmer",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
257:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
258:       "weka.core.tokenizers.AlphabeticTokenizer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.LinearRegression",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.CostMatrix",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.classifiers.misc.SerializedClassifier",
277:       "weka.core.TechnicalInformation",
278:       "weka.core.TechnicalInformation$Type",
279:       "weka.core.TechnicalInformation$Field",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
282:       "weka.core.Stopwords",
283:       "weka.classifiers.IteratedSingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
285:       "weka.classifiers.meta.LogitBoost",
286:       "weka.classifiers.trees.DecisionStump",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.MultipleClassifiersCombiner",
290:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
291:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
292:       "weka.classifiers.meta.Stacking",
293:       "weka.classifiers.trees.LMT",
294:       "weka.core.stemmers.LovinsStemmer",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
297:       "weka.filters.SimpleFilter",
298:       "weka.filters.SimpleStreamFilter",
299:       "weka.filters.MultiFilter",
300:       "weka.filters.AllFilter",
301:       "weka.classifiers.meta.RegressionByDiscretization",
302:       "weka.filters.unsupervised.attribute.Discretize",
303:       "weka.classifiers.trees.J48",
304:       "weka.classifiers.bayes.NaiveBayes",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
308:       "weka.core.tokenizers.NGramTokenizer",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.attributeSelection.CfsSubsetEval",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.GreedyStepwise",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.SelectedTag",
318:       "weka.core.neighboursearch.LinearNNSearch"
319:     );
320:   }
321: }

[MASTER] 22:55:09.809 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String string0 = naiveBayesMultinomialText0.lowercaseTokensTipText();
assertEquals("Whether to convert all tokens to lowercase", string0);

naiveBayesMultinomialText0.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
String string1 = naiveBayesMultinomialText3.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string1);
assertEquals(0, naiveBayesMultinomialText3.getPeriodicPruning());

naiveBayesMultinomialText1.pruneDictionary();
String string2 = naiveBayesMultinomialText2.stopwordsTipText();
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string2);

String[] stringArray0 = new String[6];
stringArray0[0] = "The file containing the stopwords (if this is a directory then the default ones are used).";
stringArray0[1] = "The file containing the stopwords (if this is a directory then the default ones are used).";
stringArray0[2] = "The file containing the stopwords (if this is a directory then the default ones are used).";
stringArray0[3] = "Whether to convert all tokens to lowercase";
stringArray0[4] = "Use word frequencies rather than binary bag of words representation";
stringArray0[5] = "Use word frequencies rather than binary bag of words representation";
naiveBayesMultinomialText2.setOptions(stringArray0);
naiveBayesMultinomialText2.LNormTipText();
SnowballStemmer snowballStemmer0 = new SnowballStemmer("-norm <num>");
snowballStemmer0.getStemmer();
SnowballStemmer snowballStemmer1 = new SnowballStemmer();
snowballStemmer1.setOptions(stringArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText4 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText4.setStemmer(snowballStemmer1);
naiveBayesMultinomialText1.getStemmer();
NaiveBayesMultinomialText naiveBayesMultinomialText5 = new NaiveBayesMultinomialText();
String string3 = naiveBayesMultinomialText2.useStopListTipText();
assertFalse(naiveBayesMultinomialText2.getNormalizeDocLength());
assertEquals("If true, ignores all words that are on the stoplist.", string3);
assertFalse(naiveBayesMultinomialText2.getLowercaseTokens());
assertFalse(naiveBayesMultinomialText2.getUseStopList());
assertFalse(naiveBayesMultinomialText2.getUseWordFrequencies());

String string4 = naiveBayesMultinomialText3.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string4);

String string5 = naiveBayesMultinomialText0.periodicPruningTipText();
assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string5);

String string6 = naiveBayesMultinomialText3.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string6);

String string7 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals("The tokenizing algorithm to use on the strings.", string7);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 22:55:10.359 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_9_1575413710308/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_9_1575413710308/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.java]]
[MASTER] 22:55:10.359 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:10.359 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:10.360 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 22:55:10.360 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 22:55:10.361 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_9_1575413710308/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 22:55:10 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Vector;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.Attribute;
22: import weka.core.DenseInstance;
23: import weka.core.FindWithCapabilities;
24: import weka.core.tokenizers.WordTokenizer;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_9_tmp__ESTest extends NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=2.297687147780183
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
36:       MockFile mockFile0 = (MockFile)naiveBayesMultinomialText0.m_stopwordsFile;
37:       naiveBayesMultinomialText0.setStopwords(mockFile0);
38:       naiveBayesMultinomialText0.setNorm((-1308.64355009632));
39:       naiveBayesMultinomialText0.getUseWordFrequencies();
40:       naiveBayesMultinomialText0.pruneDictionary();
41:       WordTokenizer wordTokenizer0 = new WordTokenizer();
42:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
43:       naiveBayesMultinomialText0.setLNorm(3211.79);
44:       naiveBayesMultinomialText0.reset();
45:       int int0 = (-603);
46:       DenseInstance denseInstance0 = null;
47:       try {
48:         denseInstance0 = new DenseInstance((-603));
49:         fail("Expecting exception: NegativeArraySizeException");
50:       
51:       } catch(NegativeArraySizeException e) {
52:          //
53:          // no message in exception (getMessage() returned null)
54:          //
55:          verifyException("weka.core.DenseInstance", e);
56:       }
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_9_1575413710308/weka/classifiers/bayes/NaiveBayesMultinomialText_9_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 22:55:10 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.filters.unsupervised.instance.RemoveWithValues",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.core.Version",
144:       "weka.classifiers.meta.MultiClassClassifier$Code",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.FindWithCapabilities",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.core.neighboursearch.PerformanceStats",
169:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.classifiers.trees.DecisionStump",
184:       "weka.core.Randomizable",
185:       "weka.classifiers.functions.SGD",
186:       "weka.core.EuclideanDistance",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.filters.unsupervised.attribute.MakeIndicator",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_9_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.core.Attribute",
226:       "weka.core.ProtectedProperties",
227:       "weka.core.Instances",
228:       "weka.core.AbstractInstance",
229:       "weka.core.DenseInstance",
230:       "weka.core.neighboursearch.balltrees.BallNode",
231:       "weka.classifiers.RandomizableClassifier",
232:       "weka.core.Tag",
233:       "weka.classifiers.functions.SGDText",
234:       "weka.core.SerializedObject",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.NearestNeighbourSearch",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.NormalizableDistance",
241:       "weka.core.EuclideanDistance",
242:       "weka.core.Range",
243:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.stemmers.SnowballStemmer",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
257:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
258:       "weka.core.tokenizers.AlphabeticTokenizer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.LinearRegression",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.CostMatrix",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.classifiers.misc.SerializedClassifier",
277:       "weka.core.TechnicalInformation",
278:       "weka.core.TechnicalInformation$Type",
279:       "weka.core.TechnicalInformation$Field",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
282:       "weka.core.Stopwords",
283:       "weka.classifiers.IteratedSingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
285:       "weka.classifiers.meta.LogitBoost",
286:       "weka.classifiers.trees.DecisionStump",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.MultipleClassifiersCombiner",
290:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
291:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
292:       "weka.classifiers.meta.Stacking",
293:       "weka.classifiers.trees.LMT",
294:       "weka.core.stemmers.LovinsStemmer",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
297:       "weka.filters.SimpleFilter",
298:       "weka.filters.SimpleStreamFilter",
299:       "weka.filters.MultiFilter",
300:       "weka.filters.AllFilter",
301:       "weka.classifiers.meta.RegressionByDiscretization",
302:       "weka.filters.unsupervised.attribute.Discretize",
303:       "weka.classifiers.trees.J48",
304:       "weka.classifiers.bayes.NaiveBayes",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
308:       "weka.core.tokenizers.NGramTokenizer",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.attributeSelection.CfsSubsetEval",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.GreedyStepwise",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.SelectedTag",
318:       "weka.core.neighboursearch.LinearNNSearch"
319:     );
320:   }
321: }

[MASTER] 22:55:10.361 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
MockFile mockFile0 = (MockFile)naiveBayesMultinomialText0.m_stopwordsFile;
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.setNorm((-1308.64355009632));
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.pruneDictionary();
WordTokenizer wordTokenizer0 = new WordTokenizer();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.setLNorm(3211.79);
naiveBayesMultinomialText0.reset();
int int0 = (-603);
DenseInstance denseInstance0 = new DenseInstance((-603));

[MASTER] 22:55:11.035 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_22_1575413710997/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_22_1575413710997/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.java]]
[MASTER] 22:55:11.035 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.035 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.036 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 22:55:11.036 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_22_1575413710997/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 22:55:11 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.functions.SGDText;
18: import weka.core.stemmers.SnowballStemmer;
19: import weka.core.stemmers.Stemmer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_22_tmp__ESTest extends NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.3143686546779842
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       SGDText sGDText0 = new SGDText();
32:       Stemmer stemmer0 = sGDText0.getStemmer();
33:       naiveBayesMultinomialText0.setStemmer(stemmer0);
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
35:       naiveBayesMultinomialText0.setPeriodicPruning(10000);
36:       naiveBayesMultinomialText0.lowercaseTokensTipText();
37:       naiveBayesMultinomialText0.stemmerTipText();
38:       naiveBayesMultinomialText0.setDebug(true);
39:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
40:       naiveBayesMultinomialText0.stopwordsTipText();
41:       MockFile mockFile0 = new MockFile((File) null, "");
42:       naiveBayesMultinomialText0.setStopwords(mockFile0);
43:       String[] stringArray0 = new String[3];
44:       stringArray0[0] = "Whether to convert all tokens to lowercase";
45:       stringArray0[1] = "Use word frequencies rather than binary bag of words representation";
46:       stringArray0[2] = "Use word frequencies rather than binary bag of words representation";
47:       naiveBayesMultinomialText0.setOptions(stringArray0);
48:       naiveBayesMultinomialText0.LNormTipText();
49:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("q;e@SXtm,,~Lt~}");
50:       snowballStemmer0.listOptions();
51:       snowballStemmer0.getStemmer();
52:       SnowballStemmer snowballStemmer1 = new SnowballStemmer();
53:       snowballStemmer1.setOptions(stringArray0);
54:       naiveBayesMultinomialText0.setStemmer((Stemmer) null);
55:       naiveBayesMultinomialText0.getStemmer();
56:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
57:       naiveBayesMultinomialText1.useStopListTipText();
58:       naiveBayesMultinomialText0.minWordFrequencyTipText();
59:       naiveBayesMultinomialText1.periodicPruningTipText();
60:       naiveBayesMultinomialText0.stemmerTipText();
61:       naiveBayesMultinomialText1.tokenizerTipText();
62:       naiveBayesMultinomialText0.getTokenizer();
63:       assertEquals(10000, naiveBayesMultinomialText0.getPeriodicPruning());
64:   }
65: }
RegularFileObject[/tmp/EvoSuite_22_1575413710997/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 22:55:11 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.filters.unsupervised.instance.RemoveWithValues",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.core.Version",
144:       "weka.classifiers.meta.MultiClassClassifier$Code",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.FindWithCapabilities",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.core.neighboursearch.PerformanceStats",
169:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.classifiers.trees.DecisionStump",
184:       "weka.core.Randomizable",
185:       "weka.classifiers.functions.SGD",
186:       "weka.core.EuclideanDistance",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.filters.unsupervised.attribute.MakeIndicator",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.core.Attribute",
226:       "weka.core.ProtectedProperties",
227:       "weka.core.Instances",
228:       "weka.core.AbstractInstance",
229:       "weka.core.DenseInstance",
230:       "weka.core.neighboursearch.balltrees.BallNode",
231:       "weka.classifiers.RandomizableClassifier",
232:       "weka.core.Tag",
233:       "weka.classifiers.functions.SGDText",
234:       "weka.core.SerializedObject",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.NearestNeighbourSearch",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.NormalizableDistance",
241:       "weka.core.EuclideanDistance",
242:       "weka.core.Range",
243:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.stemmers.SnowballStemmer",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
257:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
258:       "weka.core.tokenizers.AlphabeticTokenizer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.LinearRegression",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.CostMatrix",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.classifiers.misc.SerializedClassifier",
277:       "weka.core.TechnicalInformation",
278:       "weka.core.TechnicalInformation$Type",
279:       "weka.core.TechnicalInformation$Field",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
282:       "weka.core.Stopwords",
283:       "weka.classifiers.IteratedSingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
285:       "weka.classifiers.meta.LogitBoost",
286:       "weka.classifiers.trees.DecisionStump",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.MultipleClassifiersCombiner",
290:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
291:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
292:       "weka.classifiers.meta.Stacking",
293:       "weka.classifiers.trees.LMT",
294:       "weka.core.stemmers.LovinsStemmer",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
297:       "weka.filters.SimpleFilter",
298:       "weka.filters.SimpleStreamFilter",
299:       "weka.filters.MultiFilter",
300:       "weka.filters.AllFilter",
301:       "weka.classifiers.meta.RegressionByDiscretization",
302:       "weka.filters.unsupervised.attribute.Discretize",
303:       "weka.classifiers.trees.J48",
304:       "weka.classifiers.bayes.NaiveBayes",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
308:       "weka.core.tokenizers.NGramTokenizer",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.attributeSelection.CfsSubsetEval",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.GreedyStepwise",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.SelectedTag",
318:       "weka.core.neighboursearch.LinearNNSearch"
319:     );
320:   }
321: }

[MASTER] 22:55:11.038 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SGDText sGDText0 = new SGDText();
Stemmer stemmer0 = sGDText0.getStemmer();
naiveBayesMultinomialText0.setStemmer(stemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setPeriodicPruning(10000);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.setDebug(true);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.stopwordsTipText();
MockFile mockFile0 = new MockFile((File) null, "");
naiveBayesMultinomialText0.setStopwords(mockFile0);
String[] stringArray0 = new String[3];
stringArray0[0] = "Whether to convert all tokens to lowercase";
stringArray0[1] = "Use word frequencies rather than binary bag of words representation";
stringArray0[2] = "Use word frequencies rather than binary bag of words representation";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.LNormTipText();
SnowballStemmer snowballStemmer0 = new SnowballStemmer("q;e@SXtm,,~Lt~}");
snowballStemmer0.listOptions();
snowballStemmer0.getStemmer();
SnowballStemmer snowballStemmer1 = new SnowballStemmer();
snowballStemmer1.setOptions(stringArray0);
naiveBayesMultinomialText0.setStemmer((Stemmer) null);
naiveBayesMultinomialText0.getStemmer();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.useStopListTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText1.periodicPruningTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText1.tokenizerTipText();
naiveBayesMultinomialText0.getTokenizer();
assertEquals(10000, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 22:55:11.118 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_24_1575413711084/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_24_1575413711084/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.java]]
[MASTER] 22:55:11.118 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.118 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.118 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 22:55:11.119 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_24_1575413711084/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 22:55:11 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.functions.SGDText;
17: import weka.core.stemmers.SnowballStemmer;
18: import weka.core.stemmers.Stemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_24_tmp__ESTest extends NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.372821413206516
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       SGDText sGDText0 = new SGDText();
31:       Stemmer stemmer0 = sGDText0.getStemmer();
32:       naiveBayesMultinomialText0.setStemmer(stemmer0);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
34:       naiveBayesMultinomialText0.setPeriodicPruning(10000);
35:       naiveBayesMultinomialText0.lowercaseTokensTipText();
36:       naiveBayesMultinomialText0.stemmerTipText();
37:       naiveBayesMultinomialText0.setDebug(true);
38:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
39:       // Undeclared exception!
40:       try { 
41:         naiveBayesMultinomialText0.pruneDictionary();
42:         fail("Expecting exception: NullPointerException");
43:       
44:       } catch(NullPointerException e) {
45:          //
46:          // no message in exception (getMessage() returned null)
47:          //
48:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_24_1575413711084/weka/classifiers/bayes/NaiveBayesMultinomialText_24_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 22:55:11 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.filters.unsupervised.instance.RemoveWithValues",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.core.Version",
144:       "weka.classifiers.meta.MultiClassClassifier$Code",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.FindWithCapabilities",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.core.neighboursearch.PerformanceStats",
169:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.classifiers.trees.DecisionStump",
184:       "weka.core.Randomizable",
185:       "weka.classifiers.functions.SGD",
186:       "weka.core.EuclideanDistance",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.filters.unsupervised.attribute.MakeIndicator",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_24_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.core.Attribute",
226:       "weka.core.ProtectedProperties",
227:       "weka.core.Instances",
228:       "weka.core.AbstractInstance",
229:       "weka.core.DenseInstance",
230:       "weka.core.neighboursearch.balltrees.BallNode",
231:       "weka.classifiers.RandomizableClassifier",
232:       "weka.core.Tag",
233:       "weka.classifiers.functions.SGDText",
234:       "weka.core.SerializedObject",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.NearestNeighbourSearch",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.NormalizableDistance",
241:       "weka.core.EuclideanDistance",
242:       "weka.core.Range",
243:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.stemmers.SnowballStemmer",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
257:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
258:       "weka.core.tokenizers.AlphabeticTokenizer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.LinearRegression",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.CostMatrix",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.classifiers.misc.SerializedClassifier",
277:       "weka.core.TechnicalInformation",
278:       "weka.core.TechnicalInformation$Type",
279:       "weka.core.TechnicalInformation$Field",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
282:       "weka.core.Stopwords",
283:       "weka.classifiers.IteratedSingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
285:       "weka.classifiers.meta.LogitBoost",
286:       "weka.classifiers.trees.DecisionStump",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.MultipleClassifiersCombiner",
290:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
291:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
292:       "weka.classifiers.meta.Stacking",
293:       "weka.classifiers.trees.LMT",
294:       "weka.core.stemmers.LovinsStemmer",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
297:       "weka.filters.SimpleFilter",
298:       "weka.filters.SimpleStreamFilter",
299:       "weka.filters.MultiFilter",
300:       "weka.filters.AllFilter",
301:       "weka.classifiers.meta.RegressionByDiscretization",
302:       "weka.filters.unsupervised.attribute.Discretize",
303:       "weka.classifiers.trees.J48",
304:       "weka.classifiers.bayes.NaiveBayes",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
308:       "weka.core.tokenizers.NGramTokenizer",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.attributeSelection.CfsSubsetEval",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.GreedyStepwise",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.SelectedTag",
318:       "weka.core.neighboursearch.LinearNNSearch"
319:     );
320:   }
321: }

[MASTER] 22:55:11.119 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SGDText sGDText0 = new SGDText();
Stemmer stemmer0 = sGDText0.getStemmer();
naiveBayesMultinomialText0.setStemmer(stemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setPeriodicPruning(10000);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.setDebug(true);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 22:55:11.545 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_33_1575413711517/weka/classifiers/bayes/NaiveBayesMultinomialText_33_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_33_1575413711517/weka/classifiers/bayes/NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding.java]]
[MASTER] 22:55:11.545 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.545 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.546 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 22:55:11.546 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_33_1575413711517/weka/classifiers/bayes/NaiveBayesMultinomialText_33_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 22:55:11 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.SparseInstance;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_33_tmp__ESTest extends NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.042632211710285
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
29:       naiveBayesMultinomialText0.setPeriodicPruning(10000);
30:       naiveBayesMultinomialText0.lowercaseTokensTipText();
31:       naiveBayesMultinomialText0.stemmerTipText();
32:       naiveBayesMultinomialText0.setDebug(true);
33:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
34:       double[] doubleArray0 = new double[5];
35:       doubleArray0[1] = (-45.0);
36:       doubleArray0[2] = 0.0;
37:       doubleArray0[3] = (double) 10000;
38:       SparseInstance sparseInstance0 = new SparseInstance(10000, doubleArray0);
39:       // Undeclared exception!
40:       try { 
41:         naiveBayesMultinomialText0.tokenizeInstance(sparseInstance0, false);
42:         fail("Expecting exception: RuntimeException");
43:       
44:       } catch(RuntimeException e) {
45:          //
46:          // DenseInstance doesn't have access to a dataset!
47:          //
48:          verifyException("weka.core.AbstractInstance", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_33_1575413711517/weka/classifiers/bayes/NaiveBayesMultinomialText_33_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 22:55:11 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.filters.unsupervised.instance.RemoveWithValues",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.core.Version",
144:       "weka.classifiers.meta.MultiClassClassifier$Code",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.FindWithCapabilities",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.core.neighboursearch.PerformanceStats",
169:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.classifiers.trees.DecisionStump",
184:       "weka.core.Randomizable",
185:       "weka.classifiers.functions.SGD",
186:       "weka.core.EuclideanDistance",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.filters.unsupervised.attribute.MakeIndicator",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_33_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.core.Attribute",
226:       "weka.core.ProtectedProperties",
227:       "weka.core.Instances",
228:       "weka.core.AbstractInstance",
229:       "weka.core.DenseInstance",
230:       "weka.core.neighboursearch.balltrees.BallNode",
231:       "weka.classifiers.RandomizableClassifier",
232:       "weka.core.Tag",
233:       "weka.classifiers.functions.SGDText",
234:       "weka.core.SerializedObject",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.NearestNeighbourSearch",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.NormalizableDistance",
241:       "weka.core.EuclideanDistance",
242:       "weka.core.Range",
243:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.stemmers.SnowballStemmer",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
257:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
258:       "weka.core.tokenizers.AlphabeticTokenizer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.LinearRegression",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.CostMatrix",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.classifiers.misc.SerializedClassifier",
277:       "weka.core.TechnicalInformation",
278:       "weka.core.TechnicalInformation$Type",
279:       "weka.core.TechnicalInformation$Field",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
282:       "weka.core.Stopwords",
283:       "weka.classifiers.IteratedSingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
285:       "weka.classifiers.meta.LogitBoost",
286:       "weka.classifiers.trees.DecisionStump",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.MultipleClassifiersCombiner",
290:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
291:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
292:       "weka.classifiers.meta.Stacking",
293:       "weka.classifiers.trees.LMT",
294:       "weka.core.stemmers.LovinsStemmer",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
297:       "weka.filters.SimpleFilter",
298:       "weka.filters.SimpleStreamFilter",
299:       "weka.filters.MultiFilter",
300:       "weka.filters.AllFilter",
301:       "weka.classifiers.meta.RegressionByDiscretization",
302:       "weka.filters.unsupervised.attribute.Discretize",
303:       "weka.classifiers.trees.J48",
304:       "weka.classifiers.bayes.NaiveBayes",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
308:       "weka.core.tokenizers.NGramTokenizer",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.attributeSelection.CfsSubsetEval",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.GreedyStepwise",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.SelectedTag",
318:       "weka.core.neighboursearch.LinearNNSearch"
319:     );
320:   }
321: }

[MASTER] 22:55:11.547 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setPeriodicPruning(10000);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.setDebug(true);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
double[] doubleArray0 = new double[5];
doubleArray0[1] = (-45.0);
doubleArray0[2] = 0.0;
doubleArray0[3] = (double) 10000;
SparseInstance sparseInstance0 = new SparseInstance(10000, doubleArray0);
naiveBayesMultinomialText0.tokenizeInstance(sparseInstance0, false);

[MASTER] 22:55:11.588 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_34_1575413711548/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_34_1575413711548/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.java]]
[MASTER] 22:55:11.588 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.588 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.588 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 22:55:11.588 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 22:55:11.589 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_34_1575413711548/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 22:55:11 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.DenseInstance;
18: import weka.core.tokenizers.WordTokenizer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_34_tmp__ESTest extends NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.218655583840207
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       double[] doubleArray0 = new double[0];
31:       naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
32:       naiveBayesMultinomialText0.getUseWordFrequencies();
33:       naiveBayesMultinomialText0.pruneDictionary();
34:       WordTokenizer wordTokenizer0 = new WordTokenizer();
35:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText1.setLNorm(4275.346);
38:       naiveBayesMultinomialText0.reset();
39:       int int0 = 3;
40:       DenseInstance denseInstance0 = new DenseInstance(3);
41:       try { 
42:         naiveBayesMultinomialText1.distributionForInstance(denseInstance0);
43:         fail("Expecting exception: RuntimeException");
44:       
45:       } catch(RuntimeException e) {
46:          //
47:          // DenseInstance doesn't have access to a dataset!
48:          //
49:          verifyException("weka.core.AbstractInstance", e);
50:       }
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_34_1575413711548/weka/classifiers/bayes/NaiveBayesMultinomialText_34_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 22:55:11 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.filters.unsupervised.instance.RemoveWithValues",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.core.Version",
144:       "weka.classifiers.meta.MultiClassClassifier$Code",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.FindWithCapabilities",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.core.neighboursearch.PerformanceStats",
169:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.classifiers.trees.DecisionStump",
184:       "weka.core.Randomizable",
185:       "weka.classifiers.functions.SGD",
186:       "weka.core.EuclideanDistance",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.filters.unsupervised.attribute.MakeIndicator",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_34_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.core.Attribute",
226:       "weka.core.ProtectedProperties",
227:       "weka.core.Instances",
228:       "weka.core.AbstractInstance",
229:       "weka.core.DenseInstance",
230:       "weka.core.neighboursearch.balltrees.BallNode",
231:       "weka.classifiers.RandomizableClassifier",
232:       "weka.core.Tag",
233:       "weka.classifiers.functions.SGDText",
234:       "weka.core.SerializedObject",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.NearestNeighbourSearch",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.NormalizableDistance",
241:       "weka.core.EuclideanDistance",
242:       "weka.core.Range",
243:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.stemmers.SnowballStemmer",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
257:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
258:       "weka.core.tokenizers.AlphabeticTokenizer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.LinearRegression",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.CostMatrix",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.classifiers.misc.SerializedClassifier",
277:       "weka.core.TechnicalInformation",
278:       "weka.core.TechnicalInformation$Type",
279:       "weka.core.TechnicalInformation$Field",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
282:       "weka.core.Stopwords",
283:       "weka.classifiers.IteratedSingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
285:       "weka.classifiers.meta.LogitBoost",
286:       "weka.classifiers.trees.DecisionStump",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.MultipleClassifiersCombiner",
290:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
291:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
292:       "weka.classifiers.meta.Stacking",
293:       "weka.classifiers.trees.LMT",
294:       "weka.core.stemmers.LovinsStemmer",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
297:       "weka.filters.SimpleFilter",
298:       "weka.filters.SimpleStreamFilter",
299:       "weka.filters.MultiFilter",
300:       "weka.filters.AllFilter",
301:       "weka.classifiers.meta.RegressionByDiscretization",
302:       "weka.filters.unsupervised.attribute.Discretize",
303:       "weka.classifiers.trees.J48",
304:       "weka.classifiers.bayes.NaiveBayes",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
308:       "weka.core.tokenizers.NGramTokenizer",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.attributeSelection.CfsSubsetEval",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.GreedyStepwise",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.SelectedTag",
318:       "weka.core.neighboursearch.LinearNNSearch"
319:     );
320:   }
321: }

[MASTER] 22:55:11.589 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[0];
naiveBayesMultinomialText0.m_wordsPerClass = doubleArray0;
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.pruneDictionary();
WordTokenizer wordTokenizer0 = new WordTokenizer();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setLNorm(4275.346);
naiveBayesMultinomialText0.reset();
int int0 = 3;
DenseInstance denseInstance0 = new DenseInstance(3);
naiveBayesMultinomialText1.distributionForInstance(denseInstance0);

[MASTER] 22:55:11.800 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1575413711770/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1575413711770/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.java]]
[MASTER] 22:55:11.800 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.800 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:11.800 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 22:55:11.801 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1575413711770/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 22:55:11 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.classifiers.functions.SGDText;
16: import weka.core.stemmers.SnowballStemmer;
17: import weka.core.stemmers.Stemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_40_tmp__ESTest extends NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.2808765576791212
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       SGDText sGDText0 = new SGDText();
30:       Stemmer stemmer0 = sGDText0.getStemmer();
31:       naiveBayesMultinomialText0.setStemmer(stemmer0);
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
33:       naiveBayesMultinomialText0.setPeriodicPruning(10000);
34:       naiveBayesMultinomialText0.lowercaseTokensTipText();
35:       naiveBayesMultinomialText0.stemmerTipText();
36:       naiveBayesMultinomialText0.setDebug(true);
37:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
38:       String[] stringArray0 = new String[3];
39:       stringArray0[0] = "Whether to convert all tokens to lowercase";
40:       stringArray0[1] = "Use word frequencies rather than binary bag of words representation";
41:       stringArray0[2] = "Use word frequencies rather than binary bag of words representation";
42:       naiveBayesMultinomialText0.setOptions(stringArray0);
43:       naiveBayesMultinomialText0.LNormTipText();
44:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("q;e@SXtm,,~Lt~}");
45:       snowballStemmer0.getStemmer();
46:       SnowballStemmer snowballStemmer1 = new SnowballStemmer();
47:       snowballStemmer1.setOptions(stringArray0);
48:       naiveBayesMultinomialText0.setStemmer((Stemmer) null);
49:       naiveBayesMultinomialText0.getStemmer();
50:       naiveBayesMultinomialText0.getNormalizeDocLength();
51:       naiveBayesMultinomialText0.useStopListTipText();
52:       naiveBayesMultinomialText0.minWordFrequencyTipText();
53:       naiveBayesMultinomialText0.periodicPruningTipText();
54:       naiveBayesMultinomialText0.stemmerTipText();
55:       naiveBayesMultinomialText0.tokenizerTipText();
56:       assertEquals(10000, naiveBayesMultinomialText0.getPeriodicPruning());
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_40_1575413711770/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 22:55:11 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.filters.unsupervised.instance.RemoveWithValues",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.core.Version",
144:       "weka.classifiers.meta.MultiClassClassifier$Code",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.FindWithCapabilities",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.core.neighboursearch.PerformanceStats",
169:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.classifiers.trees.DecisionStump",
184:       "weka.core.Randomizable",
185:       "weka.classifiers.functions.SGD",
186:       "weka.core.EuclideanDistance",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.filters.unsupervised.attribute.MakeIndicator",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.core.Attribute",
226:       "weka.core.ProtectedProperties",
227:       "weka.core.Instances",
228:       "weka.core.AbstractInstance",
229:       "weka.core.DenseInstance",
230:       "weka.core.neighboursearch.balltrees.BallNode",
231:       "weka.classifiers.RandomizableClassifier",
232:       "weka.core.Tag",
233:       "weka.classifiers.functions.SGDText",
234:       "weka.core.SerializedObject",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.NearestNeighbourSearch",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.NormalizableDistance",
241:       "weka.core.EuclideanDistance",
242:       "weka.core.Range",
243:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.stemmers.SnowballStemmer",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
257:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
258:       "weka.core.tokenizers.AlphabeticTokenizer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.LinearRegression",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.CostMatrix",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.classifiers.misc.SerializedClassifier",
277:       "weka.core.TechnicalInformation",
278:       "weka.core.TechnicalInformation$Type",
279:       "weka.core.TechnicalInformation$Field",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
282:       "weka.core.Stopwords",
283:       "weka.classifiers.IteratedSingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
285:       "weka.classifiers.meta.LogitBoost",
286:       "weka.classifiers.trees.DecisionStump",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.MultipleClassifiersCombiner",
290:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
291:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
292:       "weka.classifiers.meta.Stacking",
293:       "weka.classifiers.trees.LMT",
294:       "weka.core.stemmers.LovinsStemmer",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
297:       "weka.filters.SimpleFilter",
298:       "weka.filters.SimpleStreamFilter",
299:       "weka.filters.MultiFilter",
300:       "weka.filters.AllFilter",
301:       "weka.classifiers.meta.RegressionByDiscretization",
302:       "weka.filters.unsupervised.attribute.Discretize",
303:       "weka.classifiers.trees.J48",
304:       "weka.classifiers.bayes.NaiveBayes",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
308:       "weka.core.tokenizers.NGramTokenizer",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.attributeSelection.CfsSubsetEval",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.GreedyStepwise",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.SelectedTag",
318:       "weka.core.neighboursearch.LinearNNSearch"
319:     );
320:   }
321: }

[MASTER] 22:55:11.801 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SGDText sGDText0 = new SGDText();
Stemmer stemmer0 = sGDText0.getStemmer();
naiveBayesMultinomialText0.setStemmer(stemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setPeriodicPruning(10000);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.setDebug(true);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
String[] stringArray0 = new String[3];
stringArray0[0] = "Whether to convert all tokens to lowercase";
stringArray0[1] = "Use word frequencies rather than binary bag of words representation";
stringArray0[2] = "Use word frequencies rather than binary bag of words representation";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.LNormTipText();
SnowballStemmer snowballStemmer0 = new SnowballStemmer("q;e@SXtm,,~Lt~}");
snowballStemmer0.getStemmer();
SnowballStemmer snowballStemmer1 = new SnowballStemmer();
snowballStemmer1.setOptions(stringArray0);
naiveBayesMultinomialText0.setStemmer((Stemmer) null);
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.tokenizerTipText();
assertEquals(10000, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 22:55:12.008 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_46_1575413711975/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_46_1575413711975/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.java]]
[MASTER] 22:55:12.008 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:12.008 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 22:55:12.009 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 22:55:12.010 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_46_1575413711975/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 22:55:11 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.classifiers.functions.SGDText;
17: import weka.core.stemmers.SnowballStemmer;
18: import weka.core.stemmers.Stemmer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_46_tmp__ESTest extends NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.3849795270216836
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       SGDText sGDText0 = new SGDText();
31:       Stemmer stemmer0 = sGDText0.getStemmer();
32:       naiveBayesMultinomialText0.setStemmer(stemmer0);
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
34:       naiveBayesMultinomialText0.setPeriodicPruning((-3288));
35:       naiveBayesMultinomialText0.lowercaseTokensTipText();
36:       naiveBayesMultinomialText0.stemmerTipText();
37:       naiveBayesMultinomialText0.setDebug(true);
38:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
39:       naiveBayesMultinomialText0.pruneDictionary();
40:       String[] stringArray0 = new String[5];
41:       stringArray0[0] = "Whether to convert all tokens to lowercase";
42:       FileSystemHandling.shouldAllThrowIOExceptions();
43:       stringArray0[1] = "";
44:       stringArray0[2] = "The stemming algorithm to use on the words.";
45:       stringArray0[3] = "Use word frequencies rather than binary bag of words representation";
46:       stringArray0[4] = "The stemming algorithm to use on the words.";
47:       naiveBayesMultinomialText0.setOptions(stringArray0);
48:       naiveBayesMultinomialText0.LNormTipText();
49:       SnowballStemmer snowballStemmer0 = new SnowballStemmer(">FXv");
50:       snowballStemmer0.getStemmer();
51:       SnowballStemmer snowballStemmer1 = new SnowballStemmer();
52:       snowballStemmer1.setOptions(stringArray0);
53:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
54:       naiveBayesMultinomialText1.setStemmer(stemmer0);
55:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
56:       naiveBayesMultinomialText2.getStemmer();
57:       naiveBayesMultinomialText0.getNormalizeDocLength();
58:       naiveBayesMultinomialText0.useStopListTipText();
59:       naiveBayesMultinomialText1.minWordFrequencyTipText();
60:       naiveBayesMultinomialText2.periodicPruningTipText();
61:       naiveBayesMultinomialText1.stemmerTipText();
62:       naiveBayesMultinomialText2.tokenizerTipText();
63:       int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
64:       assertEquals((-3288), int0);
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_46_1575413711975/weka/classifiers/bayes/NaiveBayesMultinomialText_46_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 22:55:11 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
99:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
100:       "weka.core.DenseInstance",
101:       "weka.core.stemmers.Stemmer",
102:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "weka.classifiers.meta.LogitBoost",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.filters.unsupervised.instance.RemoveWithValues",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
124:       "weka.core.BinarySparseInstance",
125:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
126:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.core.Summarizable",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "weka.core.AdditionalMeasureProducer",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
134:       "weka.classifiers.meta.MultiClassClassifier",
135:       "weka.core.Drawable",
136:       "weka.core.matrix.Matrix",
137:       "weka.core.CapabilitiesHandler",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.core.neighboursearch.balltrees.BallSplitter",
143:       "weka.core.Version",
144:       "weka.classifiers.meta.MultiClassClassifier$Code",
145:       "weka.core.Tag",
146:       "weka.classifiers.IteratedSingleClassifierEnhancer",
147:       "weka.classifiers.AbstractClassifier",
148:       "weka.core.FindWithCapabilities",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.scripting.JythonSerializableObject",
155:       "weka.classifiers.Classifier",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.core.tokenizers.WordTokenizer",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.core.neighboursearch.PerformanceStats",
169:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
170:       "weka.core.Attribute",
171:       "weka.core.Stopwords",
172:       "weka.core.FastVector",
173:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
174:       "weka.core.UnassignedDatasetException",
175:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
176:       "weka.classifiers.RandomizableClassifier",
177:       "weka.classifiers.SingleClassifierEnhancer",
178:       "weka.core.RevisionUtils",
179:       "weka.core.Instance",
180:       "weka.core.ProtectedProperties",
181:       "weka.core.WeightedInstancesHandler",
182:       "weka.core.neighboursearch.NearestNeighbourSearch",
183:       "weka.classifiers.trees.DecisionStump",
184:       "weka.core.Randomizable",
185:       "weka.classifiers.functions.SGD",
186:       "weka.core.EuclideanDistance",
187:       "weka.core.Instances",
188:       "weka.core.UnassignedClassException",
189:       "weka.classifiers.rules.ZeroR",
190:       "weka.core.TechnicalInformation",
191:       "weka.core.UnsupportedAttributeTypeException",
192:       "weka.classifiers.Sourcable",
193:       "weka.core.RevisionHandler",
194:       "weka.classifiers.evaluation.output.prediction.PlainText",
195:       "weka.core.neighboursearch.TreePerformanceStats",
196:       "weka.core.xml.XMLSerialization",
197:       "weka.filters.unsupervised.attribute.MakeIndicator",
198:       "weka.classifiers.xml.XMLClassifier",
199:       "weka.filters.Filter"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_46_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.Capabilities",
219:       "org.pentaho.packageManagement.PackageManager",
220:       "org.pentaho.packageManagement.DefaultPackageManager",
221:       "weka.core.Version",
222:       "weka.core.Environment",
223:       "weka.core.WekaPackageManager",
224:       "weka.core.TestInstances",
225:       "weka.core.Attribute",
226:       "weka.core.ProtectedProperties",
227:       "weka.core.Instances",
228:       "weka.core.AbstractInstance",
229:       "weka.core.DenseInstance",
230:       "weka.core.neighboursearch.balltrees.BallNode",
231:       "weka.classifiers.RandomizableClassifier",
232:       "weka.core.Tag",
233:       "weka.classifiers.functions.SGDText",
234:       "weka.core.SerializedObject",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.NearestNeighbourSearch",
239:       "weka.core.neighboursearch.KDTree",
240:       "weka.core.NormalizableDistance",
241:       "weka.core.EuclideanDistance",
242:       "weka.core.Range",
243:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
244:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize",
247:       "weka.core.neighboursearch.CoverTree",
248:       "weka.core.stemmers.SnowballStemmer",
249:       "weka.core.RevisionUtils",
250:       "weka.classifiers.functions.supportVector.Kernel",
251:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
252:       "weka.attributeSelection.ASEvaluation",
253:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
254:       "weka.attributeSelection.PrincipalComponents",
255:       "weka.core.converters.ArffLoader$ArffReader",
256:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
257:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
258:       "weka.core.tokenizers.AlphabeticTokenizer",
259:       "weka.classifiers.SingleClassifierEnhancer",
260:       "weka.classifiers.misc.InputMappedClassifier",
261:       "weka.classifiers.rules.ZeroR",
262:       "weka.classifiers.functions.LinearRegression",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
270:       "weka.classifiers.meta.CostSensitiveClassifier",
271:       "weka.classifiers.CostMatrix",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.classifiers.misc.SerializedClassifier",
277:       "weka.core.TechnicalInformation",
278:       "weka.core.TechnicalInformation$Type",
279:       "weka.core.TechnicalInformation$Field",
280:       "weka.classifiers.bayes.NaiveBayesMultinomial",
281:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
282:       "weka.core.Stopwords",
283:       "weka.classifiers.IteratedSingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
285:       "weka.classifiers.meta.LogitBoost",
286:       "weka.classifiers.trees.DecisionStump",
287:       "weka.classifiers.bayes.net.BIFReader",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.MultipleClassifiersCombiner",
290:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
291:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
292:       "weka.classifiers.meta.Stacking",
293:       "weka.classifiers.trees.LMT",
294:       "weka.core.stemmers.LovinsStemmer",
295:       "weka.core.stemmers.IteratedLovinsStemmer",
296:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
297:       "weka.filters.SimpleFilter",
298:       "weka.filters.SimpleStreamFilter",
299:       "weka.filters.MultiFilter",
300:       "weka.filters.AllFilter",
301:       "weka.classifiers.meta.RegressionByDiscretization",
302:       "weka.filters.unsupervised.attribute.Discretize",
303:       "weka.classifiers.trees.J48",
304:       "weka.classifiers.bayes.NaiveBayes",
305:       "weka.core.neighboursearch.BallTree",
306:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
307:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
308:       "weka.core.tokenizers.NGramTokenizer",
309:       "weka.classifiers.bayes.NaiveBayesUpdateable",
310:       "weka.classifiers.meta.FilteredClassifier",
311:       "weka.filters.supervised.attribute.AttributeSelection",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.attributeSelection.CfsSubsetEval",
314:       "weka.attributeSelection.ASSearch",
315:       "weka.attributeSelection.GreedyStepwise",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.SelectedTag",
318:       "weka.core.neighboursearch.LinearNNSearch"
319:     );
320:   }
321: }

[MASTER] 22:55:12.012 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
SGDText sGDText0 = new SGDText();
Stemmer stemmer0 = sGDText0.getStemmer();
naiveBayesMultinomialText0.setStemmer(stemmer0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.setPeriodicPruning((-3288));
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.setDebug(true);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.pruneDictionary();
String[] stringArray0 = new String[5];
stringArray0[0] = "Whether to convert all tokens to lowercase";
FileSystemHandling.shouldAllThrowIOExceptions();
stringArray0[1] = "";
stringArray0[2] = "The stemming algorithm to use on the words.";
stringArray0[3] = "Use word frequencies rather than binary bag of words representation";
stringArray0[4] = "The stemming algorithm to use on the words.";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.LNormTipText();
SnowballStemmer snowballStemmer0 = new SnowballStemmer(">FXv");
snowballStemmer0.getStemmer();
SnowballStemmer snowballStemmer1 = new SnowballStemmer();
snowballStemmer1.setOptions(stringArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setStemmer(stemmer0);
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.getStemmer();
naiveBayesMultinomialText0.getNormalizeDocLength();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText1.minWordFrequencyTipText();
naiveBayesMultinomialText2.periodicPruningTipText();
naiveBayesMultinomialText1.stemmerTipText();
naiveBayesMultinomialText2.tokenizerTipText();
int int0 = naiveBayesMultinomialText0.getPeriodicPruning();
assertEquals((-3288), int0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2865
* Connecting to master process on port 2861
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:04:40.542 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:04:40.555 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:04:40.556 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:04:43.369 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:04:43.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:04:43.997 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:04:58.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:04:58.657 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:04:58.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:05:00.161 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:05:02.328 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:05:02.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:05:05.829 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;: Line 627
[MASTER] 23:05:05.840 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;: root-Branch
[MASTER] 23:05:05.842 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 219: weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;:627 - ReplaceConstant - Whether pruning is performed. -> 
[MASTER] 23:05:05.845 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 23:05:05.846 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;
[MASTER] 23:05:05.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;
[MASTER] 23:05:05.851 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.usePruningTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:usePruningTipText()Ljava/lang/String;
[MASTER] 23:05:08.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:05:08.210 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:05:08.211 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:05:08.211 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:05:08.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:05:08.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:05:08.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:05:08.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:05:08.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 23:05:08.456 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 23:05:08.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 23:05:19.353 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 23:05:51.378 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: Line 599
[MASTER] 23:05:51.389 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch
[MASTER] 23:05:51.443 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:599 - ReplaceConstant - Whether check for error rate >= 1/2 is included in stopping criterion. -> 
[MASTER] 23:05:51.456 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 23:05:51.461 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 23:05:51.469 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 23:05:51.482 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:checkErrorRateTipText()Ljava/lang/String;
* Search finished after 124s and 18 generations, 15346 statements, best individual has fitness: 13688.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 705
* Number of covered goals: 226
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 92
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 48%
* Total number of goals: 993
* Number of covered goals: 481
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 93
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 72
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 72
* Number of covered goals: 67
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 92
* Generated 53 tests with total length 984
* Resulting test suite's coverage: 38% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 127s and 13 generations, 9425 statements, best individual has fitness: 20576.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 1378
* Number of covered goals: 625
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 809
* Number of covered goals: 243
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 424
* Number of covered goals: 176
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 9%
* Total number of goals: 278
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 52%
* Total number of goals: 103
* Number of covered goals: 54
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 52%
* Total number of goals: 103
* Number of covered goals: 54
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 21%
* Total number of goals: 809
* Number of covered goals: 169
* Generated 57 tests with total length 1217
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
[MASTER] 23:15:31.168 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:15:31.776 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:15:31.776 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 23:15:32.650 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2864
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:16:31.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:16:31.287 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:16:31.287 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:16:31.378 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
* Search finished after 130s and 2 generations, 2772 statements, best individual has fitness: 6232.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 647
* Number of covered goals: 558
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 441
* Number of covered goals: 331
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 678
* Number of covered goals: 514
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 244
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 124
* Number of covered goals: 86
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 124
* Number of covered goals: 86
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 441
* Number of covered goals: 287
* Generated 54 tests with total length 1237
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/107_weka/evosuite-tests
* Done!

* Computation finished
