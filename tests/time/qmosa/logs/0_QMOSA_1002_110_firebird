* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBCachedFetcher
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 2248
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:21:06.534 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:21:06.548 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:21:06.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:21:06.862 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 15:21:07.620 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:21:07.621 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:21:07.628 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:21:08.904 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:21:08.918 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:21:08.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:21:09.024 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:21:09.025 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:21:09.026 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:21:09.026 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:21:09.032 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:21:09.033 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:21:09.467 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 15:21:09.918 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBCachedFetcher
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/jdbc/FBCachedFetcher.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 15:21:24.503 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.firebirdsql.gds.impl.GDSHelper due to org.evosuite.ga.ConstructionFailedException: Have no generator for class org.firebirdsql.jdbc.FBConnection canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 15:21:48.438 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 15:22:39.020 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 122s and 28 generations, 26676 statements, best individual has fitness: 1648.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 158
* Number of covered goals: 100
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 118
* Number of covered goals: 60
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 347
* Number of covered goals: 332
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 28
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 40%
* Total number of goals: 118
* Number of covered goals: 47
* Generated 37 tests with total length 981
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
[MASTER] 15:23:40.885 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.LocalGDSImpl: no jaybird22_x64 in java.library.path
[MASTER] 15:23:40.926 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.NativeGDSImpl: org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:23:41.137 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.JniGDSImpl: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:23:41.170 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl: org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:23:41.221 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:24:00.628 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 15:24:00.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test19 -> class java.lang.NullPointerException: null
[MASTER] 15:24:00.914 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
fBCachedFetcher0.first();
fBCachedFetcher0.getRowNum();
JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
GDSType gDSType0 = javaGDSImpl0.getType();
FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory(gDSType0);
gDSType0.readResolve();
fBManagedConnectionFactory0.canonicalize();
byte[][] byteArray0 = new byte[1][1];
byte[] byteArray1 = new byte[5];
byteArray1[0] = (byte)46;
byteArray1[1] = (byte)46;
byteArray1[2] = (byte)46;
byteArray1[3] = (byte)46;
byteArray1[4] = (byte)46;
byteArray0[0] = byteArray1;
linkedList0.add(byteArray0);
fBCachedFetcher0.previous();
FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
int int0 = 48;
int int1 = (-1759);
fBCachedFetcher1.beforeFirst();

[MASTER] 15:24:00.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test27 -> class java.lang.NullPointerException: null
[MASTER] 15:24:00.915 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
linkedList1.offerFirst((byte[][]) null);
DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
delayQueue0.poll();
delayQueue0.peek();
linkedList0.remove((Object) null);
FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList1);
fBResultSet1.last();
linkedList0.offer((byte[][]) null);
fBCachedFetcher0.absolute(151);
fBCachedFetcher0.close();
FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet1);
fBCachedFetcher1.relative(2004);
fBCachedFetcher0.updateRow((byte[][]) null);
assertTrue(fBCachedFetcher0.isEmpty());


[MASTER] 15:24:02.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class java.lang.NullPointerException: null
[MASTER] 15:24:02.101 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
fBCachedFetcher0.first();
fBCachedFetcher0.getRowNum();
JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
GDSType gDSType0 = javaGDSImpl0.getType();
FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory(gDSType0);
gDSType0.readResolve();
fBManagedConnectionFactory0.canonicalize();
byte[][] byteArray0 = new byte[19][1];
byte[] byteArray1 = new byte[5];
byteArray1[0] = (byte)46;
byteArray1[1] = (byte)46;
byteArray1[2] = (byte)46;
byteArray1[3] = (byte)46;
byteArray1[4] = (byte)46;
byteArray0[0] = byteArray1;
linkedList0.add(byteArray0);
FileSystemHandling.shouldAllThrowIOExceptions();
FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
int int0 = 48;
int int1 = (-1738);
fBCachedFetcher1.first();

* Permissions denied during test execution: 
  - javax.security.auth.AuthPermission: 
         doAs: 1
* Writing JUnit test case 'FBCachedFetcher_ESTest' to /home/ubuntu/termite/qmosa/tests/s1002/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBProcedureCall
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 2247
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBProcedureCall
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/jdbc/FBProcedureCall.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1002
* Starting evolution
* Search finished after 122s and 34 generations, 20368 statements, best individual has fitness: 808.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 117
* Number of covered goals: 110
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 98
* Number of covered goals: 82
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 347
* Number of covered goals: 311
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 70
* Number of covered goals: 46
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 98
* Number of covered goals: 82
* Generated 53 tests with total length 718
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
[MASTER] 15:37:06.899 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 15:37:06.900 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
Object object0 = fBProcedureCall0.clone();
fBProcedureCall0.getOutputParams();
FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
fBProcedureCall1.setName("");
boolean boolean0 = fBProcedureCall1.equals(fBProcedureCall0);
assertTrue(boolean0);
assertFalse(fBProcedureCall0.equals((Object)fBProcedureCall1));
assertNotSame(fBProcedureCall0, object0);


[MASTER] 15:37:07.038 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-4326> but was:<0>
[MASTER] 15:37:07.038 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(31);
assertEquals((-4326), fBProcedureParam0.getType());

fBProcedureParam0.setType(31);
fBProcedureCall0.addOutputParam(fBProcedureParam0);
fBProcedureCall0.setName("g) e8>cfo37(,UO\u0003");
fBProcedureCall0.addParam(255, "g) e8>cfo37(,UO\u0003");
Object object0 = fBProcedureCall0.clone();
fBProcedureCall0.getInputParams();
fBProcedureCall0.getOutputParam(1879);
fBProcedureCall0.getName();
fBProcedureCall0.getName();
fBProcedureCall0.getOutputParam(1696);
fBProcedureCall0.mapOutParamIndexToPosition(2181, true);
fBProcedureCall0.getOutputParams();
fBProcedureCall0.addParam(31, "IN");
assertFalse(fBProcedureCall0.equals((Object)object0));


[MASTER] 15:37:07.614 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<31> but was:<0>
[MASTER] 15:37:07.614 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureParam fBProcedureParam0 = new FBProcedureParam(31, "NS^~\"x;Diu(;y7");
fBProcedureParam0.clone();
fBProcedureParam0.setIndex(31);
fBProcedureCall0.addOutputParam(fBProcedureParam0);
FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(31, "NS^~\"x;Diu(;y7");
fBProcedureParam1.setIndex(31);
fBProcedureParam1.setType(2);
int int0 = fBProcedureCall0.mapOutParamIndexToPosition(31);
assertEquals(31, int0);

fBProcedureCall0.addInputParam(fBProcedureParam1);
fBProcedureCall0.getInputParam(2725);
FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(3600, "qr*~PX+");
assertEquals(3600, fBProcedureParam2.getPosition());

FBProcedureParam fBProcedureParam3 = fBProcedureCall0.getInputParam(3600);
assertEquals(31, fBProcedureParam3.getType());

FBProcedureParam fBProcedureParam4 = fBProcedureCall0.getOutputParam(31);
assertEquals(31, fBProcedureParam4.getPosition());


* Writing JUnit test case 'FBProcedureCall_ESTest' to /home/ubuntu/termite/qmosa/tests/s1002/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.encodings.EncodingFactory
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 2246
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.encodings.EncodingFactory
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/encodings/EncodingFactory.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1002
* Starting evolution
* Search finished after 124s and 13 generations, 9858 statements, best individual has fitness: 1168.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 242
* Number of covered goals: 212
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 195
* Number of covered goals: 171
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 387
* Number of covered goals: 334
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 25
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 195
* Number of covered goals: 170
* Generated 70 tests with total length 933
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 35%
* Compiling and checking tests
* Writing JUnit test case 'EncodingFactory_ESTest' to /home/ubuntu/termite/qmosa/tests/s1002/110_firebird/evosuite-tests
* Done!

* Computation finished
