* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19697
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19694
* Connecting to master process on port 19696
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:55:15.391 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:55:15.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:55:15.412 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:55:15.575 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:55:15.614 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:55:15.633 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1007
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:55:21.946 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:55:21.949 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:55:21.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:55:21.957 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1007
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:55:28.485 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 18:55:33.843 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:55:33.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:55:33.849 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:55:35.062 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:55:36.150 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:55:36.163 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:55:39.286 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1110
[MASTER] 18:55:39.291 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1111
[MASTER] 18:55:39.292 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1112
[MASTER] 18:55:39.292 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1113
[MASTER] 18:55:39.292 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1115
[MASTER] 18:55:39.293 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1135
[MASTER] 18:55:39.293 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1136
[MASTER] 18:55:39.293 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1138
[MASTER] 18:55:39.294 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: Line 1154
[MASTER] 18:55:39.294 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I13 Branch 178 IFNONNULL L1112 - false
[MASTER] 18:55:39.294 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I22 Branch 179 IFEQ L1115 - true
[MASTER] 18:55:39.295 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - true
[MASTER] 18:55:39.295 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I152 Branch 188 IFLT L1138 - true
[MASTER] 18:55:39.296 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 341: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1111 - InsertUnaryOp Negation of n
[MASTER] 18:55:39.297 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 342: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1111 - InsertUnaryOp IINC 1 n
[MASTER] 18:55:39.297 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1111 - InsertUnaryOp IINC -1 n
[MASTER] 18:55:39.297 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 344: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1112 - ReplaceComparisonOperator != null -> = null
[MASTER] 18:55:39.297 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 345: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1113 - InsertUnaryOp Negation of n
[MASTER] 18:55:39.298 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 346: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1113 - InsertUnaryOp IINC 1 n
[MASTER] 18:55:39.298 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 347: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1113 - InsertUnaryOp IINC -1 n
[MASTER] 18:55:39.312 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 349: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1115 - InsertUnaryOp Negation of isLower
[MASTER] 18:55:39.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 350: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1115 - InsertUnaryOp IINC 1 isLower
[MASTER] 18:55:39.313 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 351: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1115 - InsertUnaryOp IINC -1 isLower
[MASTER] 18:55:39.314 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 352: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1115 - ReplaceComparisonOperator == -> !=
[MASTER] 18:55:39.316 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:EmptyArray
[MASTER] 18:55:39.317 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 18:55:39.318 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 18:55:39.318 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I152 Branch 188 IFLT L1138 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 18:55:39.319 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I13 Branch 178 IFNONNULL L1112 - false in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 18:55:39.320 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I22 Branch 179 IFEQ L1115 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 18:55:39.321 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D: I138 Branch 186 IFLT L1136 - true in context: weka.core.Optimization:solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D
[MASTER] 18:55:41.185 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:55:41.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:55:41.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:55:41.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:55:41.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:55:41.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:55:41.259 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:55:41.261 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:55:41.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:55:41.379 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 18:55:41.398 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1007
* Starting evolution
[MASTER] 18:55:54.275 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 18:56:51.394 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:57:14.285 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 122s and 33 generations, 20313 statements, best individual has fitness: 9376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 39%
* Total number of goals: 370
* Number of covered goals: 146
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 59
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 26%
* Total number of goals: 713
* Number of covered goals: 184
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 72
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 58
* Generated 36 tests with total length 613
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 28 generations, 23094 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 13 tests with total length 290
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 124s and 17 generations, 12098 statements, best individual has fitness: 21624.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 1378
* Number of covered goals: 567
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 809
* Number of covered goals: 188
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 31%
* Total number of goals: 424
* Number of covered goals: 131
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 14%
* Total number of goals: 278
* Number of covered goals: 40
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 103
* Number of covered goals: 73
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 70%
* Total number of goals: 103
* Number of covered goals: 72
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 17%
* Total number of goals: 809
* Number of covered goals: 140
* Generated 66 tests with total length 1286
* Resulting test suite's coverage: 31% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 18:58:49.578 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 18:58:50.211 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
[MASTER] 19:02:29.752 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:02:29.921 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:02:30.175 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 19:02:30.175 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19698
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1007
* Starting evolution
* Search finished after 125s and 9 generations, 11913 statements, best individual has fitness: 3952.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 217
* Number of covered goals: 169
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 428
* Number of covered goals: 241
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 260
* Number of covered goals: 199
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 56%
* Total number of goals: 428
* Number of covered goals: 240
* Generated 41 tests with total length 841
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 69%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19698
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:08:21.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:08:21.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:08:21.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:08:24.116 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:08:24.773 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:08:24.774 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1007
* Starting evolution
[MASTER] 19:08:36.259 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: Line 937
[MASTER] 19:08:36.307 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 19:08:36.360 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 884: weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;:937 - ReplaceConstant - $Revision: 8118 $ -> 
[MASTER] 19:08:36.368 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 19:08:36.375 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.NumericAntd.getRevision()Ljava/lang/String;
[MASTER] 19:08:36.375 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$NumericAntd.getRevision()Ljava/lang/String;: root-Branch in context: 
* Search finished after 124s and 26 generations, 17983 statements, best individual has fitness: 14304.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 705
* Number of covered goals: 217
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 20%
* Total number of goals: 416
* Number of covered goals: 84
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 45%
* Total number of goals: 993
* Number of covered goals: 447
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 93
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 72
* Number of covered goals: 68
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 72
* Number of covered goals: 66
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 20%
* Total number of goals: 416
* Number of covered goals: 84
* Generated 52 tests with total length 881
* Resulting test suite's coverage: 36% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19700
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:19:22.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:19:22.689 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:19:22.721 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:19:22.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:19:22.836 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:19:22.847 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1007
* Starting evolution
[MASTER] 19:19:29.555 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 19:19:29.555 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 19:20:02.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:False
[MASTER] 19:20:02.807 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 19:20:02.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 19:20:02.815 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getLowercaseTokens()Z
[MASTER] 19:20:06.004 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 254: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - ReplaceVariable m_wordFrequencies -> m_lowercaseTokens
* Search finished after 123s and 24 generations, 19912 statements, best individual has fitness: 4248.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 338
* Number of covered goals: 209
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 52%
* Total number of goals: 194
* Number of covered goals: 100
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 69%
* Total number of goals: 476
* Number of covered goals: 327
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 112
* Number of covered goals: 46
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 51%
* Total number of goals: 194
* Number of covered goals: 99
* Generated 53 tests with total length 909
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 19:25:25.849 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_6_1575401125773/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_6_1575401125773/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.java]]
[MASTER] 19:25:25.849 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:25:25.849 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:25:25.853 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 19:25:25.853 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 19:25:25.853 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 19:25:25.853 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 19:25:25.854 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 19:25:25.854 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 19:25:25.854 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 19:25:25.855 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_6_1575401125773/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 19:25:25 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.AbstractClassifier;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_6_tmp__ESTest extends NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.063983366979555
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
31:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
32:       naiveBayesMultinomialText0.periodicPruningTipText();
33:       Integer integer0 = new Integer(1494);
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
35:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
36:       Integer.getInteger("");
37:       Integer.divideUnsigned(1494, 1494);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       linkedHashMap0.put((Integer) null, linkedHashMap2);
40:       naiveBayesMultinomialText0.setLowercaseTokens(true);
41:       naiveBayesMultinomialText0.listOptions();
42:       String[] stringArray0 = new String[5];
43:       stringArray0[0] = "";
44:       stringArray0[1] = "";
45:       stringArray0[2] = "";
46:       stringArray0[3] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
47:       stringArray0[4] = "";
48:       try { 
49:         AbstractClassifier.forName("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", stringArray0);
50:         fail("Expecting exception: Exception");
51:       
52:       } catch(Exception e) {
53:          //
54:          // Can't find class called: How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances
55:          //
56:          verifyException("weka.core.Utils", e);
57:       }
58:   }
59: }
RegularFileObject[/tmp/EvoSuite_6_1575401125773/weka/classifiers/bayes/NaiveBayesMultinomialText_6_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 19:25:25 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.classifiers.rules.part.C45PruneableDecList",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.CoverTree$DistanceNode",
103:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.attributeSelection.CfsSubsetEval",
106:       "weka.core.DenseInstance",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.BinarySparseInstance",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.AttributeLocator",
134:       "weka.classifiers.functions.supportVector.CachedKernel",
135:       "weka.core.SerializedObject",
136:       "weka.clusterers.UpdateableClusterer",
137:       "weka.core.Summarizable",
138:       "weka.classifiers.trees.j48.ModelSelection",
139:       "weka.core.AdditionalMeasureProducer",
140:       "weka.core.neighboursearch.balltrees.BallNode",
141:       "org.pentaho.packageManagement.PackageManager$1",
142:       "weka.core.Drawable",
143:       "weka.core.matrix.Matrix",
144:       "weka.core.CapabilitiesHandler",
145:       "weka.classifiers.rules.part.ClassifierDecList",
146:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
147:       "weka.attributeSelection.ASEvaluation",
148:       "weka.core.AbstractInstance",
149:       "weka.core.scripting.JythonObject",
150:       "weka.core.SelectedTag",
151:       "org.pentaho.packageManagement.DefaultPackage",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.filters.StreamableFilter",
163:       "weka.core.Range",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
165:       "weka.core.scripting.JythonSerializableObject",
166:       "weka.classifiers.Classifier",
167:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
168:       "weka.core.Capabilities$Capability",
169:       "weka.core.SparseInstance",
170:       "org.pentaho.packageManagement.PackageManager",
171:       "weka.estimators.PoissonEstimator",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.classifiers.misc.SerializedClassifier",
175:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
176:       "weka.attributeSelection.PrincipalComponents",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
179:       "weka.classifiers.functions.VotedPerceptron",
180:       "weka.core.stemmers.LovinsStemmer",
181:       "weka.classifiers.Evaluation",
182:       "weka.classifiers.functions.supportVector.Kernel",
183:       "weka.core.WekaPackageManager",
184:       "weka.filters.SupervisedFilter",
185:       "weka.core.TechnicalInformationHandler",
186:       "weka.core.neighboursearch.LinearNNSearch",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.filters.Sourcable",
192:       "weka.core.Attribute",
193:       "weka.core.Stopwords",
194:       "weka.core.FastVector",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.tokenizers.NGramTokenizer",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.classifiers.rules.part.MakeDecList",
202:       "weka.classifiers.functions.supportVector.PolyKernel",
203:       "weka.core.ProtectedProperties",
204:       "weka.estimators.Estimator",
205:       "weka.core.StringLocator",
206:       "weka.core.AttributeStats",
207:       "weka.core.WeightedInstancesHandler",
208:       "weka.core.neighboursearch.NearestNeighbourSearch",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.classifiers.rules.part.PruneableDecList",
217:       "weka.core.UnassignedClassException",
218:       "weka.classifiers.rules.ZeroR",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.Stemming",
223:       "weka.core.TechnicalInformation",
224:       "weka.core.UnsupportedAttributeTypeException",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_6_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.Option",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.misc.InputMappedClassifier",
251:       "weka.classifiers.rules.ZeroR",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.core.AbstractInstance",
254:       "weka.core.SparseInstance",
255:       "weka.core.BinarySparseInstance",
256:       "weka.core.stemmers.LovinsStemmer",
257:       "weka.core.stemmers.IteratedLovinsStemmer",
258:       "weka.classifiers.Evaluation",
259:       "weka.core.Utils",
260:       "weka.core.stemmers.SnowballStemmer",
261:       "weka.core.UnassignedDatasetException",
262:       "weka.core.RevisionUtils",
263:       "weka.core.Capabilities",
264:       "org.pentaho.packageManagement.PackageManager",
265:       "org.pentaho.packageManagement.DefaultPackageManager",
266:       "weka.core.Version",
267:       "weka.core.Environment",
268:       "weka.core.WekaPackageManager",
269:       "weka.core.stemmers.Stemming",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
272:       "weka.core.Tag",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.core.DenseInstance",
281:       "weka.classifiers.RandomizableClassifier",
282:       "weka.classifiers.functions.SGDText",
283:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
284:       "weka.classifiers.meta.CostSensitiveClassifier",
285:       "weka.classifiers.CostMatrix",
286:       "weka.filters.Filter",
287:       "weka.core.Instances",
288:       "weka.classifiers.functions.supportVector.Kernel",
289:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
290:       "weka.core.SerializedObject",
291:       "weka.core.TestInstances",
292:       "weka.core.neighboursearch.NearestNeighbourSearch",
293:       "weka.core.neighboursearch.CoverTree",
294:       "weka.core.NormalizableDistance",
295:       "weka.core.EuclideanDistance",
296:       "weka.core.Range",
297:       "weka.classifiers.bayes.NaiveBayesMultinomial",
298:       "weka.core.ListOptions",
299:       "weka.core.ProtectedProperties",
300:       "weka.core.Attribute",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.classifiers.functions.SimpleLogistic",
304:       "weka.core.Stopwords",
305:       "weka.classifiers.misc.SerializedClassifier",
306:       "weka.core.SerializationHelper",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.MultiScheme",
310:       "weka.core.WekaException",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.tokenizers.NGramTokenizer",
314:       "weka.core.FindWithCapabilities",
315:       "weka.core.SingleIndex",
316:       "weka.core.TechnicalInformation",
317:       "weka.core.TechnicalInformation$Type",
318:       "weka.core.TechnicalInformation$Field",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.WekaEnumeration",
322:       "weka.core.Attribute$1",
323:       "weka.classifiers.bayes.net.BIFReader",
324:       "weka.classifiers.trees.m5.M5Base",
325:       "weka.classifiers.rules.M5Rules",
326:       "weka.classifiers.functions.LinearRegression",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.core.neighboursearch.KDTree",
330:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
331:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
332:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
334:       "weka.classifiers.bayes.NaiveBayes",
335:       "weka.classifiers.rules.PART",
336:       "weka.classifiers.rules.part.MakeDecList",
337:       "weka.core.UnsupportedAttributeTypeException",
338:       "weka.classifiers.trees.RandomForest",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.classifiers.functions.SMOreg",
341:       "weka.classifiers.functions.supportVector.RegOptimizer",
342:       "weka.classifiers.functions.supportVector.RegSMO",
343:       "weka.classifiers.functions.supportVector.RegSMOImproved",
344:       "weka.classifiers.functions.supportVector.CachedKernel",
345:       "weka.classifiers.functions.supportVector.PolyKernel",
346:       "weka.classifiers.meta.Vote",
347:       "weka.classifiers.functions.VotedPerceptron",
348:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
349:       "weka.classifiers.IteratedSingleClassifierEnhancer",
350:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.meta.RandomSubSpace",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.functions.SGD",
355:       "weka.estimators.Estimator",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.core.UnassignedClassException",
358:       "weka.filters.SimpleFilter",
359:       "weka.filters.SimpleStreamFilter",
360:       "weka.filters.MultiFilter",
361:       "weka.filters.AllFilter",
362:       "weka.classifiers.rules.JRip"
363:     );
364:   }
365: }

[MASTER] 19:25:25.856 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.periodicPruningTipText();
Integer integer0 = new Integer(1494);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
Integer.getInteger("");
Integer.divideUnsigned(1494, 1494);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap2 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put((Integer) null, linkedHashMap2);
naiveBayesMultinomialText0.setLowercaseTokens(true);
naiveBayesMultinomialText0.listOptions();
String[] stringArray0 = new String[5];
stringArray0[0] = "";
stringArray0[1] = "";
stringArray0[2] = "";
stringArray0[3] = "How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances";
stringArray0[4] = "";
AbstractClassifier.forName("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", stringArray0);

[MASTER] 19:25:27.454 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1575401127420/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1575401127420/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.java]]
[MASTER] 19:25:27.454 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:25:27.455 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:25:27.455 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 19:25:27.455 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 19:25:27.455 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 19:25:27.457 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1575401127420/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 19:25:27 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.NullStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_36_tmp__ESTest extends NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=1.5271837172395382
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.getLowercaseTokens();
30:       String[] stringArray0 = new String[4];
31:       stringArray0[0] = "";
32:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       NullStemmer nullStemmer0 = (NullStemmer)naiveBayesMultinomialText0.m_stemmer;
34:       naiveBayesMultinomialText0.setStemmer(nullStemmer0);
35:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
36:       stringArray0[1] = ".~u/y b(1<1,";
37:       stringArray0[2] = "6]AST@<sj,jHrR\"+8AP";
38:       try { 
39:         Integer.valueOf("-J");
40:         fail("Expecting exception: NumberFormatException");
41:       
42:       } catch(NumberFormatException e) {
43:          //
44:          // For input string: \"-J\"
45:          //
46:          verifyException("java.lang.NumberFormatException", e);
47:       }
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_36_1575401127420/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 19:25:27 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.classifiers.rules.part.C45PruneableDecList",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.CoverTree$DistanceNode",
103:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.attributeSelection.CfsSubsetEval",
106:       "weka.core.DenseInstance",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.BinarySparseInstance",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.AttributeLocator",
134:       "weka.classifiers.functions.supportVector.CachedKernel",
135:       "weka.core.SerializedObject",
136:       "weka.clusterers.UpdateableClusterer",
137:       "weka.core.Summarizable",
138:       "weka.classifiers.trees.j48.ModelSelection",
139:       "weka.core.AdditionalMeasureProducer",
140:       "weka.core.neighboursearch.balltrees.BallNode",
141:       "org.pentaho.packageManagement.PackageManager$1",
142:       "weka.core.Drawable",
143:       "weka.core.matrix.Matrix",
144:       "weka.core.CapabilitiesHandler",
145:       "weka.classifiers.rules.part.ClassifierDecList",
146:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
147:       "weka.attributeSelection.ASEvaluation",
148:       "weka.core.AbstractInstance",
149:       "weka.core.scripting.JythonObject",
150:       "weka.core.SelectedTag",
151:       "org.pentaho.packageManagement.DefaultPackage",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.filters.StreamableFilter",
163:       "weka.core.Range",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
165:       "weka.core.scripting.JythonSerializableObject",
166:       "weka.classifiers.Classifier",
167:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
168:       "weka.core.Capabilities$Capability",
169:       "weka.core.SparseInstance",
170:       "org.pentaho.packageManagement.PackageManager",
171:       "weka.estimators.PoissonEstimator",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.classifiers.misc.SerializedClassifier",
175:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
176:       "weka.attributeSelection.PrincipalComponents",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
179:       "weka.classifiers.functions.VotedPerceptron",
180:       "weka.core.stemmers.LovinsStemmer",
181:       "weka.classifiers.Evaluation",
182:       "weka.classifiers.functions.supportVector.Kernel",
183:       "weka.core.WekaPackageManager",
184:       "weka.filters.SupervisedFilter",
185:       "weka.core.TechnicalInformationHandler",
186:       "weka.core.neighboursearch.LinearNNSearch",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.filters.Sourcable",
192:       "weka.core.Attribute",
193:       "weka.core.Stopwords",
194:       "weka.core.FastVector",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.tokenizers.NGramTokenizer",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.classifiers.rules.part.MakeDecList",
202:       "weka.classifiers.functions.supportVector.PolyKernel",
203:       "weka.core.ProtectedProperties",
204:       "weka.estimators.Estimator",
205:       "weka.core.StringLocator",
206:       "weka.core.AttributeStats",
207:       "weka.core.WeightedInstancesHandler",
208:       "weka.core.neighboursearch.NearestNeighbourSearch",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.classifiers.rules.part.PruneableDecList",
217:       "weka.core.UnassignedClassException",
218:       "weka.classifiers.rules.ZeroR",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.Stemming",
223:       "weka.core.TechnicalInformation",
224:       "weka.core.UnsupportedAttributeTypeException",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.Option",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.misc.InputMappedClassifier",
251:       "weka.classifiers.rules.ZeroR",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.core.AbstractInstance",
254:       "weka.core.SparseInstance",
255:       "weka.core.BinarySparseInstance",
256:       "weka.core.stemmers.LovinsStemmer",
257:       "weka.core.stemmers.IteratedLovinsStemmer",
258:       "weka.classifiers.Evaluation",
259:       "weka.core.Utils",
260:       "weka.core.stemmers.SnowballStemmer",
261:       "weka.core.UnassignedDatasetException",
262:       "weka.core.RevisionUtils",
263:       "weka.core.Capabilities",
264:       "org.pentaho.packageManagement.PackageManager",
265:       "org.pentaho.packageManagement.DefaultPackageManager",
266:       "weka.core.Version",
267:       "weka.core.Environment",
268:       "weka.core.WekaPackageManager",
269:       "weka.core.stemmers.Stemming",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
272:       "weka.core.Tag",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.core.DenseInstance",
281:       "weka.classifiers.RandomizableClassifier",
282:       "weka.classifiers.functions.SGDText",
283:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
284:       "weka.classifiers.meta.CostSensitiveClassifier",
285:       "weka.classifiers.CostMatrix",
286:       "weka.filters.Filter",
287:       "weka.core.Instances",
288:       "weka.classifiers.functions.supportVector.Kernel",
289:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
290:       "weka.core.SerializedObject",
291:       "weka.core.TestInstances",
292:       "weka.core.neighboursearch.NearestNeighbourSearch",
293:       "weka.core.neighboursearch.CoverTree",
294:       "weka.core.NormalizableDistance",
295:       "weka.core.EuclideanDistance",
296:       "weka.core.Range",
297:       "weka.classifiers.bayes.NaiveBayesMultinomial",
298:       "weka.core.ListOptions",
299:       "weka.core.ProtectedProperties",
300:       "weka.core.Attribute",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.classifiers.functions.SimpleLogistic",
304:       "weka.core.Stopwords",
305:       "weka.classifiers.misc.SerializedClassifier",
306:       "weka.core.SerializationHelper",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.MultiScheme",
310:       "weka.core.WekaException",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.tokenizers.NGramTokenizer",
314:       "weka.core.FindWithCapabilities",
315:       "weka.core.SingleIndex",
316:       "weka.core.TechnicalInformation",
317:       "weka.core.TechnicalInformation$Type",
318:       "weka.core.TechnicalInformation$Field",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.WekaEnumeration",
322:       "weka.core.Attribute$1",
323:       "weka.classifiers.bayes.net.BIFReader",
324:       "weka.classifiers.trees.m5.M5Base",
325:       "weka.classifiers.rules.M5Rules",
326:       "weka.classifiers.functions.LinearRegression",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.core.neighboursearch.KDTree",
330:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
331:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
332:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
334:       "weka.classifiers.bayes.NaiveBayes",
335:       "weka.classifiers.rules.PART",
336:       "weka.classifiers.rules.part.MakeDecList",
337:       "weka.core.UnsupportedAttributeTypeException",
338:       "weka.classifiers.trees.RandomForest",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.classifiers.functions.SMOreg",
341:       "weka.classifiers.functions.supportVector.RegOptimizer",
342:       "weka.classifiers.functions.supportVector.RegSMO",
343:       "weka.classifiers.functions.supportVector.RegSMOImproved",
344:       "weka.classifiers.functions.supportVector.CachedKernel",
345:       "weka.classifiers.functions.supportVector.PolyKernel",
346:       "weka.classifiers.meta.Vote",
347:       "weka.classifiers.functions.VotedPerceptron",
348:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
349:       "weka.classifiers.IteratedSingleClassifierEnhancer",
350:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.meta.RandomSubSpace",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.functions.SGD",
355:       "weka.estimators.Estimator",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.core.UnassignedClassException",
358:       "weka.filters.SimpleFilter",
359:       "weka.filters.SimpleStreamFilter",
360:       "weka.filters.MultiFilter",
361:       "weka.filters.AllFilter",
362:       "weka.classifiers.rules.JRip"
363:     );
364:   }
365: }

[MASTER] 19:25:27.458 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.getLowercaseTokens();
String[] stringArray0 = new String[4];
stringArray0[0] = "";
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NullStemmer nullStemmer0 = (NullStemmer)naiveBayesMultinomialText0.m_stemmer;
naiveBayesMultinomialText0.setStemmer(nullStemmer0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
stringArray0[1] = ".~u/y b(1<1,";
stringArray0[2] = "6]AST@<sj,jHrR\"+8AP";
Integer.valueOf("-J");

[MASTER] 19:25:27.645 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1575401127613/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1575401127613/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 19:25:27.645 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:25:27.645 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 19:25:27.645 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 19:25:27.645 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 19:25:27.645 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 19:25:27.645 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 19:25:27.645 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 19:25:27.646 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 19:25:27.647 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1575401127613/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 19:25:27 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.Random;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Instance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.830738805564335
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       naiveBayesMultinomialText0.m_useStopList = false;
31:       naiveBayesMultinomialText0.setUseStopList(false);
32:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
34:       naiveBayesMultinomialText0.m_useStopList = true;
35:       naiveBayesMultinomialText0.stemmerTipText();
36:       Integer integer0 = new Integer(7);
37:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
38:       linkedHashMap0.put(integer0, linkedHashMap1);
39:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
40:       try { 
41:         naiveBayesMultinomialText0.updateClassifier((Instance) null, false);
42:         fail("Expecting exception: NullPointerException");
43:       
44:       } catch(NullPointerException e) {
45:          //
46:          // no message in exception (getMessage() returned null)
47:          //
48:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
49:       }
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_41_1575401127613/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 19:25:27 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.classifiers.rules.part.C45PruneableDecList",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.attributeSelection.SubsetEvaluator",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
101:       "weka.classifiers.rules.PART",
102:       "weka.core.neighboursearch.CoverTree$DistanceNode",
103:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
104:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
105:       "weka.attributeSelection.CfsSubsetEval",
106:       "weka.core.DenseInstance",
107:       "weka.core.stemmers.Stemmer",
108:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.estimators.IncrementalEstimator",
113:       "weka.estimators.Estimator$Builder",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.classifiers.trees.j48.C45ModelSelection",
117:       "weka.core.EnvironmentHandler",
118:       "weka.classifiers.functions.SGDText",
119:       "weka.core.RelationalLocator",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.MultiInstanceCapabilitiesHandler",
129:       "weka.core.Copyable",
130:       "weka.core.Capabilities",
131:       "weka.core.BinarySparseInstance",
132:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
133:       "weka.core.AttributeLocator",
134:       "weka.classifiers.functions.supportVector.CachedKernel",
135:       "weka.core.SerializedObject",
136:       "weka.clusterers.UpdateableClusterer",
137:       "weka.core.Summarizable",
138:       "weka.classifiers.trees.j48.ModelSelection",
139:       "weka.core.AdditionalMeasureProducer",
140:       "weka.core.neighboursearch.balltrees.BallNode",
141:       "org.pentaho.packageManagement.PackageManager$1",
142:       "weka.core.Drawable",
143:       "weka.core.matrix.Matrix",
144:       "weka.core.CapabilitiesHandler",
145:       "weka.classifiers.rules.part.ClassifierDecList",
146:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
147:       "weka.attributeSelection.ASEvaluation",
148:       "weka.core.AbstractInstance",
149:       "weka.core.scripting.JythonObject",
150:       "weka.core.SelectedTag",
151:       "org.pentaho.packageManagement.DefaultPackage",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.core.Tag",
155:       "weka.classifiers.trees.j48.BinC45ModelSelection",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.filters.StreamableFilter",
163:       "weka.core.Range",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
165:       "weka.core.scripting.JythonSerializableObject",
166:       "weka.classifiers.Classifier",
167:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
168:       "weka.core.Capabilities$Capability",
169:       "weka.core.SparseInstance",
170:       "org.pentaho.packageManagement.PackageManager",
171:       "weka.estimators.PoissonEstimator",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.classifiers.misc.SerializedClassifier",
175:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
176:       "weka.attributeSelection.PrincipalComponents",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
179:       "weka.classifiers.functions.VotedPerceptron",
180:       "weka.core.stemmers.LovinsStemmer",
181:       "weka.classifiers.Evaluation",
182:       "weka.classifiers.functions.supportVector.Kernel",
183:       "weka.core.WekaPackageManager",
184:       "weka.filters.SupervisedFilter",
185:       "weka.core.TechnicalInformationHandler",
186:       "weka.core.neighboursearch.LinearNNSearch",
187:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.filters.Sourcable",
192:       "weka.core.Attribute",
193:       "weka.core.Stopwords",
194:       "weka.core.FastVector",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.tokenizers.NGramTokenizer",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.classifiers.rules.part.MakeDecList",
202:       "weka.classifiers.functions.supportVector.PolyKernel",
203:       "weka.core.ProtectedProperties",
204:       "weka.estimators.Estimator",
205:       "weka.core.StringLocator",
206:       "weka.core.AttributeStats",
207:       "weka.core.WeightedInstancesHandler",
208:       "weka.core.neighboursearch.NearestNeighbourSearch",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.classifiers.rules.part.PruneableDecList",
217:       "weka.core.UnassignedClassException",
218:       "weka.classifiers.rules.ZeroR",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.Stemming",
223:       "weka.core.TechnicalInformation",
224:       "weka.core.UnsupportedAttributeTypeException",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.Option",
249:       "weka.classifiers.SingleClassifierEnhancer",
250:       "weka.classifiers.misc.InputMappedClassifier",
251:       "weka.classifiers.rules.ZeroR",
252:       "weka.core.neighboursearch.balltrees.BallNode",
253:       "weka.core.AbstractInstance",
254:       "weka.core.SparseInstance",
255:       "weka.core.BinarySparseInstance",
256:       "weka.core.stemmers.LovinsStemmer",
257:       "weka.core.stemmers.IteratedLovinsStemmer",
258:       "weka.classifiers.Evaluation",
259:       "weka.core.Utils",
260:       "weka.core.stemmers.SnowballStemmer",
261:       "weka.core.UnassignedDatasetException",
262:       "weka.core.RevisionUtils",
263:       "weka.core.Capabilities",
264:       "org.pentaho.packageManagement.PackageManager",
265:       "org.pentaho.packageManagement.DefaultPackageManager",
266:       "weka.core.Version",
267:       "weka.core.Environment",
268:       "weka.core.WekaPackageManager",
269:       "weka.core.stemmers.Stemming",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
272:       "weka.core.Tag",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.attributeSelection.ASEvaluation",
278:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
279:       "weka.attributeSelection.PrincipalComponents",
280:       "weka.core.DenseInstance",
281:       "weka.classifiers.RandomizableClassifier",
282:       "weka.classifiers.functions.SGDText",
283:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
284:       "weka.classifiers.meta.CostSensitiveClassifier",
285:       "weka.classifiers.CostMatrix",
286:       "weka.filters.Filter",
287:       "weka.core.Instances",
288:       "weka.classifiers.functions.supportVector.Kernel",
289:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
290:       "weka.core.SerializedObject",
291:       "weka.core.TestInstances",
292:       "weka.core.neighboursearch.NearestNeighbourSearch",
293:       "weka.core.neighboursearch.CoverTree",
294:       "weka.core.NormalizableDistance",
295:       "weka.core.EuclideanDistance",
296:       "weka.core.Range",
297:       "weka.classifiers.bayes.NaiveBayesMultinomial",
298:       "weka.core.ListOptions",
299:       "weka.core.ProtectedProperties",
300:       "weka.core.Attribute",
301:       "weka.classifiers.lazy.IBk",
302:       "weka.core.neighboursearch.LinearNNSearch",
303:       "weka.classifiers.functions.SimpleLogistic",
304:       "weka.core.Stopwords",
305:       "weka.classifiers.misc.SerializedClassifier",
306:       "weka.core.SerializationHelper",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.MultiScheme",
310:       "weka.core.WekaException",
311:       "weka.filters.supervised.attribute.Discretize",
312:       "weka.core.converters.ArffLoader$ArffReader",
313:       "weka.core.tokenizers.NGramTokenizer",
314:       "weka.core.FindWithCapabilities",
315:       "weka.core.SingleIndex",
316:       "weka.core.TechnicalInformation",
317:       "weka.core.TechnicalInformation$Type",
318:       "weka.core.TechnicalInformation$Field",
319:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
320:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
321:       "weka.core.WekaEnumeration",
322:       "weka.core.Attribute$1",
323:       "weka.classifiers.bayes.net.BIFReader",
324:       "weka.classifiers.trees.m5.M5Base",
325:       "weka.classifiers.rules.M5Rules",
326:       "weka.classifiers.functions.LinearRegression",
327:       "weka.classifiers.meta.CVParameterSelection",
328:       "weka.core.FastVector",
329:       "weka.core.neighboursearch.KDTree",
330:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
331:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
332:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
333:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
334:       "weka.classifiers.bayes.NaiveBayes",
335:       "weka.classifiers.rules.PART",
336:       "weka.classifiers.rules.part.MakeDecList",
337:       "weka.core.UnsupportedAttributeTypeException",
338:       "weka.classifiers.trees.RandomForest",
339:       "weka.attributeSelection.CfsSubsetEval",
340:       "weka.classifiers.functions.SMOreg",
341:       "weka.classifiers.functions.supportVector.RegOptimizer",
342:       "weka.classifiers.functions.supportVector.RegSMO",
343:       "weka.classifiers.functions.supportVector.RegSMOImproved",
344:       "weka.classifiers.functions.supportVector.CachedKernel",
345:       "weka.classifiers.functions.supportVector.PolyKernel",
346:       "weka.classifiers.meta.Vote",
347:       "weka.classifiers.functions.VotedPerceptron",
348:       "weka.classifiers.functions.supportVector.NormalizedPolyKernel",
349:       "weka.classifiers.IteratedSingleClassifierEnhancer",
350:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
351:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
352:       "weka.classifiers.meta.RandomSubSpace",
353:       "weka.classifiers.trees.REPTree",
354:       "weka.classifiers.functions.SGD",
355:       "weka.estimators.Estimator",
356:       "weka.estimators.PoissonEstimator",
357:       "weka.core.UnassignedClassException",
358:       "weka.filters.SimpleFilter",
359:       "weka.filters.SimpleStreamFilter",
360:       "weka.filters.MultiFilter",
361:       "weka.filters.AllFilter",
362:       "weka.classifiers.rules.JRip"
363:     );
364:   }
365: }

[MASTER] 19:25:27.647 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = false;
naiveBayesMultinomialText0.setUseStopList(false);
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.m_useStopList = true;
naiveBayesMultinomialText0.stemmerTipText();
Integer integer0 = new Integer(7);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.put(integer0, linkedHashMap1);
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.updateClassifier((Instance) null, false);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 19696
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:26:12.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:26:12.762 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:26:12.762 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:26:12.812 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1007
* Starting evolution
* Search finished after 129s and 3 generations, 4133 statements, best individual has fitness: 6424.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 647
* Number of covered goals: 567
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 441
* Number of covered goals: 343
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 70%
* Total number of goals: 678
* Number of covered goals: 475
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 244
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 124
* Number of covered goals: 85
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 124
* Number of covered goals: 85
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 441
* Number of covered goals: 290
* Generated 53 tests with total length 1539
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1007/107_weka/evosuite-tests
* Done!

* Computation finished
