* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: Newzgrabber.Base64Decoder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/99_newzgrabber/evosuite-files/evosuite.properties
* Connecting to master process on port 14954
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:54:53.360 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:54:53.366 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:54:53.367 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:54:55.400 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:54:55.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:54:55.445 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:55:01.483 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:55:01.657 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:55:01.684 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:55:01.686 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:55:01.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:55:01.689 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:55:01.695 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:55:01.699 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:55:01.710 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:55:02.016 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class Newzgrabber.Base64Decoder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/99_newzgrabber/src/main/java/Newzgrabber/Base64Decoder.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1000
* Starting evolution
[MASTER] 13:55:15.341 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V: Line 13
[MASTER] 13:55:15.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V: Line 10
[MASTER] 13:55:15.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V: Line 14
[MASTER] 13:55:15.345 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V: Line 15
[MASTER] 13:55:15.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V: Line 16
[MASTER] 13:55:15.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.decodeStream()V: Line 20
[MASTER] 13:55:15.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.decodeStream()V: Line 21
[MASTER] 13:55:15.346 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.decodeStream()V: Line 23
[MASTER] 13:55:15.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 0: Newzgrabber.Base64Decoder.decodeStream()V:21 - InsertUnaryOp Negation
[MASTER] 13:55:15.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1: Newzgrabber.Base64Decoder.decodeStream()V:21 - ReplaceComparisonOperator == -> !=
[MASTER] 13:55:15.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] Newzgrabber.Base64Decoder.<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V
[MASTER] 13:55:15.348 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] Newzgrabber.Base64Decoder.decodeStream()V
[MASTER] 13:55:15.348 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] Newzgrabber.Base64Decoder.<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V
[MASTER] 13:55:15.348 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] Newzgrabber.Base64Decoder.decodeStream()V
[MASTER] 13:55:15.348 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch Newzgrabber.Base64Decoder.<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V: root-Branch in context: Newzgrabber.Base64Decoder:<init>(LNewzgrabber/BufferedCustomInputStream;Ljava/io/OutputStream;)V
[MASTER] 13:55:15.348 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch Newzgrabber.Base64Decoder.decodeStream()V: I7 Branch 1 IFEQ L21 - true in context: Newzgrabber.Base64Decoder:decodeStream()V
[MASTER] 13:55:35.335 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 122s and 37 generations, 29331 statements, best individual has fitness: 768.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 76
* Number of covered goals: 38
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 59
* Number of covered goals: 33
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 1
* Number of covered goals: 1
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 69
* Number of covered goals: 63
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 56%
* Total number of goals: 59
* Number of covered goals: 33
* Generated 7 tests with total length 119
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 13:57:20.906 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-9975> but was:<-9973>
[MASTER] 13:57:20.907 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockPrintStream mockPrintStream0 = new MockPrintStream("gH|");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "|94p");
Object object0 = new Object();
FileSystemHandling.appendStringToFile(evoSuiteFile0, "Th?L[%&N%w4g'O~R5");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "979.926gH|");
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("gH|");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder0.decodeStream();
base64Decoder0.setOutputStream(mockPrintStream0);
assertEquals((-9975), mockFileInputStream0.available());
assertEquals(2L, base64Decoder0.getLineCount());


[MASTER] 13:57:21.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-19975> but was:<-19974>
[MASTER] 13:57:21.194 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockPrintStream mockPrintStream0 = new MockPrintStream("gH|");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "|94!");
Object object0 = new Object();
FileSystemHandling.appendStringToFile(evoSuiteFile0, "Th?L[%&N%w4g'O~R5");
mockPrintStream0.println();
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9'9.926gH|");
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("gH|");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
Object[] objectArray0 = new Object[7];
objectArray0[0] = (Object) null;
objectArray0[1] = (Object) "9'9.926gH|";
objectArray0[2] = (Object) mockPrintStream0;
Object object1 = new Object();
objectArray0[3] = object1;
objectArray0[4] = (Object) "gH|";
objectArray0[5] = (Object) evoSuiteFile0;
objectArray0[6] = (Object) bufferedCustomInputStream0;
mockPrintStream0.printf("gH|", objectArray0);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
assertEquals((-19975), mockFileInputStream0.available());
assertEquals(2L, base64Decoder0.getLineCount());


[MASTER] 13:57:21.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-29987> but was:<-29985>
[MASTER] 13:57:21.495 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockPrintStream mockPrintStream0 = new MockPrintStream("gH|");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "gH|");
Object object0 = new Object();
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("gH|");
FileSystemHandling.appendStringToFile(evoSuiteFile1, "gH|");
FileSystemHandling.appendStringToFile(evoSuiteFile1, "gH|");
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("gH|");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, true);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder0.setBegin(true);
char[] charArray0 = new char[6];
charArray0[0] = 'f';
charArray0[1] = 'o';
charArray0[2] = 'p';
charArray0[3] = 'f';
charArray0[4] = '8';
char[] charArray1 = new char[2];
charArray1[0] = 'f';
charArray1[1] = '8';
mockPrintStream0.println(charArray1);
charArray0[5] = 'f';
mockPrintStream0.println(charArray0);
base64Decoder0.decodeStream();
Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder1.decodeStream();
base64Decoder1.decodeStream();
assertEquals((-29987), mockFileInputStream0.available());


[MASTER] 13:57:21.636 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-9975> but was:<-9973>
[MASTER] 13:57:21.637 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockPrintStream mockPrintStream0 = new MockPrintStream("gH|");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "|94!");
Object object0 = new Object();
FileSystemHandling.appendStringToFile(evoSuiteFile0, "Th?L[%&N%w4g'O~R5");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9'9.926gH|");
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("gH|");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder0.decodeStream();
base64Decoder0.setOutputStream(mockPrintStream0);
assertEquals((-9975), mockFileInputStream0.available());
assertEquals(2L, base64Decoder0.getLineCount());


[MASTER] 13:57:21.934 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-59981> but was:<-59979>
[MASTER] 13:57:21.935 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockPrintStream mockPrintStream0 = new MockPrintStream("gH|");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("gH|");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "|94p");
Object object0 = new Object();
mockPrintStream0.println(25L);
FileSystemHandling.appendStringToFile(evoSuiteFile0, "ThEL[%&N%g'O~R5");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "979.926gH|");
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("gH|");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
mockPrintStream0.append('@');
base64Decoder0.decodeStream();
base64Decoder0.setOutputStream(mockPrintStream0);
Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder0.decodeStream();
base64Decoder2.decodeStream();
assertEquals((-59981), mockFileInputStream0.available());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 20
* Writing JUnit test case 'Base64Decoder_ESTest' to /home/ubuntu/termite/qmosa/tests/s1000/99_newzgrabber/evosuite-tests
* Done!

* Computation finished
