* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21350
* Connecting to master process on port 21353
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:13:01.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:13:01.391 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:13:01.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:13:01.430 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:13:01.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:13:01.478 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:13:01.647 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:13:01.662 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:13:01.664 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:13:01.665 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:13:01.667 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:13:01.668 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:13:01.669 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:13:01.673 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:13:01.675 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/assembly/consed/phd/PhdBuilder.java
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:13:03.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:13:03.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:13:03.997 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 21:13:03.998 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 21:13:03.999 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 21:13:04.178 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:13:04.179 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/Range.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 21:14:02.881 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 536
[MASTER] 21:14:02.913 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1499
[MASTER] 21:14:02.913 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1502
[MASTER] 21:14:02.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1505
[MASTER] 21:14:02.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1506
[MASTER] 21:14:02.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.<init>(IJ)V: Line 1713
[MASTER] 21:14:02.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.<init>(IJ)V: Line 1714
[MASTER] 21:14:02.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.<init>(IJ)V: Line 1715
[MASTER] 21:14:02.917 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.<init>(IJ)V: Line 1716
[MASTER] 21:14:02.918 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getLength()J: Line 1720
[MASTER] 21:14:02.919 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getBegin()J: Line 1733
[MASTER] 21:14:02.920 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J: Line 1744
[MASTER] 21:14:02.984 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:535 - ReplaceComparisonOperator > -> !=
[MASTER] 21:14:02.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 21:14:02.992 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 578: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> !=
[MASTER] 21:14:02.996 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 597: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> %
[MASTER] 21:14:03.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1086: org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z:1499 - ReplaceComparisonOperator != -> ==
[MASTER] 21:14:03.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1088: org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z:1502 - ReplaceComparisonOperator != null -> = null
[MASTER] 21:14:03.015 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1090: org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z:1505 - ReplaceComparisonOperator == -> !=
[MASTER] 21:14:03.025 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1285: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J:1744 - ReplaceArithmeticOperator + -> %
[MASTER] 21:14:03.026 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1286: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J:1744 - ReplaceArithmeticOperator + -> -
[MASTER] 21:14:03.027 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1287: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J:1744 - ReplaceArithmeticOperator + -> *
[MASTER] 21:14:03.028 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1288: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J:1744 - ReplaceArithmeticOperator + -> /
[MASTER] 21:14:03.029 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1292: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J:1744 - ReplaceArithmeticOperator - -> +
[MASTER] 21:14:03.030 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1293: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J:1744 - ReplaceArithmeticOperator - -> %
[MASTER] 21:14:03.031 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1294: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J:1744 - ReplaceArithmeticOperator - -> *
[MASTER] 21:14:03.032 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1295: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J:1744 - ReplaceArithmeticOperator - -> /
[MASTER] 21:14:03.107 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I4 Branch 88 IF_ACMPNE L1499 - true in context: 
[MASTER] 21:14:03.114 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I12 Branch 89 IFNONNULL L1502 - true in context: 
[MASTER] 21:14:03.119 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 21:14:03.125 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I80 Branch 22 IFGT L535 - false in context: 
[MASTER] 21:14:03.128 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 21:14:03.131 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I23 Branch 90 IF_ACMPEQ L1505 - false in context: 
[MASTER] 21:14:03.134 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getLength()J: root-Branch in context: 
[MASTER] 21:14:25.016 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: Line 542
[MASTER] 21:14:25.050 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.<init>(JJ)V: Line 1887
[MASTER] 21:14:25.051 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.<init>(JJ)V: Line 1888
[MASTER] 21:14:25.052 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.<init>(JJ)V: Line 1889
[MASTER] 21:14:25.052 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.<init>(JJ)V: Line 1890
[MASTER] 21:14:25.053 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getLength()J: Line 1894
[MASTER] 21:14:25.054 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getBegin()J: Line 1907
[MASTER] 21:14:25.055 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J: Line 1918
[MASTER] 21:14:25.074 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 326: org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;:541 - ReplaceComparisonOperator > -> !=
[MASTER] 21:14:25.090 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1465: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator + -> %
[MASTER] 21:14:25.091 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1466: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator + -> -
[MASTER] 21:14:25.093 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1467: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator + -> *
[MASTER] 21:14:25.094 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1468: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator + -> /
[MASTER] 21:14:25.095 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1472: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator - -> +
[MASTER] 21:14:25.095 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1473: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator - -> %
[MASTER] 21:14:25.096 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1474: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator - -> *
[MASTER] 21:14:25.097 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1475: org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J:1918 - ReplaceArithmeticOperator - -> /
[MASTER] 21:14:25.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getBegin()J: root-Branch in context: 
[MASTER] 21:14:25.199 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getLength()J: root-Branch in context: 
[MASTER] 21:14:25.213 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J: root-Branch in context: 
[MASTER] 21:14:35.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I42 Branch 149 IFLE L2553 - false in context: org.jcvi.jillion.core.Range$Builder:build()Lorg/jcvi/jillion/core/Range;
[MASTER] 21:14:35.303 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I57 Branch 150 IFGE L2555 - true in context: org.jcvi.jillion.core.Range$Builder:build()Lorg/jcvi/jillion/core/Range;
[MASTER] 21:14:35.312 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I112 Branch 24 IFGT L541 - false in context: 
* Search finished after 121s and 78 generations, 51461 statements, best individual has fitness: 240.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 93
* Number of covered goals: 86
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 27
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 47
* Number of covered goals: 43
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 27
* Number of covered goals: 22
* Generated 18 tests with total length 318
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
* Search finished after 126s and 8 generations, 6032 statements, best individual has fitness: 10408.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 632
* Number of covered goals: 345
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 426
* Number of covered goals: 225
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 45%
* Total number of goals: 802
* Number of covered goals: 363
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 77
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 52%
* Total number of goals: 426
* Number of covered goals: 223
* Generated 70 tests with total length 1250
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 21:16:34.763 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 21:16:34.764 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder();
Range range0 = range_Builder0.build();
range_Builder0.build();
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
long long0 = range0.getEnd(range_CoordinateSystem0);
assertEquals(1L, long0);

range_Builder0.expandEnd((-1217L));
range_Builder0.contractEnd((-1217L));
range_Builder0.copy();
Range.CoordinateSystem range_CoordinateSystem1 = Range.CoordinateSystem.SPACE_BASED;
range_Builder0.expandEnd(319L);
Range range1 = Range.of(range_CoordinateSystem1, (-2742L), 0L);
assertFalse(range1.isEmpty());


[MASTER] 21:16:35.492 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<0>
[MASTER] 21:16:35.492 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range.Builder range_Builder0 = new Range.Builder(1L, 1L);
range_Builder0.expandBegin(0L);
range_Builder0.shift(0L);
range_Builder0.expandEnd(1L);
Range range0 = Range.of(0L);
List<Range> list0 = range0.split(1L);
List<Range> list1 = range0.complementFrom(list0);
List<Range> list2 = range0.complementFrom(list1);
assertEquals(2, list2.size());
assertFalse(list2.contains(range0));
assertTrue(list0.contains(range0));


[MASTER] 21:16:35.677 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775808 would make range [263 - ? ] beyond max allowed end offset
[MASTER] 21:16:35.677 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(2147483647L);
range0.getEnd();
LinkedList<Range> linkedList0 = new LinkedList<Range>();
linkedList0.add(range0);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
Range.Builder range_Builder0 = new Range.Builder();
range_Builder0.contractBegin((-2493L));
Range range1 = Range.ofLength(0L);
range1.equals(range_CoordinateSystem0);
Range range2 = Range.of(2876L, 4294967295L);
range1.isSubRangeOf(range2);
Range.CoordinateSystem.values();
range_Builder0.shift((-2743L));
Range.CoordinateSystem.values();
range_Builder0.contractBegin(263L);
range2.getBegin();
List<Range> list0 = range1.split(2420L);
range2.getLength();
range1.complementFrom(list0);
Range.of(263L, (-9223372036854775808L));

[MASTER] 21:16:37.210 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 21:16:37.211 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(2147483647L);
long long0 = range0.getEnd();
assertEquals(2147483646L, long0);

LinkedList<Range> linkedList0 = new LinkedList<Range>();
linkedList0.add(range0);
Range.Builder range_Builder0 = new Range.Builder(1036L, 2147483647L);
Range.Builder range_Builder1 = new Range.Builder(range_Builder0);
range_Builder0.shift((-1L));
range_Builder1.expandEnd((-1L));
Range range1 = Range.of(1036L);
List<Range> list0 = new LinkedList<Range>();
List<Range> list1 = range0.complementFrom(linkedList0);
Range range2 = Range.ofLength(396L);
boolean boolean0 = range1.intersects(range0);
assertTrue(boolean0);

List<Range> list2 = range2.complementFrom(list0);
range0.complementFrom(list2);
List<Range> list3 = range1.complementFrom(list1);
assertEquals(1, list3.size());
assertFalse(list3.contains(range0));
assertEquals(1, list1.size());

boolean boolean1 = range1.isSubRangeOf(range0);
assertTrue(boolean1);


[MASTER] 21:16:38.894 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 21:16:38.895 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(2147483647L);
long long0 = range0.getEnd();
assertEquals(2147483646L, long0);

LinkedList<Range> linkedList0 = new LinkedList<Range>();
linkedList0.add(range0);
Range.Builder range_Builder0 = new Range.Builder(1022L, 2147483647L);
Range.Builder range_Builder1 = range_Builder0.expandBegin(0L);
range_Builder0.shift((-1L));
range_Builder1.expandEnd((-1L));
Range range1 = Range.of(1022L);
List<Range> list0 = range1.split(324L);
assertTrue(list0.contains(range1));

List<Range> list1 = range0.complementFrom(linkedList0);
assertEquals(1, list1.size());

Range range2 = Range.ofLength(2805L);
range1.intersects(range2);
List<Range> list2 = range0.complementFrom(list0);
assertEquals(1, list2.size());

List<Range> list3 = range1.complementFrom(linkedList0);
assertEquals(2, list3.size());


* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21349
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:23:52.058 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:23:52.170 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:23:52.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:23:52.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/residue/nt/DefaultNucleotideCodec.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 21:23:55.385 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 21:23:55.385 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 21:24:17.292 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 23 generations, 14563 statements, best individual has fitness: 672.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 131
* Number of covered goals: 126
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 74
* Number of covered goals: 68
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 469
* Number of covered goals: 444
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 52
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 74
* Number of covered goals: 56
* Generated 68 tests with total length 1146
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 21352
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:48:38.209 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:48:38.479 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:48:38.482 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:48:38.523 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/util/FileIterator.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
* Search finished after 122s and 33 generations, 36822 statements, best individual has fitness: 704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 107
* Number of covered goals: 101
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 67
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 53
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 74
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 67
* Number of covered goals: 60
* Generated 24 tests with total length 570
* Resulting test suite's coverage: 79% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
