* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/102_squirrel-sql/evosuite-files/evosuite.properties
* Connecting to master process on port 10010
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:49:12.686 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 16:49:13.094 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:49:13.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:49:13.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:49:14.015 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:49:14.016 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:49:14.045 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:49:15.226 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 16:49:15.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 16:49:15.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 16:49:17.337 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 16:49:17.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 16:49:17.368 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 16:49:17.369 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 16:49:17.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 16:49:17.376 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 16:49:18.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 16:49:21.374 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/102_squirrel-sql/src/main/java/net/sourceforge/squirrel_sql/plugins/dbcopy/util/DBUtil.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1004
* Starting evolution
* Search finished after 123s and 70 generations, 46888 statements, best individual has fitness: 18632.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 15%
* Total number of goals: 792
* Number of covered goals: 117
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 12%
* Total number of goals: 463
* Number of covered goals: 55
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 22%
* Total number of goals: 906
* Number of covered goals: 199
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 122
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 85%
* Total number of goals: 48
* Number of covered goals: 41
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 85%
* Total number of goals: 48
* Number of covered goals: 41
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 12%
* Total number of goals: 463
* Number of covered goals: 55
* Generated 72 tests with total length 884
* Resulting test suite's coverage: 19% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 16:52:34.323 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<...f5c76:16eccaa3466:-7[d47]> but was:<...f5c76:16eccaa3466:-7[c4a]>
[MASTER] 16:52:34.324 [logback-1] WARN  JUnitAnalyzer - Failing test:
 UidIdentifier uidIdentifier0 = new UidIdentifier();
SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
assertEquals("-43cf5c76:16eccaa3466:-7d47", uidIdentifier0.toString());

SQLDriver sQLDriver1 = new SQLDriver();
DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
defaultListCellRenderer0.setRequestFocusEnabled(false);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter("%external");
mockPrintWriter0.print('j');
MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
defaultListCellRenderer0.list((PrintWriter) mockPrintWriter1, (-266));
DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
Icon icon0 = defaultTreeCellRenderer0.getLeafIcon();
DatabaseObjectType.createNewDatabaseObjectType("%external", icon0);
Icon icon1 = defaultTreeCellRenderer0.getDefaultLeafIcon();
DatabaseObjectType.createNewDatabaseObjectType("Skipping FK (", icon1);
TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Skipping FK (", "destTableName", "Skipping FK (", (String) null, 1685, "n~:2`%Cf)ifO", 1024, 10022, (-9999), (-266), "a~h.F.2G3", "%external", 1685, (-9999), " ( ");
DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
dBCopyPlugin0.getPluginUserSettingsFolder();
boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
assertFalse(boolean0);


[MASTER] 16:52:38.341 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<...f5c76:16eccaa3466:-7[d10]> but was:<...f5c76:16eccaa3466:-7[c42]>
[MASTER] 16:52:38.341 [logback-1] WARN  JUnitAnalyzer - Failing test:
 UidIdentifier uidIdentifier0 = new UidIdentifier();
uidIdentifier0.setString("getCatSep: Unexpected Exception - ");
UidIdentifier uidIdentifier1 = new UidIdentifier();
assertEquals("-43cf5c76:16eccaa3466:-7d10", uidIdentifier1.toString());

uidIdentifier1.setString("getCatSep: Unexpected Exception - ");
uidIdentifier1.setString("Skipping FK (");
uidIdentifier1.setString("getCatSep: Unexpected Exception - ");
uidIdentifier1.setString("Skipping FK (");
uidIdentifier0.setString("S.pu5Z");
uidIdentifier1.setString("2cW.?cYh3");
TableColumnInfo tableColumnInfo0 = new TableColumnInfo("1dC", "Skipping FK (", "09&{W:.O%Or2r^gDx", "09&{W:.O%Or2r^gDx", 2003, "N^VD>jrQ/^zfa|RM", 2003, (-2127413704), 2003, 2003, "org.jfree.data.general.SeriesChangeEvent", " AND VIEW_NAME = ", 2003, (-2127413704), "\n");
DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
dBCopyPlugin0.getSourceSession();
int int0 = DBUtil.replaceDistinctDataType(2003, tableColumnInfo0, (ISession) null);
assertEquals(2003, int0);


* Writing JUnit test case 'DBUtil_ESTest' to /home/ubuntu/termite/qmosa/tests/s1004/102_squirrel-sql/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: net.sourceforge.squirrel_sql.client.session.Session
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/102_squirrel-sql/evosuite-files/evosuite.properties
* Connecting to master process on port 10009
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:27:57.448 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:27:57.449 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:27:57.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:28:05.625 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:28:05.626 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:28:05.792 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:28:08.976 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 17:28:09.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 17:28:09.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 17:28:09.397 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 17:28:09.398 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 17:28:09.399 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 17:28:09.400 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 17:28:09.401 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 17:28:09.403 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 17:28:09.598 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 17:28:09.700 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class net.sourceforge.squirrel_sql.client.session.Session
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/102_squirrel-sql/src/main/java/net/sourceforge/squirrel_sql/client/session/Session.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1004
* Starting evolution
[MASTER] 17:28:15.041 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 17:28:15.075 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.JComboBox<E> : Type points to itself
[MASTER] 17:28:15.092 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.JList<E> : Type points to itself
* Search finished after 121s and 59 generations, 50642 statements, best individual has fitness: 10616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 4%
* Total number of goals: 396
* Number of covered goals: 15
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 0%
* Total number of goals: 204
* Number of covered goals: 1
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 1
* Number of covered goals: 1
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 0%
* Total number of goals: 258
* Number of covered goals: 0
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 165
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 2%
* Total number of goals: 59
* Number of covered goals: 1
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 2%
* Total number of goals: 59
* Number of covered goals: 1
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 0%
* Total number of goals: 204
* Number of covered goals: 1
* Generated 1 tests with total length 16
* Resulting test suite's coverage: 1% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
* Writing JUnit test case 'Session_ESTest' to /home/ubuntu/termite/qmosa/tests/s1004/102_squirrel-sql/evosuite-tests
* Done!

* Computation finished
