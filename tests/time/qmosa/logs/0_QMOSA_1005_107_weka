* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14213
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14215
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:36:52.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:36:52.969 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:36:52.971 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:36:53.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:36:53.266 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:36:53.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
[MASTER] 17:36:56.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:36:56.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:36:56.799 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 17:36:58.958 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:36:59.655 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:36:59.657 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 17:37:40.062 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 122s and 40 generations, 31670 statements, best individual has fitness: 9376.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 370
* Number of covered goals: 148
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 59
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
[MASTER] 17:39:01.495 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.setConsequent(D)V
[MASTER] 17:39:01.505 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.setConsequent(D)V
[MASTER] 17:39:01.509 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.setConsequent(D)V: root-Branch in context: weka.classifiers.rules.JRip$RipperRule:setConsequent(D)V
* Coverage of criterion WEAKMUTATION: 26%
* Total number of goals: 713
* Number of covered goals: 185
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 72
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 59
* Generated 42 tests with total length 703
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 16 generations, 13282 statements, best individual has fitness: 14056.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 705
* Number of covered goals: 226
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 92
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 45%
* Total number of goals: 993
* Number of covered goals: 447
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 91
* Generated 47 tests with total length 894
* Resulting test suite's coverage: 37% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 17:40:41.934 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:40:42.501 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 17:40:55.883 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 17:40:55.884 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JRip jRip0 = new JRip();
JRip.RipperRule jRip_RipperRule0 = jRip0.new RipperRule();
jRip_RipperRule0.hasAntds();
jRip0.listOptions();
double double0 = (-1.0);
jRip_RipperRule0.setConsequent((-1.0));
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t*5#R\"Tw#1_Mv=+");
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
jRip0.toString();
jRip0.toString();
SparseInstance sparseInstance0 = new SparseInstance(1073741824);

* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14215
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14217
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:41:29.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:41:29.109 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:41:29.111 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:41:29.139 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:41:29.162 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:41:29.163 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1005
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:41:47.457 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.updateClassifier(Lweka/core/Instance;)V
[MASTER] 17:41:49.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 17:41:49.011 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 17:41:49.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 17:41:49.045 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 252: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - ReplaceVariable m_wordFrequencies -> m_normalize
[MASTER] 17:41:49.051 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 17:41:49.052 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 17:41:49.055 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 17:41:49.058 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 17:41:49.061 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 17:41:49.063 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 17:41:50.295 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:41:50.298 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:41:50.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:41:51.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:41:52.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:41:52.343 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:41:55.206 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 17:41:55.252 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 17:41:55.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 17:41:55.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 17:41:55.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 17:41:55.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 17:41:55.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 17:41:55.258 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 17:41:55.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 17:41:55.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 17:41:55.481 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
[MASTER] 17:41:59.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 208
[MASTER] 17:41:59.680 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 209
[MASTER] 17:41:59.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 212
[MASTER] 17:41:59.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 213
[MASTER] 17:41:59.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 214
[MASTER] 17:41:59.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 215
[MASTER] 17:41:59.684 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 216
[MASTER] 17:41:59.685 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 218
[MASTER] 17:41:59.695 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 219
[MASTER] 17:41:59.696 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 222
[MASTER] 17:41:59.697 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 224
[MASTER] 17:41:59.701 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: root-Branch
[MASTER] 17:41:59.709 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:222 - ReplaceConstant - 0 -> 1
[MASTER] 17:41:59.717 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:getMinimumNumberInstances()I:Zero
[MASTER] 17:41:59.718 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:hasDependencies()Z:False
[MASTER] 17:41:59.721 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;
[MASTER] 17:41:59.725 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;
[MASTER] 17:41:59.726 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getCapabilities()Lweka/core/Capabilities;
* Using seed 1005
* Starting evolution
[MASTER] 17:42:02.457 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 17:42:19.056 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:42:21.225 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 17:43:00.555 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 17:43:00.555 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 21 generations, 17897 statements, best individual has fitness: 3576.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 338
* Number of covered goals: 239
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 194
* Number of covered goals: 117
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 476
* Number of covered goals: 343
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 112
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 194
* Number of covered goals: 115
* Generated 50 tests with total length 877
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 13 generations, 8926 statements, best individual has fitness: 19568.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 48%
* Total number of goals: 1378
* Number of covered goals: 667
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 809
* Number of covered goals: 261
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 424
* Number of covered goals: 195
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 12%
* Total number of goals: 278
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 67%
* Total number of goals: 103
* Number of covered goals: 69
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 66%
* Total number of goals: 103
* Number of covered goals: 68
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 809
* Number of covered goals: 189
* Generated 65 tests with total length 1248
* Resulting test suite's coverage: 38% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 17:48:43.799 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 17:48:44.404 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 17:48:44.404 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 17:48:45.236 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 17:50:58.121 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_12_1575395458068/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_12_1575395458068/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.java]]
[MASTER] 17:50:58.121 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:50:58.121 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:50:58.125 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 17:50:58.125 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 17:50:58.126 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_12_1575395458068/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 17:50:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.mock.java.io.MockFile;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_12_tmp__ESTest extends NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.939792811164566
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
29:       naiveBayesMultinomialText0.getCapabilities();
30:       linkedHashMap0.entrySet();
31:       naiveBayesMultinomialText0.setLowercaseTokens(true);
32:       double[] doubleArray0 = new double[2];
33:       naiveBayesMultinomialText0.m_minWordP = 4223.2208867;
34:       doubleArray0[0] = 0.0;
35:       MockFile mockFile0 = new MockFile("weka/core/Capabilities.props", "weka/core/Capabilities.props");
36:       mockFile0.setReadOnly();
37:       mockFile0.toPath();
38:       naiveBayesMultinomialText0.setStopwords(mockFile0);
39:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
40:       mockFile0.delete();
41:       naiveBayesMultinomialText0.useStopListTipText();
42:       naiveBayesMultinomialText0.tokenizerTipText();
43:       naiveBayesMultinomialText0.setStopwords(mockFile0);
44:       naiveBayesMultinomialText0.LNormTipText();
45:       naiveBayesMultinomialText0.getStopwords();
46:       naiveBayesMultinomialText0.stemmerTipText();
47:       naiveBayesMultinomialText0.globalInfo();
48:       naiveBayesMultinomialText0.lowercaseTokensTipText();
49:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_12_1575395458068/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 17:50:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.filters.unsupervised.instance.RemoveWithValues",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
125:       "weka.core.Copyable",
126:       "weka.core.Capabilities",
127:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
128:       "weka.core.BinarySparseInstance",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.AttributeLocator",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.classifiers.meta.MultiClassClassifier",
138:       "weka.core.Drawable",
139:       "weka.core.Optimization",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.core.neighboursearch.balltrees.BallSplitter",
148:       "weka.core.Version",
149:       "weka.classifiers.meta.MultiClassClassifier$Code",
150:       "weka.filters.unsupervised.attribute.RemoveUseless",
151:       "weka.core.Tag",
152:       "weka.classifiers.AbstractClassifier",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.core.stemmers.SnowballStemmer",
167:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
168:       "weka.core.stemmers.LovinsStemmer",
169:       "weka.classifiers.Evaluation",
170:       "weka.classifiers.functions.supportVector.Kernel",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.classifiers.meta.CostSensitiveClassifier",
177:       "weka.core.Option",
178:       "weka.core.neighboursearch.PerformanceStats",
179:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
180:       "weka.filters.Sourcable",
181:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.tokenizers.AlphabeticTokenizer",
185:       "weka.core.FastVector",
186:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
187:       "weka.core.UnassignedDatasetException",
188:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.StringLocator",
195:       "weka.core.AttributeStats",
196:       "weka.core.WeightedInstancesHandler",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.core.Randomizable",
199:       "weka.classifiers.functions.SGD",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.UnsupportedAttributeTypeException",
205:       "weka.core.TechnicalInformation",
206:       "weka.classifiers.Sourcable",
207:       "weka.classifiers.functions.Logistic$OptEngCG",
208:       "weka.classifiers.functions.Logistic$OptEng",
209:       "weka.core.RevisionHandler",
210:       "weka.classifiers.evaluation.output.prediction.PlainText",
211:       "weka.core.neighboursearch.TreePerformanceStats",
212:       "weka.core.xml.XMLSerialization",
213:       "weka.filters.unsupervised.attribute.MakeIndicator",
214:       "weka.classifiers.xml.XMLClassifier",
215:       "weka.filters.Filter",
216:       "weka.filters.supervised.attribute.Discretize"
217:     );
218:   } 
219: 
220:   private static void resetClasses() {
221:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.class.getClassLoader()); 
222: 
223:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
224:       "weka.classifiers.AbstractClassifier",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
227:       "weka.core.Capabilities$Capability",
228:       "weka.core.tokenizers.Tokenizer",
229:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
230:       "weka.core.tokenizers.WordTokenizer",
231:       "weka.core.stemmers.NullStemmer",
232:       "weka.core.Stopwords",
233:       "weka.core.Utils",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
242:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
243:       "weka.core.SerializedObject",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.DenseInstance",
246:       "weka.core.UnassignedDatasetException",
247:       "weka.classifiers.RandomizableClassifier",
248:       "weka.core.Tag",
249:       "weka.classifiers.functions.SGDText",
250:       "weka.core.Option",
251:       "weka.core.RevisionUtils",
252:       "weka.classifiers.SingleClassifierEnhancer",
253:       "weka.classifiers.IteratedSingleClassifierEnhancer",
254:       "weka.classifiers.meta.AdditiveRegression",
255:       "weka.classifiers.trees.DecisionStump",
256:       "weka.classifiers.rules.ZeroR",
257:       "weka.core.Capabilities",
258:       "org.pentaho.packageManagement.PackageManager",
259:       "org.pentaho.packageManagement.DefaultPackageManager",
260:       "weka.core.Version",
261:       "weka.core.Environment",
262:       "weka.core.WekaPackageManager",
263:       "weka.core.TestInstances",
264:       "weka.classifiers.Evaluation",
265:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
266:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.core.stemmers.SnowballStemmer",
269:       "weka.attributeSelection.ASEvaluation",
270:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
271:       "weka.attributeSelection.PrincipalComponents",
272:       "weka.core.stemmers.LovinsStemmer",
273:       "weka.core.stemmers.IteratedLovinsStemmer",
274:       "weka.core.neighboursearch.KDTree",
275:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
276:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.filters.Filter",
279:       "weka.filters.supervised.attribute.Discretize",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.TechnicalInformation",
282:       "weka.core.TechnicalInformation$Type",
283:       "weka.core.TechnicalInformation$Field",
284:       "weka.core.tokenizers.AlphabeticTokenizer",
285:       "weka.core.Instances",
286:       "weka.core.Attribute",
287:       "weka.core.ProtectedProperties",
288:       "weka.classifiers.functions.supportVector.Kernel",
289:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
290:       "weka.classifiers.bayes.BayesNet",
291:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
293:       "weka.classifiers.bayes.net.search.local.K2",
294:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
295:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
296:       "weka.classifiers.bayes.net.BIFReader",
297:       "weka.classifiers.meta.RegressionByDiscretization",
298:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
299:       "weka.filters.unsupervised.attribute.Discretize",
300:       "weka.classifiers.trees.J48",
301:       "weka.classifiers.trees.j48.ClassifierTree",
302:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
303:       "weka.core.WekaEnumeration",
304:       "weka.core.Attribute$1",
305:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
306:       "weka.classifiers.lazy.LWL",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.MultiScheme",
310:       "weka.estimators.Estimator",
311:       "weka.estimators.NormalEstimator",
312:       "weka.filters.AllFilter",
313:       "weka.classifiers.meta.AttributeSelectedClassifier",
314:       "weka.attributeSelection.CfsSubsetEval",
315:       "weka.attributeSelection.ASSearch",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.neighboursearch.CoverTree",
318:       "weka.core.WekaException",
319:       "weka.core.tokenizers.NGramTokenizer",
320:       "weka.classifiers.functions.Logistic",
321:       "weka.classifiers.functions.LinearRegression",
322:       "weka.core.neighboursearch.BallTree",
323:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
324:       "weka.core.neighboursearch.balltrees.BallSplitter",
325:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
326:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
327:       "weka.classifiers.meta.AdaBoostM1",
328:       "weka.classifiers.lazy.IBk",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.bayes.NaiveBayesMultinomial",
331:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
332:       "weka.core.AttributeStats",
333:       "weka.experiment.Stats",
334:       "weka.core.FindWithCapabilities",
335:       "weka.core.SingleIndex",
336:       "weka.attributeSelection.AttributeSelection",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.CostMatrix",
340:       "weka.classifiers.misc.SerializedClassifier",
341:       "weka.classifiers.functions.GaussianProcesses",
342:       "weka.classifiers.functions.supportVector.CachedKernel",
343:       "weka.classifiers.functions.supportVector.PolyKernel",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.classifiers.trees.RandomForest",
347:       "weka.classifiers.trees.RandomTree",
348:       "weka.classifiers.functions.MultilayerPerceptron",
349:       "weka.core.FastVector",
350:       "weka.filters.unsupervised.attribute.NominalToBinary",
351:       "weka.classifiers.functions.neural.SigmoidUnit",
352:       "weka.classifiers.functions.neural.LinearUnit",
353:       "weka.classifiers.meta.MultiClassClassifier",
354:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
355:       "weka.core.UnassignedClassException"
356:     );
357:   }
358: }

[MASTER] 17:50:58.127 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.getCapabilities();
linkedHashMap0.entrySet();
naiveBayesMultinomialText0.setLowercaseTokens(true);
double[] doubleArray0 = new double[2];
naiveBayesMultinomialText0.m_minWordP = 4223.2208867;
doubleArray0[0] = 0.0;
MockFile mockFile0 = new MockFile("weka/core/Capabilities.props", "weka/core/Capabilities.props");
mockFile0.setReadOnly();
mockFile0.toPath();
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
mockFile0.delete();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.lowercaseTokensTipText();
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());


[MASTER] 17:50:58.346 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_17_1575395458310/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_17_1575395458310/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.java]]
[MASTER] 17:50:58.346 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:50:58.346 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 17:50:58.346 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 17:50:58.346 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 17:50:58.347 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_17_1575395458310/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 17:50:58 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.BinarySparseInstance;
19: import weka.core.DenseInstance;
20: import weka.core.SparseInstance;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_17_tmp__ESTest extends NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.819452311800251
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
33:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
34:       linkedHashMap0.entrySet();
35:       naiveBayesMultinomialText0.setLowercaseTokens(true);
36:       double[] doubleArray0 = new double[2];
37:       naiveBayesMultinomialText0.m_minWordP = 4223.2208867;
38:       doubleArray0[0] = 0.0;
39:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
40:       naiveBayesMultinomialText0.getOptions();
41:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
42:       FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
43:       doubleArray0[1] = 2271.8608890835;
44:       naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
45:       naiveBayesMultinomialText0.getLowercaseTokens();
46:       SparseInstance sparseInstance0 = new SparseInstance(0.0, naiveBayesMultinomialText0.m_probOfClass);
47:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
48:       DenseInstance denseInstance0 = new DenseInstance(6);
49:       // Undeclared exception!
50:       try { 
51:         naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, true);
52:         fail("Expecting exception: RuntimeException");
53:       
54:       } catch(RuntimeException e) {
55:          //
56:          // DenseInstance doesn't have access to a dataset!
57:          //
58:          verifyException("weka.core.AbstractInstance", e);
59:       }
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_17_1575395458310/weka/classifiers/bayes/NaiveBayesMultinomialText_17_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 17:50:58 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.ConjugateGradientOptimization",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.meta.MultiClassClassifier$RandomCode",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.classifiers.functions.Logistic",
114:       "weka.core.RelationalLocator",
115:       "weka.core.Utils",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.filters.unsupervised.instance.RemoveWithValues",
119:       "weka.core.NormalizableDistance",
120:       "weka.core.NoSupportForMissingValuesException",
121:       "weka.classifiers.UpdateableClassifier",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.classifiers.meta.MultiClassClassifier$ExhaustiveCode",
125:       "weka.core.Copyable",
126:       "weka.core.Capabilities",
127:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
128:       "weka.core.BinarySparseInstance",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.AttributeLocator",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.classifiers.meta.MultiClassClassifier",
138:       "weka.core.Drawable",
139:       "weka.core.Optimization",
140:       "weka.core.matrix.Matrix",
141:       "weka.core.CapabilitiesHandler",
142:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.core.neighboursearch.balltrees.BallSplitter",
148:       "weka.core.Version",
149:       "weka.classifiers.meta.MultiClassClassifier$Code",
150:       "weka.filters.unsupervised.attribute.RemoveUseless",
151:       "weka.core.Tag",
152:       "weka.classifiers.AbstractClassifier",
153:       "weka.core.OptionHandler",
154:       "weka.core.WekaException",
155:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
156:       "weka.filters.StreamableFilter",
157:       "weka.core.Range",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.Capabilities$Capability",
161:       "weka.core.SparseInstance",
162:       "org.pentaho.packageManagement.PackageManager",
163:       "weka.core.tokenizers.WordTokenizer",
164:       "weka.classifiers.misc.SerializedClassifier",
165:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
166:       "weka.core.stemmers.SnowballStemmer",
167:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
168:       "weka.core.stemmers.LovinsStemmer",
169:       "weka.classifiers.Evaluation",
170:       "weka.classifiers.functions.supportVector.Kernel",
171:       "weka.core.WekaPackageManager",
172:       "weka.filters.SupervisedFilter",
173:       "weka.core.TechnicalInformationHandler",
174:       "weka.core.neighboursearch.LinearNNSearch",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.classifiers.meta.CostSensitiveClassifier",
177:       "weka.core.Option",
178:       "weka.core.neighboursearch.PerformanceStats",
179:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
180:       "weka.filters.Sourcable",
181:       "weka.classifiers.meta.MultiClassClassifier$StandardCode",
182:       "weka.core.Attribute",
183:       "weka.core.Stopwords",
184:       "weka.core.tokenizers.AlphabeticTokenizer",
185:       "weka.core.FastVector",
186:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
187:       "weka.core.UnassignedDatasetException",
188:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
189:       "weka.classifiers.RandomizableClassifier",
190:       "weka.classifiers.SingleClassifierEnhancer",
191:       "weka.core.RevisionUtils",
192:       "weka.core.Instance",
193:       "weka.core.ProtectedProperties",
194:       "weka.core.StringLocator",
195:       "weka.core.AttributeStats",
196:       "weka.core.WeightedInstancesHandler",
197:       "weka.core.neighboursearch.NearestNeighbourSearch",
198:       "weka.core.Randomizable",
199:       "weka.classifiers.functions.SGD",
200:       "weka.core.EuclideanDistance",
201:       "weka.core.Instances",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.core.UnsupportedAttributeTypeException",
205:       "weka.core.TechnicalInformation",
206:       "weka.classifiers.Sourcable",
207:       "weka.classifiers.functions.Logistic$OptEngCG",
208:       "weka.classifiers.functions.Logistic$OptEng",
209:       "weka.core.RevisionHandler",
210:       "weka.classifiers.evaluation.output.prediction.PlainText",
211:       "weka.core.neighboursearch.TreePerformanceStats",
212:       "weka.core.xml.XMLSerialization",
213:       "weka.filters.unsupervised.attribute.MakeIndicator",
214:       "weka.classifiers.xml.XMLClassifier",
215:       "weka.filters.Filter",
216:       "weka.filters.supervised.attribute.Discretize"
217:     );
218:   } 
219: 
220:   private static void resetClasses() {
221:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_17_tmp__ESTest_scaffolding.class.getClassLoader()); 
222: 
223:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
224:       "weka.classifiers.AbstractClassifier",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
227:       "weka.core.Capabilities$Capability",
228:       "weka.core.tokenizers.Tokenizer",
229:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
230:       "weka.core.tokenizers.WordTokenizer",
231:       "weka.core.stemmers.NullStemmer",
232:       "weka.core.Stopwords",
233:       "weka.core.Utils",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.AbstractInstance",
240:       "weka.core.SparseInstance",
241:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
242:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
243:       "weka.core.SerializedObject",
244:       "weka.core.BinarySparseInstance",
245:       "weka.core.DenseInstance",
246:       "weka.core.UnassignedDatasetException",
247:       "weka.classifiers.RandomizableClassifier",
248:       "weka.core.Tag",
249:       "weka.classifiers.functions.SGDText",
250:       "weka.core.Option",
251:       "weka.core.RevisionUtils",
252:       "weka.classifiers.SingleClassifierEnhancer",
253:       "weka.classifiers.IteratedSingleClassifierEnhancer",
254:       "weka.classifiers.meta.AdditiveRegression",
255:       "weka.classifiers.trees.DecisionStump",
256:       "weka.classifiers.rules.ZeroR",
257:       "weka.core.Capabilities",
258:       "org.pentaho.packageManagement.PackageManager",
259:       "org.pentaho.packageManagement.DefaultPackageManager",
260:       "weka.core.Version",
261:       "weka.core.Environment",
262:       "weka.core.WekaPackageManager",
263:       "weka.core.TestInstances",
264:       "weka.classifiers.Evaluation",
265:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
266:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
267:       "weka.core.neighboursearch.balltrees.BallNode",
268:       "weka.core.stemmers.SnowballStemmer",
269:       "weka.attributeSelection.ASEvaluation",
270:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
271:       "weka.attributeSelection.PrincipalComponents",
272:       "weka.core.stemmers.LovinsStemmer",
273:       "weka.core.stemmers.IteratedLovinsStemmer",
274:       "weka.core.neighboursearch.KDTree",
275:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
276:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
277:       "weka.classifiers.misc.InputMappedClassifier",
278:       "weka.filters.Filter",
279:       "weka.filters.supervised.attribute.Discretize",
280:       "weka.classifiers.bayes.NaiveBayes",
281:       "weka.core.TechnicalInformation",
282:       "weka.core.TechnicalInformation$Type",
283:       "weka.core.TechnicalInformation$Field",
284:       "weka.core.tokenizers.AlphabeticTokenizer",
285:       "weka.core.Instances",
286:       "weka.core.Attribute",
287:       "weka.core.ProtectedProperties",
288:       "weka.classifiers.functions.supportVector.Kernel",
289:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
290:       "weka.classifiers.bayes.BayesNet",
291:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
292:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
293:       "weka.classifiers.bayes.net.search.local.K2",
294:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
295:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
296:       "weka.classifiers.bayes.net.BIFReader",
297:       "weka.classifiers.meta.RegressionByDiscretization",
298:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
299:       "weka.filters.unsupervised.attribute.Discretize",
300:       "weka.classifiers.trees.J48",
301:       "weka.classifiers.trees.j48.ClassifierTree",
302:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
303:       "weka.core.WekaEnumeration",
304:       "weka.core.Attribute$1",
305:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
306:       "weka.classifiers.lazy.LWL",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.MultiScheme",
310:       "weka.estimators.Estimator",
311:       "weka.estimators.NormalEstimator",
312:       "weka.filters.AllFilter",
313:       "weka.classifiers.meta.AttributeSelectedClassifier",
314:       "weka.attributeSelection.CfsSubsetEval",
315:       "weka.attributeSelection.ASSearch",
316:       "weka.attributeSelection.BestFirst",
317:       "weka.core.neighboursearch.CoverTree",
318:       "weka.core.WekaException",
319:       "weka.core.tokenizers.NGramTokenizer",
320:       "weka.classifiers.functions.Logistic",
321:       "weka.classifiers.functions.LinearRegression",
322:       "weka.core.neighboursearch.BallTree",
323:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
324:       "weka.core.neighboursearch.balltrees.BallSplitter",
325:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
326:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
327:       "weka.classifiers.meta.AdaBoostM1",
328:       "weka.classifiers.lazy.IBk",
329:       "weka.core.converters.ArffLoader$ArffReader",
330:       "weka.classifiers.bayes.NaiveBayesMultinomial",
331:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
332:       "weka.core.AttributeStats",
333:       "weka.experiment.Stats",
334:       "weka.core.FindWithCapabilities",
335:       "weka.core.SingleIndex",
336:       "weka.attributeSelection.AttributeSelection",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.CostMatrix",
340:       "weka.classifiers.misc.SerializedClassifier",
341:       "weka.classifiers.functions.GaussianProcesses",
342:       "weka.classifiers.functions.supportVector.CachedKernel",
343:       "weka.classifiers.functions.supportVector.PolyKernel",
344:       "weka.core.SelectedTag",
345:       "weka.classifiers.rules.OneR",
346:       "weka.classifiers.trees.RandomForest",
347:       "weka.classifiers.trees.RandomTree",
348:       "weka.classifiers.functions.MultilayerPerceptron",
349:       "weka.core.FastVector",
350:       "weka.filters.unsupervised.attribute.NominalToBinary",
351:       "weka.classifiers.functions.neural.SigmoidUnit",
352:       "weka.classifiers.functions.neural.LinearUnit",
353:       "weka.classifiers.meta.MultiClassClassifier",
354:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
355:       "weka.core.UnassignedClassException"
356:     );
357:   }
358: }

[MASTER] 17:50:58.348 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
linkedHashMap0.entrySet();
naiveBayesMultinomialText0.setLowercaseTokens(true);
double[] doubleArray0 = new double[2];
naiveBayesMultinomialText0.m_minWordP = 4223.2208867;
doubleArray0[0] = 0.0;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.getOptions();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/107_weka");
FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
doubleArray0[1] = 2271.8608890835;
naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
naiveBayesMultinomialText0.getLowercaseTokens();
SparseInstance sparseInstance0 = new SparseInstance(0.0, naiveBayesMultinomialText0.m_probOfClass);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
DenseInstance denseInstance0 = new DenseInstance(6);
naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, true);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14209
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1005
* Starting evolution
* Search finished after 124s and 12 generations, 14746 statements, best individual has fitness: 3960.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 217
* Number of covered goals: 170
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 428
* Number of covered goals: 235
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 260
* Number of covered goals: 211
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 428
* Number of covered goals: 232
* Generated 43 tests with total length 774
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 67%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14210
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14214
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:56:42.153 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:56:42.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:56:42.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:56:42.271 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1005
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:56:48.468 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:56:48.493 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:56:48.494 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:56:48.501 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1005
* Starting evolution
[MASTER] 17:56:53.284 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 17:57:10.694 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 492: weka.core.Optimization.solveTriangle(Lweka/core/matrix/Matrix;[DZ[Z)[D:1127 - ReplaceArithmeticOperator / -> %
[MASTER] 17:58:23.748 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:58:23.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 123s and 37 generations, 34071 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 13 tests with total length 277
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 131s and 3 generations, 3862 statements, best individual has fitness: 6096.0
[MASTER] 17:58:58.074 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 12 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 647
* Number of covered goals: 577
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 441
* Number of covered goals: 343
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 678
* Number of covered goals: 510
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 244
* Number of covered goals: 60
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 68%
* Total number of goals: 124
* Number of covered goals: 84
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 68%
* Total number of goals: 124
* Number of covered goals: 84
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 441
* Number of covered goals: 287
* Generated 55 tests with total length 1400
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 17%
[MASTER] 18:07:05.355 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1005/107_weka/evosuite-tests
* Done!

* Computation finished
