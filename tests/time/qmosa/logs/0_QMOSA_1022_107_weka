* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5238
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5244
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:04:31.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:04:31.232 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:04:31.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:04:31.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:04:50.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:04:50.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:04:50.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:04:50.943 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:04:51.823 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:04:51.824 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:04:54.561 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 06:04:54.623 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 06:04:54.623 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 06:04:54.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 06:04:54.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 06:04:54.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 06:04:54.625 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 06:04:54.626 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 06:04:54.637 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 06:04:54.773 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 06:04:54.796 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 06:05:08.304 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 06:05:38.579 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;
[MASTER] 06:05:38.581 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.makeDistribution(D)[D
[MASTER] 06:05:38.594 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.equals(Ljava/lang/Object;)Z
[MASTER] 06:05:38.595 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.<init>(Lweka/core/Instances;Lweka/classifiers/CostMatrix;)V
[MASTER] 06:05:38.596 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.toSummaryString(Ljava/lang/String;Z)Ljava/lang/String;
[MASTER] 06:05:38.597 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.makeDistribution(D)[D
[MASTER] 06:05:38.606 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.equals(Ljava/lang/Object;)Z
[MASTER] 06:06:24.146 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.setDiscardPredictions(Z)V
[MASTER] 06:06:24.147 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.avgCost()D
[MASTER] 06:06:24.148 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.weightedFMeasure()D
[MASTER] 06:06:24.154 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.setDiscardPredictions(Z)V
[MASTER] 06:06:24.155 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.avgCost()D
[MASTER] 06:06:24.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.weightedFMeasure()D
* Search finished after 127s and 3 generations, 2838 statements, best individual has fitness: 6008.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 647
* Number of covered goals: 586
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 79%
* Total number of goals: 441
* Number of covered goals: 347
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 678
* Number of covered goals: 520
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 24%
* Total number of goals: 244
* Number of covered goals: 59
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 66%
* Total number of goals: 124
* Number of covered goals: 82
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 65%
* Total number of goals: 124
* Number of covered goals: 81
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 441
* Number of covered goals: 280
* Generated 64 tests with total length 1164
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 22 generations, 13945 statements, best individual has fitness: 22040.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 1378
* Number of covered goals: 565
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 22%
* Total number of goals: 809
* Number of covered goals: 176
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 424
* Number of covered goals: 120
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 278
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 62%
* Total number of goals: 103
* Number of covered goals: 64
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 60%
* Total number of goals: 103
* Number of covered goals: 62
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 809
* Number of covered goals: 146
* Generated 59 tests with total length 965
* Resulting test suite's coverage: 30% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
[MASTER] 06:10:55.240 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 06:10:56.001 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 06:10:56.002 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 06:10:57.355 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 16%
[MASTER] 06:14:54.080 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5242
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:25:43.061 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:25:43.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:25:43.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:25:43.140 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 06:25:50.103 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 123s and 32 generations, 28844 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 17 tests with total length 360
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5244
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:29:28.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:29:28.944 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:29:28.946 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:29:29.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:29:29.194 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:29:29.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
* Search finished after 123s and 47 generations, 31136 statements, best individual has fitness: 9328.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 370
* Number of covered goals: 148
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 242
* Number of covered goals: 60
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 26%
* Total number of goals: 713
* Number of covered goals: 185
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 72
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 242
* Number of covered goals: 60
* Generated 43 tests with total length 678
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 06:32:58.577 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 06:32:59.119 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5239
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 5244
* Connecting to master process on port 5243
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:43:15.659 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:43:15.660 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:43:15.662 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:43:15.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:43:15.765 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:43:15.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 06:43:18.166 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:43:18.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:43:18.192 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:43:19.907 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
[MASTER] 06:43:20.654 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:43:20.674 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
* Using seed 1022
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1022
* Starting evolution
[MASTER] 06:43:25.643 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 108
[MASTER] 06:43:25.661 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 148
[MASTER] 06:43:25.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 151
[MASTER] 06:43:25.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 157
[MASTER] 06:43:25.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 166
[MASTER] 06:43:25.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 169
[MASTER] 06:43:25.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 172
[MASTER] 06:43:25.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 175
[MASTER] 06:43:25.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 178
[MASTER] 06:43:25.662 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 181
[MASTER] 06:43:25.663 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: Line 184
[MASTER] 06:43:25.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: root-Branch
[MASTER] 06:43:25.685 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V
[MASTER] 06:43:25.686 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V
[MASTER] 06:43:25.700 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.<init>()V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:<init>()V
[MASTER] 06:43:27.712 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
[MASTER] 06:43:27.781 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: Line 724
[MASTER] 06:43:27.781 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: Line 725
[MASTER] 06:43:27.848 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch
[MASTER] 06:43:27.904 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 06:43:27.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 06:43:27.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 291: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_useStopList
[MASTER] 06:43:27.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 06:43:27.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 293: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp Negation of norm
[MASTER] 06:43:27.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 294: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp IINC 1 norm
[MASTER] 06:43:27.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 295: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - InsertUnaryOp IINC -1 norm
[MASTER] 06:43:27.934 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 06:43:27.938 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 06:43:27.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setNormalizeDocLength(Z)V
[MASTER] 06:43:49.683 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 06:43:57.649 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: Line 1149
[MASTER] 06:43:57.651 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: Line 1152
[MASTER] 06:43:57.656 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I4 Branch 112 IFNONNULL L1149 - true
[MASTER] 06:43:57.658 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I14 Branch 113 IFLE L1152 - true
[MASTER] 06:43:57.689 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 449: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1149 - ReplaceComparisonOperator != null -> = null
[MASTER] 06:43:57.691 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 453: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1152 - ReplaceComparisonOperator <= -> <
[MASTER] 06:43:57.694 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 455: weka.classifiers.rules.JRip$RipperRule.hasAntds()Z:1152 - ReplaceConstant - 0 -> 1
[MASTER] 06:43:57.696 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;:NonNull:weka.core.TechnicalInformation:hasAdditional()Z:False
[MASTER] 06:43:57.699 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 06:43:57.703 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.hasAntds()Z
[MASTER] 06:43:57.706 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 06:43:57.709 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.hasAntds()Z
[MASTER] 06:43:57.710 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getTechnicalInformation()Lweka/core/TechnicalInformation;: root-Branch in context: weka.classifiers.rules.JRip:getTechnicalInformation()Lweka/core/TechnicalInformation;
[MASTER] 06:43:57.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I14 Branch 113 IFLE L1152 - true in context: 
[MASTER] 06:43:57.716 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.hasAntds()Z: I4 Branch 112 IFNONNULL L1149 - true in context: 
[MASTER] 06:44:11.471 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 06:44:11.472 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 06:45:14.281 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 125s and 10 generations, 14279 statements, best individual has fitness: 4248.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 217
* Number of covered goals: 163
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 428
* Number of covered goals: 227
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 260
* Number of covered goals: 199
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 52%
* Total number of goals: 428
* Number of covered goals: 223
* Generated 43 tests with total length 976
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 10 generations, 9558 statements, best individual has fitness: 3368.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 338
* Number of covered goals: 249
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 194
* Number of covered goals: 117
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 79%
* Total number of goals: 476
* Number of covered goals: 377
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 112
* Number of covered goals: 42
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 58%
* Total number of goals: 194
* Number of covered goals: 113
* Generated 41 tests with total length 790
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 125s and 18 generations, 12442 statements, best individual has fitness: 13656.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 230
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 91
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 993
* Number of covered goals: 489
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 91
* Generated 47 tests with total length 1045
* Resulting test suite's coverage: 39% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 67%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
[MASTER] 06:47:00.892 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 06:47:00.999 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 06:47:01.113 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 06:47:01.113 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 06:47:28.041 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 06:47:28.041 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 06:50:07.612 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1575442207556/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1575442207556/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.java]]
[MASTER] 06:50:07.612 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:50:07.612 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 06:50:07.616 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 06:50:07.616 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 06:50:07.616 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 06:50:07.617 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1575442207556/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 06:50:07 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_26_tmp__ESTest extends NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.063983366979555
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.setNormalizeDocLength(false);
29:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
31:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
32:       
33:       naiveBayesMultinomialText0.setLNorm(0.0);
34:       naiveBayesMultinomialText0.getRevision();
35:       naiveBayesMultinomialText0.getStemmer();
36:       assertEquals(0.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_26_1575442207556/weka/classifiers/bayes/NaiveBayesMultinomialText_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 06:50:07 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "weka.classifiers.functions.MultilayerPerceptron$ControlPanel",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.classifiers.functions.LinearRegression",
106:       "weka.core.stemmers.Stemmer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.neighboursearch.CoverTree$MyHeap",
110:       "weka.core.neighboursearch.KDTree",
111:       "weka.core.stemmers.NullStemmer",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.classifiers.meta.AdaBoostM1",
116:       "weka.core.CustomDisplayStringProvider",
117:       "weka.core.tokenizers.Tokenizer",
118:       "weka.core.NormalizableDistance",
119:       "weka.core.NoSupportForMissingValuesException",
120:       "weka.classifiers.UpdateableClassifier",
121:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
122:       "weka.core.TechnicalInformation$Type",
123:       "weka.core.MultiInstanceCapabilitiesHandler",
124:       "weka.core.Copyable",
125:       "weka.core.Capabilities",
126:       "weka.core.BinarySparseInstance",
127:       "weka.filters.supervised.attribute.NominalToBinary",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.AttributeLocator",
130:       "weka.classifiers.functions.supportVector.CachedKernel",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "org.pentaho.packageManagement.PackageManager$1",
136:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.classifiers.ConditionalDensityEstimator",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.classifiers.bayes.BayesNet",
148:       "weka.classifiers.functions.neural.NeuralConnection",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.classifiers.IteratedSingleClassifierEnhancer",
153:       "weka.core.neighboursearch.CoverTree",
154:       "weka.classifiers.AbstractClassifier",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.classifiers.functions.neural.NeuralNode",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.core.PartitionGenerator",
164:       "weka.core.scripting.JythonSerializableObject",
165:       "weka.classifiers.Classifier",
166:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
167:       "weka.attributeSelection.InfoGainAttributeEval",
168:       "weka.core.Capabilities$Capability",
169:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
170:       "weka.core.SparseInstance",
171:       "org.pentaho.packageManagement.PackageManager",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.classifiers.functions.MultilayerPerceptron",
175:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
176:       "weka.attributeSelection.PrincipalComponents",
177:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
178:       "weka.core.stemmers.SnowballStemmer",
179:       "weka.core.stemmers.LovinsStemmer",
180:       "weka.classifiers.Evaluation",
181:       "weka.classifiers.functions.supportVector.Kernel",
182:       "weka.core.WekaPackageManager",
183:       "weka.classifiers.functions.neural.LinearUnit",
184:       "weka.filters.SupervisedFilter",
185:       "weka.classifiers.functions.SMO",
186:       "weka.core.TechnicalInformationHandler",
187:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
188:       "weka.classifiers.functions.SimpleLogistic",
189:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
190:       "weka.core.Option",
191:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
192:       "weka.core.neighboursearch.PerformanceStats",
193:       "weka.classifiers.functions.neural.NeuralMethod",
194:       "weka.filters.unsupervised.attribute.NumericToBinary",
195:       "weka.filters.Sourcable",
196:       "weka.core.Attribute",
197:       "weka.classifiers.functions.MultilayerPerceptron$NodePanel",
198:       "weka.core.Stopwords",
199:       "weka.core.FastVector",
200:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
201:       "weka.core.UnassignedDatasetException",
202:       "weka.core.tokenizers.NGramTokenizer",
203:       "weka.classifiers.RandomizableClassifier",
204:       "weka.classifiers.functions.neural.SigmoidUnit",
205:       "weka.classifiers.trees.RandomTree",
206:       "weka.classifiers.SingleClassifierEnhancer",
207:       "weka.core.RevisionUtils",
208:       "weka.core.Instance",
209:       "weka.classifiers.functions.supportVector.PolyKernel",
210:       "weka.estimators.Estimator",
211:       "weka.core.ProtectedProperties",
212:       "weka.classifiers.IntervalEstimator",
213:       "weka.core.StringLocator",
214:       "weka.classifiers.bayes.net.ADNode",
215:       "weka.core.AttributeStats",
216:       "weka.core.WeightedInstancesHandler",
217:       "weka.core.neighboursearch.NearestNeighbourSearch",
218:       "weka.classifiers.functions.GaussianProcesses",
219:       "weka.classifiers.trees.DecisionStump",
220:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
221:       "weka.core.TechnicalInformation$Field",
222:       "weka.core.neighboursearch.covertrees.Stack",
223:       "weka.filters.unsupervised.attribute.Remove",
224:       "weka.core.Randomizable",
225:       "weka.classifiers.functions.SGD",
226:       "weka.core.EuclideanDistance",
227:       "weka.core.Instances",
228:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
229:       "weka.filters.unsupervised.attribute.Normalize",
230:       "weka.core.UnassignedClassException",
231:       "weka.classifiers.bayes.net.BIFReader",
232:       "weka.classifiers.bayes.net.ParentSet",
233:       "weka.classifiers.rules.ZeroR",
234:       "weka.core.stemmers.IteratedLovinsStemmer",
235:       "weka.filters.unsupervised.attribute.Standardize",
236:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
237:       "weka.core.TechnicalInformation",
238:       "weka.core.UnsupportedAttributeTypeException",
239:       "weka.classifiers.Sourcable",
240:       "weka.core.RevisionHandler",
241:       "weka.classifiers.evaluation.output.prediction.PlainText",
242:       "weka.core.neighboursearch.TreePerformanceStats",
243:       "weka.core.xml.XMLSerialization",
244:       "weka.classifiers.xml.XMLClassifier",
245:       "weka.filters.Filter",
246:       "weka.filters.supervised.attribute.Discretize"
247:     );
248:   } 
249: 
250:   private static void resetClasses() {
251:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
252: 
253:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
254:       "weka.classifiers.AbstractClassifier",
255:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
256:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
257:       "weka.core.Capabilities$Capability",
258:       "weka.core.tokenizers.Tokenizer",
259:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
260:       "weka.core.tokenizers.WordTokenizer",
261:       "weka.core.stemmers.NullStemmer",
262:       "weka.core.Utils",
263:       "weka.core.AbstractInstance",
264:       "weka.core.SparseInstance",
265:       "weka.classifiers.bayes.NaiveBayes",
266:       "weka.classifiers.Evaluation",
267:       "weka.core.Option",
268:       "weka.core.Capabilities",
269:       "org.pentaho.packageManagement.PackageManager",
270:       "org.pentaho.packageManagement.DefaultPackageManager",
271:       "weka.core.Version",
272:       "weka.core.Environment",
273:       "weka.core.WekaPackageManager",
274:       "weka.core.BinarySparseInstance",
275:       "weka.core.UnassignedDatasetException",
276:       "weka.core.stemmers.SnowballStemmer",
277:       "weka.core.Tag",
278:       "weka.classifiers.lazy.IBk",
279:       "weka.core.neighboursearch.NearestNeighbourSearch",
280:       "weka.core.neighboursearch.LinearNNSearch",
281:       "weka.core.NormalizableDistance",
282:       "weka.core.EuclideanDistance",
283:       "weka.core.Range",
284:       "weka.core.neighboursearch.CoverTree",
285:       "weka.core.Instances",
286:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
287:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
288:       "weka.attributeSelection.ASEvaluation",
289:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
290:       "weka.attributeSelection.PrincipalComponents",
291:       "weka.core.TestInstances",
292:       "weka.core.Attribute",
293:       "weka.core.ProtectedProperties",
294:       "weka.core.DenseInstance",
295:       "weka.core.tokenizers.NGramTokenizer",
296:       "weka.classifiers.bayes.BayesNet",
297:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
298:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
299:       "weka.classifiers.bayes.net.search.local.K2",
300:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
301:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
302:       "weka.classifiers.functions.SimpleLogistic",
303:       "weka.core.RevisionUtils",
304:       "weka.core.TechnicalInformation",
305:       "weka.core.TechnicalInformation$Type",
306:       "weka.core.TechnicalInformation$Field",
307:       "weka.core.tokenizers.AlphabeticTokenizer",
308:       "weka.core.SerializedObject",
309:       "weka.classifiers.RandomizableClassifier",
310:       "weka.classifiers.functions.SGDText",
311:       "weka.core.neighboursearch.BallTree",
312:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
313:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
314:       "weka.core.neighboursearch.balltrees.BallSplitter",
315:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
316:       "weka.core.stemmers.LovinsStemmer",
317:       "weka.core.stemmers.IteratedLovinsStemmer",
318:       "weka.classifiers.SingleClassifierEnhancer",
319:       "weka.classifiers.misc.InputMappedClassifier",
320:       "weka.classifiers.rules.ZeroR",
321:       "weka.filters.Filter",
322:       "weka.filters.supervised.attribute.Discretize",
323:       "weka.core.Stopwords",
324:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
325:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
326:       "weka.core.neighboursearch.balltrees.BallNode",
327:       "weka.core.neighboursearch.KDTree",
328:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
329:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
330:       "weka.classifiers.functions.VotedPerceptron",
331:       "weka.classifiers.MultipleClassifiersCombiner",
332:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
333:       "weka.classifiers.meta.Vote",
334:       "weka.core.WekaException",
335:       "weka.core.UnsupportedAttributeTypeException",
336:       "weka.classifiers.bayes.net.BIFReader",
337:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
338:       "weka.classifiers.meta.CostSensitiveClassifier",
339:       "weka.classifiers.CostMatrix",
340:       "weka.classifiers.functions.LinearRegression",
341:       "weka.filters.AllFilter",
342:       "weka.classifiers.trees.RandomTree",
343:       "weka.core.matrix.Matrix",
344:       "weka.estimators.Estimator",
345:       "weka.estimators.MahalanobisEstimator",
346:       "weka.core.stemmers.Stemming",
347:       "weka.classifiers.functions.supportVector.Kernel",
348:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
349:       "weka.estimators.DiscreteEstimator",
350:       "weka.classifiers.functions.GaussianProcesses",
351:       "weka.classifiers.functions.supportVector.CachedKernel",
352:       "weka.classifiers.functions.supportVector.PolyKernel",
353:       "weka.core.converters.ArffLoader$ArffReader",
354:       "weka.attributeSelection.InfoGainAttributeEval",
355:       "weka.classifiers.functions.SMO",
356:       "weka.core.FindWithCapabilities",
357:       "weka.core.SingleIndex",
358:       "weka.classifiers.functions.MultilayerPerceptron",
359:       "weka.core.FastVector",
360:       "weka.filters.unsupervised.attribute.NominalToBinary",
361:       "weka.classifiers.functions.neural.SigmoidUnit",
362:       "weka.classifiers.functions.neural.LinearUnit",
363:       "weka.filters.SimpleFilter",
364:       "weka.filters.SimpleStreamFilter",
365:       "weka.filters.MultiFilter",
366:       "weka.classifiers.meta.FilteredClassifier",
367:       "weka.filters.supervised.attribute.AttributeSelection",
368:       "weka.attributeSelection.AttributeSelection",
369:       "weka.attributeSelection.CfsSubsetEval",
370:       "weka.attributeSelection.ASSearch",
371:       "weka.attributeSelection.GreedyStepwise",
372:       "weka.attributeSelection.BestFirst",
373:       "weka.classifiers.trees.J48",
374:       "weka.classifiers.IteratedSingleClassifierEnhancer",
375:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
376:       "weka.classifiers.meta.AdaBoostM1",
377:       "weka.classifiers.trees.DecisionStump",
378:       "weka.core.Javadoc",
379:       "weka.core.GlobalInfoJavadoc",
380:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
381:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
382:       "weka.classifiers.meta.RandomSubSpace",
383:       "weka.classifiers.trees.REPTree"
384:     );
385:   }
386: }

[MASTER] 06:50:07.618 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(false);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);

naiveBayesMultinomialText0.setLNorm(0.0);
naiveBayesMultinomialText0.getRevision();
naiveBayesMultinomialText0.getStemmer();
assertEquals(0.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1022/107_weka/evosuite-tests
* Done!

* Computation finished
