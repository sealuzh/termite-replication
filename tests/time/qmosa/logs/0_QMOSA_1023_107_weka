* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11926
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 06:56:50.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 06:56:50.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 06:56:50.653 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 06:56:50.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:56:50.725 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:56:50.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 06:56:57.094 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 06:56:57.095 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 06:56:59.069 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: Line 525
[MASTER] 06:56:59.102 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false
[MASTER] 06:56:59.107 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 240: weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V:525 - ReplaceVariable value -> m_stemmer
[MASTER] 06:56:59.111 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 06:56:59.112 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V
[MASTER] 06:56:59.113 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStemmer(Lweka/core/stemmers/Stemmer;)V: I3 Branch 47 IFNULL L524 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStemmer(Lweka/core/stemmers/Stemmer;)V
* Search finished after 125s and 8 generations, 10420 statements, best individual has fitness: 4208.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 217
* Number of covered goals: 167
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 428
* Number of covered goals: 226
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 260
* Number of covered goals: 200
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 52%
* Total number of goals: 428
* Number of covered goals: 224
* Generated 42 tests with total length 823
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 12 generations, 12910 statements, best individual has fitness: 3048.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 338
* Number of covered goals: 250
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 194
* Number of covered goals: 120
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 84%
* Total number of goals: 476
* Number of covered goals: 402
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 112
* Number of covered goals: 45
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 194
* Number of covered goals: 119
* Generated 45 tests with total length 955
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 69%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 33%
* Compiling and checking tests
[MASTER] 07:02:53.668 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_8_1575442973613/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_8_1575442973613/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.java]]
[MASTER] 07:02:53.668 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:53.668 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:53.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 07:02:53.673 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 07:02:53.674 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_8_1575442973613/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 07:02:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.stemmers.IteratedLovinsStemmer;
16: import weka.core.tokenizers.NGramTokenizer;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_8_tmp__ESTest extends NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.5552065746210553
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
29:       iteratedLovinsStemmer0.stemString("");
30:       iteratedLovinsStemmer0.toString();
31:       iteratedLovinsStemmer0.toString();
32:       naiveBayesMultinomialText0.setLNorm(1);
33:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
34:       naiveBayesMultinomialText1.setLNorm(1);
35:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
36:       naiveBayesMultinomialText0.setOptions(stringArray0);
37:       naiveBayesMultinomialText1.getTokenizer();
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       naiveBayesMultinomialText1.setMinWordFrequency((-101.58818));
40:       naiveBayesMultinomialText0.toString();
41:       naiveBayesMultinomialText0.useStopListTipText();
42:       naiveBayesMultinomialText0.listOptions();
43:       naiveBayesMultinomialText0.toString();
44:       naiveBayesMultinomialText0.stemmerTipText();
45:       naiveBayesMultinomialText1.setLNorm((-101.58818));
46:       naiveBayesMultinomialText1.useWordFrequenciesTipText();
47:       NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
48:       nGramTokenizer0.setNGramMaxSize((-1000));
49:       naiveBayesMultinomialText1.minWordFrequencyTipText();
50:       naiveBayesMultinomialText1.getUseStopList();
51:       assertEquals((-101.58818), naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);
52:       
53:       naiveBayesMultinomialText0.periodicPruningTipText();
54:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_8_1575442973613/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 07:02:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.core.ChebyshevDistance",
111:       "weka.estimators.IncrementalEstimator",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Capabilities",
127:       "weka.core.Copyable",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
141:       "weka.attributeSelection.ASEvaluation",
142:       "weka.core.AbstractInstance",
143:       "weka.classifiers.lazy.kstar.KStarConstants",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
152:       "weka.core.Tag",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.filters.unsupervised.attribute.Center",
155:       "weka.core.OptionHandler",
156:       "weka.core.WekaException",
157:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.attributeSelection.AttributeTransformer",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.classifiers.functions.supportVector.Kernel",
174:       "weka.core.WekaPackageManager",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.classifiers.lazy.KStar",
196:       "weka.estimators.Estimator",
197:       "weka.core.ProtectedProperties",
198:       "weka.classifiers.bayes.net.ADNode",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
203:       "weka.core.TechnicalInformation$Field",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.UnassignedClassException",
209:       "weka.classifiers.bayes.net.BIFReader",
210:       "weka.classifiers.bayes.net.ParentSet",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.filters.unsupervised.attribute.Standardize",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.neighboursearch.TreePerformanceStats",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter",
224:       "weka.filters.supervised.attribute.Discretize"
225:     );
226:   } 
227: 
228:   private static void resetClasses() {
229:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader()); 
230: 
231:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
232:       "weka.classifiers.AbstractClassifier",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
235:       "weka.core.Capabilities$Capability",
236:       "weka.core.tokenizers.Tokenizer",
237:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
238:       "weka.core.tokenizers.WordTokenizer",
239:       "weka.core.stemmers.NullStemmer",
240:       "weka.core.Utils",
241:       "weka.core.AbstractInstance",
242:       "weka.core.SparseInstance",
243:       "weka.classifiers.Evaluation",
244:       "weka.core.Option",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.core.stemmers.SnowballStemmer",
247:       "weka.core.BinarySparseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.RandomizableClassifier",
250:       "weka.core.Tag",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.FindWithCapabilities",
253:       "weka.core.Capabilities",
254:       "org.pentaho.packageManagement.PackageManager",
255:       "org.pentaho.packageManagement.DefaultPackageManager",
256:       "weka.core.Version",
257:       "weka.core.Environment",
258:       "weka.core.WekaPackageManager",
259:       "weka.core.SingleIndex",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.IteratedSingleClassifierEnhancer",
262:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
263:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
264:       "weka.classifiers.meta.Bagging",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.trees.REPTree",
267:       "weka.core.Attribute",
268:       "weka.core.ProtectedProperties",
269:       "weka.core.RevisionUtils",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.bayes.NaiveBayes",
278:       "weka.core.stemmers.LovinsStemmer",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.tokenizers.NGramTokenizer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.core.DenseInstance",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Range",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.NearestNeighbourSearch",
293:       "weka.core.neighboursearch.LinearNNSearch",
294:       "weka.core.NormalizableDistance",
295:       "weka.core.EuclideanDistance",
296:       "weka.core.TestInstances",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
299:       "weka.attributeSelection.PrincipalComponents",
300:       "weka.core.Instances",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.neighboursearch.CoverTree",
303:       "weka.core.Stopwords",
304:       "weka.core.neighboursearch.balltrees.BallNode",
305:       "weka.classifiers.misc.SerializedClassifier",
306:       "weka.core.neighboursearch.BallTree",
307:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
308:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
309:       "weka.core.neighboursearch.balltrees.BallSplitter",
310:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
314:       "weka.classifiers.meta.CostSensitiveClassifier",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.CfsSubsetEval",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.core.ChebyshevDistance",
320:       "weka.attributeSelection.ReliefFAttributeEval",
321:       "weka.core.tokenizers.AlphabeticTokenizer",
322:       "weka.classifiers.lazy.KStar",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.lazy.LWL",
325:       "weka.classifiers.trees.DecisionStump",
326:       "weka.filters.AllFilter",
327:       "weka.core.WekaException",
328:       "weka.core.neighboursearch.KDTree",
329:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
330:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.filters.SimpleFilter",
333:       "weka.filters.SimpleStreamFilter",
334:       "weka.filters.MultiFilter",
335:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
336:       "weka.core.UnassignedClassException"
337:     );
338:   }
339: }

[MASTER] 07:02:53.675 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
iteratedLovinsStemmer0.stemString("");
iteratedLovinsStemmer0.toString();
iteratedLovinsStemmer0.toString();
naiveBayesMultinomialText0.setLNorm(1);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setLNorm(1);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText1.getTokenizer();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText1.setMinWordFrequency((-101.58818));
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText1.setLNorm((-101.58818));
naiveBayesMultinomialText1.useWordFrequenciesTipText();
NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
nGramTokenizer0.setNGramMaxSize((-1000));
naiveBayesMultinomialText1.minWordFrequencyTipText();
naiveBayesMultinomialText1.getUseStopList();
assertEquals((-101.58818), naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);

naiveBayesMultinomialText0.periodicPruningTipText();
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 07:02:53.847 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1575442973793/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1575442973793/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.java]]
[MASTER] 07:02:53.847 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:53.847 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:53.847 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 07:02:53.848 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 07:02:53.848 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1575442973793/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 07:02:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.tokenizers.NGramTokenizer;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_11_tmp__ESTest extends NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.5549539536787793
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       int[] intArray0 = new int[9];
28:       intArray0[0] = (-1);
29:       intArray0[1] = 0;
30:       naiveBayesMultinomialText0.setLNorm(0);
31:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
32:       naiveBayesMultinomialText0.setOptions(stringArray0);
33:       naiveBayesMultinomialText0.getTokenizer();
34:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
35:       naiveBayesMultinomialText0.setMinWordFrequency(876.852926);
36:       naiveBayesMultinomialText0.toString();
37:       naiveBayesMultinomialText0.useStopListTipText();
38:       naiveBayesMultinomialText0.listOptions();
39:       naiveBayesMultinomialText0.toString();
40:       naiveBayesMultinomialText0.stemmerTipText();
41:       naiveBayesMultinomialText0.setLNorm((-1));
42:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
43:       NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
44:       nGramTokenizer0.setNGramMaxSize((-1000));
45:       naiveBayesMultinomialText0.minWordFrequencyTipText();
46:       naiveBayesMultinomialText0.getUseStopList();
47:       naiveBayesMultinomialText0.periodicPruningTipText();
48:       assertEquals((-1.0), naiveBayesMultinomialText0.getLNorm(), 0.01);
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_11_1575442973793/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 07:02:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.core.ChebyshevDistance",
111:       "weka.estimators.IncrementalEstimator",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Capabilities",
127:       "weka.core.Copyable",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
141:       "weka.attributeSelection.ASEvaluation",
142:       "weka.core.AbstractInstance",
143:       "weka.classifiers.lazy.kstar.KStarConstants",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
152:       "weka.core.Tag",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.filters.unsupervised.attribute.Center",
155:       "weka.core.OptionHandler",
156:       "weka.core.WekaException",
157:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.attributeSelection.AttributeTransformer",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.classifiers.functions.supportVector.Kernel",
174:       "weka.core.WekaPackageManager",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.classifiers.lazy.KStar",
196:       "weka.estimators.Estimator",
197:       "weka.core.ProtectedProperties",
198:       "weka.classifiers.bayes.net.ADNode",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
203:       "weka.core.TechnicalInformation$Field",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.UnassignedClassException",
209:       "weka.classifiers.bayes.net.BIFReader",
210:       "weka.classifiers.bayes.net.ParentSet",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.filters.unsupervised.attribute.Standardize",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.neighboursearch.TreePerformanceStats",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter",
224:       "weka.filters.supervised.attribute.Discretize"
225:     );
226:   } 
227: 
228:   private static void resetClasses() {
229:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
230: 
231:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
232:       "weka.classifiers.AbstractClassifier",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
235:       "weka.core.Capabilities$Capability",
236:       "weka.core.tokenizers.Tokenizer",
237:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
238:       "weka.core.tokenizers.WordTokenizer",
239:       "weka.core.stemmers.NullStemmer",
240:       "weka.core.Utils",
241:       "weka.core.AbstractInstance",
242:       "weka.core.SparseInstance",
243:       "weka.classifiers.Evaluation",
244:       "weka.core.Option",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.core.stemmers.SnowballStemmer",
247:       "weka.core.BinarySparseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.RandomizableClassifier",
250:       "weka.core.Tag",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.FindWithCapabilities",
253:       "weka.core.Capabilities",
254:       "org.pentaho.packageManagement.PackageManager",
255:       "org.pentaho.packageManagement.DefaultPackageManager",
256:       "weka.core.Version",
257:       "weka.core.Environment",
258:       "weka.core.WekaPackageManager",
259:       "weka.core.SingleIndex",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.IteratedSingleClassifierEnhancer",
262:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
263:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
264:       "weka.classifiers.meta.Bagging",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.trees.REPTree",
267:       "weka.core.Attribute",
268:       "weka.core.ProtectedProperties",
269:       "weka.core.RevisionUtils",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.bayes.NaiveBayes",
278:       "weka.core.stemmers.LovinsStemmer",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.tokenizers.NGramTokenizer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.core.DenseInstance",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Range",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.NearestNeighbourSearch",
293:       "weka.core.neighboursearch.LinearNNSearch",
294:       "weka.core.NormalizableDistance",
295:       "weka.core.EuclideanDistance",
296:       "weka.core.TestInstances",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
299:       "weka.attributeSelection.PrincipalComponents",
300:       "weka.core.Instances",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.neighboursearch.CoverTree",
303:       "weka.core.Stopwords",
304:       "weka.core.neighboursearch.balltrees.BallNode",
305:       "weka.classifiers.misc.SerializedClassifier",
306:       "weka.core.neighboursearch.BallTree",
307:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
308:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
309:       "weka.core.neighboursearch.balltrees.BallSplitter",
310:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
314:       "weka.classifiers.meta.CostSensitiveClassifier",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.CfsSubsetEval",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.core.ChebyshevDistance",
320:       "weka.attributeSelection.ReliefFAttributeEval",
321:       "weka.core.tokenizers.AlphabeticTokenizer",
322:       "weka.classifiers.lazy.KStar",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.lazy.LWL",
325:       "weka.classifiers.trees.DecisionStump",
326:       "weka.filters.AllFilter",
327:       "weka.core.WekaException",
328:       "weka.core.neighboursearch.KDTree",
329:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
330:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.filters.SimpleFilter",
333:       "weka.filters.SimpleStreamFilter",
334:       "weka.filters.MultiFilter",
335:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
336:       "weka.core.UnassignedClassException"
337:     );
338:   }
339: }

[MASTER] 07:02:53.849 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
int[] intArray0 = new int[9];
intArray0[0] = (-1);
intArray0[1] = 0;
naiveBayesMultinomialText0.setLNorm(0);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getTokenizer();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setMinWordFrequency(876.852926);
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.listOptions();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.setLNorm((-1));
naiveBayesMultinomialText0.useWordFrequenciesTipText();
NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
nGramTokenizer0.setNGramMaxSize((-1000));
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.periodicPruningTipText();
assertEquals((-1.0), naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 07:02:53.993 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1575442973946/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1575442973946/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.java]]
[MASTER] 07:02:53.993 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:53.993 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:53.993 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 07:02:53.993 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 07:02:53.993 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 07:02:53.993 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 07:02:53.993 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 07:02:53.994 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1575442973946/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 07:02:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_14_tmp__ESTest extends NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.673415053526696
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       double[] doubleArray0 = new double[9];
28:       doubleArray0[1] = 118.5255;
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
31:       doubleArray0[2] = 0.693147181;
32:       doubleArray0[3] = 2028.835;
33:       doubleArray0[4] = 1747.326234;
34:       doubleArray0[5] = (-472.92);
35:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
36:       naiveBayesMultinomialText0.setMinWordFrequency(0.0);
37:       naiveBayesMultinomialText0.toString();
38:       naiveBayesMultinomialText0.stemmerTipText();
39:       naiveBayesMultinomialText0.setLNorm(2028.835);
40:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
41:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
42:       Integer integer0 = new Integer(1738);
43:       linkedHashMap0.put(integer0, linkedHashMap1);
44:       naiveBayesMultinomialText0.setLNorm((-3407.2502));
45:       naiveBayesMultinomialText0.globalInfo();
46:       naiveBayesMultinomialText0.tokenizerTipText();
47:       assertEquals((-3407.2502), naiveBayesMultinomialText0.getLNorm(), 0.01);
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_14_1575442973946/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 07:02:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.core.ChebyshevDistance",
111:       "weka.estimators.IncrementalEstimator",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Capabilities",
127:       "weka.core.Copyable",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
141:       "weka.attributeSelection.ASEvaluation",
142:       "weka.core.AbstractInstance",
143:       "weka.classifiers.lazy.kstar.KStarConstants",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
152:       "weka.core.Tag",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.filters.unsupervised.attribute.Center",
155:       "weka.core.OptionHandler",
156:       "weka.core.WekaException",
157:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.attributeSelection.AttributeTransformer",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.classifiers.functions.supportVector.Kernel",
174:       "weka.core.WekaPackageManager",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.classifiers.lazy.KStar",
196:       "weka.estimators.Estimator",
197:       "weka.core.ProtectedProperties",
198:       "weka.classifiers.bayes.net.ADNode",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
203:       "weka.core.TechnicalInformation$Field",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.UnassignedClassException",
209:       "weka.classifiers.bayes.net.BIFReader",
210:       "weka.classifiers.bayes.net.ParentSet",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.filters.unsupervised.attribute.Standardize",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.neighboursearch.TreePerformanceStats",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter",
224:       "weka.filters.supervised.attribute.Discretize"
225:     );
226:   } 
227: 
228:   private static void resetClasses() {
229:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
230: 
231:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
232:       "weka.classifiers.AbstractClassifier",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
235:       "weka.core.Capabilities$Capability",
236:       "weka.core.tokenizers.Tokenizer",
237:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
238:       "weka.core.tokenizers.WordTokenizer",
239:       "weka.core.stemmers.NullStemmer",
240:       "weka.core.Utils",
241:       "weka.core.AbstractInstance",
242:       "weka.core.SparseInstance",
243:       "weka.classifiers.Evaluation",
244:       "weka.core.Option",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.core.stemmers.SnowballStemmer",
247:       "weka.core.BinarySparseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.RandomizableClassifier",
250:       "weka.core.Tag",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.FindWithCapabilities",
253:       "weka.core.Capabilities",
254:       "org.pentaho.packageManagement.PackageManager",
255:       "org.pentaho.packageManagement.DefaultPackageManager",
256:       "weka.core.Version",
257:       "weka.core.Environment",
258:       "weka.core.WekaPackageManager",
259:       "weka.core.SingleIndex",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.IteratedSingleClassifierEnhancer",
262:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
263:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
264:       "weka.classifiers.meta.Bagging",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.trees.REPTree",
267:       "weka.core.Attribute",
268:       "weka.core.ProtectedProperties",
269:       "weka.core.RevisionUtils",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.bayes.NaiveBayes",
278:       "weka.core.stemmers.LovinsStemmer",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.tokenizers.NGramTokenizer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.core.DenseInstance",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Range",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.NearestNeighbourSearch",
293:       "weka.core.neighboursearch.LinearNNSearch",
294:       "weka.core.NormalizableDistance",
295:       "weka.core.EuclideanDistance",
296:       "weka.core.TestInstances",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
299:       "weka.attributeSelection.PrincipalComponents",
300:       "weka.core.Instances",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.neighboursearch.CoverTree",
303:       "weka.core.Stopwords",
304:       "weka.core.neighboursearch.balltrees.BallNode",
305:       "weka.classifiers.misc.SerializedClassifier",
306:       "weka.core.neighboursearch.BallTree",
307:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
308:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
309:       "weka.core.neighboursearch.balltrees.BallSplitter",
310:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
314:       "weka.classifiers.meta.CostSensitiveClassifier",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.CfsSubsetEval",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.core.ChebyshevDistance",
320:       "weka.attributeSelection.ReliefFAttributeEval",
321:       "weka.core.tokenizers.AlphabeticTokenizer",
322:       "weka.classifiers.lazy.KStar",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.lazy.LWL",
325:       "weka.classifiers.trees.DecisionStump",
326:       "weka.filters.AllFilter",
327:       "weka.core.WekaException",
328:       "weka.core.neighboursearch.KDTree",
329:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
330:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.filters.SimpleFilter",
333:       "weka.filters.SimpleStreamFilter",
334:       "weka.filters.MultiFilter",
335:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
336:       "weka.core.UnassignedClassException"
337:     );
338:   }
339: }

[MASTER] 07:02:53.995 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[9];
doubleArray0[1] = 118.5255;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
doubleArray0[2] = 0.693147181;
doubleArray0[3] = 2028.835;
doubleArray0[4] = 1747.326234;
doubleArray0[5] = (-472.92);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.setMinWordFrequency(0.0);
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.setLNorm(2028.835);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
Integer integer0 = new Integer(1738);
linkedHashMap0.put(integer0, linkedHashMap1);
naiveBayesMultinomialText0.setLNorm((-3407.2502));
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.tokenizerTipText();
assertEquals((-3407.2502), naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 07:02:54.244 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_19_1575442974200/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_19_1575442974200/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.java]]
[MASTER] 07:02:54.244 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:54.244 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:54.245 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 07:02:54.245 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_19_1575442974200/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 07:02:54 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.Capabilities;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_19_tmp__ESTest extends NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.853253087436612
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
34:       String string0 = naiveBayesMultinomialText0.minWordFrequencyTipText();
35:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string0);
36:       
37:       MockFile mockFile0 = new MockFile("pL&/:Xeye:_xR;+=>+n");
38:       mockFile0.getCanonicalFile();
39:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
40:       MockFile.createTempFile("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", "pL&/:Xeye:_xR;+=>+n");
41:       naiveBayesMultinomialText0.setStopwords(mockFile0);
42:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
43:       naiveBayesMultinomialText0.getCapabilities();
44:       double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
45:       assertEquals(3.0, double0, 0.01);
46:       
47:       String string1 = naiveBayesMultinomialText0.normTipText();
48:       assertEquals("The norm of the instances after normalization.", string1);
49:       
50:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
51:       assertEquals(0, capabilities0.getMinimumNumberInstances());
52:       
53:       Random.setNextRandom(2045222521);
54:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
55:       naiveBayesMultinomialText0.LNormTipText();
56:       String string2 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
57:       assertEquals("Use word frequencies rather than binary bag of words representation", string2);
58:       
59:       naiveBayesMultinomialText0.tokenizerTipText();
60:       String string3 = naiveBayesMultinomialText0.tokenizerTipText();
61:       assertEquals("The tokenizing algorithm to use on the strings.", string3);
62:       
63:       String string4 = naiveBayesMultinomialText0.LNormTipText();
64:       assertEquals("The LNorm to use for document length normalization.", string4);
65:       
66:       String string5 = naiveBayesMultinomialText0.toString();
67:       assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string5);
68:       
69:       String string6 = naiveBayesMultinomialText0.getRevision();
70:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
71:       assertEquals("9122", string6);
72:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
73:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
74:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
75:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
76:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
77:   }
78: }
RegularFileObject[/tmp/EvoSuite_19_1575442974200/weka/classifiers/bayes/NaiveBayesMultinomialText_19_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 07:02:54 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.core.ChebyshevDistance",
111:       "weka.estimators.IncrementalEstimator",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Capabilities",
127:       "weka.core.Copyable",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
141:       "weka.attributeSelection.ASEvaluation",
142:       "weka.core.AbstractInstance",
143:       "weka.classifiers.lazy.kstar.KStarConstants",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
152:       "weka.core.Tag",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.filters.unsupervised.attribute.Center",
155:       "weka.core.OptionHandler",
156:       "weka.core.WekaException",
157:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.attributeSelection.AttributeTransformer",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.classifiers.functions.supportVector.Kernel",
174:       "weka.core.WekaPackageManager",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.classifiers.lazy.KStar",
196:       "weka.estimators.Estimator",
197:       "weka.core.ProtectedProperties",
198:       "weka.classifiers.bayes.net.ADNode",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
203:       "weka.core.TechnicalInformation$Field",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.UnassignedClassException",
209:       "weka.classifiers.bayes.net.BIFReader",
210:       "weka.classifiers.bayes.net.ParentSet",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.filters.unsupervised.attribute.Standardize",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.neighboursearch.TreePerformanceStats",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter",
224:       "weka.filters.supervised.attribute.Discretize"
225:     );
226:   } 
227: 
228:   private static void resetClasses() {
229:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_19_tmp__ESTest_scaffolding.class.getClassLoader()); 
230: 
231:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
232:       "weka.classifiers.AbstractClassifier",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
235:       "weka.core.Capabilities$Capability",
236:       "weka.core.tokenizers.Tokenizer",
237:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
238:       "weka.core.tokenizers.WordTokenizer",
239:       "weka.core.stemmers.NullStemmer",
240:       "weka.core.Utils",
241:       "weka.core.AbstractInstance",
242:       "weka.core.SparseInstance",
243:       "weka.classifiers.Evaluation",
244:       "weka.core.Option",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.core.stemmers.SnowballStemmer",
247:       "weka.core.BinarySparseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.RandomizableClassifier",
250:       "weka.core.Tag",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.FindWithCapabilities",
253:       "weka.core.Capabilities",
254:       "org.pentaho.packageManagement.PackageManager",
255:       "org.pentaho.packageManagement.DefaultPackageManager",
256:       "weka.core.Version",
257:       "weka.core.Environment",
258:       "weka.core.WekaPackageManager",
259:       "weka.core.SingleIndex",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.IteratedSingleClassifierEnhancer",
262:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
263:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
264:       "weka.classifiers.meta.Bagging",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.trees.REPTree",
267:       "weka.core.Attribute",
268:       "weka.core.ProtectedProperties",
269:       "weka.core.RevisionUtils",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.bayes.NaiveBayes",
278:       "weka.core.stemmers.LovinsStemmer",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.tokenizers.NGramTokenizer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.core.DenseInstance",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Range",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.NearestNeighbourSearch",
293:       "weka.core.neighboursearch.LinearNNSearch",
294:       "weka.core.NormalizableDistance",
295:       "weka.core.EuclideanDistance",
296:       "weka.core.TestInstances",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
299:       "weka.attributeSelection.PrincipalComponents",
300:       "weka.core.Instances",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.neighboursearch.CoverTree",
303:       "weka.core.Stopwords",
304:       "weka.core.neighboursearch.balltrees.BallNode",
305:       "weka.classifiers.misc.SerializedClassifier",
306:       "weka.core.neighboursearch.BallTree",
307:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
308:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
309:       "weka.core.neighboursearch.balltrees.BallSplitter",
310:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
314:       "weka.classifiers.meta.CostSensitiveClassifier",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.CfsSubsetEval",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.core.ChebyshevDistance",
320:       "weka.attributeSelection.ReliefFAttributeEval",
321:       "weka.core.tokenizers.AlphabeticTokenizer",
322:       "weka.classifiers.lazy.KStar",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.lazy.LWL",
325:       "weka.classifiers.trees.DecisionStump",
326:       "weka.filters.AllFilter",
327:       "weka.core.WekaException",
328:       "weka.core.neighboursearch.KDTree",
329:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
330:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.filters.SimpleFilter",
333:       "weka.filters.SimpleStreamFilter",
334:       "weka.filters.MultiFilter",
335:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
336:       "weka.core.UnassignedClassException"
337:     );
338:   }
339: }

[MASTER] 07:02:54.247 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
String string0 = naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string0);

MockFile mockFile0 = new MockFile("pL&/:Xeye:_xR;+=>+n");
mockFile0.getCanonicalFile();
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
MockFile.createTempFile("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", "pL&/:Xeye:_xR;+=>+n");
naiveBayesMultinomialText0.setStopwords(mockFile0);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.getCapabilities();
double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
assertEquals(3.0, double0, 0.01);

String string1 = naiveBayesMultinomialText0.normTipText();
assertEquals("The norm of the instances after normalization.", string1);

Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
assertEquals(0, capabilities0.getMinimumNumberInstances());

Random.setNextRandom(2045222521);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.LNormTipText();
String string2 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string2);

naiveBayesMultinomialText0.tokenizerTipText();
String string3 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string3);

String string4 = naiveBayesMultinomialText0.LNormTipText();
assertEquals("The LNorm to use for document length normalization.", string4);

String string5 = naiveBayesMultinomialText0.toString();
assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string5);

String string6 = naiveBayesMultinomialText0.getRevision();
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals("9122", string6);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 07:02:54.375 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_22_1575442974338/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_22_1575442974338/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.java]]
[MASTER] 07:02:54.375 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:54.375 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 07:02:54.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 07:02:54.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 07:02:54.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 07:02:54.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 07:02:54.376 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 07:02:54.377 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_22_1575442974338/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 07:02:54 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import java.util.function.BiConsumer;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.tokenizers.NGramTokenizer;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_22_tmp__ESTest extends NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=1.5271837172395382
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       double[] doubleArray0 = new double[9];
33:       doubleArray0[0] = 406.5517699;
34:       doubleArray0[1] = 118.5255;
35:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
37:       doubleArray0[2] = 0.693147181;
38:       doubleArray0[3] = 2028.835;
39:       doubleArray0[4] = 1747.326234;
40:       doubleArray0[5] = 4.0;
41:       doubleArray0[6] = 2112.0208318385744;
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap1;
44:       naiveBayesMultinomialText0.setMinWordFrequency(0.7);
45:       doubleArray0[7] = 714.0807463486;
46:       doubleArray0[8] = 0.0;
47:       naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
48:       // Undeclared exception!
49:       try { 
50:         naiveBayesMultinomialText0.toString();
51:         fail("Expecting exception: NullPointerException");
52:       
53:       } catch(NullPointerException e) {
54:          //
55:          // no message in exception (getMessage() returned null)
56:          //
57:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
58:       }
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_22_1575442974338/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 07:02:54 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
102:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
103:       "weka.core.DenseInstance",
104:       "weka.core.stemmers.Stemmer",
105:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.classifiers.bayes.NaiveBayes",
110:       "weka.core.ChebyshevDistance",
111:       "weka.estimators.IncrementalEstimator",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Capabilities",
127:       "weka.core.Copyable",
128:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
129:       "weka.core.BinarySparseInstance",
130:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
131:       "weka.core.SerializedObject",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.CapabilitiesHandler",
140:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
141:       "weka.attributeSelection.ASEvaluation",
142:       "weka.core.AbstractInstance",
143:       "weka.classifiers.lazy.kstar.KStarConstants",
144:       "weka.core.scripting.JythonObject",
145:       "weka.core.SelectedTag",
146:       "org.pentaho.packageManagement.DefaultPackage",
147:       "weka.estimators.DiscreteEstimator",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.classifiers.misc.InputMappedClassifier",
150:       "weka.core.Version",
151:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
152:       "weka.core.Tag",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.filters.unsupervised.attribute.Center",
155:       "weka.core.OptionHandler",
156:       "weka.core.WekaException",
157:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.scripting.JythonSerializableObject",
161:       "weka.classifiers.Classifier",
162:       "weka.core.Capabilities$Capability",
163:       "weka.core.SparseInstance",
164:       "org.pentaho.packageManagement.PackageManager",
165:       "weka.attributeSelection.AttributeTransformer",
166:       "weka.core.tokenizers.WordTokenizer",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
171:       "weka.core.stemmers.LovinsStemmer",
172:       "weka.classifiers.Evaluation",
173:       "weka.classifiers.functions.supportVector.Kernel",
174:       "weka.core.WekaPackageManager",
175:       "weka.filters.SupervisedFilter",
176:       "weka.core.TechnicalInformationHandler",
177:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
178:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
179:       "weka.classifiers.meta.CostSensitiveClassifier",
180:       "weka.core.Option",
181:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
182:       "weka.core.neighboursearch.PerformanceStats",
183:       "weka.filters.Sourcable",
184:       "weka.core.Attribute",
185:       "weka.core.Stopwords",
186:       "weka.core.FastVector",
187:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
188:       "weka.core.UnassignedDatasetException",
189:       "weka.core.tokenizers.NGramTokenizer",
190:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
191:       "weka.classifiers.RandomizableClassifier",
192:       "weka.classifiers.SingleClassifierEnhancer",
193:       "weka.core.RevisionUtils",
194:       "weka.core.Instance",
195:       "weka.classifiers.lazy.KStar",
196:       "weka.estimators.Estimator",
197:       "weka.core.ProtectedProperties",
198:       "weka.classifiers.bayes.net.ADNode",
199:       "weka.core.AttributeStats",
200:       "weka.core.WeightedInstancesHandler",
201:       "weka.core.neighboursearch.NearestNeighbourSearch",
202:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
203:       "weka.core.TechnicalInformation$Field",
204:       "weka.filters.unsupervised.attribute.Remove",
205:       "weka.core.Randomizable",
206:       "weka.core.EuclideanDistance",
207:       "weka.core.Instances",
208:       "weka.core.UnassignedClassException",
209:       "weka.classifiers.bayes.net.BIFReader",
210:       "weka.classifiers.bayes.net.ParentSet",
211:       "weka.classifiers.rules.ZeroR",
212:       "weka.core.stemmers.IteratedLovinsStemmer",
213:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
214:       "weka.filters.unsupervised.attribute.Standardize",
215:       "weka.core.TechnicalInformation",
216:       "weka.core.UnsupportedAttributeTypeException",
217:       "weka.classifiers.Sourcable",
218:       "weka.core.RevisionHandler",
219:       "weka.classifiers.evaluation.output.prediction.PlainText",
220:       "weka.core.neighboursearch.TreePerformanceStats",
221:       "weka.core.xml.XMLSerialization",
222:       "weka.classifiers.xml.XMLClassifier",
223:       "weka.filters.Filter",
224:       "weka.filters.supervised.attribute.Discretize"
225:     );
226:   } 
227: 
228:   private static void resetClasses() {
229:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader()); 
230: 
231:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
232:       "weka.classifiers.AbstractClassifier",
233:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
234:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
235:       "weka.core.Capabilities$Capability",
236:       "weka.core.tokenizers.Tokenizer",
237:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
238:       "weka.core.tokenizers.WordTokenizer",
239:       "weka.core.stemmers.NullStemmer",
240:       "weka.core.Utils",
241:       "weka.core.AbstractInstance",
242:       "weka.core.SparseInstance",
243:       "weka.classifiers.Evaluation",
244:       "weka.core.Option",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.core.stemmers.SnowballStemmer",
247:       "weka.core.BinarySparseInstance",
248:       "weka.core.SerializedObject",
249:       "weka.classifiers.RandomizableClassifier",
250:       "weka.core.Tag",
251:       "weka.classifiers.functions.SGDText",
252:       "weka.core.FindWithCapabilities",
253:       "weka.core.Capabilities",
254:       "org.pentaho.packageManagement.PackageManager",
255:       "org.pentaho.packageManagement.DefaultPackageManager",
256:       "weka.core.Version",
257:       "weka.core.Environment",
258:       "weka.core.WekaPackageManager",
259:       "weka.core.SingleIndex",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.IteratedSingleClassifierEnhancer",
262:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
263:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
264:       "weka.classifiers.meta.Bagging",
265:       "weka.classifiers.rules.ZeroR",
266:       "weka.classifiers.trees.REPTree",
267:       "weka.core.Attribute",
268:       "weka.core.ProtectedProperties",
269:       "weka.core.RevisionUtils",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.classifiers.bayes.NaiveBayes",
278:       "weka.core.stemmers.LovinsStemmer",
279:       "weka.core.stemmers.IteratedLovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.tokenizers.NGramTokenizer",
284:       "weka.classifiers.misc.InputMappedClassifier",
285:       "weka.core.DenseInstance",
286:       "weka.classifiers.functions.supportVector.Kernel",
287:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
288:       "weka.filters.Filter",
289:       "weka.filters.supervised.attribute.Discretize",
290:       "weka.core.Range",
291:       "weka.classifiers.lazy.IBk",
292:       "weka.core.neighboursearch.NearestNeighbourSearch",
293:       "weka.core.neighboursearch.LinearNNSearch",
294:       "weka.core.NormalizableDistance",
295:       "weka.core.EuclideanDistance",
296:       "weka.core.TestInstances",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
299:       "weka.attributeSelection.PrincipalComponents",
300:       "weka.core.Instances",
301:       "weka.core.converters.ArffLoader$ArffReader",
302:       "weka.core.neighboursearch.CoverTree",
303:       "weka.core.Stopwords",
304:       "weka.core.neighboursearch.balltrees.BallNode",
305:       "weka.classifiers.misc.SerializedClassifier",
306:       "weka.core.neighboursearch.BallTree",
307:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
308:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
309:       "weka.core.neighboursearch.balltrees.BallSplitter",
310:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
311:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
313:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
314:       "weka.classifiers.meta.CostSensitiveClassifier",
315:       "weka.classifiers.CostMatrix",
316:       "weka.attributeSelection.CfsSubsetEval",
317:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
318:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
319:       "weka.core.ChebyshevDistance",
320:       "weka.attributeSelection.ReliefFAttributeEval",
321:       "weka.core.tokenizers.AlphabeticTokenizer",
322:       "weka.classifiers.lazy.KStar",
323:       "weka.core.SelectedTag",
324:       "weka.classifiers.lazy.LWL",
325:       "weka.classifiers.trees.DecisionStump",
326:       "weka.filters.AllFilter",
327:       "weka.core.WekaException",
328:       "weka.core.neighboursearch.KDTree",
329:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
330:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
331:       "weka.core.UnsupportedAttributeTypeException",
332:       "weka.filters.SimpleFilter",
333:       "weka.filters.SimpleStreamFilter",
334:       "weka.filters.MultiFilter",
335:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
336:       "weka.core.UnassignedClassException"
337:     );
338:   }
339: }

[MASTER] 07:02:54.378 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[9];
doubleArray0[0] = 406.5517699;
doubleArray0[1] = 118.5255;
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
doubleArray0[2] = 0.693147181;
doubleArray0[3] = 2028.835;
doubleArray0[4] = 1747.326234;
doubleArray0[5] = 4.0;
doubleArray0[6] = 2112.0208318385744;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap1;
naiveBayesMultinomialText0.setMinWordFrequency(0.7);
doubleArray0[7] = 714.0807463486;
doubleArray0[8] = 0.0;
naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
naiveBayesMultinomialText0.toString();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11927
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11928
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:13:42.181 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:13:42.210 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:13:42.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:13:42.300 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:13:49.929 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:13:49.936 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:13:49.937 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:13:49.984 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:13:57.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 123s and 40 generations, 42686 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 423
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 130s and 3 generations, 3742 statements, best individual has fitness: 6360.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 647
* Number of covered goals: 566
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 441
* Number of covered goals: 336
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 678
* Number of covered goals: 497
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 244
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 124
* Number of covered goals: 85
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 124
* Number of covered goals: 85
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 441
* Number of covered goals: 287
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Generated 60 tests with total length 1334
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 18%
[MASTER] 07:24:07.438 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11926
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:24:52.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:24:52.419 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:24:52.435 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:24:52.601 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:24:52.627 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:24:52.639 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
* Search finished after 122s and 42 generations, 26760 statements, best individual has fitness: 9440.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 39%
* Total number of goals: 370
* Number of covered goals: 145
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 242
* Number of covered goals: 56
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 26%
* Total number of goals: 713
* Number of covered goals: 182
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 72
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 242
* Number of covered goals: 56
* Generated 43 tests with total length 450
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 07:28:17.825 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:28:18.284 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 11927
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:28:48.973 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:28:49.004 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:28:49.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:28:51.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:28:51.641 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:28:51.644 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:28:57.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:29:05.631 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:29:05.636 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:29:05.637 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:29:06.962 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:29:08.516 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:29:08.538 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:29:11.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 07:29:11.827 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 07:29:11.827 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 07:29:11.828 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 07:29:11.828 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 07:29:11.829 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 07:29:11.829 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 07:29:11.830 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 07:29:11.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 07:29:12.016 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 07:29:12.042 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:29:35.895 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 07:30:16.661 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 07:30:37.620 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NumericAntd.splitData(Lweka/core/Instances;DD)[Lweka/core/Instances;
* Search finished after 123s and 20 generations, 14303 statements, best individual has fitness: 14096.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 705
* Number of covered goals: 217
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 21%
* Total number of goals: 416
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 993
* Number of covered goals: 457
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 93
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 21%
* Total number of goals: 416
* Number of covered goals: 88
* Generated 48 tests with total length 859
* Resulting test suite's coverage: 37% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 21 generations, 12201 statements, best individual has fitness: 20176.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 46%
* Total number of goals: 1378
* Number of covered goals: 640
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 809
* Number of covered goals: 243
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 424
* Number of covered goals: 178
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 13%
* Total number of goals: 278
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 103
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 103
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 20%
* Total number of goals: 809
* Number of covered goals: 161
* Generated 71 tests with total length 1141
* Resulting test suite's coverage: 36% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 07:38:03.374 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 07:38:03.502 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:38:03.691 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 07:38:03.691 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/107_weka/evosuite-tests
* Done!

* Computation finished
