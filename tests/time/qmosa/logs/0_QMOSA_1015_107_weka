* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12630
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:55:26.725 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:55:26.731 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:55:26.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:55:27.757 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:55:28.905 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:55:28.907 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 00:55:31.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 00:55:31.994 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 00:55:31.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 00:55:31.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 00:55:31.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 00:55:31.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 00:55:31.998 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 00:55:32.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 00:55:32.013 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 00:55:32.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 00:55:32.127 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
[MASTER] 00:55:44.754 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 124s and 18 generations, 12214 statements, best individual has fitness: 21384.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 1378
* Number of covered goals: 525
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 809
* Number of covered goals: 237
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 424
* Number of covered goals: 176
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 9%
* Total number of goals: 278
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 56%
* Total number of goals: 103
* Number of covered goals: 58
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 55%
* Total number of goals: 103
* Number of covered goals: 57
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 21%
* Total number of goals: 809
* Number of covered goals: 171
* Generated 48 tests with total length 920
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
[MASTER] 01:01:00.838 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:01:00.942 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 01:01:01.115 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 01:01:01.115 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12630
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:06:14.572 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:06:14.577 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:06:14.580 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:06:14.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
* Search finished after 131s and 3 generations, 3586 statements, best individual has fitness: 7304.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 83%
* Total number of goals: 647
* Number of covered goals: 540
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 441
* Number of covered goals: 323
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 678
* Number of covered goals: 486
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 244
* Number of covered goals: 43
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 57%
* Total number of goals: 124
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 57%
* Total number of goals: 124
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 441
* Number of covered goals: 260
* Generated 51 tests with total length 1149
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12626
* Connecting to master process on port 12627
* Analyzing classpath: 
* Analyzing classpath: 
[MASTER] 01:14:57.519 [logback-2] ERROR ClientNodeImpl - Error when connecting to master via RMI
java.lang.SecurityException: Unprivileged thread "main" cannot add a privileged thread: failed to add "Statistics sender in client process"
Current privileged threads are: 
"pool-3-thread-1"
"Reference Handler"
	at org.evosuite.runtime.sandbox.MSecurityManager.addPrivilegedThread(MSecurityManager.java:396) ~[evosuite.jar:1.0.6]
	at org.evosuite.runtime.sandbox.Sandbox.addPrivilegedThread(Sandbox.java:92) ~[evosuite.jar:1.0.6]
	at org.evosuite.rmi.service.ClientNodeImpl.init(ClientNodeImpl.java:369) ~[evosuite.jar:1.0.6]
	at org.evosuite.rmi.ClientServices.registerServices(ClientServices.java:68) [evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.run(ClientProcess.java:82) [evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.main(ClientProcess.java:203) [evosuite.jar:1.0.6]
[MASTER] 01:14:57.561 [logback-2] ERROR ClientProcess - Error when generating tests for: weka.core.Optimization with seed 1015. Configuration id : QMOSA
java.lang.RuntimeException: Could not connect to master process on port 12626
	at org.evosuite.ClientProcess.run(ClientProcess.java:87) ~[evosuite.jar:1.0.6]
	at org.evosuite.ClientProcess.main(ClientProcess.java:203) ~[evosuite.jar:1.0.6]
[MASTER] 01:14:57.993 [main] ERROR ExternalProcessHandler - Class weka.core.Optimization. Lost connection with clients.
ClientNode: INITIALIZATION

java.rmi.UnmarshalException: Error unmarshaling return header; nested exception is: 
	java.io.EOFException
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:236) ~[na:1.8.0_201]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:161) ~[na:1.8.0_201]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_201]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_201]
	at com.sun.proxy.$Proxy7.waitUntilFinished(Unknown Source) ~[na:na]
	at org.evosuite.utils.ExternalProcessHandler.waitForResult(ExternalProcessHandler.java:608) ~[evosuite.jar:1.0.6]
	at org.evosuite.executionmode.TestGeneration.generateTests(TestGeneration.java:498) [evosuite.jar:1.0.6]
	at org.evosuite.executionmode.TestGeneration.executeTestGeneration(TestGeneration.java:79) [evosuite.jar:1.0.6]
	at org.evosuite.EvoSuite.parseCommandLine(EvoSuite.java:269) [evosuite.jar:1.0.6]
	at org.evosuite.EvoSuite.main(EvoSuite.java:302) [evosuite.jar:1.0.6]
Caused by: java.io.EOFException: null
	at java.io.DataInputStream.readByte(DataInputStream.java:267) ~[na:1.8.0_201]
	at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:222) ~[na:1.8.0_201]
	... 9 common frames omitted
* Computation finished
[MASTER] 01:14:58.111 [main] ERROR SearchStatistics - No statistics has been saved because EvoSuite failed to generate any test case
[MASTER] 01:14:58.215 [main] ERROR TestGeneration - failed to write statistics data
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:15:07.623 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:15:07.672 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:15:07.675 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:15:07.908 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:15:07.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:15:07.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
* Search finished after 121s and 46 generations, 33748 statements, best individual has fitness: 9472.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 39%
* Total number of goals: 370
* Number of covered goals: 145
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 242
* Number of covered goals: 56
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 25%
* Total number of goals: 713
* Number of covered goals: 180
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 36%
* Total number of goals: 72
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 242
* Number of covered goals: 56
* Generated 38 tests with total length 618
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 01:18:20.092 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 01:18:20.613 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12624
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12630
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 12631
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:27:27.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:27:27.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:27:27.055 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:27:27.090 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
[MASTER] 01:27:27.145 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:27:27.159 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Using seed 1015
* Starting evolution
[MASTER] 01:27:30.829 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:27:30.875 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:27:30.878 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
[MASTER] 01:27:33.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
[MASTER] 01:27:33.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:27:33.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Using seed 1015
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
[MASTER] 01:27:41.940 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 657
[MASTER] 01:27:41.940 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: Line 658
[MASTER] 01:27:42.096 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 270: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp Negation of p
[MASTER] 01:27:42.097 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 271: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC 1 p
[MASTER] 01:27:42.097 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 272: weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V:657 - InsertUnaryOp IINC -1 p
[MASTER] 01:27:42.317 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.distributionForInstance(Lweka/core/Instance;)[D
[MASTER] 01:27:42.324 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 01:27:42.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 01:27:42.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 01:27:42.326 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setNorm(D)V
[MASTER] 01:27:42.328 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.listOptions()Ljava/util/Enumeration;
[MASTER] 01:27:42.331 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.distributionForInstance(Lweka/core/Instance;)[D
[MASTER] 01:27:42.334 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V
[MASTER] 01:27:42.336 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 01:27:42.336 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V
[MASTER] 01:27:42.336 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setNorm(D)V
[MASTER] 01:27:42.337 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.listOptions()Ljava/util/Enumeration;
[MASTER] 01:27:42.351 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 01:27:42.352 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setPeriodicPruning(I)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setPeriodicPruning(I)V
[MASTER] 01:27:42.352 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setNormalizeDocLength(Z)V
* Search finished after 124s and 12 generations, 12395 statements, best individual has fitness: 4416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 217
* Number of covered goals: 159
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 50%
* Total number of goals: 428
* Number of covered goals: 212
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 260
* Number of covered goals: 208
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 428
* Number of covered goals: 212
* Generated 44 tests with total length 691
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 20 generations, 17772 statements, best individual has fitness: 3712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 338
* Number of covered goals: 228
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 194
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 476
* Number of covered goals: 362
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 112
* Number of covered goals: 45
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 56%
* Total number of goals: 194
* Number of covered goals: 108
* Generated 48 tests with total length 827
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 16 generations, 11538 statements, best individual has fitness: 14680.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 29%
* Total number of goals: 705
* Number of covered goals: 207
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 20%
* Total number of goals: 416
* Number of covered goals: 83
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 993
* Number of covered goals: 412
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 93
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 72
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 72
* Number of covered goals: 67
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 20%
* Total number of goals: 416
* Number of covered goals: 83
* Generated 46 tests with total length 872
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
[MASTER] 01:32:27.041 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1575423146994/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1575423146994/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.java]]
[MASTER] 01:32:27.041 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:32:27.041 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:32:27.045 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 01:32:27.046 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1575423146994/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 01:32:26 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NaiveBayesMultinomialText_11_tmp__ESTest extends NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
18: 
19:   /**
20:   //Test case number: 0
21:   /*Coverage entropy=1.1217186091313738
22:   */
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
26:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
28:       naiveBayesMultinomialText0.m_inputVector = null;
29:       String string0 = naiveBayesMultinomialText0.getRevision();
30:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
31:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
32:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
33:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
34:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
35:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
36:       assertEquals("9122", string0);
37:   }
38: }
RegularFileObject[/tmp/EvoSuite_11_1575423146994/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 01:32:26 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.core.neighboursearch.BallTree",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.trees.j48.C45ModelSelection",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.matrix.Matrix",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.classifiers.trees.REPTree",
138:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.estimators.DiscreteEstimator",
144:       "weka.classifiers.bayes.NaiveBayesUpdateable",
145:       "weka.core.neighboursearch.balltrees.BallSplitter",
146:       "weka.core.Version",
147:       "weka.classifiers.trees.lmt.ResidualModelSelection",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.filters.unsupervised.attribute.Center",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.filters.StreamableFilter",
154:       "weka.core.Range",
155:       "weka.classifiers.trees.REPTree$Tree",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.attributeSelection.AttributeTransformer",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.classifiers.functions.supportVector.Kernel",
172:       "weka.core.WekaPackageManager",
173:       "weka.filters.SupervisedFilter",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.tokenizers.AlphabeticTokenizer",
183:       "weka.core.FastVector",
184:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.core.neighboursearch.covertrees.Stack",
197:       "weka.filters.unsupervised.attribute.Remove",
198:       "weka.classifiers.trees.LMT",
199:       "weka.core.EuclideanDistance",
200:       "weka.core.Instances",
201:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
205:       "weka.filters.unsupervised.attribute.Standardize",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.core.TechnicalInformation",
208:       "weka.classifiers.Sourcable",
209:       "weka.core.RevisionHandler",
210:       "weka.classifiers.evaluation.output.prediction.PlainText",
211:       "weka.core.neighboursearch.TreePerformanceStats",
212:       "weka.core.xml.XMLSerialization",
213:       "weka.classifiers.xml.XMLClassifier",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.Option",
234:       "weka.core.AbstractInstance",
235:       "weka.core.SparseInstance",
236:       "weka.classifiers.functions.supportVector.Kernel",
237:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.UnassignedDatasetException",
240:       "weka.core.RevisionUtils",
241:       "weka.core.neighboursearch.NearestNeighbourSearch",
242:       "weka.core.neighboursearch.CoverTree",
243:       "weka.core.NormalizableDistance",
244:       "weka.core.EuclideanDistance",
245:       "weka.core.Range",
246:       "weka.core.Capabilities",
247:       "org.pentaho.packageManagement.PackageManager",
248:       "org.pentaho.packageManagement.DefaultPackageManager",
249:       "weka.core.Version",
250:       "weka.core.Environment",
251:       "weka.core.WekaPackageManager",
252:       "weka.core.neighboursearch.BallTree",
253:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
254:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
255:       "weka.core.neighboursearch.balltrees.BallSplitter",
256:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
258:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.classifiers.RandomizableClassifier",
263:       "weka.core.Tag",
264:       "weka.classifiers.functions.SGDText",
265:       "weka.classifiers.misc.SerializedClassifier",
266:       "weka.filters.Filter",
267:       "weka.filters.supervised.attribute.Discretize",
268:       "weka.classifiers.functions.SMO",
269:       "weka.classifiers.functions.supportVector.CachedKernel",
270:       "weka.classifiers.functions.supportVector.PolyKernel",
271:       "weka.core.SerializedObject",
272:       "weka.core.Instances",
273:       "weka.core.tokenizers.NGramTokenizer",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
276:       "weka.classifiers.meta.CostSensitiveClassifier",
277:       "weka.classifiers.rules.ZeroR",
278:       "weka.classifiers.CostMatrix",
279:       "weka.core.stemmers.SnowballStemmer",
280:       "weka.core.DenseInstance",
281:       "weka.core.neighboursearch.balltrees.BallNode",
282:       "weka.core.TestInstances",
283:       "weka.core.Attribute",
284:       "weka.core.ProtectedProperties",
285:       "weka.core.tokenizers.AlphabeticTokenizer",
286:       "weka.core.neighboursearch.LinearNNSearch",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.misc.InputMappedClassifier",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.Stopwords",
292:       "weka.classifiers.bayes.BayesNet",
293:       "weka.classifiers.bayes.net.BIFReader",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.TechnicalInformation",
300:       "weka.core.TechnicalInformation$Type",
301:       "weka.core.TechnicalInformation$Field",
302:       "weka.classifiers.bayes.NaiveBayes",
303:       "weka.estimators.Estimator",
304:       "weka.estimators.KernelEstimator",
305:       "weka.classifiers.bayes.NaiveBayesMultinomial",
306:       "weka.estimators.NormalEstimator",
307:       "weka.core.WekaEnumeration",
308:       "weka.core.Attribute$1",
309:       "weka.classifiers.trees.LMT",
310:       "weka.core.ManhattanDistance",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.filters.SimpleFilter",
315:       "weka.filters.SimpleStreamFilter",
316:       "weka.filters.MultiFilter",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.meta.CVParameterSelection",
319:       "weka.core.FastVector",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.attributeSelection.ReliefFAttributeEval",
323:       "weka.core.stemmers.Stemming",
324:       "weka.core.WekaException",
325:       "weka.attributeSelection.OneRAttributeEval",
326:       "weka.classifiers.functions.LinearRegression",
327:       "weka.classifiers.trees.J48",
328:       "weka.classifiers.trees.j48.ClassifierTree",
329:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
330:       "weka.classifiers.lazy.KStar",
331:       "weka.estimators.Estimator$Builder",
332:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.classifiers.lazy.IBk",
336:       "weka.classifiers.trees.REPTree",
337:       "weka.classifiers.rules.PART",
338:       "weka.classifiers.rules.part.MakeDecList",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.estimators.DiscreteEstimator",
341:       "weka.core.FindWithCapabilities",
342:       "weka.core.SingleIndex",
343:       "weka.classifiers.meta.RegressionByDiscretization",
344:       "weka.filters.unsupervised.attribute.Discretize",
345:       "weka.classifiers.MultipleClassifiersCombiner",
346:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Stacking",
349:       "weka.classifiers.functions.VotedPerceptron",
350:       "weka.attributeSelection.CfsSubsetEval",
351:       "weka.classifiers.functions.SMOreg",
352:       "weka.classifiers.functions.supportVector.RegOptimizer",
353:       "weka.classifiers.functions.supportVector.RegSMO",
354:       "weka.classifiers.functions.supportVector.RegSMOImproved",
355:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
356:       "weka.classifiers.meta.MultiScheme",
357:       "weka.classifiers.bayes.NaiveBayesUpdateable",
358:       "weka.estimators.PoissonEstimator",
359:       "weka.core.UnassignedClassException"
360:     );
361:   }
362: }

[MASTER] 01:32:27.046 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText1.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
String string0 = naiveBayesMultinomialText0.getRevision();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals("9122", string0);


[MASTER] 01:32:27.233 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_15_1575423147186/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_15_1575423147186/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.java]]
[MASTER] 01:32:27.234 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:32:27.234 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 01:32:27.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 01:32:27.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 01:32:27.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 01:32:27.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 01:32:27.234 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 01:32:27.236 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_15_1575423147186/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 01:32:27 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.tokenizers.AlphabeticTokenizer;
17: import weka.core.tokenizers.Tokenizer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_15_tmp__ESTest extends NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.9005822944550714
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
30:       Integer integer0 = new Integer((-2292));
31:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
32:       linkedHashMap0.putIfAbsent(integer0, linkedHashMap1);
33:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
34:       naiveBayesMultinomialText0.setNorm(3555.98462);
35:       AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
36:       String[] stringArray0 = new String[2];
37:       stringArray0[0] = ",\n   ";
38:       stringArray0[1] = ";LgJ6E61oLhidG>B-Id";
39:       Tokenizer.tokenize((Tokenizer) alphabeticTokenizer0, stringArray0);
40:       AlphabeticTokenizer.main(stringArray0);
41:       naiveBayesMultinomialText0.setTokenizer(alphabeticTokenizer0);
42:       naiveBayesMultinomialText0.getOptions();
43:       naiveBayesMultinomialText0.getStemmer();
44:       naiveBayesMultinomialText0.stemmerTipText();
45:       assertEquals(3555.98462, naiveBayesMultinomialText0.getNorm(), 0.01);
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_15_1575423147186/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 01:32:27 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.core.neighboursearch.BallTree",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.CoverTree$DistanceNode",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.core.neighboursearch.CoverTree$MyHeap",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.trees.j48.C45ModelSelection",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.filters.supervised.attribute.NominalToBinary",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
127:       "weka.core.SerializedObject",
128:       "weka.clusterers.UpdateableClusterer",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.Summarizable",
131:       "weka.core.AdditionalMeasureProducer",
132:       "weka.core.neighboursearch.balltrees.BallNode",
133:       "org.pentaho.packageManagement.PackageManager$1",
134:       "weka.core.Drawable",
135:       "weka.core.matrix.Matrix",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.classifiers.trees.REPTree",
138:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
139:       "weka.attributeSelection.ASEvaluation",
140:       "weka.core.AbstractInstance",
141:       "weka.core.scripting.JythonObject",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.estimators.DiscreteEstimator",
144:       "weka.classifiers.bayes.NaiveBayesUpdateable",
145:       "weka.core.neighboursearch.balltrees.BallSplitter",
146:       "weka.core.Version",
147:       "weka.classifiers.trees.lmt.ResidualModelSelection",
148:       "weka.core.neighboursearch.CoverTree",
149:       "weka.classifiers.AbstractClassifier",
150:       "weka.filters.unsupervised.attribute.Center",
151:       "weka.core.OptionHandler",
152:       "weka.core.WekaException",
153:       "weka.filters.StreamableFilter",
154:       "weka.core.Range",
155:       "weka.classifiers.trees.REPTree$Tree",
156:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
157:       "weka.core.PartitionGenerator",
158:       "weka.core.scripting.JythonSerializableObject",
159:       "weka.classifiers.Classifier",
160:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
161:       "weka.core.Capabilities$Capability",
162:       "weka.core.SparseInstance",
163:       "org.pentaho.packageManagement.PackageManager",
164:       "weka.attributeSelection.AttributeTransformer",
165:       "weka.core.tokenizers.WordTokenizer",
166:       "weka.classifiers.misc.SerializedClassifier",
167:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
168:       "weka.attributeSelection.PrincipalComponents",
169:       "weka.core.stemmers.SnowballStemmer",
170:       "weka.classifiers.Evaluation",
171:       "weka.classifiers.functions.supportVector.Kernel",
172:       "weka.core.WekaPackageManager",
173:       "weka.filters.SupervisedFilter",
174:       "weka.core.TechnicalInformationHandler",
175:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
176:       "weka.core.Option",
177:       "weka.core.neighboursearch.PerformanceStats",
178:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
179:       "weka.filters.Sourcable",
180:       "weka.core.Attribute",
181:       "weka.core.Stopwords",
182:       "weka.core.tokenizers.AlphabeticTokenizer",
183:       "weka.core.FastVector",
184:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
185:       "weka.core.UnassignedDatasetException",
186:       "weka.core.tokenizers.NGramTokenizer",
187:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.core.neighboursearch.covertrees.Stack",
197:       "weka.filters.unsupervised.attribute.Remove",
198:       "weka.classifiers.trees.LMT",
199:       "weka.core.EuclideanDistance",
200:       "weka.core.Instances",
201:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
202:       "weka.core.UnassignedClassException",
203:       "weka.classifiers.rules.ZeroR",
204:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
205:       "weka.filters.unsupervised.attribute.Standardize",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.core.TechnicalInformation",
208:       "weka.classifiers.Sourcable",
209:       "weka.core.RevisionHandler",
210:       "weka.classifiers.evaluation.output.prediction.PlainText",
211:       "weka.core.neighboursearch.TreePerformanceStats",
212:       "weka.core.xml.XMLSerialization",
213:       "weka.classifiers.xml.XMLClassifier",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.Option",
234:       "weka.core.AbstractInstance",
235:       "weka.core.SparseInstance",
236:       "weka.classifiers.functions.supportVector.Kernel",
237:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.UnassignedDatasetException",
240:       "weka.core.RevisionUtils",
241:       "weka.core.neighboursearch.NearestNeighbourSearch",
242:       "weka.core.neighboursearch.CoverTree",
243:       "weka.core.NormalizableDistance",
244:       "weka.core.EuclideanDistance",
245:       "weka.core.Range",
246:       "weka.core.Capabilities",
247:       "org.pentaho.packageManagement.PackageManager",
248:       "org.pentaho.packageManagement.DefaultPackageManager",
249:       "weka.core.Version",
250:       "weka.core.Environment",
251:       "weka.core.WekaPackageManager",
252:       "weka.core.neighboursearch.BallTree",
253:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
254:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
255:       "weka.core.neighboursearch.balltrees.BallSplitter",
256:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
257:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
258:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
259:       "weka.attributeSelection.ASEvaluation",
260:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
261:       "weka.attributeSelection.PrincipalComponents",
262:       "weka.classifiers.RandomizableClassifier",
263:       "weka.core.Tag",
264:       "weka.classifiers.functions.SGDText",
265:       "weka.classifiers.misc.SerializedClassifier",
266:       "weka.filters.Filter",
267:       "weka.filters.supervised.attribute.Discretize",
268:       "weka.classifiers.functions.SMO",
269:       "weka.classifiers.functions.supportVector.CachedKernel",
270:       "weka.classifiers.functions.supportVector.PolyKernel",
271:       "weka.core.SerializedObject",
272:       "weka.core.Instances",
273:       "weka.core.tokenizers.NGramTokenizer",
274:       "weka.classifiers.SingleClassifierEnhancer",
275:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
276:       "weka.classifiers.meta.CostSensitiveClassifier",
277:       "weka.classifiers.rules.ZeroR",
278:       "weka.classifiers.CostMatrix",
279:       "weka.core.stemmers.SnowballStemmer",
280:       "weka.core.DenseInstance",
281:       "weka.core.neighboursearch.balltrees.BallNode",
282:       "weka.core.TestInstances",
283:       "weka.core.Attribute",
284:       "weka.core.ProtectedProperties",
285:       "weka.core.tokenizers.AlphabeticTokenizer",
286:       "weka.core.neighboursearch.LinearNNSearch",
287:       "weka.core.stemmers.LovinsStemmer",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.misc.InputMappedClassifier",
290:       "weka.core.converters.ArffLoader$ArffReader",
291:       "weka.core.Stopwords",
292:       "weka.classifiers.bayes.BayesNet",
293:       "weka.classifiers.bayes.net.BIFReader",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.TechnicalInformation",
300:       "weka.core.TechnicalInformation$Type",
301:       "weka.core.TechnicalInformation$Field",
302:       "weka.classifiers.bayes.NaiveBayes",
303:       "weka.estimators.Estimator",
304:       "weka.estimators.KernelEstimator",
305:       "weka.classifiers.bayes.NaiveBayesMultinomial",
306:       "weka.estimators.NormalEstimator",
307:       "weka.core.WekaEnumeration",
308:       "weka.core.Attribute$1",
309:       "weka.classifiers.trees.LMT",
310:       "weka.core.ManhattanDistance",
311:       "weka.core.neighboursearch.KDTree",
312:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
313:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
314:       "weka.filters.SimpleFilter",
315:       "weka.filters.SimpleStreamFilter",
316:       "weka.filters.MultiFilter",
317:       "weka.filters.AllFilter",
318:       "weka.classifiers.meta.CVParameterSelection",
319:       "weka.core.FastVector",
320:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
321:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
322:       "weka.attributeSelection.ReliefFAttributeEval",
323:       "weka.core.stemmers.Stemming",
324:       "weka.core.WekaException",
325:       "weka.attributeSelection.OneRAttributeEval",
326:       "weka.classifiers.functions.LinearRegression",
327:       "weka.classifiers.trees.J48",
328:       "weka.classifiers.trees.j48.ClassifierTree",
329:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
330:       "weka.classifiers.lazy.KStar",
331:       "weka.estimators.Estimator$Builder",
332:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
333:       "weka.classifiers.lazy.LWL",
334:       "weka.classifiers.trees.DecisionStump",
335:       "weka.classifiers.lazy.IBk",
336:       "weka.classifiers.trees.REPTree",
337:       "weka.classifiers.rules.PART",
338:       "weka.classifiers.rules.part.MakeDecList",
339:       "weka.classifiers.functions.supportVector.Puk",
340:       "weka.estimators.DiscreteEstimator",
341:       "weka.core.FindWithCapabilities",
342:       "weka.core.SingleIndex",
343:       "weka.classifiers.meta.RegressionByDiscretization",
344:       "weka.filters.unsupervised.attribute.Discretize",
345:       "weka.classifiers.MultipleClassifiersCombiner",
346:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Stacking",
349:       "weka.classifiers.functions.VotedPerceptron",
350:       "weka.attributeSelection.CfsSubsetEval",
351:       "weka.classifiers.functions.SMOreg",
352:       "weka.classifiers.functions.supportVector.RegOptimizer",
353:       "weka.classifiers.functions.supportVector.RegSMO",
354:       "weka.classifiers.functions.supportVector.RegSMOImproved",
355:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
356:       "weka.classifiers.meta.MultiScheme",
357:       "weka.classifiers.bayes.NaiveBayesUpdateable",
358:       "weka.estimators.PoissonEstimator",
359:       "weka.core.UnassignedClassException"
360:     );
361:   }
362: }

[MASTER] 01:32:27.237 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer((-2292));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.putIfAbsent(integer0, linkedHashMap1);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.setNorm(3555.98462);
AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
String[] stringArray0 = new String[2];
stringArray0[0] = ",\n   ";
stringArray0[1] = ";LgJ6E61oLhidG>B-Id";
Tokenizer.tokenize((Tokenizer) alphabeticTokenizer0, stringArray0);
AlphabeticTokenizer.main(stringArray0);
naiveBayesMultinomialText0.setTokenizer(alphabeticTokenizer0);
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.stemmerTipText();
assertEquals(3555.98462, naiveBayesMultinomialText0.getNorm(), 0.01);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/107_weka/evosuite-tests
* Done!

* Computation finished
