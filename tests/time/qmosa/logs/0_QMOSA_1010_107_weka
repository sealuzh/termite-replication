* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21353
* Connecting to master process on port 21352
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:08:16.563 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:08:16.580 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:08:16.581 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:08:16.742 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:08:16.760 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:08:16.761 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 21:08:21.233 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:08:21.267 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:08:21.269 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:08:24.331 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:08:25.247 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:08:25.248 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 21:08:31.025 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
* Search finished after 123s and 39 generations, 25719 statements, best individual has fitness: 9408.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 370
* Number of covered goals: 147
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 58
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 26%
* Total number of goals: 713
* Number of covered goals: 183
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 35%
* Total number of goals: 72
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 58
* Generated 43 tests with total length 645
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 16 generations, 12354 statements, best individual has fitness: 14656.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 29%
* Total number of goals: 705
* Number of covered goals: 206
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 20%
* Total number of goals: 416
* Number of covered goals: 83
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 993
* Number of covered goals: 410
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 93
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 72
* Number of covered goals: 68
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 72
* Number of covered goals: 68
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 20%
* Total number of goals: 416
* Number of covered goals: 83
* Generated 50 tests with total length 1083
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 21:11:55.033 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:11:55.535 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
[MASTER] 21:12:32.863 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<117> but was:<116>
[MASTER] 21:12:32.864 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BayesNet bayesNet0 = new BayesNet();
bayesNet0.measureReversedArcs();
LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
Environment environment0 = new Environment();
Set<String> set0 = environment0.getVariableNames();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
assertEquals(117, set0.size());

JRip jRip0 = new JRip();
jRip0.getSeed();
jRip0.enumerateMeasures();
double double0 = jRip0.getMinNo();
assertEquals(2.0, double0, 0.01);


* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21348
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21349
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:13:15.315 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:13:15.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:13:15.342 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:13:15.348 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 21:13:22.420 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 124s and 9 generations, 11394 statements, best individual has fitness: 3992.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 217
* Number of covered goals: 169
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 428
* Number of covered goals: 232
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 260
* Number of covered goals: 213
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 428
* Number of covered goals: 230
* Generated 43 tests with total length 923
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 32 generations, 31149 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 17 tests with total length 456
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21351
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21346
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:23:54.639 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:23:54.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:23:54.659 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:23:54.703 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:24:17.329 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:24:17.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:24:17.337 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:24:18.376 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:24:19.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:24:19.109 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:24:21.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:24:21.142 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:24:21.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:24:21.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:24:21.146 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:24:21.147 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:24:21.147 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:24:21.148 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:24:21.149 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 21:24:21.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 21:24:21.230 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 21:24:58.315 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 130s and 2 generations, 2186 statements, best individual has fitness: 6328.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 647
* Number of covered goals: 573
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 441
* Number of covered goals: 342
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 678
* Number of covered goals: 508
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 244
* Number of covered goals: 54
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 66%
* Total number of goals: 124
* Number of covered goals: 82
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 66%
* Total number of goals: 124
* Number of covered goals: 82
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 441
* Number of covered goals: 273
* Generated 47 tests with total length 979
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 17 generations, 13542 statements, best individual has fitness: 20424.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 42%
* Total number of goals: 1378
* Number of covered goals: 580
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 31%
* Total number of goals: 809
* Number of covered goals: 250
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 424
* Number of covered goals: 197
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 11%
* Total number of goals: 278
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 67%
* Total number of goals: 103
* Number of covered goals: 69
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 66%
* Total number of goals: 103
* Number of covered goals: 68
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 22%
* Total number of goals: 809
* Number of covered goals: 176
* Generated 73 tests with total length 1577
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 21:34:35.245 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
[MASTER] 21:34:40.236 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:34:40.983 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:34:40.983 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 21:34:41.746 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21348
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:35:50.240 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:35:50.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:35:50.260 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:35:50.322 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:35:50.329 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:35:50.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1010
* Starting evolution
[MASTER] 21:36:03.192 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;:NonNull
[MASTER] 21:36:03.198 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 21:36:03.206 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;
[MASTER] 21:36:03.208 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getTokenizer()Lweka/core/tokenizers/Tokenizer;
* Search finished after 123s and 21 generations, 16743 statements, best individual has fitness: 4128.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 64%
* Total number of goals: 338
* Number of covered goals: 216
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 194
* Number of covered goals: 106
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 70%
* Total number of goals: 476
* Number of covered goals: 332
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 112
* Number of covered goals: 42
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 194
* Number of covered goals: 105
* Generated 46 tests with total length 775
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 32%
* Compiling and checking tests
[MASTER] 21:42:48.626 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1575409368536/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1575409368536/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.java]]
[MASTER] 21:42:48.626 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:42:48.626 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:42:48.630 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 32
[MASTER] 21:42:48.631 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1575409368536/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 21:42:48 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.stemmers.SnowballStemmer;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_2_tmp__ESTest extends NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.678706058817701
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       naiveBayesMultinomialText0.stemmerTipText();
32:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
33:       MockFile.createTempFile("The stemming algorithm to use on the words.", "");
34:       MockFile mockFile0 = new MockFile("The stemming algorithm to use on the words.");
35:       mockFile0.delete();
36:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The stemming algorithm to use on the words.0");
37:       FileSystemHandling.appendLineToFile(evoSuiteFile0, "weka.classifiers.bayes.net.estimate.SimpleEstimator");
38:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("");
39:       snowballStemmer0.setOptions((String[]) null);
40:       naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
41:       naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
42:       naiveBayesMultinomialText0.useStopListTipText();
43:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
44:       naiveBayesMultinomialText1.minWordFrequencyTipText();
45:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
46:       naiveBayesMultinomialText1.setLNorm(0.0);
47:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
48:       naiveBayesMultinomialText2.lowercaseTokensTipText();
49:       NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
50:       naiveBayesMultinomialText3.tokenizerTipText();
51:       assertEquals(2.0, naiveBayesMultinomialText3.getLNorm(), 0.01);
52:       
53:       naiveBayesMultinomialText1.normTipText();
54:       assertEquals(0.0, naiveBayesMultinomialText1.getLNorm(), 0.01);
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_2_1575409368536/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 21:42:48 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "weka.attributeSelection.AttributeEvaluator",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.neighboursearch.CoverTree$MyHeap",
105:       "weka.core.stemmers.NullStemmer",
106:       "weka.classifiers.functions.SGDText",
107:       "weka.core.RelationalLocator",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.TechnicalInformation$Type",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.core.AttributeLocator",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
121:       "weka.core.BinarySparseInstance",
122:       "weka.core.SerializedObject",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "org.pentaho.packageManagement.PackageManager$1",
126:       "weka.core.Drawable",
127:       "weka.core.matrix.Matrix",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.attributeSelection.ASEvaluation",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.attributeSelection.CorrelationAttributeEval",
135:       "weka.core.Version",
136:       "weka.core.Tag",
137:       "weka.core.neighboursearch.CoverTree",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.core.OptionHandler",
140:       "weka.core.WekaException",
141:       "weka.core.Range",
142:       "weka.core.scripting.JythonSerializableObject",
143:       "weka.classifiers.Classifier",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
145:       "weka.core.Capabilities$Capability",
146:       "weka.core.SparseInstance",
147:       "org.pentaho.packageManagement.PackageManager",
148:       "weka.core.tokenizers.WordTokenizer",
149:       "weka.classifiers.misc.SerializedClassifier",
150:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
151:       "weka.core.stemmers.SnowballStemmer",
152:       "weka.classifiers.Evaluation",
153:       "weka.classifiers.functions.supportVector.Kernel",
154:       "weka.core.WekaPackageManager",
155:       "weka.filters.SupervisedFilter",
156:       "weka.core.TechnicalInformationHandler",
157:       "weka.classifiers.lazy.LWL",
158:       "weka.core.neighboursearch.LinearNNSearch",
159:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
160:       "weka.core.Option",
161:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
162:       "weka.core.neighboursearch.PerformanceStats",
163:       "weka.filters.Sourcable",
164:       "weka.core.Attribute",
165:       "weka.core.Stopwords",
166:       "weka.core.tokenizers.AlphabeticTokenizer",
167:       "weka.core.FastVector",
168:       "weka.core.UnassignedDatasetException",
169:       "weka.core.tokenizers.NGramTokenizer",
170:       "weka.classifiers.RandomizableClassifier",
171:       "weka.classifiers.SingleClassifierEnhancer",
172:       "weka.core.RevisionUtils",
173:       "weka.core.Instance",
174:       "weka.core.ProtectedProperties",
175:       "weka.core.StringLocator",
176:       "weka.core.AttributeStats",
177:       "weka.core.WeightedInstancesHandler",
178:       "weka.core.neighboursearch.NearestNeighbourSearch",
179:       "weka.classifiers.trees.DecisionStump",
180:       "weka.core.TechnicalInformation$Field",
181:       "weka.core.neighboursearch.covertrees.Stack",
182:       "weka.core.Randomizable",
183:       "weka.classifiers.functions.SGD",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
187:       "weka.core.UnassignedClassException",
188:       "weka.classifiers.rules.ZeroR",
189:       "weka.core.UnsupportedAttributeTypeException",
190:       "weka.core.TechnicalInformation",
191:       "weka.classifiers.Sourcable",
192:       "weka.core.RevisionHandler",
193:       "weka.classifiers.evaluation.output.prediction.PlainText",
194:       "weka.core.neighboursearch.TreePerformanceStats",
195:       "weka.core.xml.XMLSerialization",
196:       "weka.classifiers.xml.XMLClassifier",
197:       "weka.filters.Filter",
198:       "weka.classifiers.lazy.IBk",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.stemmers.LovinsStemmer",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.core.TechnicalInformation",
221:       "weka.core.TechnicalInformation$Type",
222:       "weka.core.TechnicalInformation$Field",
223:       "weka.core.AbstractInstance",
224:       "weka.core.DenseInstance",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.neighboursearch.KDTree",
227:       "weka.core.NormalizableDistance",
228:       "weka.core.EuclideanDistance",
229:       "weka.core.Range",
230:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
231:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
232:       "weka.classifiers.misc.SerializedClassifier",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.BallTree",
239:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
240:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
241:       "weka.core.neighboursearch.balltrees.BallSplitter",
242:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.Instances",
247:       "weka.core.converters.ArffLoader$ArffReader",
248:       "weka.core.RevisionUtils",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.core.Attribute",
252:       "weka.core.ProtectedProperties",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.classifiers.trees.J48",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.SingleClassifierEnhancer",
257:       "weka.classifiers.misc.InputMappedClassifier",
258:       "weka.classifiers.rules.ZeroR",
259:       "weka.core.neighboursearch.LinearNNSearch",
260:       "weka.classifiers.RandomizableClassifier",
261:       "weka.core.Tag",
262:       "weka.classifiers.functions.SGDText",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.core.Capabilities",
270:       "org.pentaho.packageManagement.PackageManager",
271:       "org.pentaho.packageManagement.DefaultPackageManager",
272:       "weka.core.Version",
273:       "weka.core.Environment",
274:       "weka.core.WekaPackageManager",
275:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
276:       "weka.classifiers.lazy.LWL",
277:       "weka.classifiers.trees.DecisionStump",
278:       "weka.core.tokenizers.NGramTokenizer",
279:       "weka.core.stemmers.Stemming",
280:       "weka.core.Stopwords",
281:       "weka.classifiers.bayes.net.BIFReader",
282:       "weka.classifiers.functions.supportVector.Kernel",
283:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
284:       "weka.classifiers.bayes.NaiveBayesMultinomial",
285:       "weka.core.TestInstances",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.classifiers.CostMatrix",
290:       "weka.classifiers.bayes.NaiveBayes",
291:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
292:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
293:       "weka.core.neighboursearch.CoverTree",
294:       "weka.attributeSelection.CorrelationAttributeEval",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
297:       "weka.core.converters.ConverterUtils$DataSource",
298:       "weka.core.converters.AbstractLoader",
299:       "weka.core.converters.AbstractFileLoader",
300:       "weka.core.converters.ArffLoader",
301:       "weka.attributeSelection.OneRAttributeEval",
302:       "weka.classifiers.IteratedSingleClassifierEnhancer",
303:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
304:       "weka.classifiers.meta.AdaBoostM1",
305:       "weka.classifiers.MultipleClassifiersCombiner",
306:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
307:       "weka.classifiers.meta.MultiScheme",
308:       "weka.classifiers.meta.AttributeSelectedClassifier",
309:       "weka.attributeSelection.CfsSubsetEval",
310:       "weka.attributeSelection.ASSearch",
311:       "weka.attributeSelection.BestFirst",
312:       "weka.core.WekaException",
313:       "weka.classifiers.trees.m5.M5Base",
314:       "weka.classifiers.rules.M5Rules",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.classifiers.functions.GaussianProcesses",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.trees.RandomTree",
321:       "weka.filters.SimpleFilter",
322:       "weka.filters.SimpleStreamFilter",
323:       "weka.filters.MultiFilter",
324:       "weka.filters.AllFilter",
325:       "weka.classifiers.functions.SimpleLinearRegression",
326:       "weka.classifiers.functions.SGD",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.CVParameterSelection",
330:       "weka.core.FastVector",
331:       "weka.classifiers.functions.SMO",
332:       "weka.classifiers.functions.VotedPerceptron",
333:       "weka.classifiers.rules.JRip",
334:       "weka.core.UnassignedClassException"
335:     );
336:   }
337: }

[MASTER] 21:42:48.632 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.stemmerTipText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
MockFile.createTempFile("The stemming algorithm to use on the words.", "");
MockFile mockFile0 = new MockFile("The stemming algorithm to use on the words.");
mockFile0.delete();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The stemming algorithm to use on the words.0");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "weka.classifiers.bayes.net.estimate.SimpleEstimator");
SnowballStemmer snowballStemmer0 = new SnowballStemmer("");
snowballStemmer0.setOptions((String[]) null);
naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
naiveBayesMultinomialText0.useStopListTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.minWordFrequencyTipText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText1.setLNorm(0.0);
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.lowercaseTokensTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText3 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText3.tokenizerTipText();
assertEquals(2.0, naiveBayesMultinomialText3.getLNorm(), 0.01);

naiveBayesMultinomialText1.normTipText();
assertEquals(0.0, naiveBayesMultinomialText1.getLNorm(), 0.01);


[MASTER] 21:42:48.880 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_5_1575409368814/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_5_1575409368814/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.java]]
[MASTER] 21:42:48.880 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:42:48.880 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:42:48.881 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 34
[MASTER] 21:42:48.881 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_5_1575409368814/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 21:42:48 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.System;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.stemmers.SnowballStemmer;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_5_tmp__ESTest extends NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.7787755691845217
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.stemmerTipText();
34:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
35:       File file0 = MockFile.createTempFile("The stemming algorithm to use on the words.", "");
36:       file0.toPath();
37:       naiveBayesMultinomialText0.setLowercaseTokens(true);
38:       file0.delete();
39:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The stemming algorithm to use on the words.0");
40:       FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
41:       naiveBayesMultinomialText0.m_stopwordsFile = file0;
42:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
43:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("The stemming algorithm to use on the words.");
44:       naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
45:       naiveBayesMultinomialText0.useStopListTipText();
46:       naiveBayesMultinomialText0.minWordFrequencyTipText();
47:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
48:       naiveBayesMultinomialText0.setLNorm(0.0);
49:       naiveBayesMultinomialText0.lowercaseTokensTipText();
50:       naiveBayesMultinomialText0.tokenizerTipText();
51:       System.setCurrentTimeMillis(42L);
52:       naiveBayesMultinomialText0.getStemmer();
53:       assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_5_1575409368814/weka/classifiers/bayes/NaiveBayesMultinomialText_5_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 21:42:48 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "weka.attributeSelection.AttributeEvaluator",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.neighboursearch.CoverTree$MyHeap",
105:       "weka.core.stemmers.NullStemmer",
106:       "weka.classifiers.functions.SGDText",
107:       "weka.core.RelationalLocator",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.TechnicalInformation$Type",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.core.AttributeLocator",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
121:       "weka.core.BinarySparseInstance",
122:       "weka.core.SerializedObject",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "org.pentaho.packageManagement.PackageManager$1",
126:       "weka.core.Drawable",
127:       "weka.core.matrix.Matrix",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.attributeSelection.ASEvaluation",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.attributeSelection.CorrelationAttributeEval",
135:       "weka.core.Version",
136:       "weka.core.Tag",
137:       "weka.core.neighboursearch.CoverTree",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.core.OptionHandler",
140:       "weka.core.WekaException",
141:       "weka.core.Range",
142:       "weka.core.scripting.JythonSerializableObject",
143:       "weka.classifiers.Classifier",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
145:       "weka.core.Capabilities$Capability",
146:       "weka.core.SparseInstance",
147:       "org.pentaho.packageManagement.PackageManager",
148:       "weka.core.tokenizers.WordTokenizer",
149:       "weka.classifiers.misc.SerializedClassifier",
150:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
151:       "weka.core.stemmers.SnowballStemmer",
152:       "weka.classifiers.Evaluation",
153:       "weka.classifiers.functions.supportVector.Kernel",
154:       "weka.core.WekaPackageManager",
155:       "weka.filters.SupervisedFilter",
156:       "weka.core.TechnicalInformationHandler",
157:       "weka.classifiers.lazy.LWL",
158:       "weka.core.neighboursearch.LinearNNSearch",
159:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
160:       "weka.core.Option",
161:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
162:       "weka.core.neighboursearch.PerformanceStats",
163:       "weka.filters.Sourcable",
164:       "weka.core.Attribute",
165:       "weka.core.Stopwords",
166:       "weka.core.tokenizers.AlphabeticTokenizer",
167:       "weka.core.FastVector",
168:       "weka.core.UnassignedDatasetException",
169:       "weka.core.tokenizers.NGramTokenizer",
170:       "weka.classifiers.RandomizableClassifier",
171:       "weka.classifiers.SingleClassifierEnhancer",
172:       "weka.core.RevisionUtils",
173:       "weka.core.Instance",
174:       "weka.core.ProtectedProperties",
175:       "weka.core.StringLocator",
176:       "weka.core.AttributeStats",
177:       "weka.core.WeightedInstancesHandler",
178:       "weka.core.neighboursearch.NearestNeighbourSearch",
179:       "weka.classifiers.trees.DecisionStump",
180:       "weka.core.TechnicalInformation$Field",
181:       "weka.core.neighboursearch.covertrees.Stack",
182:       "weka.core.Randomizable",
183:       "weka.classifiers.functions.SGD",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
187:       "weka.core.UnassignedClassException",
188:       "weka.classifiers.rules.ZeroR",
189:       "weka.core.UnsupportedAttributeTypeException",
190:       "weka.core.TechnicalInformation",
191:       "weka.classifiers.Sourcable",
192:       "weka.core.RevisionHandler",
193:       "weka.classifiers.evaluation.output.prediction.PlainText",
194:       "weka.core.neighboursearch.TreePerformanceStats",
195:       "weka.core.xml.XMLSerialization",
196:       "weka.classifiers.xml.XMLClassifier",
197:       "weka.filters.Filter",
198:       "weka.classifiers.lazy.IBk",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_5_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.stemmers.LovinsStemmer",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.core.TechnicalInformation",
221:       "weka.core.TechnicalInformation$Type",
222:       "weka.core.TechnicalInformation$Field",
223:       "weka.core.AbstractInstance",
224:       "weka.core.DenseInstance",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.neighboursearch.KDTree",
227:       "weka.core.NormalizableDistance",
228:       "weka.core.EuclideanDistance",
229:       "weka.core.Range",
230:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
231:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
232:       "weka.classifiers.misc.SerializedClassifier",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.BallTree",
239:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
240:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
241:       "weka.core.neighboursearch.balltrees.BallSplitter",
242:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.Instances",
247:       "weka.core.converters.ArffLoader$ArffReader",
248:       "weka.core.RevisionUtils",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.core.Attribute",
252:       "weka.core.ProtectedProperties",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.classifiers.trees.J48",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.SingleClassifierEnhancer",
257:       "weka.classifiers.misc.InputMappedClassifier",
258:       "weka.classifiers.rules.ZeroR",
259:       "weka.core.neighboursearch.LinearNNSearch",
260:       "weka.classifiers.RandomizableClassifier",
261:       "weka.core.Tag",
262:       "weka.classifiers.functions.SGDText",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.core.Capabilities",
270:       "org.pentaho.packageManagement.PackageManager",
271:       "org.pentaho.packageManagement.DefaultPackageManager",
272:       "weka.core.Version",
273:       "weka.core.Environment",
274:       "weka.core.WekaPackageManager",
275:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
276:       "weka.classifiers.lazy.LWL",
277:       "weka.classifiers.trees.DecisionStump",
278:       "weka.core.tokenizers.NGramTokenizer",
279:       "weka.core.stemmers.Stemming",
280:       "weka.core.Stopwords",
281:       "weka.classifiers.bayes.net.BIFReader",
282:       "weka.classifiers.functions.supportVector.Kernel",
283:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
284:       "weka.classifiers.bayes.NaiveBayesMultinomial",
285:       "weka.core.TestInstances",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.classifiers.CostMatrix",
290:       "weka.classifiers.bayes.NaiveBayes",
291:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
292:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
293:       "weka.core.neighboursearch.CoverTree",
294:       "weka.attributeSelection.CorrelationAttributeEval",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
297:       "weka.core.converters.ConverterUtils$DataSource",
298:       "weka.core.converters.AbstractLoader",
299:       "weka.core.converters.AbstractFileLoader",
300:       "weka.core.converters.ArffLoader",
301:       "weka.attributeSelection.OneRAttributeEval",
302:       "weka.classifiers.IteratedSingleClassifierEnhancer",
303:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
304:       "weka.classifiers.meta.AdaBoostM1",
305:       "weka.classifiers.MultipleClassifiersCombiner",
306:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
307:       "weka.classifiers.meta.MultiScheme",
308:       "weka.classifiers.meta.AttributeSelectedClassifier",
309:       "weka.attributeSelection.CfsSubsetEval",
310:       "weka.attributeSelection.ASSearch",
311:       "weka.attributeSelection.BestFirst",
312:       "weka.core.WekaException",
313:       "weka.classifiers.trees.m5.M5Base",
314:       "weka.classifiers.rules.M5Rules",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.classifiers.functions.GaussianProcesses",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.trees.RandomTree",
321:       "weka.filters.SimpleFilter",
322:       "weka.filters.SimpleStreamFilter",
323:       "weka.filters.MultiFilter",
324:       "weka.filters.AllFilter",
325:       "weka.classifiers.functions.SimpleLinearRegression",
326:       "weka.classifiers.functions.SGD",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.CVParameterSelection",
330:       "weka.core.FastVector",
331:       "weka.classifiers.functions.SMO",
332:       "weka.classifiers.functions.VotedPerceptron",
333:       "weka.classifiers.rules.JRip",
334:       "weka.core.UnassignedClassException"
335:     );
336:   }
337: }

[MASTER] 21:42:48.882 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.stemmerTipText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
File file0 = MockFile.createTempFile("The stemming algorithm to use on the words.", "");
file0.toPath();
naiveBayesMultinomialText0.setLowercaseTokens(true);
file0.delete();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The stemming algorithm to use on the words.0");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
naiveBayesMultinomialText0.m_stopwordsFile = file0;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
SnowballStemmer snowballStemmer0 = new SnowballStemmer("The stemming algorithm to use on the words.");
naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.setLNorm(0.0);
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.tokenizerTipText();
System.setCurrentTimeMillis(42L);
naiveBayesMultinomialText0.getStemmer();
assertTrue(naiveBayesMultinomialText0.getLowercaseTokens());


[MASTER] 21:42:50.379 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_39_1575409370346/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_39_1575409370346/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.java]]
[MASTER] 21:42:50.379 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:42:50.379 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 21:42:50.380 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 21:42:50.380 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_39_1575409370346/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 21:42:50 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.stemmers.SnowballStemmer;
22: import weka.filters.supervised.attribute.Discretize;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_39_tmp__ESTest extends NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=3.358693545177819
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       naiveBayesMultinomialText0.stemmerTipText();
35:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
36:       File file0 = MockFile.createTempFile("The stemming algorithm to use on the words.", "");
37:       file0.delete();
38:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The stemming algorithm to use on the words.0");
39:       FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
40:       naiveBayesMultinomialText0.m_stopwordsFile = file0;
41:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
42:       SnowballStemmer snowballStemmer0 = new SnowballStemmer("The stemming algorithm to use on the words.");
43:       snowballStemmer0.setOptions((String[]) null);
44:       naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
45:       naiveBayesMultinomialText0.setNorm(3660.1222840265);
46:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
47:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
48:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
49:       naiveBayesMultinomialText2.setMinWordFrequency(1.0);
50:       naiveBayesMultinomialText2.pruneDictionary();
51:       naiveBayesMultinomialText0.setOptions(stringArray0);
52:       Discretize discretize0 = new Discretize();
53:       discretize0.getTechnicalInformation();
54:       // Undeclared exception!
55:       try { 
56:         discretize0.outputPeek();
57:         fail("Expecting exception: NullPointerException");
58:       
59:       } catch(NullPointerException e) {
60:          //
61:          // No output instance format defined
62:          //
63:          verifyException("weka.filters.Filter", e);
64:       }
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_39_1575409370346/weka/classifiers/bayes/NaiveBayesMultinomialText_39_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 21:42:50 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "weka.attributeSelection.AttributeEvaluator",
93:       "org.pentaho.packageManagement.Package",
94:       "weka.core.xml.XMLBasicSerialization",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.CoverTree$DistanceNode",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "org.pentaho.packageManagement.DefaultPackageManager",
103:       "org.bounce.net.DefaultAuthenticator",
104:       "weka.core.neighboursearch.CoverTree$MyHeap",
105:       "weka.core.stemmers.NullStemmer",
106:       "weka.classifiers.functions.SGDText",
107:       "weka.core.RelationalLocator",
108:       "weka.core.Utils",
109:       "weka.core.CustomDisplayStringProvider",
110:       "weka.core.tokenizers.Tokenizer",
111:       "weka.core.NormalizableDistance",
112:       "weka.core.NoSupportForMissingValuesException",
113:       "weka.classifiers.UpdateableClassifier",
114:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
115:       "weka.core.TechnicalInformation$Type",
116:       "weka.core.MultiInstanceCapabilitiesHandler",
117:       "weka.core.Copyable",
118:       "weka.core.Capabilities",
119:       "weka.core.AttributeLocator",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
121:       "weka.core.BinarySparseInstance",
122:       "weka.core.SerializedObject",
123:       "weka.core.Summarizable",
124:       "weka.core.AdditionalMeasureProducer",
125:       "org.pentaho.packageManagement.PackageManager$1",
126:       "weka.core.Drawable",
127:       "weka.core.matrix.Matrix",
128:       "weka.core.CapabilitiesHandler",
129:       "weka.attributeSelection.ASEvaluation",
130:       "weka.core.AbstractInstance",
131:       "weka.core.scripting.JythonObject",
132:       "weka.core.SelectedTag",
133:       "org.pentaho.packageManagement.DefaultPackage",
134:       "weka.attributeSelection.CorrelationAttributeEval",
135:       "weka.core.Version",
136:       "weka.core.Tag",
137:       "weka.core.neighboursearch.CoverTree",
138:       "weka.classifiers.AbstractClassifier",
139:       "weka.core.OptionHandler",
140:       "weka.core.WekaException",
141:       "weka.core.Range",
142:       "weka.core.scripting.JythonSerializableObject",
143:       "weka.classifiers.Classifier",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
145:       "weka.core.Capabilities$Capability",
146:       "weka.core.SparseInstance",
147:       "org.pentaho.packageManagement.PackageManager",
148:       "weka.core.tokenizers.WordTokenizer",
149:       "weka.classifiers.misc.SerializedClassifier",
150:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
151:       "weka.core.stemmers.SnowballStemmer",
152:       "weka.classifiers.Evaluation",
153:       "weka.classifiers.functions.supportVector.Kernel",
154:       "weka.core.WekaPackageManager",
155:       "weka.filters.SupervisedFilter",
156:       "weka.core.TechnicalInformationHandler",
157:       "weka.classifiers.lazy.LWL",
158:       "weka.core.neighboursearch.LinearNNSearch",
159:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
160:       "weka.core.Option",
161:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
162:       "weka.core.neighboursearch.PerformanceStats",
163:       "weka.filters.Sourcable",
164:       "weka.core.Attribute",
165:       "weka.core.Stopwords",
166:       "weka.core.tokenizers.AlphabeticTokenizer",
167:       "weka.core.FastVector",
168:       "weka.core.UnassignedDatasetException",
169:       "weka.core.tokenizers.NGramTokenizer",
170:       "weka.classifiers.RandomizableClassifier",
171:       "weka.classifiers.SingleClassifierEnhancer",
172:       "weka.core.RevisionUtils",
173:       "weka.core.Instance",
174:       "weka.core.ProtectedProperties",
175:       "weka.core.StringLocator",
176:       "weka.core.AttributeStats",
177:       "weka.core.WeightedInstancesHandler",
178:       "weka.core.neighboursearch.NearestNeighbourSearch",
179:       "weka.classifiers.trees.DecisionStump",
180:       "weka.core.TechnicalInformation$Field",
181:       "weka.core.neighboursearch.covertrees.Stack",
182:       "weka.core.Randomizable",
183:       "weka.classifiers.functions.SGD",
184:       "weka.core.EuclideanDistance",
185:       "weka.core.Instances",
186:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
187:       "weka.core.UnassignedClassException",
188:       "weka.classifiers.rules.ZeroR",
189:       "weka.core.UnsupportedAttributeTypeException",
190:       "weka.core.TechnicalInformation",
191:       "weka.classifiers.Sourcable",
192:       "weka.core.RevisionHandler",
193:       "weka.classifiers.evaluation.output.prediction.PlainText",
194:       "weka.core.neighboursearch.TreePerformanceStats",
195:       "weka.core.xml.XMLSerialization",
196:       "weka.classifiers.xml.XMLClassifier",
197:       "weka.filters.Filter",
198:       "weka.classifiers.lazy.IBk",
199:       "weka.filters.supervised.attribute.Discretize"
200:     );
201:   } 
202: 
203:   private static void resetClasses() {
204:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_39_tmp__ESTest_scaffolding.class.getClassLoader()); 
205: 
206:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
207:       "weka.classifiers.AbstractClassifier",
208:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
209:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
210:       "weka.core.Capabilities$Capability",
211:       "weka.core.tokenizers.Tokenizer",
212:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
213:       "weka.core.tokenizers.WordTokenizer",
214:       "weka.core.stemmers.NullStemmer",
215:       "weka.classifiers.Evaluation",
216:       "weka.core.Utils",
217:       "weka.core.Option",
218:       "weka.core.stemmers.LovinsStemmer",
219:       "weka.core.stemmers.IteratedLovinsStemmer",
220:       "weka.core.TechnicalInformation",
221:       "weka.core.TechnicalInformation$Type",
222:       "weka.core.TechnicalInformation$Field",
223:       "weka.core.AbstractInstance",
224:       "weka.core.DenseInstance",
225:       "weka.core.neighboursearch.NearestNeighbourSearch",
226:       "weka.core.neighboursearch.KDTree",
227:       "weka.core.NormalizableDistance",
228:       "weka.core.EuclideanDistance",
229:       "weka.core.Range",
230:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
231:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
232:       "weka.classifiers.misc.SerializedClassifier",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.SparseInstance",
236:       "weka.core.BinarySparseInstance",
237:       "weka.core.UnassignedDatasetException",
238:       "weka.core.neighboursearch.BallTree",
239:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
240:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
241:       "weka.core.neighboursearch.balltrees.BallSplitter",
242:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
243:       "weka.attributeSelection.ASEvaluation",
244:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
245:       "weka.attributeSelection.PrincipalComponents",
246:       "weka.core.Instances",
247:       "weka.core.converters.ArffLoader$ArffReader",
248:       "weka.core.RevisionUtils",
249:       "weka.core.stemmers.SnowballStemmer",
250:       "weka.core.tokenizers.AlphabeticTokenizer",
251:       "weka.core.Attribute",
252:       "weka.core.ProtectedProperties",
253:       "weka.core.neighboursearch.balltrees.BallNode",
254:       "weka.classifiers.trees.J48",
255:       "weka.core.SerializedObject",
256:       "weka.classifiers.SingleClassifierEnhancer",
257:       "weka.classifiers.misc.InputMappedClassifier",
258:       "weka.classifiers.rules.ZeroR",
259:       "weka.core.neighboursearch.LinearNNSearch",
260:       "weka.classifiers.RandomizableClassifier",
261:       "weka.core.Tag",
262:       "weka.classifiers.functions.SGDText",
263:       "weka.classifiers.bayes.BayesNet",
264:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
265:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
266:       "weka.classifiers.bayes.net.search.local.K2",
267:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
268:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
269:       "weka.core.Capabilities",
270:       "org.pentaho.packageManagement.PackageManager",
271:       "org.pentaho.packageManagement.DefaultPackageManager",
272:       "weka.core.Version",
273:       "weka.core.Environment",
274:       "weka.core.WekaPackageManager",
275:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
276:       "weka.classifiers.lazy.LWL",
277:       "weka.classifiers.trees.DecisionStump",
278:       "weka.core.tokenizers.NGramTokenizer",
279:       "weka.core.stemmers.Stemming",
280:       "weka.core.Stopwords",
281:       "weka.classifiers.bayes.net.BIFReader",
282:       "weka.classifiers.functions.supportVector.Kernel",
283:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
284:       "weka.classifiers.bayes.NaiveBayesMultinomial",
285:       "weka.core.TestInstances",
286:       "weka.classifiers.lazy.IBk",
287:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
288:       "weka.classifiers.meta.CostSensitiveClassifier",
289:       "weka.classifiers.CostMatrix",
290:       "weka.classifiers.bayes.NaiveBayes",
291:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
292:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
293:       "weka.core.neighboursearch.CoverTree",
294:       "weka.attributeSelection.CorrelationAttributeEval",
295:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
296:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
297:       "weka.core.converters.ConverterUtils$DataSource",
298:       "weka.core.converters.AbstractLoader",
299:       "weka.core.converters.AbstractFileLoader",
300:       "weka.core.converters.ArffLoader",
301:       "weka.attributeSelection.OneRAttributeEval",
302:       "weka.classifiers.IteratedSingleClassifierEnhancer",
303:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
304:       "weka.classifiers.meta.AdaBoostM1",
305:       "weka.classifiers.MultipleClassifiersCombiner",
306:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
307:       "weka.classifiers.meta.MultiScheme",
308:       "weka.classifiers.meta.AttributeSelectedClassifier",
309:       "weka.attributeSelection.CfsSubsetEval",
310:       "weka.attributeSelection.ASSearch",
311:       "weka.attributeSelection.BestFirst",
312:       "weka.core.WekaException",
313:       "weka.classifiers.trees.m5.M5Base",
314:       "weka.classifiers.rules.M5Rules",
315:       "weka.classifiers.functions.LinearRegression",
316:       "weka.core.UnsupportedAttributeTypeException",
317:       "weka.classifiers.functions.GaussianProcesses",
318:       "weka.classifiers.functions.supportVector.CachedKernel",
319:       "weka.classifiers.functions.supportVector.PolyKernel",
320:       "weka.classifiers.trees.RandomTree",
321:       "weka.filters.SimpleFilter",
322:       "weka.filters.SimpleStreamFilter",
323:       "weka.filters.MultiFilter",
324:       "weka.filters.AllFilter",
325:       "weka.classifiers.functions.SimpleLinearRegression",
326:       "weka.classifiers.functions.SGD",
327:       "weka.core.WekaEnumeration",
328:       "weka.core.Attribute$1",
329:       "weka.classifiers.meta.CVParameterSelection",
330:       "weka.core.FastVector",
331:       "weka.classifiers.functions.SMO",
332:       "weka.classifiers.functions.VotedPerceptron",
333:       "weka.classifiers.rules.JRip",
334:       "weka.core.UnassignedClassException"
335:     );
336:   }
337: }

[MASTER] 21:42:50.381 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.stemmerTipText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
File file0 = MockFile.createTempFile("The stemming algorithm to use on the words.", "");
file0.delete();
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/The stemming algorithm to use on the words.0");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
naiveBayesMultinomialText0.m_stopwordsFile = file0;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
SnowballStemmer snowballStemmer0 = new SnowballStemmer("The stemming algorithm to use on the words.");
snowballStemmer0.setOptions((String[]) null);
naiveBayesMultinomialText0.setStemmer(snowballStemmer0);
naiveBayesMultinomialText0.setNorm(3660.1222840265);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.setMinWordFrequency(1.0);
naiveBayesMultinomialText2.pruneDictionary();
naiveBayesMultinomialText0.setOptions(stringArray0);
Discretize discretize0 = new Discretize();
discretize0.getTechnicalInformation();
discretize0.outputPeek();

[MASTER] 21:42:52.583 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:42:53.698 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1010/107_weka/evosuite-tests
* Done!

* Computation finished
