* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.lts.io.ArchiveScanner
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 12625
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:55:01.405 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:55:01.422 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:55:01.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:55:01.854 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:55:02.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:55:02.218 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.lts.io.ArchiveScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/78_caloriecount/src/main/java/com/lts/io/ArchiveScanner.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
[MASTER] 00:56:37.060 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 122s and 87 generations, 74749 statements, best individual has fitness: 1032.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 67
* Number of covered goals: 46
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 45
* Number of covered goals: 31
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 63%
* Total number of goals: 202
* Number of covered goals: 127
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 45
* Number of covered goals: 31
* Generated 25 tests with total length 496
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
[MASTER] 00:57:29.013 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 00:57:29.016 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockFile mockFile0 = new MockFile("DEhc=gPt", "[hnzrU/`.6");
ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("Gq8QA@ $:~}_%o", "DEhc=gPt", (File) mockFile0);
MockFile mockFile1 = new MockFile("[hnzrU/`.6");
byte[] byteArray0 = new byte[0];
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
mockFile0.setExecutable(false, false);
mockFile0.toURL();
MockFile mockFile2 = new MockFile("", "R'oEH1q7'e{.KRU:>");
mockFile1.toURI();
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
MockFile mockFile3 = new MockFile("K.@:K4Y)}1C", "]6~.t\"Qt1E7S)p(");
mockFile1.getAbsolutePath();
MockFile mockFile4 = new MockFile(mockFile1, "Gk8QA@ $:~}_%o1.WAR.jar");
MockFile mockFile5 = new MockFile("K.@:K4Y)}1C");
improvedFile0.getAbsoluteFile();
mockFile4.getCanonicalPath();
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(mockFile5);
assertTrue(boolean0);


* Writing JUnit test case 'ArchiveScanner_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/78_caloriecount/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.lts.application.international.MessageFormatter
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 12629
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:06:11.456 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:06:11.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:06:11.483 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:06:12.312 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:06:12.836 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:06:12.840 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.lts.application.international.MessageFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/78_caloriecount/src/main/java/com/lts/application/international/MessageFormatter.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
[MASTER] 01:06:31.980 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 01:07:59.621 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 125s and 62 generations, 33229 statements, best individual has fitness: 784.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 130
* Number of covered goals: 113
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 52
* Number of covered goals: 43
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 150
* Number of covered goals: 135
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 50
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 52
* Number of covered goals: 43
* Generated 40 tests with total length 588
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Writing JUnit test case 'MessageFormatter_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/78_caloriecount/evosuite-tests
* Done!

* Computation finished
