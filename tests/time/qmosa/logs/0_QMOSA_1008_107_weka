* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2397
* Connecting to master process on port 2400
* Connecting to master process on port 2401
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:36:05.206 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:36:05.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:36:05.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:36:05.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:36:05.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:36:05.343 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:36:05.740 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:36:05.751 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:36:05.751 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:36:05.816 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Using seed 1008
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:36:13.476 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:36:13.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:36:13.500 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:36:13.507 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 19:36:18.972 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 19:38:00.063 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:38:00.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 122s and 33 generations, 32906 statements, best individual has fitness: 9176.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 152
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 242
* Number of covered goals: 62
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 195
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 72
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 242
* Number of covered goals: 62
* Generated 40 tests with total length 728
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 29 generations, 28918 statements, best individual has fitness: 16704.0
* Search finished after 131s and 3 generations, 2790 statements, best individual has fitness: 6688.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 12 tests with total length 277
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 19:38:21.368 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 12 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 647
* Number of covered goals: 541
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 441
* Number of covered goals: 323
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 678
* Number of covered goals: 503
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 24%
* Total number of goals: 244
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 124
* Number of covered goals: 85
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 124
* Number of covered goals: 85
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 441
* Number of covered goals: 275
* Generated 56 tests with total length 1145
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 19:40:43.409 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 19:40:43.918 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 17%
[MASTER] 19:46:34.026 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2403
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:54:04.297 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:54:04.315 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:54:04.319 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:54:06.479 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:54:07.324 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:54:07.325 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Search finished after 124s and 21 generations, 18316 statements, best individual has fitness: 13936.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 705
* Number of covered goals: 224
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 92
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 47%
* Total number of goals: 993
* Number of covered goals: 463
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 93
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 92
* Generated 60 tests with total length 1146
* Resulting test suite's coverage: 37% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2397
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Search finished after 125s and 10 generations, 10289 statements, best individual has fitness: 3944.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 217
* Number of covered goals: 169
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 428
* Number of covered goals: 236
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 260
* Number of covered goals: 211
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 428
* Number of covered goals: 234
* Generated 48 tests with total length 848
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 70%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 2398
* Connecting to master process on port 2399
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:11:58.196 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:11:58.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:11:58.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:11:58.287 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:11:58.309 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:11:58.310 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1008
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:12:10.798 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 20:12:10.800 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 20:12:10.815 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 20:12:10.817 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 20:12:10.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 20:12:10.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 20:12:10.842 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 20:12:16.935 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:12:16.954 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:12:16.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:12:18.483 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:12:19.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:12:19.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:12:22.682 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 20:12:22.719 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 20:12:22.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 20:12:22.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 20:12:22.721 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 20:12:22.721 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 20:12:22.722 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 20:12:22.723 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 20:12:22.723 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 20:12:22.790 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 20:12:22.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
[MASTER] 20:12:26.192 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 20:12:26.192 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1008
* Starting evolution
[MASTER] 20:12:30.660 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 20:13:32.475 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2633
[MASTER] 20:13:32.477 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2634
[MASTER] 20:13:32.479 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2638
[MASTER] 20:13:32.480 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2640
[MASTER] 20:13:32.482 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2646
[MASTER] 20:13:32.484 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2647
[MASTER] 20:13:32.486 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2663
[MASTER] 20:13:32.487 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2666
[MASTER] 20:13:32.489 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2667
[MASTER] 20:13:32.491 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2675
[MASTER] 20:13:32.492 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2676
[MASTER] 20:13:32.494 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: Line 2685
[MASTER] 20:13:32.676 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: I123 Branch 239 IFNE L2640 - true
[MASTER] 20:13:32.678 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: I156 Branch 240 IF_ICMPGE L2647 - true
[MASTER] 20:13:32.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: I237 Branch 246 IFEQ L2663 - true
[MASTER] 20:13:32.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: I275 Branch 247 IF_ICMPGE L2667 - true
[MASTER] 20:13:32.682 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;: I327 Branch 249 IF_ICMPGE L2676 - true
[MASTER] 20:13:32.708 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;:NonEmptyString
[MASTER] 20:13:32.715 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;
[MASTER] 20:13:32.724 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.toMatrixString(Ljava/lang/String;)Ljava/lang/String;
* Search finished after 123s and 20 generations, 12681 statements, best individual has fitness: 5312.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 338
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 194
* Number of covered goals: 90
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 51%
* Total number of goals: 476
* Number of covered goals: 244
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 112
* Number of covered goals: 45
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 46%
* Total number of goals: 194
* Number of covered goals: 90
* Generated 50 tests with total length 968
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 11 generations, 9103 statements, best individual has fitness: 21416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 44%
* Total number of goals: 1378
* Number of covered goals: 600
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 809
* Number of covered goals: 220
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 40%
* Total number of goals: 424
* Number of covered goals: 171
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 11%
* Total number of goals: 278
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 52%
* Total number of goals: 103
* Number of covered goals: 54
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 51%
* Total number of goals: 103
* Number of covered goals: 53
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 14%
* Total number of goals: 809
* Number of covered goals: 114
* Generated 40 tests with total length 969
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 20:18:39.027 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_1_1575404318912/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_1_1575404318912/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.java]]
[MASTER] 20:18:39.027 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:39.027 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:39.032 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 20:18:39.032 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 20:18:39.032 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 20:18:39.033 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_1_1575404318912/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:18:38 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.FileSystemHandling;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Capabilities;
18: import weka.core.tokenizers.NGramTokenizer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_1_tmp__ESTest extends NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.9005822944550714
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       FileSystemHandling.shouldAllThrowIOExceptions();
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
33:       String[] stringArray0 = new String[9];
34:       stringArray0[0] = "{qL)='Y";
35:       stringArray0[1] = "j";
36:       stringArray0[2] = "";
37:       stringArray0[3] = "";
38:       stringArray0[4] = "$*I8t";
39:       stringArray0[5] = "";
40:       stringArray0[6] = "";
41:       stringArray0[7] = "";
42:       stringArray0[8] = "";
43:       NGramTokenizer.main(stringArray0);
44:       naiveBayesMultinomialText0.setTokenizer(nGramTokenizer0);
45:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
46:       naiveBayesMultinomialText0.pruneDictionary();
47:       naiveBayesMultinomialText0.setTokenizer(nGramTokenizer0);
48:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
49:       assertEquals(0, capabilities0.getMinimumNumberInstances());
50:       
51:       String[] stringArray1 = naiveBayesMultinomialText0.getOptions();
52:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
53:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
54:       assertEquals(12, stringArray1.length);
55:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
56:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_1_1575404318912/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:18:38 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.attributeSelection.BestFirst",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.attributeSelection.GreedyStepwise",
134:       "weka.core.Drawable",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.FindWithCapabilities",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.ClassDiscovery",
157:       "weka.filters.supervised.attribute.AttributeSelection",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.PartitionGenerator",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.Capabilities$Capability",
164:       "weka.core.SparseInstance",
165:       "org.pentaho.packageManagement.PackageManager",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.classifiers.trees.j48.ClassifierTree",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.classifiers.trees.j48.PruneableClassifierTree",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.core.WekaPackageManager",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.attributeSelection.StartSetHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.classifiers.meta.CostSensitiveClassifier",
184:       "weka.core.Option",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.tokenizers.AlphabeticTokenizer",
190:       "weka.core.FastVector",
191:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
192:       "weka.core.tokenizers.NGramTokenizer",
193:       "weka.core.UnassignedDatasetException",
194:       "weka.classifiers.RandomizableClassifier",
195:       "weka.attributeSelection.RankedOutputSearch",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.core.ProtectedProperties",
200:       "weka.estimators.Estimator",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.classifiers.trees.DecisionStump",
207:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
208:       "weka.filters.unsupervised.attribute.Remove",
209:       "weka.core.Randomizable",
210:       "weka.core.Instances",
211:       "weka.core.UnassignedClassException",
212:       "weka.classifiers.bayes.net.ParentSet",
213:       "weka.classifiers.rules.ZeroR",
214:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
215:       "weka.filters.unsupervised.attribute.Standardize",
216:       "weka.core.stemmers.IteratedLovinsStemmer",
217:       "weka.attributeSelection.Ranker",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.core.TechnicalInformation",
220:       "weka.classifiers.Sourcable",
221:       "weka.core.RevisionHandler",
222:       "weka.classifiers.evaluation.output.prediction.PlainText",
223:       "weka.core.xml.XMLSerialization",
224:       "weka.classifiers.xml.XMLClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize"
227:     );
228:   } 
229: 
230:   private static void resetClasses() {
231:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.class.getClassLoader()); 
232: 
233:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
234:       "weka.classifiers.AbstractClassifier",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
237:       "weka.core.Capabilities$Capability",
238:       "weka.core.tokenizers.Tokenizer",
239:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
240:       "weka.core.tokenizers.WordTokenizer",
241:       "weka.core.stemmers.NullStemmer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.SingleClassifierEnhancer",
244:       "weka.classifiers.misc.InputMappedClassifier",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.Utils",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Option",
252:       "weka.classifiers.meta.FilteredClassifier",
253:       "weka.filters.Filter",
254:       "weka.filters.supervised.attribute.AttributeSelection",
255:       "weka.attributeSelection.AttributeSelection",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.CfsSubsetEval",
258:       "weka.attributeSelection.ASSearch",
259:       "weka.attributeSelection.GreedyStepwise",
260:       "weka.core.Range",
261:       "weka.core.Tag",
262:       "weka.attributeSelection.BestFirst",
263:       "weka.classifiers.trees.J48",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.core.SelectedTag",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.neighboursearch.NearestNeighbourSearch",
281:       "weka.core.neighboursearch.LinearNNSearch",
282:       "weka.core.NormalizableDistance",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.Instances",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.RevisionUtils",
287:       "weka.core.tokenizers.AlphabeticTokenizer",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.CoverTree",
290:       "weka.core.Stopwords",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.core.stemmers.IteratedLovinsStemmer",
293:       "weka.core.UnassignedDatasetException",
294:       "weka.core.neighboursearch.BallTree",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.neighboursearch.balltrees.BallNode",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.classifiers.RandomizableClassifier",
303:       "weka.classifiers.functions.SGDText",
304:       "weka.core.TestInstances",
305:       "weka.core.FindWithCapabilities",
306:       "weka.core.SingleIndex",
307:       "weka.classifiers.functions.supportVector.Kernel",
308:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
309:       "weka.classifiers.functions.SMO",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.neighboursearch.KDTree",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
316:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.core.TechnicalInformation",
320:       "weka.core.TechnicalInformation$Type",
321:       "weka.core.TechnicalInformation$Field",
322:       "weka.classifiers.functions.SMOreg",
323:       "weka.classifiers.functions.supportVector.RegOptimizer",
324:       "weka.classifiers.functions.supportVector.RegSMO",
325:       "weka.classifiers.functions.supportVector.RegSMOImproved",
326:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
327:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
328:       "weka.classifiers.functions.MultilayerPerceptron",
329:       "weka.core.FastVector",
330:       "weka.filters.unsupervised.attribute.NominalToBinary",
331:       "weka.classifiers.functions.neural.SigmoidUnit",
332:       "weka.classifiers.functions.neural.LinearUnit",
333:       "weka.classifiers.misc.SerializedClassifier",
334:       "weka.classifiers.bayes.BayesNet",
335:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
336:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
337:       "weka.classifiers.bayes.net.search.local.K2",
338:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
339:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
340:       "weka.classifiers.functions.supportVector.StringKernel",
341:       "weka.core.ClassDiscovery",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.classifiers.trees.DecisionStump",
346:       "weka.classifiers.MultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Vote",
349:       "weka.classifiers.bayes.NaiveBayesMultinomial",
350:       "weka.classifiers.meta.ClassificationViaRegression",
351:       "weka.classifiers.trees.m5.M5Base",
352:       "weka.classifiers.trees.M5P",
353:       "weka.classifiers.bayes.net.BIFReader"
354:     );
355:   }
356: }

[MASTER] 20:18:39.034 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.shouldAllThrowIOExceptions();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
String[] stringArray0 = new String[9];
stringArray0[0] = "{qL)='Y";
stringArray0[1] = "j";
stringArray0[2] = "";
stringArray0[3] = "";
stringArray0[4] = "$*I8t";
stringArray0[5] = "";
stringArray0[6] = "";
stringArray0[7] = "";
stringArray0[8] = "";
NGramTokenizer.main(stringArray0);
naiveBayesMultinomialText0.setTokenizer(nGramTokenizer0);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setTokenizer(nGramTokenizer0);
Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
assertEquals(0, capabilities0.getMinimumNumberInstances());

String[] stringArray1 = naiveBayesMultinomialText0.getOptions();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(12, stringArray1.length);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 20:18:39.109 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_2_1575404319035/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_2_1575404319035/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.java]]
[MASTER] 20:18:39.109 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:39.109 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:39.109 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:18:39.110 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:18:39.110 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_2_1575404319035/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:18:39 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.attributeSelection.PrincipalComponents;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Capabilities;
20: import weka.core.Instances;
21: import weka.core.TestInstances;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_2_tmp__ESTest extends NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=1.5271837172395382
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
34:       byte[] byteArray0 = new byte[3];
35:       byteArray0[0] = (byte)40;
36:       byteArray0[1] = (byte)38;
37:       byteArray0[2] = (byte)2;
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
40:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
41:       naiveBayesMultinomialText0.globalInfo();
42:       naiveBayesMultinomialText0.periodicPruningTipText();
43:       PrincipalComponents principalComponents0 = new PrincipalComponents();
44:       // Undeclared exception!
45:       try { 
46:         TestInstances.forCapabilities((Capabilities) null);
47:         fail("Expecting exception: NullPointerException");
48:       
49:       } catch(NullPointerException e) {
50:          //
51:          // no message in exception (getMessage() returned null)
52:          //
53:          verifyException("weka.core.TestInstances", e);
54:       }
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_2_1575404319035/weka/classifiers/bayes/NaiveBayesMultinomialText_2_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:18:39 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.attributeSelection.BestFirst",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.attributeSelection.GreedyStepwise",
134:       "weka.core.Drawable",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.FindWithCapabilities",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.ClassDiscovery",
157:       "weka.filters.supervised.attribute.AttributeSelection",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.PartitionGenerator",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.Capabilities$Capability",
164:       "weka.core.SparseInstance",
165:       "org.pentaho.packageManagement.PackageManager",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.classifiers.trees.j48.ClassifierTree",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.classifiers.trees.j48.PruneableClassifierTree",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.core.WekaPackageManager",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.attributeSelection.StartSetHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.classifiers.meta.CostSensitiveClassifier",
184:       "weka.core.Option",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.tokenizers.AlphabeticTokenizer",
190:       "weka.core.FastVector",
191:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
192:       "weka.core.tokenizers.NGramTokenizer",
193:       "weka.core.UnassignedDatasetException",
194:       "weka.classifiers.RandomizableClassifier",
195:       "weka.attributeSelection.RankedOutputSearch",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.core.ProtectedProperties",
200:       "weka.estimators.Estimator",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.classifiers.trees.DecisionStump",
207:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
208:       "weka.filters.unsupervised.attribute.Remove",
209:       "weka.core.Randomizable",
210:       "weka.core.Instances",
211:       "weka.core.UnassignedClassException",
212:       "weka.classifiers.bayes.net.ParentSet",
213:       "weka.classifiers.rules.ZeroR",
214:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
215:       "weka.filters.unsupervised.attribute.Standardize",
216:       "weka.core.stemmers.IteratedLovinsStemmer",
217:       "weka.attributeSelection.Ranker",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.core.TechnicalInformation",
220:       "weka.classifiers.Sourcable",
221:       "weka.core.RevisionHandler",
222:       "weka.classifiers.evaluation.output.prediction.PlainText",
223:       "weka.core.xml.XMLSerialization",
224:       "weka.classifiers.xml.XMLClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize"
227:     );
228:   } 
229: 
230:   private static void resetClasses() {
231:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_2_tmp__ESTest_scaffolding.class.getClassLoader()); 
232: 
233:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
234:       "weka.classifiers.AbstractClassifier",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
237:       "weka.core.Capabilities$Capability",
238:       "weka.core.tokenizers.Tokenizer",
239:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
240:       "weka.core.tokenizers.WordTokenizer",
241:       "weka.core.stemmers.NullStemmer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.SingleClassifierEnhancer",
244:       "weka.classifiers.misc.InputMappedClassifier",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.Utils",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Option",
252:       "weka.classifiers.meta.FilteredClassifier",
253:       "weka.filters.Filter",
254:       "weka.filters.supervised.attribute.AttributeSelection",
255:       "weka.attributeSelection.AttributeSelection",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.CfsSubsetEval",
258:       "weka.attributeSelection.ASSearch",
259:       "weka.attributeSelection.GreedyStepwise",
260:       "weka.core.Range",
261:       "weka.core.Tag",
262:       "weka.attributeSelection.BestFirst",
263:       "weka.classifiers.trees.J48",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.core.SelectedTag",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.neighboursearch.NearestNeighbourSearch",
281:       "weka.core.neighboursearch.LinearNNSearch",
282:       "weka.core.NormalizableDistance",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.Instances",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.RevisionUtils",
287:       "weka.core.tokenizers.AlphabeticTokenizer",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.CoverTree",
290:       "weka.core.Stopwords",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.core.stemmers.IteratedLovinsStemmer",
293:       "weka.core.UnassignedDatasetException",
294:       "weka.core.neighboursearch.BallTree",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.neighboursearch.balltrees.BallNode",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.classifiers.RandomizableClassifier",
303:       "weka.classifiers.functions.SGDText",
304:       "weka.core.TestInstances",
305:       "weka.core.FindWithCapabilities",
306:       "weka.core.SingleIndex",
307:       "weka.classifiers.functions.supportVector.Kernel",
308:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
309:       "weka.classifiers.functions.SMO",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.neighboursearch.KDTree",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
316:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.core.TechnicalInformation",
320:       "weka.core.TechnicalInformation$Type",
321:       "weka.core.TechnicalInformation$Field",
322:       "weka.classifiers.functions.SMOreg",
323:       "weka.classifiers.functions.supportVector.RegOptimizer",
324:       "weka.classifiers.functions.supportVector.RegSMO",
325:       "weka.classifiers.functions.supportVector.RegSMOImproved",
326:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
327:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
328:       "weka.classifiers.functions.MultilayerPerceptron",
329:       "weka.core.FastVector",
330:       "weka.filters.unsupervised.attribute.NominalToBinary",
331:       "weka.classifiers.functions.neural.SigmoidUnit",
332:       "weka.classifiers.functions.neural.LinearUnit",
333:       "weka.classifiers.misc.SerializedClassifier",
334:       "weka.classifiers.bayes.BayesNet",
335:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
336:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
337:       "weka.classifiers.bayes.net.search.local.K2",
338:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
339:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
340:       "weka.classifiers.functions.supportVector.StringKernel",
341:       "weka.core.ClassDiscovery",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.classifiers.trees.DecisionStump",
346:       "weka.classifiers.MultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Vote",
349:       "weka.classifiers.bayes.NaiveBayesMultinomial",
350:       "weka.classifiers.meta.ClassificationViaRegression",
351:       "weka.classifiers.trees.m5.M5Base",
352:       "weka.classifiers.trees.M5P",
353:       "weka.classifiers.bayes.net.BIFReader"
354:     );
355:   }
356: }

[MASTER] 20:18:39.111 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)40;
byteArray0[1] = (byte)38;
byteArray0[2] = (byte)2;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
naiveBayesMultinomialText0.globalInfo();
naiveBayesMultinomialText0.periodicPruningTipText();
PrincipalComponents principalComponents0 = new PrincipalComponents();
TestInstances.forCapabilities((Capabilities) null);

[MASTER] 20:18:39.202 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1575404319112/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1575404319112/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.java]]
[MASTER] 20:18:39.202 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:39.202 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:39.203 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 62
[MASTER] 20:18:39.204 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1575404319112/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:18:39 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.LinkedHashMap;
13: import java.util.List;
14: import java.util.Locale;
15: import java.util.Map;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.core.Attribute;
21: import weka.core.Capabilities;
22: import weka.core.SparseInstance;
23: import weka.core.stemmers.NullStemmer;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_3_tmp__ESTest extends NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.5531257522061517
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       String string0 = naiveBayesMultinomialText0.tokenizerTipText();
36:       assertEquals("The tokenizing algorithm to use on the strings.", string0);
37:       
38:       String string1 = naiveBayesMultinomialText0.LNormTipText();
39:       assertEquals("The LNorm to use for document length normalization.", string1);
40:       
41:       naiveBayesMultinomialText0.normTipText();
42:       String string2 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
43:       assertEquals("Use word frequencies rather than binary bag of words representation", string2);
44:       
45:       String string3 = naiveBayesMultinomialText0.toString();
46:       assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string3);
47:       
48:       Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
49:       assertEquals(0, capabilities0.getMinimumNumberInstances());
50:       
51:       String string4 = naiveBayesMultinomialText0.minWordFrequencyTipText();
52:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string4);
53:       
54:       SparseInstance sparseInstance0 = new SparseInstance(1);
55:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
56:       ArrayList<String> arrayList1 = new ArrayList<String>();
57:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
58:       NullStemmer nullStemmer0 = new NullStemmer();
59:       ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
60:       ArrayList<Locale.LanguageRange> arrayList3 = new ArrayList<Locale.LanguageRange>();
61:       List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList3, (Collection<String>) arrayList1, locale_FilteringMode0);
62:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
63:       Attribute attribute0 = new Attribute((String) null, list0, (-1));
64:       attribute0.copy("Use word frequencies rather than binary bag of words representation");
65:       String string5 = naiveBayesMultinomialText0.normTipText();
66:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
67:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
68:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
69:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
70:       assertEquals("The norm of the instances after normalization.", string5);
71:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
72:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
73:   }
74: }
RegularFileObject[/tmp/EvoSuite_3_1575404319112/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:18:39 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.attributeSelection.BestFirst",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.attributeSelection.GreedyStepwise",
134:       "weka.core.Drawable",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.FindWithCapabilities",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.ClassDiscovery",
157:       "weka.filters.supervised.attribute.AttributeSelection",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.PartitionGenerator",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.Capabilities$Capability",
164:       "weka.core.SparseInstance",
165:       "org.pentaho.packageManagement.PackageManager",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.classifiers.trees.j48.ClassifierTree",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.classifiers.trees.j48.PruneableClassifierTree",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.core.WekaPackageManager",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.attributeSelection.StartSetHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.classifiers.meta.CostSensitiveClassifier",
184:       "weka.core.Option",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.tokenizers.AlphabeticTokenizer",
190:       "weka.core.FastVector",
191:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
192:       "weka.core.tokenizers.NGramTokenizer",
193:       "weka.core.UnassignedDatasetException",
194:       "weka.classifiers.RandomizableClassifier",
195:       "weka.attributeSelection.RankedOutputSearch",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.core.ProtectedProperties",
200:       "weka.estimators.Estimator",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.classifiers.trees.DecisionStump",
207:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
208:       "weka.filters.unsupervised.attribute.Remove",
209:       "weka.core.Randomizable",
210:       "weka.core.Instances",
211:       "weka.core.UnassignedClassException",
212:       "weka.classifiers.bayes.net.ParentSet",
213:       "weka.classifiers.rules.ZeroR",
214:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
215:       "weka.filters.unsupervised.attribute.Standardize",
216:       "weka.core.stemmers.IteratedLovinsStemmer",
217:       "weka.attributeSelection.Ranker",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.core.TechnicalInformation",
220:       "weka.classifiers.Sourcable",
221:       "weka.core.RevisionHandler",
222:       "weka.classifiers.evaluation.output.prediction.PlainText",
223:       "weka.core.xml.XMLSerialization",
224:       "weka.classifiers.xml.XMLClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize"
227:     );
228:   } 
229: 
230:   private static void resetClasses() {
231:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
232: 
233:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
234:       "weka.classifiers.AbstractClassifier",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
237:       "weka.core.Capabilities$Capability",
238:       "weka.core.tokenizers.Tokenizer",
239:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
240:       "weka.core.tokenizers.WordTokenizer",
241:       "weka.core.stemmers.NullStemmer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.SingleClassifierEnhancer",
244:       "weka.classifiers.misc.InputMappedClassifier",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.Utils",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Option",
252:       "weka.classifiers.meta.FilteredClassifier",
253:       "weka.filters.Filter",
254:       "weka.filters.supervised.attribute.AttributeSelection",
255:       "weka.attributeSelection.AttributeSelection",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.CfsSubsetEval",
258:       "weka.attributeSelection.ASSearch",
259:       "weka.attributeSelection.GreedyStepwise",
260:       "weka.core.Range",
261:       "weka.core.Tag",
262:       "weka.attributeSelection.BestFirst",
263:       "weka.classifiers.trees.J48",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.core.SelectedTag",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.neighboursearch.NearestNeighbourSearch",
281:       "weka.core.neighboursearch.LinearNNSearch",
282:       "weka.core.NormalizableDistance",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.Instances",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.RevisionUtils",
287:       "weka.core.tokenizers.AlphabeticTokenizer",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.CoverTree",
290:       "weka.core.Stopwords",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.core.stemmers.IteratedLovinsStemmer",
293:       "weka.core.UnassignedDatasetException",
294:       "weka.core.neighboursearch.BallTree",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.neighboursearch.balltrees.BallNode",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.classifiers.RandomizableClassifier",
303:       "weka.classifiers.functions.SGDText",
304:       "weka.core.TestInstances",
305:       "weka.core.FindWithCapabilities",
306:       "weka.core.SingleIndex",
307:       "weka.classifiers.functions.supportVector.Kernel",
308:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
309:       "weka.classifiers.functions.SMO",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.neighboursearch.KDTree",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
316:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.core.TechnicalInformation",
320:       "weka.core.TechnicalInformation$Type",
321:       "weka.core.TechnicalInformation$Field",
322:       "weka.classifiers.functions.SMOreg",
323:       "weka.classifiers.functions.supportVector.RegOptimizer",
324:       "weka.classifiers.functions.supportVector.RegSMO",
325:       "weka.classifiers.functions.supportVector.RegSMOImproved",
326:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
327:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
328:       "weka.classifiers.functions.MultilayerPerceptron",
329:       "weka.core.FastVector",
330:       "weka.filters.unsupervised.attribute.NominalToBinary",
331:       "weka.classifiers.functions.neural.SigmoidUnit",
332:       "weka.classifiers.functions.neural.LinearUnit",
333:       "weka.classifiers.misc.SerializedClassifier",
334:       "weka.classifiers.bayes.BayesNet",
335:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
336:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
337:       "weka.classifiers.bayes.net.search.local.K2",
338:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
339:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
340:       "weka.classifiers.functions.supportVector.StringKernel",
341:       "weka.core.ClassDiscovery",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.classifiers.trees.DecisionStump",
346:       "weka.classifiers.MultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Vote",
349:       "weka.classifiers.bayes.NaiveBayesMultinomial",
350:       "weka.classifiers.meta.ClassificationViaRegression",
351:       "weka.classifiers.trees.m5.M5Base",
352:       "weka.classifiers.trees.M5P",
353:       "weka.classifiers.bayes.net.BIFReader"
354:     );
355:   }
356: }

[MASTER] 20:18:39.206 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String string0 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string0);

String string1 = naiveBayesMultinomialText0.LNormTipText();
assertEquals("The LNorm to use for document length normalization.", string1);

naiveBayesMultinomialText0.normTipText();
String string2 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string2);

String string3 = naiveBayesMultinomialText0.toString();
assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string3);

Capabilities capabilities0 = naiveBayesMultinomialText0.getCapabilities();
assertEquals(0, capabilities0.getMinimumNumberInstances());

String string4 = naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string4);

SparseInstance sparseInstance0 = new SparseInstance(1);
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
ArrayList<String> arrayList1 = new ArrayList<String>();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
NullStemmer nullStemmer0 = new NullStemmer();
ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
ArrayList<Locale.LanguageRange> arrayList3 = new ArrayList<Locale.LanguageRange>();
List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList3, (Collection<String>) arrayList1, locale_FilteringMode0);
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
Attribute attribute0 = new Attribute((String) null, list0, (-1));
attribute0.copy("Use word frequencies rather than binary bag of words representation");
String string5 = naiveBayesMultinomialText0.normTipText();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals("The norm of the instances after normalization.", string5);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 20:18:39.274 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1575404319207/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1575404319207/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.java]]
[MASTER] 20:18:39.274 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:39.274 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:39.274 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 20:18:39.275 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1575404319207/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:18:39 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.LinkedHashMap;
13: import java.util.LinkedList;
14: import java.util.List;
15: import java.util.Locale;
16: import java.util.Map;
17: import java.util.Vector;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.junit.runner.RunWith;
21: import weka.classifiers.bayes.NaiveBayesMultinomialText;
22: import weka.core.FindWithCapabilities;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_4_tmp__ESTest extends NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=1.830738805564335
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       FindWithCapabilities findWithCapabilities0 = new FindWithCapabilities();
35:       Vector<String> vector0 = findWithCapabilities0.getMisses();
36:       String string0 = naiveBayesMultinomialText0.periodicPruningTipText();
37:       assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string0);
38:       
39:       naiveBayesMultinomialText0.getUseStopList();
40:       boolean boolean0 = naiveBayesMultinomialText0.m_lowercaseTokens;
41:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
42:       LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
43:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
44:       Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) vector0, locale_FilteringMode0);
45:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
46:       String string1 = naiveBayesMultinomialText0.stopwordsTipText();
47:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
48:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
49:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
50:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string1);
51:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
52:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
53:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_4_1575404319207/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:18:39 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.attributeSelection.BestFirst",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.attributeSelection.GreedyStepwise",
134:       "weka.core.Drawable",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.FindWithCapabilities",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.ClassDiscovery",
157:       "weka.filters.supervised.attribute.AttributeSelection",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.PartitionGenerator",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.Capabilities$Capability",
164:       "weka.core.SparseInstance",
165:       "org.pentaho.packageManagement.PackageManager",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.classifiers.trees.j48.ClassifierTree",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.classifiers.trees.j48.PruneableClassifierTree",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.core.WekaPackageManager",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.attributeSelection.StartSetHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.classifiers.meta.CostSensitiveClassifier",
184:       "weka.core.Option",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.tokenizers.AlphabeticTokenizer",
190:       "weka.core.FastVector",
191:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
192:       "weka.core.tokenizers.NGramTokenizer",
193:       "weka.core.UnassignedDatasetException",
194:       "weka.classifiers.RandomizableClassifier",
195:       "weka.attributeSelection.RankedOutputSearch",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.core.ProtectedProperties",
200:       "weka.estimators.Estimator",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.classifiers.trees.DecisionStump",
207:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
208:       "weka.filters.unsupervised.attribute.Remove",
209:       "weka.core.Randomizable",
210:       "weka.core.Instances",
211:       "weka.core.UnassignedClassException",
212:       "weka.classifiers.bayes.net.ParentSet",
213:       "weka.classifiers.rules.ZeroR",
214:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
215:       "weka.filters.unsupervised.attribute.Standardize",
216:       "weka.core.stemmers.IteratedLovinsStemmer",
217:       "weka.attributeSelection.Ranker",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.core.TechnicalInformation",
220:       "weka.classifiers.Sourcable",
221:       "weka.core.RevisionHandler",
222:       "weka.classifiers.evaluation.output.prediction.PlainText",
223:       "weka.core.xml.XMLSerialization",
224:       "weka.classifiers.xml.XMLClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize"
227:     );
228:   } 
229: 
230:   private static void resetClasses() {
231:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
232: 
233:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
234:       "weka.classifiers.AbstractClassifier",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
237:       "weka.core.Capabilities$Capability",
238:       "weka.core.tokenizers.Tokenizer",
239:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
240:       "weka.core.tokenizers.WordTokenizer",
241:       "weka.core.stemmers.NullStemmer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.SingleClassifierEnhancer",
244:       "weka.classifiers.misc.InputMappedClassifier",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.Utils",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Option",
252:       "weka.classifiers.meta.FilteredClassifier",
253:       "weka.filters.Filter",
254:       "weka.filters.supervised.attribute.AttributeSelection",
255:       "weka.attributeSelection.AttributeSelection",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.CfsSubsetEval",
258:       "weka.attributeSelection.ASSearch",
259:       "weka.attributeSelection.GreedyStepwise",
260:       "weka.core.Range",
261:       "weka.core.Tag",
262:       "weka.attributeSelection.BestFirst",
263:       "weka.classifiers.trees.J48",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.core.SelectedTag",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.neighboursearch.NearestNeighbourSearch",
281:       "weka.core.neighboursearch.LinearNNSearch",
282:       "weka.core.NormalizableDistance",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.Instances",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.RevisionUtils",
287:       "weka.core.tokenizers.AlphabeticTokenizer",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.CoverTree",
290:       "weka.core.Stopwords",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.core.stemmers.IteratedLovinsStemmer",
293:       "weka.core.UnassignedDatasetException",
294:       "weka.core.neighboursearch.BallTree",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.neighboursearch.balltrees.BallNode",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.classifiers.RandomizableClassifier",
303:       "weka.classifiers.functions.SGDText",
304:       "weka.core.TestInstances",
305:       "weka.core.FindWithCapabilities",
306:       "weka.core.SingleIndex",
307:       "weka.classifiers.functions.supportVector.Kernel",
308:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
309:       "weka.classifiers.functions.SMO",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.neighboursearch.KDTree",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
316:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.core.TechnicalInformation",
320:       "weka.core.TechnicalInformation$Type",
321:       "weka.core.TechnicalInformation$Field",
322:       "weka.classifiers.functions.SMOreg",
323:       "weka.classifiers.functions.supportVector.RegOptimizer",
324:       "weka.classifiers.functions.supportVector.RegSMO",
325:       "weka.classifiers.functions.supportVector.RegSMOImproved",
326:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
327:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
328:       "weka.classifiers.functions.MultilayerPerceptron",
329:       "weka.core.FastVector",
330:       "weka.filters.unsupervised.attribute.NominalToBinary",
331:       "weka.classifiers.functions.neural.SigmoidUnit",
332:       "weka.classifiers.functions.neural.LinearUnit",
333:       "weka.classifiers.misc.SerializedClassifier",
334:       "weka.classifiers.bayes.BayesNet",
335:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
336:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
337:       "weka.classifiers.bayes.net.search.local.K2",
338:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
339:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
340:       "weka.classifiers.functions.supportVector.StringKernel",
341:       "weka.core.ClassDiscovery",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.classifiers.trees.DecisionStump",
346:       "weka.classifiers.MultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Vote",
349:       "weka.classifiers.bayes.NaiveBayesMultinomial",
350:       "weka.classifiers.meta.ClassificationViaRegression",
351:       "weka.classifiers.trees.m5.M5Base",
352:       "weka.classifiers.trees.M5P",
353:       "weka.classifiers.bayes.net.BIFReader"
354:     );
355:   }
356: }

[MASTER] 20:18:39.277 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
FindWithCapabilities findWithCapabilities0 = new FindWithCapabilities();
Vector<String> vector0 = findWithCapabilities0.getMisses();
String string0 = naiveBayesMultinomialText0.periodicPruningTipText();
assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string0);

naiveBayesMultinomialText0.getUseStopList();
boolean boolean0 = naiveBayesMultinomialText0.m_lowercaseTokens;
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) vector0, locale_FilteringMode0);
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
String string1 = naiveBayesMultinomialText0.stopwordsTipText();
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string1);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);


[MASTER] 20:18:40.715 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1575404320682/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1575404320682/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.java]]
[MASTER] 20:18:40.715 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:40.715 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:40.715 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 20:18:40.716 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1575404320682/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:18:40 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.ArrayList;
12: import java.util.Collection;
13: import java.util.LinkedHashMap;
14: import java.util.List;
15: import java.util.Locale;
16: import java.util.Map;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.testdata.EvoSuiteFile;
20: import org.evosuite.runtime.testdata.FileSystemHandling;
21: import org.junit.runner.RunWith;
22: import weka.classifiers.bayes.NaiveBayesMultinomialText;
23: import weka.core.Attribute;
24: import weka.core.BinarySparseInstance;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_35_tmp__ESTest extends NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=1.5981863871455346
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       byte[] byteArray0 = new byte[1];
36:       byteArray0[0] = (byte)68;
37:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText0.m_periodicP = 30;
40:       naiveBayesMultinomialText0.getStopwords();
41:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
42:       ArrayList<String> arrayList1 = new ArrayList<String>();
43:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
44:       Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) arrayList1, locale_FilteringMode0);
45:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
46:       Attribute attribute0 = new Attribute((String) null, arrayList1, 30);
47:       attribute0.copy("3zXEJzpd={ jWp");
48:       int[] intArray0 = new int[6];
49:       intArray0[0] = 3;
50:       intArray0[1] = 2;
51:       intArray0[2] = 0;
52:       intArray0[3] = 30;
53:       intArray0[4] = 10000;
54:       intArray0[5] = 30;
55:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2, intArray0, 2);
56:       try { 
57:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
58:         fail("Expecting exception: RuntimeException");
59:       
60:       } catch(RuntimeException e) {
61:          //
62:          // DenseInstance doesn't have access to a dataset!
63:          //
64:          verifyException("weka.core.AbstractInstance", e);
65:       }
66:   }
67: }
RegularFileObject[/tmp/EvoSuite_35_1575404320682/weka/classifiers/bayes/NaiveBayesMultinomialText_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:18:40 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.attributeSelection.BestFirst",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.attributeSelection.GreedyStepwise",
134:       "weka.core.Drawable",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.FindWithCapabilities",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.ClassDiscovery",
157:       "weka.filters.supervised.attribute.AttributeSelection",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.PartitionGenerator",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.Capabilities$Capability",
164:       "weka.core.SparseInstance",
165:       "org.pentaho.packageManagement.PackageManager",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.classifiers.trees.j48.ClassifierTree",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.classifiers.trees.j48.PruneableClassifierTree",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.core.WekaPackageManager",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.attributeSelection.StartSetHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.classifiers.meta.CostSensitiveClassifier",
184:       "weka.core.Option",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.tokenizers.AlphabeticTokenizer",
190:       "weka.core.FastVector",
191:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
192:       "weka.core.tokenizers.NGramTokenizer",
193:       "weka.core.UnassignedDatasetException",
194:       "weka.classifiers.RandomizableClassifier",
195:       "weka.attributeSelection.RankedOutputSearch",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.core.ProtectedProperties",
200:       "weka.estimators.Estimator",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.classifiers.trees.DecisionStump",
207:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
208:       "weka.filters.unsupervised.attribute.Remove",
209:       "weka.core.Randomizable",
210:       "weka.core.Instances",
211:       "weka.core.UnassignedClassException",
212:       "weka.classifiers.bayes.net.ParentSet",
213:       "weka.classifiers.rules.ZeroR",
214:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
215:       "weka.filters.unsupervised.attribute.Standardize",
216:       "weka.core.stemmers.IteratedLovinsStemmer",
217:       "weka.attributeSelection.Ranker",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.core.TechnicalInformation",
220:       "weka.classifiers.Sourcable",
221:       "weka.core.RevisionHandler",
222:       "weka.classifiers.evaluation.output.prediction.PlainText",
223:       "weka.core.xml.XMLSerialization",
224:       "weka.classifiers.xml.XMLClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize"
227:     );
228:   } 
229: 
230:   private static void resetClasses() {
231:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
232: 
233:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
234:       "weka.classifiers.AbstractClassifier",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
237:       "weka.core.Capabilities$Capability",
238:       "weka.core.tokenizers.Tokenizer",
239:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
240:       "weka.core.tokenizers.WordTokenizer",
241:       "weka.core.stemmers.NullStemmer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.SingleClassifierEnhancer",
244:       "weka.classifiers.misc.InputMappedClassifier",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.Utils",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Option",
252:       "weka.classifiers.meta.FilteredClassifier",
253:       "weka.filters.Filter",
254:       "weka.filters.supervised.attribute.AttributeSelection",
255:       "weka.attributeSelection.AttributeSelection",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.CfsSubsetEval",
258:       "weka.attributeSelection.ASSearch",
259:       "weka.attributeSelection.GreedyStepwise",
260:       "weka.core.Range",
261:       "weka.core.Tag",
262:       "weka.attributeSelection.BestFirst",
263:       "weka.classifiers.trees.J48",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.core.SelectedTag",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.neighboursearch.NearestNeighbourSearch",
281:       "weka.core.neighboursearch.LinearNNSearch",
282:       "weka.core.NormalizableDistance",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.Instances",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.RevisionUtils",
287:       "weka.core.tokenizers.AlphabeticTokenizer",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.CoverTree",
290:       "weka.core.Stopwords",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.core.stemmers.IteratedLovinsStemmer",
293:       "weka.core.UnassignedDatasetException",
294:       "weka.core.neighboursearch.BallTree",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.neighboursearch.balltrees.BallNode",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.classifiers.RandomizableClassifier",
303:       "weka.classifiers.functions.SGDText",
304:       "weka.core.TestInstances",
305:       "weka.core.FindWithCapabilities",
306:       "weka.core.SingleIndex",
307:       "weka.classifiers.functions.supportVector.Kernel",
308:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
309:       "weka.classifiers.functions.SMO",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.neighboursearch.KDTree",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
316:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.core.TechnicalInformation",
320:       "weka.core.TechnicalInformation$Type",
321:       "weka.core.TechnicalInformation$Field",
322:       "weka.classifiers.functions.SMOreg",
323:       "weka.classifiers.functions.supportVector.RegOptimizer",
324:       "weka.classifiers.functions.supportVector.RegSMO",
325:       "weka.classifiers.functions.supportVector.RegSMOImproved",
326:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
327:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
328:       "weka.classifiers.functions.MultilayerPerceptron",
329:       "weka.core.FastVector",
330:       "weka.filters.unsupervised.attribute.NominalToBinary",
331:       "weka.classifiers.functions.neural.SigmoidUnit",
332:       "weka.classifiers.functions.neural.LinearUnit",
333:       "weka.classifiers.misc.SerializedClassifier",
334:       "weka.classifiers.bayes.BayesNet",
335:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
336:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
337:       "weka.classifiers.bayes.net.search.local.K2",
338:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
339:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
340:       "weka.classifiers.functions.supportVector.StringKernel",
341:       "weka.core.ClassDiscovery",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.classifiers.trees.DecisionStump",
346:       "weka.classifiers.MultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Vote",
349:       "weka.classifiers.bayes.NaiveBayesMultinomial",
350:       "weka.classifiers.meta.ClassificationViaRegression",
351:       "weka.classifiers.trees.m5.M5Base",
352:       "weka.classifiers.trees.M5P",
353:       "weka.classifiers.bayes.net.BIFReader"
354:     );
355:   }
356: }

[MASTER] 20:18:40.717 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)68;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 30;
naiveBayesMultinomialText0.getStopwords();
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
ArrayList<String> arrayList1 = new ArrayList<String>();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) arrayList1, locale_FilteringMode0);
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
Attribute attribute0 = new Attribute((String) null, arrayList1, 30);
attribute0.copy("3zXEJzpd={ jWp");
int[] intArray0 = new int[6];
intArray0[0] = 3;
intArray0[1] = 2;
intArray0[2] = 0;
intArray0[3] = 30;
intArray0[4] = 10000;
intArray0[5] = 30;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2, intArray0, 2);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 20:18:41.250 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_49_1575404321208/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_49_1575404321208/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.java]]
[MASTER] 20:18:41.250 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:41.250 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:18:41.250 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 20:18:41.251 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_49_1575404321208/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:18:41 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.ArrayList;
11: import java.util.Collection;
12: import java.util.LinkedHashMap;
13: import java.util.List;
14: import java.util.Locale;
15: import java.util.Map;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.testdata.EvoSuiteFile;
19: import org.evosuite.runtime.testdata.FileSystemHandling;
20: import org.junit.runner.RunWith;
21: import weka.classifiers.bayes.NaiveBayesMultinomialText;
22: import weka.core.Attribute;
23: import weka.core.BinarySparseInstance;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_49_tmp__ESTest extends NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.74054655890746
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       byte[] byteArray0 = new byte[1];
35:       byteArray0[0] = (byte)68;
36:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
37:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
38:       naiveBayesMultinomialText0.m_periodicP = 30;
39:       naiveBayesMultinomialText0.getStopwords();
40:       ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
41:       ArrayList<String> arrayList1 = new ArrayList<String>();
42:       Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
43:       Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) arrayList1, locale_FilteringMode0);
44:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
45:       String[] stringArray0 = new String[8];
46:       stringArray0[0] = "-norm <num>";
47:       stringArray0[1] = "M S?lTOd<u*UWha";
48:       stringArray0[2] = "";
49:       stringArray0[3] = "import weka.filters.Filter;\n";
50:       stringArray0[4] = "";
51:       stringArray0[5] = "${B9g,kyTS}GkQ b";
52:       stringArray0[6] = "BJVO $%bRcOX0";
53:       stringArray0[7] = "";
54:       naiveBayesMultinomialText0.setOptions(stringArray0);
55:       Attribute attribute0 = new Attribute((String) null, (String) null, (byte)68);
56:       attribute0.copy("3zXEJzpd={ jWp");
57:       Attribute.typeToString(1);
58:       int[] intArray0 = new int[6];
59:       intArray0[0] = 3;
60:       intArray0[1] = 2;
61:       intArray0[2] = 0;
62:       intArray0[3] = 2;
63:       intArray0[2] = 10000;
64:       intArray0[5] = 30;
65:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2, intArray0, 2);
66:       double[] doubleArray0 = naiveBayesMultinomialText0.m_probOfClass;
67:       naiveBayesMultinomialText0.pruneDictionary();
68:       String string0 = naiveBayesMultinomialText0.stopwordsTipText();
69:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
70:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
71:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
72:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
73:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
74:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
75:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string0);
76:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
77:   }
78: }
RegularFileObject[/tmp/EvoSuite_49_1575404321208/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:18:41 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.attributeSelection.SubsetEvaluator",
97:       "weka.classifiers.CostMatrix",
98:       "weka.classifiers.bayes.net.search.local.K2",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.attributeSelection.CfsSubsetEval",
103:       "weka.core.DenseInstance",
104:       "weka.classifiers.trees.J48",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
107:       "org.pentaho.packageManagement.DefaultPackageManager",
108:       "org.bounce.net.DefaultAuthenticator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.trees.j48.C45ModelSelection",
112:       "weka.classifiers.functions.SGDText",
113:       "weka.core.RelationalLocator",
114:       "weka.core.Utils",
115:       "weka.core.CustomDisplayStringProvider",
116:       "weka.core.tokenizers.Tokenizer",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.attributeSelection.BestFirst",
129:       "weka.classifiers.trees.j48.ModelSelection",
130:       "weka.core.AdditionalMeasureProducer",
131:       "weka.core.neighboursearch.balltrees.BallNode",
132:       "org.pentaho.packageManagement.PackageManager$1",
133:       "weka.attributeSelection.GreedyStepwise",
134:       "weka.core.Drawable",
135:       "weka.core.SingleIndex",
136:       "weka.core.CapabilitiesHandler",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "weka.classifiers.meta.FilteredClassifier",
142:       "org.pentaho.packageManagement.DefaultPackage",
143:       "weka.classifiers.bayes.BayesNet",
144:       "weka.classifiers.misc.InputMappedClassifier",
145:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
146:       "weka.core.Version",
147:       "weka.attributeSelection.AttributeSelection",
148:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
149:       "weka.core.Tag",
150:       "weka.classifiers.trees.j48.BinC45ModelSelection",
151:       "weka.classifiers.AbstractClassifier",
152:       "weka.filters.unsupervised.attribute.Center",
153:       "weka.core.FindWithCapabilities",
154:       "weka.core.OptionHandler",
155:       "weka.core.WekaException",
156:       "weka.core.ClassDiscovery",
157:       "weka.filters.supervised.attribute.AttributeSelection",
158:       "weka.filters.StreamableFilter",
159:       "weka.core.Range",
160:       "weka.core.PartitionGenerator",
161:       "weka.core.scripting.JythonSerializableObject",
162:       "weka.classifiers.Classifier",
163:       "weka.core.Capabilities$Capability",
164:       "weka.core.SparseInstance",
165:       "org.pentaho.packageManagement.PackageManager",
166:       "weka.attributeSelection.AttributeTransformer",
167:       "weka.core.tokenizers.WordTokenizer",
168:       "weka.classifiers.misc.SerializedClassifier",
169:       "weka.classifiers.trees.j48.ClassifierTree",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.classifiers.trees.j48.PruneableClassifierTree",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.core.WekaPackageManager",
177:       "weka.attributeSelection.ASSearch",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.attributeSelection.StartSetHandler",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.classifiers.meta.CostSensitiveClassifier",
184:       "weka.core.Option",
185:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
186:       "weka.filters.Sourcable",
187:       "weka.core.Attribute",
188:       "weka.core.Stopwords",
189:       "weka.core.tokenizers.AlphabeticTokenizer",
190:       "weka.core.FastVector",
191:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
192:       "weka.core.tokenizers.NGramTokenizer",
193:       "weka.core.UnassignedDatasetException",
194:       "weka.classifiers.RandomizableClassifier",
195:       "weka.attributeSelection.RankedOutputSearch",
196:       "weka.classifiers.SingleClassifierEnhancer",
197:       "weka.core.RevisionUtils",
198:       "weka.core.Instance",
199:       "weka.core.ProtectedProperties",
200:       "weka.estimators.Estimator",
201:       "weka.core.StringLocator",
202:       "weka.classifiers.bayes.net.ADNode",
203:       "weka.core.Matchable",
204:       "weka.core.AttributeStats",
205:       "weka.core.WeightedInstancesHandler",
206:       "weka.classifiers.trees.DecisionStump",
207:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
208:       "weka.filters.unsupervised.attribute.Remove",
209:       "weka.core.Randomizable",
210:       "weka.core.Instances",
211:       "weka.core.UnassignedClassException",
212:       "weka.classifiers.bayes.net.ParentSet",
213:       "weka.classifiers.rules.ZeroR",
214:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
215:       "weka.filters.unsupervised.attribute.Standardize",
216:       "weka.core.stemmers.IteratedLovinsStemmer",
217:       "weka.attributeSelection.Ranker",
218:       "weka.core.UnsupportedAttributeTypeException",
219:       "weka.core.TechnicalInformation",
220:       "weka.classifiers.Sourcable",
221:       "weka.core.RevisionHandler",
222:       "weka.classifiers.evaluation.output.prediction.PlainText",
223:       "weka.core.xml.XMLSerialization",
224:       "weka.classifiers.xml.XMLClassifier",
225:       "weka.filters.Filter",
226:       "weka.filters.supervised.attribute.Discretize"
227:     );
228:   } 
229: 
230:   private static void resetClasses() {
231:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader()); 
232: 
233:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
234:       "weka.classifiers.AbstractClassifier",
235:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
236:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
237:       "weka.core.Capabilities$Capability",
238:       "weka.core.tokenizers.Tokenizer",
239:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
240:       "weka.core.tokenizers.WordTokenizer",
241:       "weka.core.stemmers.NullStemmer",
242:       "weka.core.SerializedObject",
243:       "weka.classifiers.SingleClassifierEnhancer",
244:       "weka.classifiers.misc.InputMappedClassifier",
245:       "weka.classifiers.rules.ZeroR",
246:       "weka.classifiers.functions.SimpleLogistic",
247:       "weka.core.Utils",
248:       "weka.core.AbstractInstance",
249:       "weka.core.SparseInstance",
250:       "weka.classifiers.Evaluation",
251:       "weka.core.Option",
252:       "weka.classifiers.meta.FilteredClassifier",
253:       "weka.filters.Filter",
254:       "weka.filters.supervised.attribute.AttributeSelection",
255:       "weka.attributeSelection.AttributeSelection",
256:       "weka.attributeSelection.ASEvaluation",
257:       "weka.attributeSelection.CfsSubsetEval",
258:       "weka.attributeSelection.ASSearch",
259:       "weka.attributeSelection.GreedyStepwise",
260:       "weka.core.Range",
261:       "weka.core.Tag",
262:       "weka.attributeSelection.BestFirst",
263:       "weka.classifiers.trees.J48",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.core.Capabilities",
266:       "org.pentaho.packageManagement.PackageManager",
267:       "org.pentaho.packageManagement.DefaultPackageManager",
268:       "weka.core.Version",
269:       "weka.core.Environment",
270:       "weka.core.WekaPackageManager",
271:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
272:       "weka.classifiers.meta.CostSensitiveClassifier",
273:       "weka.classifiers.CostMatrix",
274:       "weka.core.SelectedTag",
275:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
276:       "weka.attributeSelection.PrincipalComponents",
277:       "weka.core.BinarySparseInstance",
278:       "weka.core.DenseInstance",
279:       "weka.classifiers.lazy.IBk",
280:       "weka.core.neighboursearch.NearestNeighbourSearch",
281:       "weka.core.neighboursearch.LinearNNSearch",
282:       "weka.core.NormalizableDistance",
283:       "weka.core.EuclideanDistance",
284:       "weka.core.Instances",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.RevisionUtils",
287:       "weka.core.tokenizers.AlphabeticTokenizer",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.CoverTree",
290:       "weka.core.Stopwords",
291:       "weka.core.stemmers.LovinsStemmer",
292:       "weka.core.stemmers.IteratedLovinsStemmer",
293:       "weka.core.UnassignedDatasetException",
294:       "weka.core.neighboursearch.BallTree",
295:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
296:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
297:       "weka.core.neighboursearch.balltrees.BallSplitter",
298:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
299:       "weka.core.neighboursearch.balltrees.BallNode",
300:       "weka.classifiers.trees.LMT",
301:       "weka.classifiers.bayes.NaiveBayes",
302:       "weka.classifiers.RandomizableClassifier",
303:       "weka.classifiers.functions.SGDText",
304:       "weka.core.TestInstances",
305:       "weka.core.FindWithCapabilities",
306:       "weka.core.SingleIndex",
307:       "weka.classifiers.functions.supportVector.Kernel",
308:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
309:       "weka.classifiers.functions.SMO",
310:       "weka.classifiers.functions.supportVector.CachedKernel",
311:       "weka.classifiers.functions.supportVector.PolyKernel",
312:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
313:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
314:       "weka.core.neighboursearch.KDTree",
315:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
316:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
317:       "weka.core.Attribute",
318:       "weka.core.ProtectedProperties",
319:       "weka.core.TechnicalInformation",
320:       "weka.core.TechnicalInformation$Type",
321:       "weka.core.TechnicalInformation$Field",
322:       "weka.classifiers.functions.SMOreg",
323:       "weka.classifiers.functions.supportVector.RegOptimizer",
324:       "weka.classifiers.functions.supportVector.RegSMO",
325:       "weka.classifiers.functions.supportVector.RegSMOImproved",
326:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
327:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
328:       "weka.classifiers.functions.MultilayerPerceptron",
329:       "weka.core.FastVector",
330:       "weka.filters.unsupervised.attribute.NominalToBinary",
331:       "weka.classifiers.functions.neural.SigmoidUnit",
332:       "weka.classifiers.functions.neural.LinearUnit",
333:       "weka.classifiers.misc.SerializedClassifier",
334:       "weka.classifiers.bayes.BayesNet",
335:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
336:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
337:       "weka.classifiers.bayes.net.search.local.K2",
338:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
339:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
340:       "weka.classifiers.functions.supportVector.StringKernel",
341:       "weka.core.ClassDiscovery",
342:       "weka.classifiers.functions.LinearRegression",
343:       "weka.classifiers.functions.VotedPerceptron",
344:       "weka.classifiers.meta.AttributeSelectedClassifier",
345:       "weka.classifiers.trees.DecisionStump",
346:       "weka.classifiers.MultipleClassifiersCombiner",
347:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
348:       "weka.classifiers.meta.Vote",
349:       "weka.classifiers.bayes.NaiveBayesMultinomial",
350:       "weka.classifiers.meta.ClassificationViaRegression",
351:       "weka.classifiers.trees.m5.M5Base",
352:       "weka.classifiers.trees.M5P",
353:       "weka.classifiers.bayes.net.BIFReader"
354:     );
355:   }
356: }

[MASTER] 20:18:41.252 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)68;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_periodicP = 30;
naiveBayesMultinomialText0.getStopwords();
ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
ArrayList<String> arrayList1 = new ArrayList<String>();
Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) arrayList1, locale_FilteringMode0);
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
String[] stringArray0 = new String[8];
stringArray0[0] = "-norm <num>";
stringArray0[1] = "M S?lTOd<u*UWha";
stringArray0[2] = "";
stringArray0[3] = "import weka.filters.Filter;\n";
stringArray0[4] = "";
stringArray0[5] = "${B9g,kyTS}GkQ b";
stringArray0[6] = "BJVO $%bRcOX0";
stringArray0[7] = "";
naiveBayesMultinomialText0.setOptions(stringArray0);
Attribute attribute0 = new Attribute((String) null, (String) null, (byte)68);
attribute0.copy("3zXEJzpd={ jWp");
Attribute.typeToString(1);
int[] intArray0 = new int[6];
intArray0[0] = 3;
intArray0[1] = 2;
intArray0[2] = 0;
intArray0[3] = 2;
intArray0[2] = 10000;
intArray0[5] = 30;
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2, intArray0, 2);
double[] doubleArray0 = naiveBayesMultinomialText0.m_probOfClass;
naiveBayesMultinomialText0.pruneDictionary();
String string0 = naiveBayesMultinomialText0.stopwordsTipText();
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string0);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
[MASTER] 20:20:31.663 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 20:20:31.804 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 20:20:31.966 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 20:20:31.966 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1008/107_weka/evosuite-tests
* Done!

* Computation finished
