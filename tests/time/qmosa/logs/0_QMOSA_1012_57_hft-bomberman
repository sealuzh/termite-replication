* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: client.network.ClientMsgReceiver
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/57_hft-bomberman/evosuite-files/evosuite.properties
* Connecting to master process on port 2870
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:40:50.101 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:40:50.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:40:50.108 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:40:50.625 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 22:40:50.626 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 22:40:50.638 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 22:40:52.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 22:40:52.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 22:40:52.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 22:40:52.745 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 22:40:52.748 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 22:40:52.748 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 22:40:52.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 22:40:52.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 22:40:52.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 22:40:58.529 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 22:40:58.586 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class client.network.ClientMsgReceiver
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/57_hft-bomberman/src/main/java/client/network/ClientMsgReceiver.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1012
* Starting evolution
[MASTER] 22:41:12.885 [logback-1] WARN  ClassResetter - class java.lang.reflect.InvocationTargetException thrown during execution of method  __STATIC_RESET() for class client.BomberClient, java.lang.NullPointerException
[MASTER] 22:41:35.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] client.network.ClientMsgReceiver.closeConnection()V
[MASTER] 22:42:05.716 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] client.network.ClientMsgReceiver.handleConnectionLoss(Ljava/lang/Exception;)V
[MASTER] 22:42:29.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] client.network.ClientMsgReceiver.displayErrorMessage()V
* Search finished after 124s and 55 generations, 28328 statements, best individual has fitness: 360.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 44%
* Total number of goals: 36
* Number of covered goals: 16
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 15
* Number of covered goals: 7
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 36%
* Total number of goals: 14
* Number of covered goals: 5
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 15
* Number of covered goals: 7
* Generated 9 tests with total length 205
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 22:43:20.030 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 22:43:20.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
mockInetSocketAddress0.getHostName();
mockInetSocketAddress0.getHostName();
MockInetSocketAddress mockInetSocketAddress1 = new MockInetSocketAddress(3453);
mockInetSocketAddress0.getHostName();
InetAddress inetAddress0 = MockInetAddress.getByName("o/2-VR!dUi");
MockInetSocketAddress mockInetSocketAddress2 = new MockInetSocketAddress(inetAddress0, 3453);
mockInetSocketAddress2.getHostName();
MockSocket mockSocket0 = new MockSocket();
InetAddress inetAddress1 = mockSocket0.getLocalAddress();
mockSocket0.getLocalSocketAddress();
mockInetSocketAddress0.getHostName();
mockInetSocketAddress0.getHostName();
SQLDataException sQLDataException0 = new SQLDataException("#&", "o/2-VR!dUi", 0);
MockInetSocketAddress mockInetSocketAddress3 = new MockInetSocketAddress(inetAddress1, 3287);
mockInetSocketAddress2.getHostName();
mockInetSocketAddress0.getHostName();
mockInetSocketAddress3.getHostName();
mockInetSocketAddress3.getHostName();
mockInetSocketAddress3.getHostName();
ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
Object object0 = new Object();
RepositorySelector repositorySelector0 = mock(RepositorySelector.class, new ViolatedAssumptionAnswer());
LogManager.setRepositorySelector(repositorySelector0, sQLDataException0);
ClientMsgReceiver clientMsgReceiver1 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("192.168.1.42", "192.168.1.42");

[MASTER] 22:43:20.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 22:43:20.608 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockSocket mockSocket0 = new MockSocket();
BomberClient bomberClient0 = BomberClient.getInstance();
ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
int[] intArray0 = new int[3];
int int0 = 3931;
intArray0[0] = int0;
String string0 = "[)cM9oZvht|7h3QUa";
GlobalChatMsg globalChatMsg0 = new GlobalChatMsg(string0);

* Permissions denied during test execution: 
  - java.net.SocketPermission: 
         resolve 1-42-42-200.cab.prima.com.ar: 28
         resolve localhost: 86
  - java.sql.SQLPermission: 
         setLog: 30
* Writing JUnit test case 'ClientMsgReceiver_ESTest' to /home/ubuntu/termite/qmosa/tests/s1012/57_hft-bomberman/evosuite-tests
* Done!

* Computation finished
