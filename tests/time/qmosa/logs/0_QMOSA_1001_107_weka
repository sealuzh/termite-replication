* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10604
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10605
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:40:41.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:40:41.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:40:41.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:40:41.205 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 14:40:45.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:40:52.958 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:40:52.962 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:40:52.963 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:40:54.087 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:40:55.074 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:40:55.090 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:40:57.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:40:57.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:40:57.981 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:40:57.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:40:57.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:40:57.983 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:40:57.983 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:40:57.984 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:40:57.985 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:40:58.057 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 14:40:58.085 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 14:41:26.931 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 14:42:25.853 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;: Line 3648
[MASTER] 14:42:25.888 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;
[MASTER] 14:42:25.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.num2ShortID(I[CI)Ljava/lang/String;
[MASTER] 14:42:31.400 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 30 generations, 29662 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 14 tests with total length 309
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
* Search finished after 124s and 18 generations, 11593 statements, best individual has fitness: 20904.0
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 1378
* Number of covered goals: 599
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 809
* Number of covered goals: 220
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 38%
* Total number of goals: 424
* Number of covered goals: 160
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 12%
* Total number of goals: 278
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 64%
* Total number of goals: 103
* Number of covered goals: 66
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 63%
* Total number of goals: 103
* Number of covered goals: 65
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 21%
* Total number of goals: 809
* Number of covered goals: 167
* Generated 66 tests with total length 1392
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
[MASTER] 14:48:29.208 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:48:29.360 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 14:48:29.950 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 14:48:29.950 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10602
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10598
* Connecting to master process on port 10600
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10606
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
[MASTER] 14:49:34.232 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:49:34.239 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:49:34.240 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:49:34.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:49:34.432 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:49:34.438 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 14:49:36.249 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:49:36.250 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:49:36.251 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:49:36.311 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:49:36.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:49:36.331 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 14:49:39.439 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:49:39.469 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:49:39.471 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
[MASTER] 14:49:41.743 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:49:42.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:49:42.292 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1001
* Starting evolution
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1001
* Starting evolution
[MASTER] 14:49:47.605 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: Line 635
[MASTER] 14:49:47.606 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: Line 704
[MASTER] 14:49:47.607 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: Line 771
[MASTER] 14:49:47.607 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 14:49:47.628 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch
[MASTER] 14:49:47.631 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch
[MASTER] 14:49:47.631 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 14:49:47.631 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch
[MASTER] 14:49:47.649 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 267: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - InsertUnaryOp Negation
[MASTER] 14:49:47.658 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 283: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_norm
[MASTER] 14:49:47.658 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 284: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_t
[MASTER] 14:49:47.658 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 285: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_leplace
[MASTER] 14:49:47.659 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 286: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_lnorm
[MASTER] 14:49:47.659 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 287: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - InsertUnaryOp Negation
[MASTER] 14:49:47.688 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 312: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:771 - ReplaceConstant - The LNorm to use for document length normalization. -> 
[MASTER] 14:49:47.688 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 14:49:47.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:False
[MASTER] 14:49:47.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:Positive
[MASTER] 14:49:47.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 14:49:47.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 14:49:47.817 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 14:49:47.817 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 14:49:47.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 14:49:47.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 14:49:47.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z
[MASTER] 14:49:47.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D
[MASTER] 14:49:47.823 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;
[MASTER] 14:49:47.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 14:49:47.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getLowercaseTokens()Z
[MASTER] 14:49:47.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 14:49:47.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getMinWordFrequency()D
[MASTER] 14:49:47.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.LNormTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:LNormTipText()Ljava/lang/String;
[MASTER] 14:49:47.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: Line 789
[MASTER] 14:49:47.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: Line 790
[MASTER] 14:49:47.970 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: root-Branch
[MASTER] 14:49:47.981 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 318: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_norm
[MASTER] 14:49:47.985 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 319: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_minWordP
[MASTER] 14:49:47.986 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 321: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_leplace
[MASTER] 14:49:47.994 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 322: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - ReplaceVariable newLNorm -> m_lnorm
[MASTER] 14:49:47.994 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 323: weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V:789 - InsertUnaryOp Negation of newLNorm
[MASTER] 14:49:48.011 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V
[MASTER] 14:49:48.014 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V
[MASTER] 14:49:48.021 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLNorm(D)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLNorm(D)V
[MASTER] 14:49:54.979 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: Line 599
[MASTER] 14:49:55.019 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch
[MASTER] 14:49:55.020 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 214: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:599 - ReplaceConstant - Whether check for error rate >= 1/2 is included in stopping criterion. -> 
[MASTER] 14:49:55.058 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 14:49:55.061 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 14:49:55.070 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;
[MASTER] 14:49:55.074 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.checkErrorRateTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:checkErrorRateTipText()Ljava/lang/String;
[MASTER] 14:49:55.434 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
* Search finished after 122s and 51 generations, 38634 statements, best individual has fitness: 9464.0
* Search finished after 124s and 10 generations, 14396 statements, best individual has fitness: 4368.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 39%
* Total number of goals: 370
* Number of covered goals: 145
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 242
* Number of covered goals: 56
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 25%
* Total number of goals: 713
* Number of covered goals: 179
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 72
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 242
* Number of covered goals: 56
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Generated 49 tests with total length 890
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion LINE: 74%
* Total number of goals: 217
* Number of covered goals: 161
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 50%
* Total number of goals: 428
* Number of covered goals: 215
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 260
* Number of covered goals: 209
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 428
* Number of covered goals: 212
* Generated 45 tests with total length 1152
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 125s and 10 generations, 9989 statements, best individual has fitness: 3176.0
* Search finished after 124s and 26 generations, 19556 statements, best individual has fitness: 15048.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 338
* Number of covered goals: 251
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 194
* Number of covered goals: 122
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 78%
* Total number of goals: 476
* Number of covered goals: 371
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 112
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 49
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 194
* Number of covered goals: 119
* Generated 46 tests with total length 1022
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 28%
* Total number of goals: 705
* Number of covered goals: 199
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 19%
* Total number of goals: 416
* Number of covered goals: 79
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 39%
* Total number of goals: 993
* Number of covered goals: 387
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 93
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 72
* Number of covered goals: 64
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 88%
* Total number of goals: 72
* Number of covered goals: 63
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 19%
* Total number of goals: 416
* Number of covered goals: 78
* Generated 40 tests with total length 826
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 14:53:05.955 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:53:06.480 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Resulting test suite's mutation score: 70%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 45
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
[MASTER] 14:58:31.509 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_8_1575385111466/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_8_1575385111466/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.java]]
[MASTER] 14:58:31.509 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:31.509 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:31.513 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 46
[MASTER] 14:58:31.515 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_8_1575385111466/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:58:31 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_8_tmp__ESTest extends NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.4019118730065934
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.m_useStopList = true;
29:       String[] stringArray0 = new String[4];
30:       stringArray0[0] = "DF/qS";
31:       stringArray0[1] = "";
32:       stringArray0[2] = "YwBKl<,";
33:       stringArray0[3] = "2 D10!kl4:wXi";
34:       naiveBayesMultinomialText0.setOptions(stringArray0);
35:       naiveBayesMultinomialText0.normTipText();
36:       naiveBayesMultinomialText0.setPeriodicPruning(1);
37:       String[] stringArray1 = new String[6];
38:       stringArray1[0] = "The norm of the instances after normalization.";
39:       stringArray1[1] = "";
40:       stringArray1[2] = "DF/qS";
41:       stringArray1[3] = "2 D10!kl4:wXi";
42:       stringArray1[4] = "DF/qS";
43:       stringArray1[5] = "YwBKl<,";
44:       naiveBayesMultinomialText0.setOptions(stringArray1);
45:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
46:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
47:       naiveBayesMultinomialText0.setOptions(stringArray0);
48:       naiveBayesMultinomialText0.getOptions();
49:       naiveBayesMultinomialText0.getOptions();
50:       // Undeclared exception!
51:       try { 
52:         naiveBayesMultinomialText0.pruneDictionary();
53:         fail("Expecting exception: NullPointerException");
54:       
55:       } catch(NullPointerException e) {
56:          //
57:          // no message in exception (getMessage() returned null)
58:          //
59:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
60:       }
61:   }
62: }
RegularFileObject[/tmp/EvoSuite_8_1575385111466/weka/classifiers/bayes/NaiveBayesMultinomialText_8_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:58:31 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.estimators.DiscreteEstimator",
143:       "weka.core.neighboursearch.balltrees.BallSplitter",
144:       "weka.core.Version",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.filters.unsupervised.attribute.Center",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.ClassDiscovery",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
155:       "weka.core.scripting.JythonSerializableObject",
156:       "weka.classifiers.Classifier",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.classifiers.meta.CostSensitiveClassifier",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_8_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Instances",
232:       "weka.core.Utils",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.Range",
236:       "weka.core.AbstractInstance",
237:       "weka.core.SparseInstance",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.Evaluation",
247:       "weka.core.Option",
248:       "weka.core.tokenizers.AlphabeticTokenizer",
249:       "weka.core.SerializedObject",
250:       "weka.core.FindWithCapabilities",
251:       "weka.core.SingleIndex",
252:       "weka.core.ClassDiscovery",
253:       "weka.core.Attribute",
254:       "weka.core.ProtectedProperties",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.KDTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
260:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
261:       "weka.classifiers.bayes.NaiveBayesMultinomial",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.classifiers.bayes.BayesNet",
267:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
268:       "weka.core.Tag",
269:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.K2",
271:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
272:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.RevisionUtils",
276:       "weka.core.neighboursearch.BallTree",
277:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
278:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
279:       "weka.core.neighboursearch.balltrees.BallSplitter",
280:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
281:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
283:       "weka.classifiers.functions.neural.NeuralConnection",
284:       "weka.classifiers.functions.neural.NeuralNode",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.neighboursearch.balltrees.BallNode",
287:       "weka.core.DenseInstance",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.TestInstances",
291:       "weka.core.Stopwords",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.stemmers.LovinsStemmer",
294:       "weka.core.stemmers.IteratedLovinsStemmer",
295:       "weka.classifiers.SingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.rules.ZeroR",
299:       "weka.classifiers.lazy.IBk",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.core.tokenizers.NGramTokenizer",
303:       "weka.classifiers.misc.InputMappedClassifier",
304:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
305:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
306:       "weka.core.WekaEnumeration",
307:       "weka.core.Attribute$1",
308:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
309:       "weka.attributeSelection.ASEvaluation",
310:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
311:       "weka.attributeSelection.PrincipalComponents",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.misc.SerializedClassifier",
314:       "weka.classifiers.trees.J48",
315:       "weka.classifiers.trees.j48.ClassifierTree",
316:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.core.SerializationHelper",
319:       "weka.classifiers.IteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.AdditiveRegression",
321:       "weka.core.converters.ArffLoader$ArffReader"
322:     );
323:   }
324: }

[MASTER] 14:58:31.515 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_useStopList = true;
String[] stringArray0 = new String[4];
stringArray0[0] = "DF/qS";
stringArray0[1] = "";
stringArray0[2] = "YwBKl<,";
stringArray0[3] = "2 D10!kl4:wXi";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.setPeriodicPruning(1);
String[] stringArray1 = new String[6];
stringArray1[0] = "The norm of the instances after normalization.";
stringArray1[1] = "";
stringArray1[2] = "DF/qS";
stringArray1[3] = "2 D10!kl4:wXi";
stringArray1[4] = "DF/qS";
stringArray1[5] = "YwBKl<,";
naiveBayesMultinomialText0.setOptions(stringArray1);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 14:58:31.717 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1575385111667/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1575385111667/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.java]]
[MASTER] 14:58:31.717 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:31.717 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:31.717 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 36
[MASTER] 14:58:31.719 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1575385111667/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:58:31 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_11_tmp__ESTest extends NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.281637924969231
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
28:       naiveBayesMultinomialText0.setOptions(stringArray0);
29:       String string0 = naiveBayesMultinomialText0.normTipText();
30:       assertEquals("The norm of the instances after normalization.", string0);
31:       
32:       naiveBayesMultinomialText0.setOptions(stringArray0);
33:       String string1 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
34:       assertEquals("Use word frequencies rather than binary bag of words representation", string1);
35:       
36:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
37:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
38:       naiveBayesMultinomialText0.setOptions(stringArray0);
39:       naiveBayesMultinomialText0.getOptions();
40:       String[] stringArray1 = naiveBayesMultinomialText0.getOptions();
41:       assertEquals(12, stringArray1.length);
42:       
43:       naiveBayesMultinomialText0.pruneDictionary();
44:       String string2 = naiveBayesMultinomialText0.periodicPruningTipText();
45:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
46:       assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string2);
47:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
48:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
49:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
50:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
51:   }
52: }
RegularFileObject[/tmp/EvoSuite_11_1575385111667/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:58:31 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.estimators.DiscreteEstimator",
143:       "weka.core.neighboursearch.balltrees.BallSplitter",
144:       "weka.core.Version",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.filters.unsupervised.attribute.Center",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.ClassDiscovery",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
155:       "weka.core.scripting.JythonSerializableObject",
156:       "weka.classifiers.Classifier",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.classifiers.meta.CostSensitiveClassifier",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Instances",
232:       "weka.core.Utils",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.Range",
236:       "weka.core.AbstractInstance",
237:       "weka.core.SparseInstance",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.Evaluation",
247:       "weka.core.Option",
248:       "weka.core.tokenizers.AlphabeticTokenizer",
249:       "weka.core.SerializedObject",
250:       "weka.core.FindWithCapabilities",
251:       "weka.core.SingleIndex",
252:       "weka.core.ClassDiscovery",
253:       "weka.core.Attribute",
254:       "weka.core.ProtectedProperties",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.KDTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
260:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
261:       "weka.classifiers.bayes.NaiveBayesMultinomial",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.classifiers.bayes.BayesNet",
267:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
268:       "weka.core.Tag",
269:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.K2",
271:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
272:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.RevisionUtils",
276:       "weka.core.neighboursearch.BallTree",
277:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
278:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
279:       "weka.core.neighboursearch.balltrees.BallSplitter",
280:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
281:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
283:       "weka.classifiers.functions.neural.NeuralConnection",
284:       "weka.classifiers.functions.neural.NeuralNode",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.neighboursearch.balltrees.BallNode",
287:       "weka.core.DenseInstance",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.TestInstances",
291:       "weka.core.Stopwords",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.stemmers.LovinsStemmer",
294:       "weka.core.stemmers.IteratedLovinsStemmer",
295:       "weka.classifiers.SingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.rules.ZeroR",
299:       "weka.classifiers.lazy.IBk",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.core.tokenizers.NGramTokenizer",
303:       "weka.classifiers.misc.InputMappedClassifier",
304:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
305:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
306:       "weka.core.WekaEnumeration",
307:       "weka.core.Attribute$1",
308:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
309:       "weka.attributeSelection.ASEvaluation",
310:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
311:       "weka.attributeSelection.PrincipalComponents",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.misc.SerializedClassifier",
314:       "weka.classifiers.trees.J48",
315:       "weka.classifiers.trees.j48.ClassifierTree",
316:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.core.SerializationHelper",
319:       "weka.classifiers.IteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.AdditiveRegression",
321:       "weka.core.converters.ArffLoader$ArffReader"
322:     );
323:   }
324: }

[MASTER] 14:58:31.720 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
String string0 = naiveBayesMultinomialText0.normTipText();
assertEquals("The norm of the instances after normalization.", string0);

naiveBayesMultinomialText0.setOptions(stringArray0);
String string1 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string1);

Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.getOptions();
String[] stringArray1 = naiveBayesMultinomialText0.getOptions();
assertEquals(12, stringArray1.length);

naiveBayesMultinomialText0.pruneDictionary();
String string2 = naiveBayesMultinomialText0.periodicPruningTipText();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string2);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 14:58:32.040 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1575385112004/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1575385112004/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.java]]
[MASTER] 14:58:32.040 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:32.040 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:32.042 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:58:32.042 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 28
[MASTER] 14:58:32.043 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1575385112004/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:58:32 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.tokenizers.Tokenizer;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_18_tmp__ESTest extends NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.1945366875886965
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.m_leplace = 0.0;
28:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
29:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
30:       naiveBayesMultinomialText0.listOptions();
31:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
32:       
33:       naiveBayesMultinomialText0.m_lnorm = (-697.6);
34:       naiveBayesMultinomialText0.stopwordsTipText();
35:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
36:       naiveBayesMultinomialText0.getNormalizeDocLength();
37:       String[] stringArray0 = new String[4];
38:       stringArray0[0] = "The file containing the stopwords (if this is a directory then the default ones are used).";
39:       stringArray0[1] = "If true then document length is normalized according to the settings for norm and lnorm";
40:       stringArray0[2] = "The file containing the stopwords (if this is a directory then the default ones are used).";
41:       stringArray0[3] = "The file containing the stopwords (if this is a directory then the default ones are used).";
42:       NaiveBayesMultinomialText.main(stringArray0);
43:       Tokenizer tokenizer0 = naiveBayesMultinomialText0.getTokenizer();
44:       naiveBayesMultinomialText0.setNormalizeDocLength(false);
45:       Tokenizer.runTokenizer(tokenizer0, stringArray0);
46:       naiveBayesMultinomialText0.useStopListTipText();
47:       naiveBayesMultinomialText0.setTokenizer(tokenizer0);
48:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
49:       naiveBayesMultinomialText0.setMinWordFrequency(0.0);
50:       naiveBayesMultinomialText0.setLowercaseTokens(false);
51:       naiveBayesMultinomialText0.getMinWordFrequency();
52:       naiveBayesMultinomialText0.periodicPruningTipText();
53:       String string0 = naiveBayesMultinomialText0.getRevision();
54:       assertEquals("9122", string0);
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_18_1575385112004/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:58:32 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.estimators.DiscreteEstimator",
143:       "weka.core.neighboursearch.balltrees.BallSplitter",
144:       "weka.core.Version",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.filters.unsupervised.attribute.Center",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.ClassDiscovery",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
155:       "weka.core.scripting.JythonSerializableObject",
156:       "weka.classifiers.Classifier",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.classifiers.meta.CostSensitiveClassifier",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Instances",
232:       "weka.core.Utils",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.Range",
236:       "weka.core.AbstractInstance",
237:       "weka.core.SparseInstance",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.Evaluation",
247:       "weka.core.Option",
248:       "weka.core.tokenizers.AlphabeticTokenizer",
249:       "weka.core.SerializedObject",
250:       "weka.core.FindWithCapabilities",
251:       "weka.core.SingleIndex",
252:       "weka.core.ClassDiscovery",
253:       "weka.core.Attribute",
254:       "weka.core.ProtectedProperties",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.KDTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
260:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
261:       "weka.classifiers.bayes.NaiveBayesMultinomial",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.classifiers.bayes.BayesNet",
267:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
268:       "weka.core.Tag",
269:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.K2",
271:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
272:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.RevisionUtils",
276:       "weka.core.neighboursearch.BallTree",
277:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
278:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
279:       "weka.core.neighboursearch.balltrees.BallSplitter",
280:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
281:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
283:       "weka.classifiers.functions.neural.NeuralConnection",
284:       "weka.classifiers.functions.neural.NeuralNode",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.neighboursearch.balltrees.BallNode",
287:       "weka.core.DenseInstance",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.TestInstances",
291:       "weka.core.Stopwords",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.stemmers.LovinsStemmer",
294:       "weka.core.stemmers.IteratedLovinsStemmer",
295:       "weka.classifiers.SingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.rules.ZeroR",
299:       "weka.classifiers.lazy.IBk",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.core.tokenizers.NGramTokenizer",
303:       "weka.classifiers.misc.InputMappedClassifier",
304:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
305:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
306:       "weka.core.WekaEnumeration",
307:       "weka.core.Attribute$1",
308:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
309:       "weka.attributeSelection.ASEvaluation",
310:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
311:       "weka.attributeSelection.PrincipalComponents",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.misc.SerializedClassifier",
314:       "weka.classifiers.trees.J48",
315:       "weka.classifiers.trees.j48.ClassifierTree",
316:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.core.SerializationHelper",
319:       "weka.classifiers.IteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.AdditiveRegression",
321:       "weka.core.converters.ArffLoader$ArffReader"
322:     );
323:   }
324: }

[MASTER] 14:58:32.044 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_leplace = 0.0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.listOptions();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);

naiveBayesMultinomialText0.m_lnorm = (-697.6);
naiveBayesMultinomialText0.stopwordsTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.getNormalizeDocLength();
String[] stringArray0 = new String[4];
stringArray0[0] = "The file containing the stopwords (if this is a directory then the default ones are used).";
stringArray0[1] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[2] = "The file containing the stopwords (if this is a directory then the default ones are used).";
stringArray0[3] = "The file containing the stopwords (if this is a directory then the default ones are used).";
NaiveBayesMultinomialText.main(stringArray0);
Tokenizer tokenizer0 = naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.setNormalizeDocLength(false);
Tokenizer.runTokenizer(tokenizer0, stringArray0);
naiveBayesMultinomialText0.useStopListTipText();
naiveBayesMultinomialText0.setTokenizer(tokenizer0);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.setMinWordFrequency(0.0);
naiveBayesMultinomialText0.setLowercaseTokens(false);
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.periodicPruningTipText();
String string0 = naiveBayesMultinomialText0.getRevision();
assertEquals("9122", string0);


[MASTER] 14:58:32.315 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1575385112284/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1575385112284/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.java]]
[MASTER] 14:58:32.315 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:32.315 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:32.315 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 14:58:32.315 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 42
[MASTER] 14:58:32.316 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1575385112284/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:58:32 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.BinarySparseInstance;
19: import weka.core.Instance;
20: import weka.core.Instances;
21: import weka.core.SparseInstance;
22: import weka.core.TestInstances;
23: import weka.filters.Filter;
24: import weka.filters.supervised.attribute.Discretize;
25: import weka.filters.unsupervised.attribute.ReplaceMissingValues;
26: 
27: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
28: public class NaiveBayesMultinomialText_25_tmp__ESTest extends NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
29: 
30:   /**
31:   //Test case number: 0
32:   /*Coverage entropy=1.830738805564335
33:   */
34:   @Test(timeout = 4000)
35:   public void test0()  throws Throwable  {
36:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText0.toString();
38:       naiveBayesMultinomialText0.reset();
39:       naiveBayesMultinomialText0.m_stemmer = null;
40:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NaiveBayesMultinomialText: No model built yet.\n");
41:       double[] doubleArray0 = new double[2];
42:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
43:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
44:       doubleArray0[0] = 0.0;
45:       doubleArray0[1] = 2637.566;
46:       SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
47:       int[] intArray0 = new int[0];
48:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2005.8863, intArray0, 9);
49:       boolean boolean0 = false;
50:       try { 
51:         naiveBayesMultinomialText0.updateClassifier((Instance) sparseInstance0, true);
52:         fail("Expecting exception: RuntimeException");
53:       
54:       } catch(RuntimeException e) {
55:          //
56:          // DenseInstance doesn't have access to a dataset!
57:          //
58:          verifyException("weka.core.AbstractInstance", e);
59:       }
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_25_1575385112284/weka/classifiers/bayes/NaiveBayesMultinomialText_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:58:32 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.estimators.DiscreteEstimator",
143:       "weka.core.neighboursearch.balltrees.BallSplitter",
144:       "weka.core.Version",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.filters.unsupervised.attribute.Center",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.ClassDiscovery",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
155:       "weka.core.scripting.JythonSerializableObject",
156:       "weka.classifiers.Classifier",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.classifiers.meta.CostSensitiveClassifier",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Instances",
232:       "weka.core.Utils",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.Range",
236:       "weka.core.AbstractInstance",
237:       "weka.core.SparseInstance",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.Evaluation",
247:       "weka.core.Option",
248:       "weka.core.tokenizers.AlphabeticTokenizer",
249:       "weka.core.SerializedObject",
250:       "weka.core.FindWithCapabilities",
251:       "weka.core.SingleIndex",
252:       "weka.core.ClassDiscovery",
253:       "weka.core.Attribute",
254:       "weka.core.ProtectedProperties",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.KDTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
260:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
261:       "weka.classifiers.bayes.NaiveBayesMultinomial",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.classifiers.bayes.BayesNet",
267:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
268:       "weka.core.Tag",
269:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.K2",
271:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
272:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.RevisionUtils",
276:       "weka.core.neighboursearch.BallTree",
277:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
278:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
279:       "weka.core.neighboursearch.balltrees.BallSplitter",
280:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
281:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
283:       "weka.classifiers.functions.neural.NeuralConnection",
284:       "weka.classifiers.functions.neural.NeuralNode",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.neighboursearch.balltrees.BallNode",
287:       "weka.core.DenseInstance",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.TestInstances",
291:       "weka.core.Stopwords",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.stemmers.LovinsStemmer",
294:       "weka.core.stemmers.IteratedLovinsStemmer",
295:       "weka.classifiers.SingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.rules.ZeroR",
299:       "weka.classifiers.lazy.IBk",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.core.tokenizers.NGramTokenizer",
303:       "weka.classifiers.misc.InputMappedClassifier",
304:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
305:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
306:       "weka.core.WekaEnumeration",
307:       "weka.core.Attribute$1",
308:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
309:       "weka.attributeSelection.ASEvaluation",
310:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
311:       "weka.attributeSelection.PrincipalComponents",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.misc.SerializedClassifier",
314:       "weka.classifiers.trees.J48",
315:       "weka.classifiers.trees.j48.ClassifierTree",
316:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.core.SerializationHelper",
319:       "weka.classifiers.IteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.AdditiveRegression",
321:       "weka.core.converters.ArffLoader$ArffReader"
322:     );
323:   }
324: }

[MASTER] 14:58:32.317 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.reset();
naiveBayesMultinomialText0.m_stemmer = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NaiveBayesMultinomialText: No model built yet.\n");
double[] doubleArray0 = new double[2];
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
doubleArray0[0] = 0.0;
doubleArray0[1] = 2637.566;
SparseInstance sparseInstance0 = new SparseInstance(0.0, doubleArray0);
int[] intArray0 = new int[0];
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(2005.8863, intArray0, 9);
boolean boolean0 = false;
naiveBayesMultinomialText0.updateClassifier((Instance) sparseInstance0, true);

[MASTER] 14:58:32.899 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1575385112869/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1575385112869/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.java]]
[MASTER] 14:58:32.899 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:32.899 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:58:32.899 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 14:58:32.900 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1575385112869/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:58:32 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_40_tmp__ESTest extends NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=3.435346574734865
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       naiveBayesMultinomialText0.normTipText();
28:       naiveBayesMultinomialText0.setPeriodicPruning((-712));
29:       String[] stringArray0 = new String[9];
30:       stringArray0[0] = "The norm of the instances after normalization.";
31:       stringArray0[1] = "The norm of the instances after normalization.";
32:       stringArray0[2] = "The norm of the instances after normalization.";
33:       stringArray0[3] = "The norm of the instances after normalization.";
34:       stringArray0[4] = "The norm of the instances after normalization.";
35:       stringArray0[5] = "The norm of the instances after normalization.";
36:       stringArray0[6] = "'H5tBP$B";
37:       stringArray0[7] = "The norm of the instances after normalization.";
38:       stringArray0[8] = "The norm of the instances after normalization.";
39:       naiveBayesMultinomialText0.setOptions(stringArray0);
40:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
41:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
42:       String[] stringArray1 = new String[4];
43:       stringArray1[0] = "The norm of the instances after normalization.";
44:       stringArray1[1] = "'H5tBP$B";
45:       stringArray1[2] = "The norm of the instances after normalization.";
46:       stringArray1[3] = "Use word frequencies rather than binary bag of words representation";
47:       naiveBayesMultinomialText0.setOptions(stringArray1);
48:       naiveBayesMultinomialText0.getOptions();
49:       naiveBayesMultinomialText0.getOptions();
50:       naiveBayesMultinomialText0.pruneDictionary();
51:       naiveBayesMultinomialText0.periodicPruningTipText();
52:       naiveBayesMultinomialText0.getOptions();
53:       assertEquals((-712), naiveBayesMultinomialText0.getPeriodicPruning());
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_40_1575385112869/weka/classifiers/bayes/NaiveBayesMultinomialText_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:58:32 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.core.neighboursearch.BallTree",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.logging.Logger$Level",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
104:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
105:       "org.pentaho.packageManagement.DefaultPackageManager",
106:       "org.bounce.net.DefaultAuthenticator",
107:       "weka.classifiers.bayes.NaiveBayes",
108:       "weka.estimators.IncrementalEstimator",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.AdditionalMeasureProducer",
130:       "weka.core.neighboursearch.balltrees.BallNode",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.matrix.Matrix",
134:       "weka.core.SingleIndex",
135:       "weka.core.CapabilitiesHandler",
136:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
137:       "weka.attributeSelection.ASEvaluation",
138:       "weka.core.AbstractInstance",
139:       "weka.core.scripting.JythonObject",
140:       "weka.core.SelectedTag",
141:       "org.pentaho.packageManagement.DefaultPackage",
142:       "weka.estimators.DiscreteEstimator",
143:       "weka.core.neighboursearch.balltrees.BallSplitter",
144:       "weka.core.Version",
145:       "weka.core.Tag",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.core.FindWithCapabilities",
148:       "weka.filters.unsupervised.attribute.Center",
149:       "weka.core.OptionHandler",
150:       "weka.core.WekaException",
151:       "weka.core.ClassDiscovery",
152:       "weka.filters.StreamableFilter",
153:       "weka.core.Range",
154:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
155:       "weka.core.scripting.JythonSerializableObject",
156:       "weka.classifiers.Classifier",
157:       "weka.core.Capabilities$Capability",
158:       "weka.core.SparseInstance",
159:       "org.pentaho.packageManagement.PackageManager",
160:       "weka.attributeSelection.AttributeTransformer",
161:       "weka.core.tokenizers.WordTokenizer",
162:       "weka.classifiers.misc.SerializedClassifier",
163:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
164:       "weka.attributeSelection.PrincipalComponents",
165:       "weka.core.stemmers.SnowballStemmer",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.classifiers.functions.supportVector.Kernel",
169:       "weka.core.WekaPackageManager",
170:       "weka.filters.SupervisedFilter",
171:       "weka.core.TechnicalInformationHandler",
172:       "weka.core.neighboursearch.LinearNNSearch",
173:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
174:       "weka.core.Option",
175:       "weka.classifiers.meta.CostSensitiveClassifier",
176:       "weka.core.neighboursearch.PerformanceStats",
177:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
178:       "weka.filters.Sourcable",
179:       "weka.core.Attribute",
180:       "weka.core.Stopwords",
181:       "weka.core.tokenizers.AlphabeticTokenizer",
182:       "weka.core.FastVector",
183:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
184:       "weka.core.UnassignedDatasetException",
185:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
186:       "weka.classifiers.RandomizableClassifier",
187:       "weka.classifiers.SingleClassifierEnhancer",
188:       "weka.core.RevisionUtils",
189:       "weka.core.Instance",
190:       "weka.core.ProtectedProperties",
191:       "weka.estimators.Estimator",
192:       "weka.core.StringLocator",
193:       "weka.core.AttributeStats",
194:       "weka.core.WeightedInstancesHandler",
195:       "weka.core.neighboursearch.NearestNeighbourSearch",
196:       "weka.filters.unsupervised.attribute.Remove",
197:       "weka.core.Randomizable",
198:       "weka.core.EuclideanDistance",
199:       "weka.core.Instances",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.core.stemmers.IteratedLovinsStemmer",
203:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
204:       "weka.filters.unsupervised.attribute.Standardize",
205:       "weka.core.TechnicalInformation",
206:       "weka.core.UnsupportedAttributeTypeException",
207:       "weka.classifiers.Sourcable",
208:       "weka.core.RevisionHandler",
209:       "weka.classifiers.evaluation.output.prediction.PlainText",
210:       "weka.core.neighboursearch.TreePerformanceStats",
211:       "weka.core.xml.XMLSerialization",
212:       "weka.classifiers.xml.XMLClassifier",
213:       "weka.classifiers.lazy.IBk",
214:       "weka.filters.Filter",
215:       "weka.filters.supervised.attribute.Discretize"
216:     );
217:   } 
218: 
219:   private static void resetClasses() {
220:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
221: 
222:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
223:       "weka.classifiers.AbstractClassifier",
224:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
226:       "weka.core.Capabilities$Capability",
227:       "weka.core.tokenizers.Tokenizer",
228:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
229:       "weka.core.tokenizers.WordTokenizer",
230:       "weka.core.stemmers.NullStemmer",
231:       "weka.core.Instances",
232:       "weka.core.Utils",
233:       "weka.filters.Filter",
234:       "weka.filters.supervised.attribute.Discretize",
235:       "weka.core.Range",
236:       "weka.core.AbstractInstance",
237:       "weka.core.SparseInstance",
238:       "weka.core.BinarySparseInstance",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.UnassignedDatasetException",
246:       "weka.classifiers.Evaluation",
247:       "weka.core.Option",
248:       "weka.core.tokenizers.AlphabeticTokenizer",
249:       "weka.core.SerializedObject",
250:       "weka.core.FindWithCapabilities",
251:       "weka.core.SingleIndex",
252:       "weka.core.ClassDiscovery",
253:       "weka.core.Attribute",
254:       "weka.core.ProtectedProperties",
255:       "weka.core.neighboursearch.NearestNeighbourSearch",
256:       "weka.core.neighboursearch.KDTree",
257:       "weka.core.NormalizableDistance",
258:       "weka.core.EuclideanDistance",
259:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
260:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
261:       "weka.classifiers.bayes.NaiveBayesMultinomial",
262:       "weka.classifiers.bayes.NaiveBayes",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.classifiers.bayes.BayesNet",
267:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
268:       "weka.core.Tag",
269:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.K2",
271:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
272:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
273:       "weka.classifiers.RandomizableClassifier",
274:       "weka.classifiers.functions.SGDText",
275:       "weka.core.RevisionUtils",
276:       "weka.core.neighboursearch.BallTree",
277:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
278:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
279:       "weka.core.neighboursearch.balltrees.BallSplitter",
280:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
281:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
282:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
283:       "weka.classifiers.functions.neural.NeuralConnection",
284:       "weka.classifiers.functions.neural.NeuralNode",
285:       "weka.core.stemmers.SnowballStemmer",
286:       "weka.core.neighboursearch.balltrees.BallNode",
287:       "weka.core.DenseInstance",
288:       "weka.core.stemmers.Stemming",
289:       "weka.classifiers.CostMatrix",
290:       "weka.core.TestInstances",
291:       "weka.core.Stopwords",
292:       "weka.core.neighboursearch.LinearNNSearch",
293:       "weka.core.stemmers.LovinsStemmer",
294:       "weka.core.stemmers.IteratedLovinsStemmer",
295:       "weka.classifiers.SingleClassifierEnhancer",
296:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
297:       "weka.classifiers.meta.CostSensitiveClassifier",
298:       "weka.classifiers.rules.ZeroR",
299:       "weka.classifiers.lazy.IBk",
300:       "weka.classifiers.functions.supportVector.Kernel",
301:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
302:       "weka.core.tokenizers.NGramTokenizer",
303:       "weka.classifiers.misc.InputMappedClassifier",
304:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
305:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
306:       "weka.core.WekaEnumeration",
307:       "weka.core.Attribute$1",
308:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
309:       "weka.attributeSelection.ASEvaluation",
310:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
311:       "weka.attributeSelection.PrincipalComponents",
312:       "weka.core.neighboursearch.CoverTree",
313:       "weka.classifiers.misc.SerializedClassifier",
314:       "weka.classifiers.trees.J48",
315:       "weka.classifiers.trees.j48.ClassifierTree",
316:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
317:       "weka.classifiers.functions.Logistic",
318:       "weka.core.SerializationHelper",
319:       "weka.classifiers.IteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.AdditiveRegression",
321:       "weka.core.converters.ArffLoader$ArffReader"
322:     );
323:   }
324: }

[MASTER] 14:58:32.901 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.setPeriodicPruning((-712));
String[] stringArray0 = new String[9];
stringArray0[0] = "The norm of the instances after normalization.";
stringArray0[1] = "The norm of the instances after normalization.";
stringArray0[2] = "The norm of the instances after normalization.";
stringArray0[3] = "The norm of the instances after normalization.";
stringArray0[4] = "The norm of the instances after normalization.";
stringArray0[5] = "The norm of the instances after normalization.";
stringArray0[6] = "'H5tBP$B";
stringArray0[7] = "The norm of the instances after normalization.";
stringArray0[8] = "The norm of the instances after normalization.";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.useWordFrequenciesTipText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
String[] stringArray1 = new String[4];
stringArray1[0] = "The norm of the instances after normalization.";
stringArray1[1] = "'H5tBP$B";
stringArray1[2] = "The norm of the instances after normalization.";
stringArray1[3] = "Use word frequencies rather than binary bag of words representation";
naiveBayesMultinomialText0.setOptions(stringArray1);
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.getOptions();
assertEquals((-712), naiveBayesMultinomialText0.getPeriodicPruning());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 10598
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:10:08.412 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:10:08.444 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:10:08.444 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:10:08.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1001
* Starting evolution
* Search finished after 132s and 3 generations, 2948 statements, best individual has fitness: 6752.0
[MASTER] 15:12:23.518 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 12 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 83%
* Total number of goals: 647
* Number of covered goals: 535
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 441
* Number of covered goals: 332
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 71%
* Total number of goals: 678
* Number of covered goals: 481
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 244
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 124
* Number of covered goals: 86
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 124
* Number of covered goals: 86
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 441
* Number of covered goals: 283
* Generated 55 tests with total length 1177
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
[MASTER] 15:20:30.306 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1001/107_weka/evosuite-tests
* Done!

* Computation finished
