* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jsecurity.authc.UsernamePasswordToken
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jsecurity.web.DefaultWebSecurityManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 11932
* Connecting to master process on port 11931
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.jsecurity.authc.UsernamePasswordToken
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
Production Code Path: /home/ubuntu/termite/SF110/18_jsecurity/src/main/java/org/jsecurity/authc/UsernamePasswordToken.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:07:12.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:07:12.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:07:12.593 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:07:13.062 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jsecurity.web.DefaultWebSecurityManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/18_jsecurity/src/main/java/org/jsecurity/web/DefaultWebSecurityManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:08:27.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:08:27.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 121s and 161 generations, 134391 statements, best individual has fitness: 88.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 54
* Number of covered goals: 54
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100% (no goals)
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 72%
* Total number of goals: 36
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Generated 29 tests with total length 250
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
* Search finished after 121s and 36 generations, 21174 statements, best individual has fitness: 1072.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 76%
* Total number of goals: 97
* Number of covered goals: 74
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 67
* Number of covered goals: 45
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 162
* Number of covered goals: 125
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 29
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 91%
* Total number of goals: 23
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 23
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 67
* Number of covered goals: 43
* Generated 32 tests with total length 586
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Writing JUnit test case 'UsernamePasswordToken_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/18_jsecurity/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 35%
* Compiling and checking tests
[MASTER] 07:09:42.065 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 07:09:42.068 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
defaultWebSecurityManager0.setSessionMode("jsecurity");
WebRememberMeManager webRememberMeManager0 = new WebRememberMeManager();
defaultWebSecurityManager0.setSessionIdCookieSecure(true);
webRememberMeManager0.getCipher();
defaultWebSecurityManager0.setSessionIdCookieName("DPb.");
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
defaultWebSecurityManager0.getSubject();

* Writing JUnit test case 'DefaultWebSecurityManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/18_jsecurity/evosuite-tests
* Done!

* Computation finished
