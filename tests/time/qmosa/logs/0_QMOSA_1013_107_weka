* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13271
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:30:58.618 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:30:58.638 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:30:58.644 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:31:01.518 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:31:01.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:31:01.890 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 23:31:10.781 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 500
[MASTER] 23:31:10.782 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: Line 501
[MASTER] 23:31:10.785 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 527
[MASTER] 23:31:10.786 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: Line 528
[MASTER] 23:31:10.786 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: Line 536
[MASTER] 23:31:10.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 554
[MASTER] 23:31:10.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 555
[MASTER] 23:31:10.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 581
[MASTER] 23:31:10.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: Line 582
[MASTER] 23:31:10.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch
[MASTER] 23:31:10.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch
[MASTER] 23:31:10.791 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setSeed(J)V: root-Branch
[MASTER] 23:31:10.791 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getSeed()J: root-Branch
[MASTER] 23:31:10.791 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch
[MASTER] 23:31:10.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 195: weka.classifiers.rules.JRip.setMinNo(D)V:500 - InsertUnaryOp Negation of m
[MASTER] 23:31:10.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 198: weka.classifiers.rules.JRip.setSeed(J)V:527 - ReplaceVariable s -> serialVersionUID
[MASTER] 23:31:10.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 199: weka.classifiers.rules.JRip.setSeed(J)V:527 - InsertUnaryOp Negation of s
[MASTER] 23:31:10.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 200: weka.classifiers.rules.JRip.getSeed()J:536 - ReplaceVariable m_Seed -> serialVersionUID
[MASTER] 23:31:10.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 201: weka.classifiers.rules.JRip.getSeed()J:536 - InsertUnaryOp Negation
[MASTER] 23:31:10.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 203: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp Negation of run
[MASTER] 23:31:10.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 204: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC 1 run
[MASTER] 23:31:10.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 205: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC -1 run
[MASTER] 23:31:10.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 210: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp Negation of d
[MASTER] 23:31:10.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 211: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC 1 d
[MASTER] 23:31:10.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 212: weka.classifiers.rules.JRip.setDebug(Z)V:581 - InsertUnaryOp IINC -1 d
[MASTER] 23:31:10.815 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getSeed()J:Zero
[MASTER] 23:31:10.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 23:31:10.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 23:31:10.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 23:31:10.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 23:31:10.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 23:31:10.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setMinNo(D)V
[MASTER] 23:31:10.833 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 23:31:10.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setDebug(Z)V
[MASTER] 23:31:10.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setSeed(J)V
[MASTER] 23:31:10.834 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getSeed()J
[MASTER] 23:31:10.835 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setSeed(J)V: root-Branch in context: weka.classifiers.rules.JRip:setSeed(J)V
[MASTER] 23:31:10.836 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setMinNo(D)V: root-Branch in context: weka.classifiers.rules.JRip:setMinNo(D)V
[MASTER] 23:31:10.849 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch in context: weka.classifiers.rules.JRip:setOptimizations(I)V
[MASTER] 23:31:10.850 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setDebug(Z)V: root-Branch in context: weka.classifiers.rules.JRip:setDebug(Z)V
[MASTER] 23:31:10.850 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getSeed()J: root-Branch in context: weka.classifiers.rules.JRip:getSeed()J
[MASTER] 23:31:14.543 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: Line 723
[MASTER] 23:31:14.557 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: Line 572
[MASTER] 23:31:14.563 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch
[MASTER] 23:31:14.564 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch
[MASTER] 23:31:14.568 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 209: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:572 - ReplaceConstant - Whether debug information is output to the console. -> 
[MASTER] 23:31:14.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 665: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> cover
[MASTER] 23:31:14.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 666: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accu
[MASTER] 23:31:14.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 667: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> accuRate
[MASTER] 23:31:14.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 668: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - ReplaceVariable value -> maxInfoGain
[MASTER] 23:31:14.586 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 669: weka.classifiers.rules.JRip$Antd.getAttrValue()D:723 - InsertUnaryOp Negation
[MASTER] 23:31:14.614 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 23:31:14.616 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 23:31:14.618 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 23:31:14.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;
[MASTER] 23:31:14.620 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.Antd.getAttrValue()D
[MASTER] 23:31:14.622 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$Antd.getAttrValue()D: root-Branch in context: weka.classifiers.rules.JRip$Antd:getAttrValue()D
[MASTER] 23:31:14.622 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.debugTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:debugTipText()Ljava/lang/String;
* Search finished after 124s and 23 generations, 16433 statements, best individual has fitness: 14104.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 705
* Number of covered goals: 219
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 21%
* Total number of goals: 416
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 45%
* Total number of goals: 993
* Number of covered goals: 451
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 93
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 21%
* Total number of goals: 416
* Number of covered goals: 88
* Generated 50 tests with total length 892
* Resulting test suite's coverage: 36% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13275
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
* Search finished after 125s and 10 generations, 13523 statements, best individual has fitness: 4384.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 217
* Number of covered goals: 161
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 50%
* Total number of goals: 428
* Number of covered goals: 213
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 260
* Number of covered goals: 210
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 49%
* Total number of goals: 428
* Number of covered goals: 211
* Generated 34 tests with total length 859
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13271
* Connecting to master process on port 13272
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:44:55.020 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:44:55.028 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:44:55.041 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:44:55.059 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 23:45:02.299 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:45:10.181 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:45:10.196 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:45:10.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:45:11.482 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:45:12.844 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:45:12.846 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:45:17.087 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 23:45:17.141 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 23:45:17.142 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 23:45:17.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 23:45:17.144 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 23:45:17.144 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 23:45:17.144 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 23:45:17.146 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 23:45:17.147 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 23:45:17.229 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 23:45:17.246 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 23:45:25.693 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 123s and 34 generations, 33680 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 343
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 125s and 11 generations, 9210 statements, best individual has fitness: 20992.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 1378
* Number of covered goals: 595
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 809
* Number of covered goals: 233
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 424
* Number of covered goals: 179
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 8%
* Total number of goals: 278
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 62%
* Total number of goals: 103
* Number of covered goals: 64
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 59%
* Total number of goals: 103
* Number of covered goals: 61
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 809
* Number of covered goals: 145
* Generated 60 tests with total length 1599
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 2%
[MASTER] 23:55:30.095 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 23:55:35.118 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 23:55:35.514 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 23:55:35.514 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 23:55:36.421 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13270
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:56:39.760 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:56:39.761 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:56:39.773 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 23:56:39.864 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:56:39.897 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:56:39.898 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
[MASTER] 23:57:08.175 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:57:08.175 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 124s and 17 generations, 13246 statements, best individual has fitness: 3616.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 67%
* Total number of goals: 338
* Number of covered goals: 228
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 194
* Number of covered goals: 109
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 476
* Number of covered goals: 367
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 112
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 56%
* Total number of goals: 194
* Number of covered goals: 108
* Generated 61 tests with total length 1099
* Resulting test suite's coverage: 68% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 42%
* Compiling and checking tests
[MASTER] 00:04:53.477 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_28_1575417893430/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_28_1575417893430/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.java]]
[MASTER] 00:04:53.477 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:04:53.477 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:04:53.482 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 00:04:53.483 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_28_1575417893430/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 00:04:53 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.System;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_28_tmp__ESTest extends NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.2696544884954752
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
31:       System.setCurrentTimeMillis(2L);
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
34:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
35:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
36:       naiveBayesMultinomialText0.setOptions(stringArray0);
37:       File file0 = naiveBayesMultinomialText0.getStopwords();
38:       assertTrue(file0.isAbsolute());
39:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
40:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
41:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
42:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
43:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
44:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
45:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
46:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_28_1575417893430/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 00:04:53 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.core.AttributeLocator",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.classifiers.misc.InputMappedClassifier",
141:       "weka.attributeSelection.CorrelationAttributeEval",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.core.ManhattanDistance",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.misc.SerializedClassifier",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.core.WekaPackageManager",
169:       "weka.filters.SupervisedFilter",
170:       "weka.core.TechnicalInformationHandler",
171:       "weka.core.neighboursearch.LinearNNSearch",
172:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
173:       "weka.core.Option",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.classifiers.MultipleClassifiersCombiner",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.classifiers.meta.Vote",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.core.neighboursearch.covertrees.Stack",
194:       "weka.filters.unsupervised.attribute.Remove",
195:       "weka.core.Randomizable",
196:       "weka.classifiers.functions.SGD",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.stemmers.Stemming",
206:       "weka.core.TechnicalInformation",
207:       "weka.core.UnsupportedAttributeTypeException",
208:       "weka.classifiers.Sourcable",
209:       "weka.core.RevisionHandler",
210:       "weka.classifiers.evaluation.output.prediction.PlainText",
211:       "weka.core.neighboursearch.TreePerformanceStats",
212:       "weka.core.xml.XMLSerialization",
213:       "weka.classifiers.xml.XMLClassifier",
214:       "weka.filters.Filter",
215:       "weka.classifiers.lazy.IBk",
216:       "weka.filters.supervised.attribute.Discretize"
217:     );
218:   } 
219: 
220:   private static void resetClasses() {
221:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader()); 
222: 
223:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
224:       "weka.classifiers.AbstractClassifier",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
227:       "weka.core.Capabilities$Capability",
228:       "weka.core.tokenizers.Tokenizer",
229:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
230:       "weka.core.tokenizers.WordTokenizer",
231:       "weka.core.stemmers.NullStemmer",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Utils",
234:       "weka.core.Option",
235:       "weka.core.stemmers.LovinsStemmer",
236:       "weka.core.stemmers.IteratedLovinsStemmer",
237:       "weka.core.SerializedObject",
238:       "weka.core.TechnicalInformation",
239:       "weka.core.TechnicalInformation$Type",
240:       "weka.core.TechnicalInformation$Field",
241:       "weka.core.RevisionUtils",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.attributeSelection.ASEvaluation",
249:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
250:       "weka.attributeSelection.PrincipalComponents",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
254:       "weka.core.Tag",
255:       "weka.classifiers.lazy.IBk",
256:       "weka.core.neighboursearch.NearestNeighbourSearch",
257:       "weka.core.neighboursearch.LinearNNSearch",
258:       "weka.core.NormalizableDistance",
259:       "weka.core.EuclideanDistance",
260:       "weka.core.Range",
261:       "weka.classifiers.CostMatrix",
262:       "weka.core.TestInstances",
263:       "weka.core.stemmers.SnowballStemmer",
264:       "weka.core.stemmers.Stemming",
265:       "weka.core.neighboursearch.CoverTree",
266:       "weka.core.AbstractInstance",
267:       "weka.core.SparseInstance",
268:       "weka.core.BinarySparseInstance",
269:       "weka.core.Instances",
270:       "weka.core.UnassignedDatasetException",
271:       "weka.core.Attribute",
272:       "weka.core.ProtectedProperties",
273:       "weka.core.neighboursearch.balltrees.BallNode",
274:       "weka.core.DenseInstance",
275:       "weka.attributeSelection.CorrelationAttributeEval",
276:       "weka.core.tokenizers.NGramTokenizer",
277:       "weka.classifiers.bayes.NaiveBayesMultinomial",
278:       "weka.core.tokenizers.AlphabeticTokenizer",
279:       "weka.classifiers.functions.supportVector.Kernel",
280:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.classifiers.RandomizableClassifier",
291:       "weka.classifiers.functions.SGDText",
292:       "weka.filters.Filter",
293:       "weka.filters.supervised.attribute.Discretize",
294:       "weka.core.Stopwords",
295:       "weka.classifiers.rules.OneR",
296:       "weka.core.neighboursearch.KDTree",
297:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
298:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.core.WekaEnumeration",
304:       "weka.core.Attribute$1",
305:       "weka.classifiers.bayes.NaiveBayes",
306:       "weka.core.converters.ArffLoader$ArffReader",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.MultiScheme",
310:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
311:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
312:       "weka.filters.SimpleFilter",
313:       "weka.filters.SimpleStreamFilter",
314:       "weka.filters.MultiFilter",
315:       "weka.filters.AllFilter",
316:       "weka.classifiers.functions.supportVector.CachedKernel",
317:       "weka.classifiers.functions.supportVector.RBFKernel",
318:       "weka.classifiers.trees.J48",
319:       "weka.classifiers.trees.j48.ClassifierTree",
320:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomCommittee",
325:       "weka.classifiers.trees.RandomTree",
326:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
327:       "weka.classifiers.meta.LogitBoost",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdaBoostM1",
330:       "weka.core.FindWithCapabilities",
331:       "weka.core.SingleIndex",
332:       "weka.core.ClassDiscovery",
333:       "weka.attributeSelection.InfoGainAttributeEval",
334:       "weka.classifiers.functions.SGD",
335:       "weka.attributeSelection.GainRatioAttributeEval",
336:       "weka.classifiers.trees.m5.M5Base",
337:       "weka.classifiers.rules.M5Rules",
338:       "weka.classifiers.functions.LinearRegression",
339:       "weka.classifiers.meta.Vote",
340:       "weka.core.WekaException",
341:       "weka.core.UnsupportedAttributeTypeException",
342:       "weka.core.UnassignedClassException"
343:     );
344:   }
345: }

[MASTER] 00:04:53.484 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
System.setCurrentTimeMillis(2L);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.setOptions(stringArray0);
File file0 = naiveBayesMultinomialText0.getStopwords();
assertTrue(file0.isAbsolute());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 00:04:54.297 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_43_1575417894022/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_43_1575417894022/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.java]]
[MASTER] 00:04:54.297 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:04:54.297 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 00:04:54.298 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 00:04:54.299 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 00:04:54.299 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 00:04:54.300 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_43_1575417894022/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 00:04:54 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.AbstractClassifier;
21: import weka.classifiers.bayes.NaiveBayesMultinomialText;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_43_tmp__ESTest extends NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.9114169752578265
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.setNormalizeDocLength(false);
34:       naiveBayesMultinomialText0.pruneDictionary();
35:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
36:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
37:       naiveBayesMultinomialText0.getOptions();
38:       AbstractClassifier.makeCopies(naiveBayesMultinomialText0, 2624);
39:       naiveBayesMultinomialText0.getUseStopList();
40:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
41:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
42:       System.setCurrentTimeMillis(0L);
43:       naiveBayesMultinomialText0.getLNorm();
44:       File file0 = naiveBayesMultinomialText0.getStopwords();
45:       naiveBayesMultinomialText0.setStopwords(file0);
46:       assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_43_1575417894022/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 00:04:54 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.filters.unsupervised.attribute.NominalToBinary",
90:       "weka.core.TestInstances",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.filters.UnsupervisedFilter",
97:       "weka.core.logging.Logger$Level",
98:       "weka.core.neighboursearch.CoverTree$DistanceNode",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.CoverTree$MyHeap",
106:       "weka.core.neighboursearch.KDTree",
107:       "weka.core.stemmers.NullStemmer",
108:       "weka.core.EnvironmentHandler",
109:       "weka.classifiers.functions.SGDText",
110:       "weka.core.RelationalLocator",
111:       "weka.core.Utils",
112:       "weka.core.CustomDisplayStringProvider",
113:       "weka.core.tokenizers.Tokenizer",
114:       "weka.core.NormalizableDistance",
115:       "weka.core.NoSupportForMissingValuesException",
116:       "weka.classifiers.UpdateableClassifier",
117:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
118:       "weka.core.TechnicalInformation$Type",
119:       "weka.core.MultiInstanceCapabilitiesHandler",
120:       "weka.core.Copyable",
121:       "weka.core.Capabilities",
122:       "weka.core.BinarySparseInstance",
123:       "weka.core.AttributeLocator",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
126:       "weka.core.SerializedObject",
127:       "weka.clusterers.UpdateableClusterer",
128:       "weka.core.Summarizable",
129:       "weka.core.neighboursearch.balltrees.BallNode",
130:       "weka.core.AdditionalMeasureProducer",
131:       "org.pentaho.packageManagement.PackageManager$1",
132:       "weka.core.Drawable",
133:       "weka.core.CapabilitiesHandler",
134:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
135:       "weka.attributeSelection.ASEvaluation",
136:       "weka.core.AbstractInstance",
137:       "weka.core.scripting.JythonObject",
138:       "weka.core.SelectedTag",
139:       "org.pentaho.packageManagement.DefaultPackage",
140:       "weka.classifiers.misc.InputMappedClassifier",
141:       "weka.attributeSelection.CorrelationAttributeEval",
142:       "weka.core.Version",
143:       "weka.core.Tag",
144:       "weka.core.ManhattanDistance",
145:       "weka.core.neighboursearch.CoverTree",
146:       "weka.classifiers.AbstractClassifier",
147:       "weka.filters.unsupervised.attribute.Center",
148:       "weka.core.OptionHandler",
149:       "weka.core.WekaException",
150:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
151:       "weka.filters.StreamableFilter",
152:       "weka.core.Range",
153:       "weka.core.scripting.JythonSerializableObject",
154:       "weka.classifiers.Classifier",
155:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
156:       "weka.core.Capabilities$Capability",
157:       "weka.core.SparseInstance",
158:       "org.pentaho.packageManagement.PackageManager",
159:       "weka.attributeSelection.AttributeTransformer",
160:       "weka.core.tokenizers.WordTokenizer",
161:       "weka.classifiers.misc.SerializedClassifier",
162:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
163:       "weka.attributeSelection.PrincipalComponents",
164:       "weka.core.stemmers.SnowballStemmer",
165:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
166:       "weka.core.stemmers.LovinsStemmer",
167:       "weka.classifiers.Evaluation",
168:       "weka.core.WekaPackageManager",
169:       "weka.filters.SupervisedFilter",
170:       "weka.core.TechnicalInformationHandler",
171:       "weka.core.neighboursearch.LinearNNSearch",
172:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
173:       "weka.core.Option",
174:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
175:       "weka.core.neighboursearch.PerformanceStats",
176:       "weka.filters.Sourcable",
177:       "weka.core.Attribute",
178:       "weka.core.Stopwords",
179:       "weka.core.FastVector",
180:       "weka.classifiers.MultipleClassifiersCombiner",
181:       "weka.core.UnassignedDatasetException",
182:       "weka.classifiers.RandomizableClassifier",
183:       "weka.classifiers.SingleClassifierEnhancer",
184:       "weka.core.RevisionUtils",
185:       "weka.core.Instance",
186:       "weka.core.ProtectedProperties",
187:       "weka.classifiers.meta.Vote",
188:       "weka.core.StringLocator",
189:       "weka.core.AttributeStats",
190:       "weka.core.WeightedInstancesHandler",
191:       "weka.core.neighboursearch.NearestNeighbourSearch",
192:       "weka.core.TechnicalInformation$Field",
193:       "weka.core.neighboursearch.covertrees.Stack",
194:       "weka.filters.unsupervised.attribute.Remove",
195:       "weka.core.Randomizable",
196:       "weka.classifiers.functions.SGD",
197:       "weka.core.EuclideanDistance",
198:       "weka.core.Instances",
199:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
200:       "weka.core.UnassignedClassException",
201:       "weka.classifiers.rules.ZeroR",
202:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
203:       "weka.filters.unsupervised.attribute.Standardize",
204:       "weka.core.stemmers.IteratedLovinsStemmer",
205:       "weka.core.stemmers.Stemming",
206:       "weka.core.TechnicalInformation",
207:       "weka.core.UnsupportedAttributeTypeException",
208:       "weka.classifiers.Sourcable",
209:       "weka.core.RevisionHandler",
210:       "weka.classifiers.evaluation.output.prediction.PlainText",
211:       "weka.core.neighboursearch.TreePerformanceStats",
212:       "weka.core.xml.XMLSerialization",
213:       "weka.classifiers.xml.XMLClassifier",
214:       "weka.filters.Filter",
215:       "weka.classifiers.lazy.IBk",
216:       "weka.filters.supervised.attribute.Discretize"
217:     );
218:   } 
219: 
220:   private static void resetClasses() {
221:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader()); 
222: 
223:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
224:       "weka.classifiers.AbstractClassifier",
225:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
226:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
227:       "weka.core.Capabilities$Capability",
228:       "weka.core.tokenizers.Tokenizer",
229:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
230:       "weka.core.tokenizers.WordTokenizer",
231:       "weka.core.stemmers.NullStemmer",
232:       "weka.classifiers.Evaluation",
233:       "weka.core.Utils",
234:       "weka.core.Option",
235:       "weka.core.stemmers.LovinsStemmer",
236:       "weka.core.stemmers.IteratedLovinsStemmer",
237:       "weka.core.SerializedObject",
238:       "weka.core.TechnicalInformation",
239:       "weka.core.TechnicalInformation$Type",
240:       "weka.core.TechnicalInformation$Field",
241:       "weka.core.RevisionUtils",
242:       "weka.core.Capabilities",
243:       "org.pentaho.packageManagement.PackageManager",
244:       "org.pentaho.packageManagement.DefaultPackageManager",
245:       "weka.core.Version",
246:       "weka.core.Environment",
247:       "weka.core.WekaPackageManager",
248:       "weka.attributeSelection.ASEvaluation",
249:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
250:       "weka.attributeSelection.PrincipalComponents",
251:       "weka.classifiers.misc.SerializedClassifier",
252:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
253:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
254:       "weka.core.Tag",
255:       "weka.classifiers.lazy.IBk",
256:       "weka.core.neighboursearch.NearestNeighbourSearch",
257:       "weka.core.neighboursearch.LinearNNSearch",
258:       "weka.core.NormalizableDistance",
259:       "weka.core.EuclideanDistance",
260:       "weka.core.Range",
261:       "weka.classifiers.CostMatrix",
262:       "weka.core.TestInstances",
263:       "weka.core.stemmers.SnowballStemmer",
264:       "weka.core.stemmers.Stemming",
265:       "weka.core.neighboursearch.CoverTree",
266:       "weka.core.AbstractInstance",
267:       "weka.core.SparseInstance",
268:       "weka.core.BinarySparseInstance",
269:       "weka.core.Instances",
270:       "weka.core.UnassignedDatasetException",
271:       "weka.core.Attribute",
272:       "weka.core.ProtectedProperties",
273:       "weka.core.neighboursearch.balltrees.BallNode",
274:       "weka.core.DenseInstance",
275:       "weka.attributeSelection.CorrelationAttributeEval",
276:       "weka.core.tokenizers.NGramTokenizer",
277:       "weka.classifiers.bayes.NaiveBayesMultinomial",
278:       "weka.core.tokenizers.AlphabeticTokenizer",
279:       "weka.classifiers.functions.supportVector.Kernel",
280:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
281:       "weka.classifiers.bayes.BayesNet",
282:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
283:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
284:       "weka.classifiers.bayes.net.search.local.K2",
285:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
286:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.classifiers.RandomizableClassifier",
291:       "weka.classifiers.functions.SGDText",
292:       "weka.filters.Filter",
293:       "weka.filters.supervised.attribute.Discretize",
294:       "weka.core.Stopwords",
295:       "weka.classifiers.rules.OneR",
296:       "weka.core.neighboursearch.KDTree",
297:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
298:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
299:       "weka.core.neighboursearch.BallTree",
300:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
301:       "weka.core.neighboursearch.balltrees.BallSplitter",
302:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
303:       "weka.core.WekaEnumeration",
304:       "weka.core.Attribute$1",
305:       "weka.classifiers.bayes.NaiveBayes",
306:       "weka.core.converters.ArffLoader$ArffReader",
307:       "weka.classifiers.MultipleClassifiersCombiner",
308:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
309:       "weka.classifiers.meta.MultiScheme",
310:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
311:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
312:       "weka.filters.SimpleFilter",
313:       "weka.filters.SimpleStreamFilter",
314:       "weka.filters.MultiFilter",
315:       "weka.filters.AllFilter",
316:       "weka.classifiers.functions.supportVector.CachedKernel",
317:       "weka.classifiers.functions.supportVector.RBFKernel",
318:       "weka.classifiers.trees.J48",
319:       "weka.classifiers.trees.j48.ClassifierTree",
320:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
321:       "weka.classifiers.IteratedSingleClassifierEnhancer",
322:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
323:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
324:       "weka.classifiers.meta.RandomCommittee",
325:       "weka.classifiers.trees.RandomTree",
326:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
327:       "weka.classifiers.meta.LogitBoost",
328:       "weka.classifiers.trees.DecisionStump",
329:       "weka.classifiers.meta.AdaBoostM1",
330:       "weka.core.FindWithCapabilities",
331:       "weka.core.SingleIndex",
332:       "weka.core.ClassDiscovery",
333:       "weka.attributeSelection.InfoGainAttributeEval",
334:       "weka.classifiers.functions.SGD",
335:       "weka.attributeSelection.GainRatioAttributeEval",
336:       "weka.classifiers.trees.m5.M5Base",
337:       "weka.classifiers.rules.M5Rules",
338:       "weka.classifiers.functions.LinearRegression",
339:       "weka.classifiers.meta.Vote",
340:       "weka.core.WekaException",
341:       "weka.core.UnsupportedAttributeTypeException",
342:       "weka.core.UnassignedClassException"
343:     );
344:   }
345: }

[MASTER] 00:04:54.304 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setNormalizeDocLength(false);
naiveBayesMultinomialText0.pruneDictionary();
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.getOptions();
AbstractClassifier.makeCopies(naiveBayesMultinomialText0, 2624);
naiveBayesMultinomialText0.getUseStopList();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
System.setCurrentTimeMillis(0L);
naiveBayesMultinomialText0.getLNorm();
File file0 = naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.setStopwords(file0);
assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13272
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 13274
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:05:44.496 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:05:44.519 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:05:44.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:05:44.834 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:05:44.867 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:05:44.872 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:05:44.883 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 00:05:44.893 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:05:44.894 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:05:44.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1013
* Starting evolution
* Search finished after 123s and 37 generations, 31743 statements, best individual has fitness: 7856.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 370
* Number of covered goals: 186
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 35%
* Total number of goals: 242
* Number of covered goals: 85
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 39%
* Total number of goals: 713
* Number of covered goals: 276
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 242
* Number of covered goals: 85
* Generated 50 tests with total length 766
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 132s and 2 generations, 2463 statements, best individual has fitness: 6520.0
[MASTER] 00:08:00.951 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 12 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 647
* Number of covered goals: 570
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 441
* Number of covered goals: 335
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 678
* Number of covered goals: 492
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 244
* Number of covered goals: 55
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 67%
* Total number of goals: 124
* Number of covered goals: 83
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 67%
* Total number of goals: 124
* Number of covered goals: 83
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 441
* Number of covered goals: 271
* Generated 50 tests with total length 1118
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 00:09:50.232 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 00:09:50.714 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1013/107_weka/evosuite-tests
* Done!

* Computation finished
