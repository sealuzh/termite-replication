* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 14423
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:16:57.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:16:57.200 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:16:57.202 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:16:57.716 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/SimpleNode.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
* Search finished after 121s and 31 generations, 27460 statements, best individual has fitness: 416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 62
* Number of covered goals: 60
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 67
* Number of covered goals: 57
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 121
* Number of covered goals: 101
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 17
* Number of covered goals: 7
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 67
* Number of covered goals: 57
* Generated 31 tests with total length 573
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 14421
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaCharStream.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
[MASTER] 11:46:08.322 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.BeginToken()C
[MASTER] 11:46:40.885 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1273: com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V:379 - ReplaceComparisonOperator >= -> >
* Search finished after 124s and 7 generations, 5503 statements, best individual has fitness: 4048.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 239
* Number of covered goals: 170
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 216
* Number of covered goals: 140
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 974
* Number of covered goals: 708
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 36
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 216
* Number of covered goals: 140
* Generated 78 tests with total length 1089
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 14425
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:54:23.981 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:54:24.028 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:54:24.030 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:54:24.040 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaParserTokenManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1029
* Starting evolution
* Search finished after 126s and 8 generations, 6469 statements, best individual has fitness: 29416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 19%
* Total number of goals: 981
* Number of covered goals: 191
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 1707
* Number of covered goals: 444
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 17%
* Total number of goals: 434
* Number of covered goals: 75
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 1707
* Number of covered goals: 444
* Generated 31 tests with total length 453
* Resulting test suite's coverage: 24% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 11:57:24.250 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<9>
[MASTER] 11:57:24.251 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("MbOYx2Pd>7G QWFy");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
stringReader0.ready();
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
javaCharStream0.ReadByte();
javaParserTokenManager0.jjmatchedKind = 0;
javaCharStream0.ExpandBuff(false);
javaParserTokenManager0.MoreLexicalActions();
char[] charArray0 = new char[2];
charArray0[0] = 'M';
charArray0[1] = 'M';
stringReader0.read(charArray0);
javaParserTokenManager0.ReInit(javaCharStream0, 0);
stringReader0.read(charArray0, 0, 0);
Token token0 = javaParserTokenManager0.getNextToken();
javaParserTokenManager0.jjnewStateCnt = 6;
javaParserTokenManager0.ReInit(javaCharStream0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.SwitchTo(0);
javaParserTokenManager0.getNextToken();
javaParserTokenManager0.SkipLexicalActions(token0);
assertEquals(3, javaCharStream0.bufpos);
assertEquals(11, javaCharStream0.getBeginColumn());


* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1029/19_jmca/evosuite-tests
* Done!

* Computation finished
