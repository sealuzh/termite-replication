* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: Newzgrabber.Base64Decoder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/99_newzgrabber/evosuite-files/evosuite.properties
* Connecting to master process on port 2251
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:51:50.085 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:51:50.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:51:50.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:51:52.205 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:51:52.288 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:51:52.289 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:51:57.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:51:57.197 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:51:57.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:51:57.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:51:57.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:51:57.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:51:57.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:51:57.200 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:51:57.201 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:51:57.542 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class Newzgrabber.Base64Decoder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/99_newzgrabber/src/main/java/Newzgrabber/Base64Decoder.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 15:53:04.387 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 123s and 29 generations, 26574 statements, best individual has fitness: 680.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 76
* Number of covered goals: 44
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 59
* Number of covered goals: 36
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 1
* Number of covered goals: 1
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 69
* Number of covered goals: 62
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 61%
* Total number of goals: 59
* Number of covered goals: 36
* Generated 5 tests with total length 89
* Resulting test suite's coverage: 68% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
[MASTER] 15:54:18.635 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-29994> but was:<-29993>
[MASTER] 15:54:18.636 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockPrintStream mockPrintStream0 = new MockPrintStream("V|@5");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V|@5");
Locale locale0 = Locale.JAPANESE;
Locale locale1 = Locale.PRC;
locale0.getDisplayVariant(locale1);
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
Object[] objectArray0 = new Object[1];
objectArray0[0] = (Object) mockPrintStream0;
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*u.");
mockPrintStream0.format(locale1, "*u.", objectArray0);
MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
mockPrintStream1.format(locale0, "", objectArray0);
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("V|@5");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("V|@5");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "*u.");
base64Decoder0.decodeStream();
Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream1);
base64Decoder1.decodeStream();
base64Decoder1.decodeStream();
assertEquals((-29994), mockFileInputStream0.available());


[MASTER] 15:54:19.262 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-39995> but was:<-39992>
[MASTER] 15:54:19.263 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockPrintStream mockPrintStream0 = new MockPrintStream("V|@5");
mockPrintStream0.println("V|@5");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V|@5");
Locale locale0 = Locale.JAPANESE;
Locale locale1 = Locale.PRC;
locale0.getDisplayVariant(locale1);
locale0.getDisplayVariant(locale1);
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
Object[] objectArray0 = new Object[1];
objectArray0[0] = (Object) mockPrintStream0;
mockPrintStream0.format(locale1, ".", objectArray0);
MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
mockPrintStream1.format(locale0, "", objectArray0);
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("V|@5");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, false);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, mockPrintStream1);
Newzgrabber.verbose = true;
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
assertEquals((-39995), mockFileInputStream0.available());
assertEquals(1L, base64Decoder0.getLineCount());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing JUnit test case 'Base64Decoder_ESTest' to /home/ubuntu/termite/qmosa/tests/s1002/99_newzgrabber/evosuite-tests
* Done!

* Computation finished
