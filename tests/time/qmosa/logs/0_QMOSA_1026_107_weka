* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18041
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:08:51.768 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:08:51.782 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:08:51.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:08:54.209 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:08:54.910 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:08:54.913 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
* Search finished after 124s and 18 generations, 14056 statements, best individual has fitness: 13800.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 705
* Number of covered goals: 228
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 416
* Number of covered goals: 94
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 47%
* Total number of goals: 993
* Number of covered goals: 469
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 93
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 416
* Number of covered goals: 94
* Generated 55 tests with total length 1121
* Resulting test suite's coverage: 38% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18043
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18045
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:14:09.730 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:14:09.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:14:09.745 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:14:09.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 09:14:16.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Search finished after 124s and 10 generations, 12298 statements, best individual has fitness: 3888.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 217
* Number of covered goals: 169
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 428
* Number of covered goals: 238
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 260
* Number of covered goals: 213
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 428
* Number of covered goals: 237
* Generated 48 tests with total length 1097
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 34 generations, 35059 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 14 tests with total length 329
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 70%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18046
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:21:12.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:21:12.818 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:21:12.820 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:21:12.936 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:21:12.941 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:21:12.943 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
* Search finished after 123s and 37 generations, 23593 statements, best individual has fitness: 9416.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 370
* Number of covered goals: 147
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 57
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 26%
* Total number of goals: 713
* Number of covered goals: 182
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 72
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 57
* Generated 45 tests with total length 788
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 09:24:51.541 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:24:52.029 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18043
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:26:33.432 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:26:33.433 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:26:33.434 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:26:33.489 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:26:33.503 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:26:33.504 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 09:26:44.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 208
[MASTER] 09:26:44.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 209
[MASTER] 09:26:44.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 212
[MASTER] 09:26:44.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 213
[MASTER] 09:26:44.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 214
[MASTER] 09:26:44.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 215
[MASTER] 09:26:44.790 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 216
[MASTER] 09:26:44.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 218
[MASTER] 09:26:44.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 219
[MASTER] 09:26:44.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 222
[MASTER] 09:26:44.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: Line 224
[MASTER] 09:26:44.934 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: root-Branch
[MASTER] 09:26:44.939 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:222 - ReplaceConstant - 0 -> 1
[MASTER] 09:26:44.945 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:getMinimumNumberInstances()I:Zero
[MASTER] 09:26:44.945 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;:NonNull:weka.core.Capabilities:hasDependencies()Z:False
[MASTER] 09:26:44.949 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;
[MASTER] 09:26:44.956 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;
[MASTER] 09:26:44.970 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getCapabilities()Lweka/core/Capabilities;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getCapabilities()Lweka/core/Capabilities;
[MASTER] 09:27:43.501 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 09:27:43.501 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 09:28:17.169 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 123s and 26 generations, 19146 statements, best individual has fitness: 5440.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 53%
* Total number of goals: 338
* Number of covered goals: 179
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 194
* Number of covered goals: 85
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 476
* Number of covered goals: 235
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 112
* Number of covered goals: 54
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 194
* Number of covered goals: 85
* Generated 46 tests with total length 955
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 09:33:06.369 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_3_1575451986280/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_3_1575451986280/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.java]]
[MASTER] 09:33:06.369 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:33:06.369 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:33:06.373 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 09:33:06.373 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 09:33:06.374 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_3_1575451986280/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 09:33:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.stemmers.SnowballStemmer;
16: import weka.core.stemmers.Stemmer;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_3_tmp__ESTest extends NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.4287877436062972
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       SnowballStemmer snowballStemmer0 = new SnowballStemmer();
29:       String[] stringArray0 = new String[6];
30:       stringArray0[0] = "org.tartarus.snowball.ext";
31:       stringArray0[1] = "org.tartarus.snowball.ext";
32:       stringArray0[2] = "org.tartarus.snowball";
33:       stringArray0[3] = "org.tartarus.snowball.ext";
34:       stringArray0[4] = "org.tartarus.snowball.ext";
35:       stringArray0[5] = "org.tartarus.snowball";
36:       snowballStemmer0.setOptions(stringArray0);
37:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
38:       naiveBayesMultinomialText0.setUseStopList(false);
39:       naiveBayesMultinomialText0.m_stemmer = (Stemmer) snowballStemmer0;
40:       naiveBayesMultinomialText0.setOptions(stringArray0);
41:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
42:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
43:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
44:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
45:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
46:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
47:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
48:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_3_1575451986280/weka/classifiers/bayes/NaiveBayesMultinomialText_3_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 09:33:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.estimators.DiscreteEstimator",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.classifiers.AbstractClassifier",
143:       "weka.filters.unsupervised.attribute.Center",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.Capabilities$Capability",
152:       "weka.core.SparseInstance",
153:       "org.pentaho.packageManagement.PackageManager",
154:       "weka.attributeSelection.AttributeTransformer",
155:       "weka.core.tokenizers.WordTokenizer",
156:       "weka.classifiers.misc.SerializedClassifier",
157:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
158:       "weka.attributeSelection.PrincipalComponents",
159:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.classifiers.meta.CostSensitiveClassifier",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
171:       "weka.filters.Sourcable",
172:       "weka.core.Attribute",
173:       "weka.core.Stopwords",
174:       "weka.core.tokenizers.AlphabeticTokenizer",
175:       "weka.core.FastVector",
176:       "weka.core.UnassignedDatasetException",
177:       "weka.core.tokenizers.NGramTokenizer",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.core.ProtectedProperties",
183:       "weka.estimators.Estimator",
184:       "weka.core.StringLocator",
185:       "weka.core.AttributeStats",
186:       "weka.core.WeightedInstancesHandler",
187:       "weka.core.neighboursearch.NearestNeighbourSearch",
188:       "weka.core.TechnicalInformation$Field",
189:       "weka.filters.unsupervised.attribute.Remove",
190:       "weka.core.Randomizable",
191:       "weka.core.EuclideanDistance",
192:       "weka.core.Instances",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.rules.ZeroR",
195:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
196:       "weka.filters.unsupervised.attribute.Standardize",
197:       "weka.core.stemmers.IteratedLovinsStemmer",
198:       "weka.core.stemmers.Stemming",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_3_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.Utils",
230:       "weka.core.Option",
231:       "weka.core.RevisionUtils",
232:       "weka.core.Tag",
233:       "weka.classifiers.lazy.IBk",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.classifiers.CostMatrix",
249:       "weka.classifiers.bayes.NaiveBayes",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.stemmers.Stemming",
252:       "weka.core.SerializedObject",
253:       "weka.core.stemmers.SnowballStemmer",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.BallTree",
256:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
257:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
258:       "weka.core.neighboursearch.balltrees.BallSplitter",
259:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.classifiers.rules.ZeroR",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
267:       "weka.attributeSelection.PrincipalComponents",
268:       "weka.classifiers.bayes.BayesNet",
269:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.K2",
272:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
273:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
274:       "weka.classifiers.bayes.net.BIFReader",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.core.SelectedTag",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
287:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.tokenizers.NGramTokenizer",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.DenseInstance",
296:       "weka.classifiers.functions.MultilayerPerceptron",
297:       "weka.core.FastVector",
298:       "weka.filters.unsupervised.attribute.NominalToBinary",
299:       "weka.classifiers.functions.neural.SigmoidUnit",
300:       "weka.classifiers.functions.neural.LinearUnit",
301:       "weka.classifiers.functions.neural.NeuralConnection",
302:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.core.Stopwords",
305:       "weka.core.WekaException",
306:       "weka.attributeSelection.WrapperSubsetEval",
307:       "weka.classifiers.functions.GaussianProcesses",
308:       "weka.classifiers.functions.supportVector.Kernel",
309:       "weka.classifiers.functions.supportVector.CachedKernel",
310:       "weka.classifiers.functions.supportVector.PolyKernel",
311:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.core.neighboursearch.CoverTree",
314:       "weka.core.FindWithCapabilities",
315:       "weka.core.SingleIndex",
316:       "weka.core.ClassDiscovery",
317:       "weka.classifiers.functions.LinearRegression",
318:       "weka.estimators.Estimator",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
322:       "weka.classifiers.meta.MultiScheme",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
324:       "weka.core.UnassignedClassException"
325:     );
326:   }
327: }

[MASTER] 09:33:06.375 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
SnowballStemmer snowballStemmer0 = new SnowballStemmer();
String[] stringArray0 = new String[6];
stringArray0[0] = "org.tartarus.snowball.ext";
stringArray0[1] = "org.tartarus.snowball.ext";
stringArray0[2] = "org.tartarus.snowball";
stringArray0[3] = "org.tartarus.snowball.ext";
stringArray0[4] = "org.tartarus.snowball.ext";
stringArray0[5] = "org.tartarus.snowball";
snowballStemmer0.setOptions(stringArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setUseStopList(false);
naiveBayesMultinomialText0.m_stemmer = (Stemmer) snowballStemmer0;
naiveBayesMultinomialText0.setOptions(stringArray0);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


[MASTER] 09:33:06.981 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1575451986901/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1575451986901/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.java]]
[MASTER] 09:33:06.981 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:33:06.981 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:33:06.981 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 09:33:06.982 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 26
[MASTER] 09:33:06.982 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1575451986901/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 09:33:06 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.stemmers.SnowballStemmer;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_14_tmp__ESTest extends NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=2.5323204850794725
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
27:       SnowballStemmer snowballStemmer0 = new SnowballStemmer();
28:       String[] stringArray0 = new String[6];
29:       stringArray0[0] = "org.tartarus.snowball.ext";
30:       stringArray0[1] = "org.tartarus.snowball.ext";
31:       snowballStemmer0.stem("org.tartarus.snowball.ext");
32:       stringArray0[2] = "org.tartarus.snowball";
33:       stringArray0[3] = "org.tartarus.snowball.ext";
34:       snowballStemmer0.stem("org.tartarus.snowball.ext");
35:       stringArray0[4] = "org.tartarus.snowball.ext";
36:       stringArray0[5] = "org.tartarus.snowball.ext";
37:       snowballStemmer0.setOptions(stringArray0);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
39:       naiveBayesMultinomialText0.setOptions(stringArray0);
40:       naiveBayesMultinomialText0.listOptions();
41:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
42:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
43:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
44:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
45:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
46:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
47:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
48:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_14_1575451986901/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 09:33:06 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.estimators.DiscreteEstimator",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.classifiers.AbstractClassifier",
143:       "weka.filters.unsupervised.attribute.Center",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.Capabilities$Capability",
152:       "weka.core.SparseInstance",
153:       "org.pentaho.packageManagement.PackageManager",
154:       "weka.attributeSelection.AttributeTransformer",
155:       "weka.core.tokenizers.WordTokenizer",
156:       "weka.classifiers.misc.SerializedClassifier",
157:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
158:       "weka.attributeSelection.PrincipalComponents",
159:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.classifiers.meta.CostSensitiveClassifier",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
171:       "weka.filters.Sourcable",
172:       "weka.core.Attribute",
173:       "weka.core.Stopwords",
174:       "weka.core.tokenizers.AlphabeticTokenizer",
175:       "weka.core.FastVector",
176:       "weka.core.UnassignedDatasetException",
177:       "weka.core.tokenizers.NGramTokenizer",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.core.ProtectedProperties",
183:       "weka.estimators.Estimator",
184:       "weka.core.StringLocator",
185:       "weka.core.AttributeStats",
186:       "weka.core.WeightedInstancesHandler",
187:       "weka.core.neighboursearch.NearestNeighbourSearch",
188:       "weka.core.TechnicalInformation$Field",
189:       "weka.filters.unsupervised.attribute.Remove",
190:       "weka.core.Randomizable",
191:       "weka.core.EuclideanDistance",
192:       "weka.core.Instances",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.rules.ZeroR",
195:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
196:       "weka.filters.unsupervised.attribute.Standardize",
197:       "weka.core.stemmers.IteratedLovinsStemmer",
198:       "weka.core.stemmers.Stemming",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.Utils",
230:       "weka.core.Option",
231:       "weka.core.RevisionUtils",
232:       "weka.core.Tag",
233:       "weka.classifiers.lazy.IBk",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.classifiers.CostMatrix",
249:       "weka.classifiers.bayes.NaiveBayes",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.stemmers.Stemming",
252:       "weka.core.SerializedObject",
253:       "weka.core.stemmers.SnowballStemmer",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.BallTree",
256:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
257:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
258:       "weka.core.neighboursearch.balltrees.BallSplitter",
259:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.classifiers.rules.ZeroR",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
267:       "weka.attributeSelection.PrincipalComponents",
268:       "weka.classifiers.bayes.BayesNet",
269:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.K2",
272:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
273:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
274:       "weka.classifiers.bayes.net.BIFReader",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.core.SelectedTag",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
287:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.tokenizers.NGramTokenizer",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.DenseInstance",
296:       "weka.classifiers.functions.MultilayerPerceptron",
297:       "weka.core.FastVector",
298:       "weka.filters.unsupervised.attribute.NominalToBinary",
299:       "weka.classifiers.functions.neural.SigmoidUnit",
300:       "weka.classifiers.functions.neural.LinearUnit",
301:       "weka.classifiers.functions.neural.NeuralConnection",
302:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.core.Stopwords",
305:       "weka.core.WekaException",
306:       "weka.attributeSelection.WrapperSubsetEval",
307:       "weka.classifiers.functions.GaussianProcesses",
308:       "weka.classifiers.functions.supportVector.Kernel",
309:       "weka.classifiers.functions.supportVector.CachedKernel",
310:       "weka.classifiers.functions.supportVector.PolyKernel",
311:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.core.neighboursearch.CoverTree",
314:       "weka.core.FindWithCapabilities",
315:       "weka.core.SingleIndex",
316:       "weka.core.ClassDiscovery",
317:       "weka.classifiers.functions.LinearRegression",
318:       "weka.estimators.Estimator",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
322:       "weka.classifiers.meta.MultiScheme",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
324:       "weka.core.UnassignedClassException"
325:     );
326:   }
327: }

[MASTER] 09:33:06.983 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
SnowballStemmer snowballStemmer0 = new SnowballStemmer();
String[] stringArray0 = new String[6];
stringArray0[0] = "org.tartarus.snowball.ext";
stringArray0[1] = "org.tartarus.snowball.ext";
snowballStemmer0.stem("org.tartarus.snowball.ext");
stringArray0[2] = "org.tartarus.snowball";
stringArray0[3] = "org.tartarus.snowball.ext";
snowballStemmer0.stem("org.tartarus.snowball.ext");
stringArray0[4] = "org.tartarus.snowball.ext";
stringArray0[5] = "org.tartarus.snowball.ext";
snowballStemmer0.setOptions(stringArray0);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.listOptions();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());


[MASTER] 09:33:07.289 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_22_1575451987256/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_22_1575451987256/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.java]]
[MASTER] 09:33:07.289 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:33:07.289 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:33:07.289 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 09:33:07.289 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 09:33:07.290 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_22_1575451987256/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 09:33:07 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import weka.classifiers.bayes.NaiveBayesMultinomialText;
15: import weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide;
16: import weka.core.stemmers.SnowballStemmer;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_22_tmp__ESTest extends NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.2696544884954752
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
28:       SnowballStemmer snowballStemmer0 = new SnowballStemmer();
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
31:       double double0 = naiveBayesMultinomialText0.m_t;
32:       SlidingMidPointOfWidestSide slidingMidPointOfWidestSide0 = new SlidingMidPointOfWidestSide();
33:       SlidingMidPointOfWidestSide slidingMidPointOfWidestSide1 = new SlidingMidPointOfWidestSide();
34:       slidingMidPointOfWidestSide1.getTechnicalInformation();
35:       SlidingMidPointOfWidestSide slidingMidPointOfWidestSide2 = new SlidingMidPointOfWidestSide();
36:       naiveBayesMultinomialText0.getUseStopList();
37:       SnowballStemmer snowballStemmer1 = new SnowballStemmer();
38:       snowballStemmer0.setOptions(stringArray0);
39:       naiveBayesMultinomialText0.setOptions(stringArray0);
40:       assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
41:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
42:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
43:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
44:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
45:       assertEquals(12, stringArray0.length);
46:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
47:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_22_1575451987256/weka/classifiers/bayes/NaiveBayesMultinomialText_22_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 09:33:07 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.estimators.DiscreteEstimator",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.classifiers.AbstractClassifier",
143:       "weka.filters.unsupervised.attribute.Center",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.Capabilities$Capability",
152:       "weka.core.SparseInstance",
153:       "org.pentaho.packageManagement.PackageManager",
154:       "weka.attributeSelection.AttributeTransformer",
155:       "weka.core.tokenizers.WordTokenizer",
156:       "weka.classifiers.misc.SerializedClassifier",
157:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
158:       "weka.attributeSelection.PrincipalComponents",
159:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.classifiers.meta.CostSensitiveClassifier",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
171:       "weka.filters.Sourcable",
172:       "weka.core.Attribute",
173:       "weka.core.Stopwords",
174:       "weka.core.tokenizers.AlphabeticTokenizer",
175:       "weka.core.FastVector",
176:       "weka.core.UnassignedDatasetException",
177:       "weka.core.tokenizers.NGramTokenizer",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.core.ProtectedProperties",
183:       "weka.estimators.Estimator",
184:       "weka.core.StringLocator",
185:       "weka.core.AttributeStats",
186:       "weka.core.WeightedInstancesHandler",
187:       "weka.core.neighboursearch.NearestNeighbourSearch",
188:       "weka.core.TechnicalInformation$Field",
189:       "weka.filters.unsupervised.attribute.Remove",
190:       "weka.core.Randomizable",
191:       "weka.core.EuclideanDistance",
192:       "weka.core.Instances",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.rules.ZeroR",
195:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
196:       "weka.filters.unsupervised.attribute.Standardize",
197:       "weka.core.stemmers.IteratedLovinsStemmer",
198:       "weka.core.stemmers.Stemming",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_22_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.Utils",
230:       "weka.core.Option",
231:       "weka.core.RevisionUtils",
232:       "weka.core.Tag",
233:       "weka.classifiers.lazy.IBk",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.classifiers.CostMatrix",
249:       "weka.classifiers.bayes.NaiveBayes",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.stemmers.Stemming",
252:       "weka.core.SerializedObject",
253:       "weka.core.stemmers.SnowballStemmer",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.BallTree",
256:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
257:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
258:       "weka.core.neighboursearch.balltrees.BallSplitter",
259:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.classifiers.rules.ZeroR",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
267:       "weka.attributeSelection.PrincipalComponents",
268:       "weka.classifiers.bayes.BayesNet",
269:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.K2",
272:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
273:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
274:       "weka.classifiers.bayes.net.BIFReader",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.core.SelectedTag",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
287:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.tokenizers.NGramTokenizer",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.DenseInstance",
296:       "weka.classifiers.functions.MultilayerPerceptron",
297:       "weka.core.FastVector",
298:       "weka.filters.unsupervised.attribute.NominalToBinary",
299:       "weka.classifiers.functions.neural.SigmoidUnit",
300:       "weka.classifiers.functions.neural.LinearUnit",
301:       "weka.classifiers.functions.neural.NeuralConnection",
302:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.core.Stopwords",
305:       "weka.core.WekaException",
306:       "weka.attributeSelection.WrapperSubsetEval",
307:       "weka.classifiers.functions.GaussianProcesses",
308:       "weka.classifiers.functions.supportVector.Kernel",
309:       "weka.classifiers.functions.supportVector.CachedKernel",
310:       "weka.classifiers.functions.supportVector.PolyKernel",
311:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.core.neighboursearch.CoverTree",
314:       "weka.core.FindWithCapabilities",
315:       "weka.core.SingleIndex",
316:       "weka.core.ClassDiscovery",
317:       "weka.classifiers.functions.LinearRegression",
318:       "weka.estimators.Estimator",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
322:       "weka.classifiers.meta.MultiScheme",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
324:       "weka.core.UnassignedClassException"
325:     );
326:   }
327: }

[MASTER] 09:33:07.290 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
SnowballStemmer snowballStemmer0 = new SnowballStemmer();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
double double0 = naiveBayesMultinomialText0.m_t;
SlidingMidPointOfWidestSide slidingMidPointOfWidestSide0 = new SlidingMidPointOfWidestSide();
SlidingMidPointOfWidestSide slidingMidPointOfWidestSide1 = new SlidingMidPointOfWidestSide();
slidingMidPointOfWidestSide1.getTechnicalInformation();
SlidingMidPointOfWidestSide slidingMidPointOfWidestSide2 = new SlidingMidPointOfWidestSide();
naiveBayesMultinomialText0.getUseStopList();
SnowballStemmer snowballStemmer1 = new SnowballStemmer();
snowballStemmer0.setOptions(stringArray0);
naiveBayesMultinomialText0.setOptions(stringArray0);
assertFalse(naiveBayesMultinomialText0.getLowercaseTokens());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(12, stringArray0.length);
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 09:33:07.838 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_37_1575451987809/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_37_1575451987809/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.java]]
[MASTER] 09:33:07.838 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:33:07.838 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 09:33:07.838 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 09:33:07.838 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 09:33:07.839 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_37_1575451987809/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 09:33:07 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.NullStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_37_tmp__ESTest extends NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.047433925133046
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
30:       NullStemmer nullStemmer0 = new NullStemmer();
31:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText1.setStemmer(nullStemmer0);
33:       String string0 = naiveBayesMultinomialText0.normTipText();
34:       assertEquals("The norm of the instances after normalization.", string0);
35:       
36:       naiveBayesMultinomialText1.setUseWordFrequencies(false);
37:       String[] stringArray0 = naiveBayesMultinomialText1.getOptions();
38:       assertEquals(12, stringArray0.length);
39:       
40:       naiveBayesMultinomialText1.getNormalizeDocLength();
41:       naiveBayesMultinomialText1.pruneDictionary();
42:       MockFile mockFile0 = new MockFile("The norm of the instances after normalization.", "");
43:       naiveBayesMultinomialText0.setStopwords((File) null);
44:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
45:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
46:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
47:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
48:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
49:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_37_1575451987809/weka/classifiers/bayes/NaiveBayesMultinomialText_37_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 09:33:07 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.filters.UnsupervisedFilter",
98:       "weka.core.logging.Logger$Level",
99:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
100:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
101:       "weka.core.DenseInstance",
102:       "weka.core.stemmers.Stemmer",
103:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
104:       "org.pentaho.packageManagement.DefaultPackageManager",
105:       "org.bounce.net.DefaultAuthenticator",
106:       "weka.classifiers.bayes.NaiveBayes",
107:       "weka.estimators.IncrementalEstimator",
108:       "weka.core.neighboursearch.KDTree",
109:       "weka.core.stemmers.NullStemmer",
110:       "weka.core.EnvironmentHandler",
111:       "weka.classifiers.functions.SGDText",
112:       "weka.core.RelationalLocator",
113:       "weka.core.Utils",
114:       "weka.core.CustomDisplayStringProvider",
115:       "weka.core.tokenizers.Tokenizer",
116:       "weka.core.NormalizableDistance",
117:       "weka.core.NoSupportForMissingValuesException",
118:       "weka.classifiers.UpdateableClassifier",
119:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
120:       "weka.core.TechnicalInformation$Type",
121:       "weka.core.Copyable",
122:       "weka.core.Capabilities",
123:       "weka.core.BinarySparseInstance",
124:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
125:       "weka.core.AttributeLocator",
126:       "weka.core.SerializedObject",
127:       "weka.core.Summarizable",
128:       "weka.core.AdditionalMeasureProducer",
129:       "org.pentaho.packageManagement.PackageManager$1",
130:       "weka.core.Drawable",
131:       "weka.core.CapabilitiesHandler",
132:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
133:       "weka.attributeSelection.ASEvaluation",
134:       "weka.core.AbstractInstance",
135:       "weka.core.scripting.JythonObject",
136:       "weka.core.SelectedTag",
137:       "org.pentaho.packageManagement.DefaultPackage",
138:       "weka.estimators.DiscreteEstimator",
139:       "weka.classifiers.misc.InputMappedClassifier",
140:       "weka.core.Version",
141:       "weka.core.Tag",
142:       "weka.classifiers.AbstractClassifier",
143:       "weka.filters.unsupervised.attribute.Center",
144:       "weka.core.OptionHandler",
145:       "weka.core.WekaException",
146:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
147:       "weka.filters.StreamableFilter",
148:       "weka.core.Range",
149:       "weka.core.scripting.JythonSerializableObject",
150:       "weka.classifiers.Classifier",
151:       "weka.core.Capabilities$Capability",
152:       "weka.core.SparseInstance",
153:       "org.pentaho.packageManagement.PackageManager",
154:       "weka.attributeSelection.AttributeTransformer",
155:       "weka.core.tokenizers.WordTokenizer",
156:       "weka.classifiers.misc.SerializedClassifier",
157:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
158:       "weka.attributeSelection.PrincipalComponents",
159:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.core.WekaPackageManager",
164:       "weka.filters.SupervisedFilter",
165:       "weka.core.TechnicalInformationHandler",
166:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
167:       "weka.core.Option",
168:       "weka.classifiers.meta.CostSensitiveClassifier",
169:       "weka.core.neighboursearch.PerformanceStats",
170:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
171:       "weka.filters.Sourcable",
172:       "weka.core.Attribute",
173:       "weka.core.Stopwords",
174:       "weka.core.tokenizers.AlphabeticTokenizer",
175:       "weka.core.FastVector",
176:       "weka.core.UnassignedDatasetException",
177:       "weka.core.tokenizers.NGramTokenizer",
178:       "weka.classifiers.RandomizableClassifier",
179:       "weka.classifiers.SingleClassifierEnhancer",
180:       "weka.core.RevisionUtils",
181:       "weka.core.Instance",
182:       "weka.core.ProtectedProperties",
183:       "weka.estimators.Estimator",
184:       "weka.core.StringLocator",
185:       "weka.core.AttributeStats",
186:       "weka.core.WeightedInstancesHandler",
187:       "weka.core.neighboursearch.NearestNeighbourSearch",
188:       "weka.core.TechnicalInformation$Field",
189:       "weka.filters.unsupervised.attribute.Remove",
190:       "weka.core.Randomizable",
191:       "weka.core.EuclideanDistance",
192:       "weka.core.Instances",
193:       "weka.core.UnassignedClassException",
194:       "weka.classifiers.rules.ZeroR",
195:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
196:       "weka.filters.unsupervised.attribute.Standardize",
197:       "weka.core.stemmers.IteratedLovinsStemmer",
198:       "weka.core.stemmers.Stemming",
199:       "weka.core.TechnicalInformation",
200:       "weka.core.UnsupportedAttributeTypeException",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_37_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.AbstractInstance",
225:       "weka.core.SparseInstance",
226:       "weka.core.BinarySparseInstance",
227:       "weka.core.UnassignedDatasetException",
228:       "weka.classifiers.Evaluation",
229:       "weka.core.Utils",
230:       "weka.core.Option",
231:       "weka.core.RevisionUtils",
232:       "weka.core.Tag",
233:       "weka.classifiers.lazy.IBk",
234:       "weka.core.neighboursearch.NearestNeighbourSearch",
235:       "weka.core.neighboursearch.LinearNNSearch",
236:       "weka.core.NormalizableDistance",
237:       "weka.core.EuclideanDistance",
238:       "weka.core.Range",
239:       "weka.core.Capabilities",
240:       "org.pentaho.packageManagement.PackageManager",
241:       "org.pentaho.packageManagement.DefaultPackageManager",
242:       "weka.core.Version",
243:       "weka.core.Environment",
244:       "weka.core.WekaPackageManager",
245:       "weka.core.TestInstances",
246:       "weka.classifiers.RandomizableClassifier",
247:       "weka.classifiers.functions.SGDText",
248:       "weka.classifiers.CostMatrix",
249:       "weka.classifiers.bayes.NaiveBayes",
250:       "weka.core.neighboursearch.balltrees.BallNode",
251:       "weka.core.stemmers.Stemming",
252:       "weka.core.SerializedObject",
253:       "weka.core.stemmers.SnowballStemmer",
254:       "weka.core.Instances",
255:       "weka.core.neighboursearch.BallTree",
256:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
257:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
258:       "weka.core.neighboursearch.balltrees.BallSplitter",
259:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
260:       "weka.classifiers.SingleClassifierEnhancer",
261:       "weka.classifiers.misc.InputMappedClassifier",
262:       "weka.classifiers.rules.ZeroR",
263:       "weka.filters.Filter",
264:       "weka.filters.supervised.attribute.Discretize",
265:       "weka.attributeSelection.ASEvaluation",
266:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
267:       "weka.attributeSelection.PrincipalComponents",
268:       "weka.classifiers.bayes.BayesNet",
269:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
270:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
271:       "weka.classifiers.bayes.net.search.local.K2",
272:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
273:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
274:       "weka.classifiers.bayes.net.BIFReader",
275:       "weka.core.tokenizers.AlphabeticTokenizer",
276:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
277:       "weka.classifiers.meta.CostSensitiveClassifier",
278:       "weka.core.SelectedTag",
279:       "weka.core.stemmers.LovinsStemmer",
280:       "weka.core.TechnicalInformation",
281:       "weka.core.TechnicalInformation$Type",
282:       "weka.core.TechnicalInformation$Field",
283:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
284:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
285:       "weka.core.neighboursearch.KDTree",
286:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
287:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
288:       "weka.core.stemmers.IteratedLovinsStemmer",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.tokenizers.NGramTokenizer",
291:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
292:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
293:       "weka.core.Attribute",
294:       "weka.core.ProtectedProperties",
295:       "weka.core.DenseInstance",
296:       "weka.classifiers.functions.MultilayerPerceptron",
297:       "weka.core.FastVector",
298:       "weka.filters.unsupervised.attribute.NominalToBinary",
299:       "weka.classifiers.functions.neural.SigmoidUnit",
300:       "weka.classifiers.functions.neural.LinearUnit",
301:       "weka.classifiers.functions.neural.NeuralConnection",
302:       "weka.classifiers.functions.MultilayerPerceptron$NeuralEnd",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.core.Stopwords",
305:       "weka.core.WekaException",
306:       "weka.attributeSelection.WrapperSubsetEval",
307:       "weka.classifiers.functions.GaussianProcesses",
308:       "weka.classifiers.functions.supportVector.Kernel",
309:       "weka.classifiers.functions.supportVector.CachedKernel",
310:       "weka.classifiers.functions.supportVector.PolyKernel",
311:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
312:       "weka.attributeSelection.AttributeSelection",
313:       "weka.core.neighboursearch.CoverTree",
314:       "weka.core.FindWithCapabilities",
315:       "weka.core.SingleIndex",
316:       "weka.core.ClassDiscovery",
317:       "weka.classifiers.functions.LinearRegression",
318:       "weka.estimators.Estimator",
319:       "weka.estimators.PoissonEstimator",
320:       "weka.classifiers.MultipleClassifiersCombiner",
321:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
322:       "weka.classifiers.meta.MultiScheme",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
324:       "weka.core.UnassignedClassException"
325:     );
326:   }
327: }

[MASTER] 09:33:07.839 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
NullStemmer nullStemmer0 = new NullStemmer();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setStemmer(nullStemmer0);
String string0 = naiveBayesMultinomialText0.normTipText();
assertEquals("The norm of the instances after normalization.", string0);

naiveBayesMultinomialText1.setUseWordFrequencies(false);
String[] stringArray0 = naiveBayesMultinomialText1.getOptions();
assertEquals(12, stringArray0.length);

naiveBayesMultinomialText1.getNormalizeDocLength();
naiveBayesMultinomialText1.pruneDictionary();
MockFile mockFile0 = new MockFile("The norm of the instances after normalization.", "");
naiveBayesMultinomialText0.setStopwords((File) null);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getUseStopList());
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18041
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18046
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:33:46.244 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:33:46.249 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:33:46.255 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:33:46.283 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:34:02.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:34:02.759 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:34:02.760 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:34:03.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:34:04.458 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:34:04.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:34:07.098 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 09:34:07.209 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 09:34:07.210 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 09:34:07.210 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 09:34:07.210 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 09:34:07.211 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 09:34:07.211 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 09:34:07.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 09:34:07.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 09:34:07.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 09:34:07.422 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1026
* Starting evolution
[MASTER] 09:34:13.865 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 131s and 3 generations, 2649 statements, best individual has fitness: 6224.0
[MASTER] 09:36:01.595 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 12 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 647
* Number of covered goals: 565
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 441
* Number of covered goals: 338
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 678
* Number of covered goals: 515
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 244
* Number of covered goals: 54
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 124
* Number of covered goals: 85
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 68%
* Total number of goals: 124
* Number of covered goals: 84
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 441
* Number of covered goals: 286
* Search finished after 124s and 17 generations, 11586 statements, best individual has fitness: 20552.0
* Generated 67 tests with total length 1347
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 1378
* Number of covered goals: 570
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 809
* Number of covered goals: 255
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 45%
* Total number of goals: 424
* Number of covered goals: 191
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 12%
* Total number of goals: 278
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 103
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 103
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 19%
* Total number of goals: 809
* Number of covered goals: 155
* Generated 63 tests with total length 1195
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
[MASTER] 09:41:09.990 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:41:10.157 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:41:10.336 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:41:10.336 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
[MASTER] 09:42:05.745 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7285666666666667% of time used, but only 24/67 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1026/107_weka/evosuite-tests
* Done!

* Computation finished
