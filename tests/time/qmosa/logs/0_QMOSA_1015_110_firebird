* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBProcedureCall
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 12628
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBProcedureCall
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/jdbc/FBProcedureCall.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
* Search finished after 123s and 23 generations, 14751 statements, best individual has fitness: 1144.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 117
* Number of covered goals: 107
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 98
* Number of covered goals: 74
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 84%
* Total number of goals: 347
* Number of covered goals: 291
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 70
* Number of covered goals: 43
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 98
* Number of covered goals: 74
* Generated 54 tests with total length 885
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 00:58:02.932 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 00:58:02.933 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
fBProcedureCall1.setName("070");
boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
assertFalse(boolean0);

FBProcedureCall fBProcedureCall2 = (FBProcedureCall)fBProcedureCall1.clone();
assertTrue(fBProcedureCall2.equals((Object)fBProcedureCall0));


* Writing JUnit test case 'FBProcedureCall_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBCachedFetcher
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 12626
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:06:13.248 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:06:13.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:06:13.265 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:06:13.777 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 01:06:14.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:06:14.885 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:06:14.886 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:06:16.705 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:06:16.719 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:06:16.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:06:16.854 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:06:16.881 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:06:16.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:06:16.885 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:06:16.895 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:06:16.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:06:17.644 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 01:06:18.104 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBCachedFetcher
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/jdbc/FBCachedFetcher.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
[MASTER] 01:07:07.397 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.firebirdsql.gds.impl.GDSHelper due to org.evosuite.ga.ConstructionFailedException: Have no generator for class org.firebirdsql.jdbc.FBConnection canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 01:07:09.869 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 42 generations, 32953 statements, best individual has fitness: 2392.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 158
* Number of covered goals: 87
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 118
* Number of covered goals: 51
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 347
* Number of covered goals: 278
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 68%
* Total number of goals: 28
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 31%
* Total number of goals: 118
* Number of covered goals: 37
* Generated 37 tests with total length 875
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 01:08:40.031 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.LocalGDSImpl: no jaybird22_x64 in java.library.path
[MASTER] 01:08:40.158 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.NativeGDSImpl: org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 01:08:40.405 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.JniGDSImpl: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 01:08:40.525 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 01:09:03.505 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 01:09:03.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test15 -> class java.lang.AssertionError: Exception was not thrown in org.firebirdsql.gds.impl.GDSFactory but in org.firebirdsql.jdbc.FBConnectionProperties.getGds(FBConnectionProperties.java:497): org.evosuite.runtime.mock.java.lang.MockThrowable: Unknown GDS type PURE_JAVA
[MASTER] 01:09:03.919 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
linkedList0.parallelStream();
FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
fBCachedFetcher0.insertRow((byte[][]) null);
LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
delayQueue0.remove((Object) linkedList0);
ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(326, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
ScheduledFuture<String> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule(callable0, 300L, timeUnit0);
delayQueue0.add((Delayed) scheduledFuture0);
Delayed delayed0 = delayQueue0.poll();
linkedList0.removeFirstOccurrence(delayed0);
linkedList0.add((byte[][]) null);
InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
fBConnectionProperties0.setBlobBufferSize(5487);
FBManagedConnectionFactory fBManagedConnectionFactory1 = new FBManagedConnectionFactory();
fBManagedConnectionFactory1.getTpb(3596);

[MASTER] 01:09:03.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test27 -> class java.lang.NullPointerException: null
[MASTER] 01:09:03.919 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
byte[][] byteArray0 = new byte[10][0];
linkedList0.add(byteArray0);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
fBCachedFetcher0.isEmpty();
GDSType gDSType0 = javaGDSImpl0.getType();
FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory(gDSType0);
FBManagedConnectionFactory fBManagedConnectionFactory1 = new FBManagedConnectionFactory();
fBManagedConnectionFactory0.setDatabase("PURE_JAVA");
fBManagedConnectionFactory0.getDefaultConnectionRequestInfo();

[MASTER] 01:09:03.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test03 -> class java.lang.NullPointerException: null
[MASTER] 01:09:03.920 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
byte[] byteArray0 = new byte[5];
byteArray0[0] = (byte) (-7);
byteArray0[1] = (byte) (-2);
byteArray0[2] = (byte) (-64);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
fBCachedFetcher0.next();
JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
javaGDSImpl0.getType();
JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
GDSType gDSType0 = javaGDSImpl1.getType();
FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory(gDSType0);
FBManagedConnectionFactory fBManagedConnectionFactory1 = new FBManagedConnectionFactory();
fBManagedConnectionFactory0.getDefaultConnectionRequestInfo();

[MASTER] 01:09:03.920 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test28 -> class java.lang.AssertionError: Exception was not thrown in org.firebirdsql.gds.impl.GDSFactory but in org.firebirdsql.jdbc.FBConnectionProperties.getGds(FBConnectionProperties.java:497): org.evosuite.runtime.mock.java.lang.MockThrowable: Unknown GDS type PURE_JAVA
[MASTER] 01:09:03.920 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
byte[][] byteArray0 = new byte[0][5];
linkedList0.addFirst(byteArray0);
FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
linkedList0.add((byte[][]) null);
fBCachedFetcher0.updateRow(byteArray0);
assertTrue(fBCachedFetcher0.isBeforeFirst());
assertFalse(fBCachedFetcher0.isAfterLast());


[MASTER] 01:09:05.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test20 -> class java.lang.AssertionError: Exception was not thrown in org.firebirdsql.gds.impl.GDSFactory but in org.firebirdsql.jdbc.FBConnectionProperties.getGds(FBConnectionProperties.java:497): org.evosuite.runtime.mock.java.lang.MockThrowable: Unknown GDS type PURE_JAVA
[MASTER] 01:09:05.527 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
linkedList0.parallelStream();
FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
fBCachedFetcher0.insertRow((byte[][]) null);
LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
delayQueue0.remove((Object) linkedList0);
ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(326, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
ScheduledFuture<String> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule(callable0, 300L, timeUnit0);
delayQueue0.add((Delayed) scheduledFuture0);
Delayed delayed0 = delayQueue0.poll();
linkedList0.removeFirstOccurrence(delayed0);
linkedList0.add((byte[][]) null);
InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
fBConnectionProperties0.setBlobBufferSize(5487);
FBManagedConnectionFactory fBManagedConnectionFactory1 = new FBManagedConnectionFactory();
fBManagedConnectionFactory1.getTpb(3596);

[MASTER] 01:09:05.527 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class java.lang.AssertionError: Exception was not thrown in org.firebirdsql.gds.impl.GDSFactory but in org.firebirdsql.jdbc.FBConnectionProperties.getGds(FBConnectionProperties.java:497): org.evosuite.runtime.mock.java.lang.MockThrowable: Unknown GDS type PURE_JAVA
[MASTER] 01:09:05.528 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
byte[][] byteArray0 = new byte[0][5];
linkedList0.addFirst(byteArray0);
FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
fBCachedFetcher0.first();
fBCachedFetcher0.afterLast();
fBManagedConnectionFactory0.getDefaultConnectionRequestInfo();

* Writing JUnit test case 'FBCachedFetcher_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.encodings.EncodingFactory
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 12624
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.encodings.EncodingFactory
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/encodings/EncodingFactory.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1015
* Starting evolution
* Search finished after 124s and 15 generations, 8686 statements, best individual has fitness: 1040.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 242
* Number of covered goals: 216
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 195
* Number of covered goals: 175
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 387
* Number of covered goals: 340
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 25
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 195
* Number of covered goals: 172
* Generated 66 tests with total length 600
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
* Writing JUnit test case 'EncodingFactory_ESTest' to /home/ubuntu/termite/qmosa/tests/s1015/110_firebird/evosuite-tests
* Done!

* Computation finished
