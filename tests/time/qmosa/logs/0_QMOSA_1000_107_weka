* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14959
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:54:56.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:54:56.592 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:54:56.594 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:54:56.671 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:54:56.685 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:54:56.691 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1000
* Starting evolution
[MASTER] 13:55:09.246 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 13:55:25.707 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 13:55:25.707 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 26 generations, 23911 statements, best individual has fitness: 5488.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 338
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 194
* Number of covered goals: 89
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 47%
* Total number of goals: 476
* Number of covered goals: 223
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 112
* Number of covered goals: 44
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 46%
* Total number of goals: 194
* Number of covered goals: 89
* Generated 50 tests with total length 969
* Resulting test suite's coverage: 52% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 14:00:35.864 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_0_1575381635244/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_0_1575381635244/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:35.864 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:35.864 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:35.867 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 14:00:35.868 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 14:00:35.869 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_0_1575381635244/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:35 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_0_tmp__ESTest extends NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.4399053258946846
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
31:       FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
32:       FileSystemHandling.appendLineToFile(evoSuiteFile0, "Development of a stemmin algorithm");
33:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=v6*");
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       byte[] byteArray0 = new byte[1];
36:       byteArray0[0] = (byte)108;
37:       boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
38:       assertFalse(boolean0);
39:       
40:       naiveBayesMultinomialText0.stemmerTipText();
41:       File file0 = MockFile.createTempFile("<=v6*", "-W <classname>");
42:       file0.mkdirs();
43:       MockFile mockFile0 = new MockFile(file0, "<=v6*");
44:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
45:       Integer integer0 = new Integer(774);
46:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
47:       naiveBayesMultinomialText0.LNormTipText();
48:       naiveBayesMultinomialText0.setOptions(stringArray0);
49:       naiveBayesMultinomialText0.normTipText();
50:       String string0 = naiveBayesMultinomialText0.useStopListTipText();
51:       assertEquals("If true, ignores all words that are on the stoplist.", string0);
52:       
53:       naiveBayesMultinomialText0.getLowercaseTokens();
54:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
55:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
56:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
57:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
58:       assertFalse(naiveBayesMultinomialText0.getUseStopList());
59:   }
60: }
RegularFileObject[/tmp/EvoSuite_0_1575381635244/weka/classifiers/bayes/NaiveBayesMultinomialText_0_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:35 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_0_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:35.870 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
FileSystemHandling.appendLineToFile(evoSuiteFile0, "Development of a stemmin algorithm");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=v6*");
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)108;
boolean boolean0 = naiveBayesMultinomialText0.getNormalizeDocLength();
assertFalse(boolean0);

naiveBayesMultinomialText0.stemmerTipText();
File file0 = MockFile.createTempFile("<=v6*", "-W <classname>");
file0.mkdirs();
MockFile mockFile0 = new MockFile(file0, "<=v6*");
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(774);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.normTipText();
String string0 = naiveBayesMultinomialText0.useStopListTipText();
assertEquals("If true, ignores all words that are on the stoplist.", string0);

naiveBayesMultinomialText0.getLowercaseTokens();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 14:00:36.429 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_7_1575381636382/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_7_1575381636382/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:36.429 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:36.429 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:36.430 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 14:00:36.430 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 47
[MASTER] 14:00:36.430 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_7_1575381636382/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:36 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.HashMap;
13: import java.util.LinkedHashMap;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.Instance;
22: import weka.filters.supervised.attribute.Discretize;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_7_tmp__ESTest extends NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=3.3994042323820763
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
34:       FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
35:       EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
36:       FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
37:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=v6*");
38:       FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
39:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
40:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
41:       naiveBayesMultinomialText0.stemmerTipText();
42:       naiveBayesMultinomialText0.stemmerTipText();
43:       File file0 = MockFile.createTempFile("w**1hOOM>", "-W <classname>");
44:       MockFile mockFile0 = (MockFile)naiveBayesMultinomialText0.m_stopwordsFile;
45:       MockFile.createTempFile("whatever", "", (File) mockFile0);
46:       MockFile mockFile1 = new MockFile(file0, "w**1hOOM>");
47:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
48:       naiveBayesMultinomialText0.setPeriodicPruning(1782);
49:       Integer integer0 = new Integer(774);
50:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
51:       naiveBayesMultinomialText0.LNormTipText();
52:       naiveBayesMultinomialText0.setOptions(stringArray0);
53:       naiveBayesMultinomialText0.normTipText();
54:       Discretize discretize0 = new Discretize();
55:       // Undeclared exception!
56:       try { 
57:         discretize0.output();
58:         fail("Expecting exception: NullPointerException");
59:       
60:       } catch(NullPointerException e) {
61:          //
62:          // No output instance format defined
63:          //
64:          verifyException("weka.filters.Filter", e);
65:       }
66:   }
67: }
RegularFileObject[/tmp/EvoSuite_7_1575381636382/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:36 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:36.431 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=v6*");
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.stemmerTipText();
File file0 = MockFile.createTempFile("w**1hOOM>", "-W <classname>");
MockFile mockFile0 = (MockFile)naiveBayesMultinomialText0.m_stopwordsFile;
MockFile.createTempFile("whatever", "", (File) mockFile0);
MockFile mockFile1 = new MockFile(file0, "w**1hOOM>");
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.setPeriodicPruning(1782);
Integer integer0 = new Integer(774);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.normTipText();
Discretize discretize0 = new Discretize();
discretize0.output();

[MASTER] 14:00:36.755 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1575381636716/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1575381636716/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:36.755 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:36.755 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:36.756 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 14:00:36.756 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 44
[MASTER] 14:00:36.757 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1575381636716/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:36 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.HashMap;
13: import java.util.LinkedHashMap;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.BinarySparseInstance;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_14_tmp__ESTest extends NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=3.522406883664212
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       naiveBayesMultinomialText0.LNormTipText();
35:       naiveBayesMultinomialText0.stemmerTipText();
36:       File file0 = MockFile.createTempFile("w**1hOOM>", "-W <classname>");
37:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
38:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
39:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
40:       naiveBayesMultinomialText1.stemmerTipText();
41:       File file1 = MockFile.createTempFile("w**1hOOM>", "nominal)");
42:       file0.mkdirs();
43:       MockFile mockFile0 = new MockFile(file1, "-W <classname>");
44:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
45:       Integer integer0 = new Integer((byte)108);
46:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
47:       naiveBayesMultinomialText0.LNormTipText();
48:       naiveBayesMultinomialText1.setOptions(stringArray0);
49:       naiveBayesMultinomialText0.normTipText();
50:       naiveBayesMultinomialText0.useStopListTipText();
51:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(10);
52:       try { 
53:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
54:         fail("Expecting exception: RuntimeException");
55:       
56:       } catch(RuntimeException e) {
57:          //
58:          // DenseInstance doesn't have access to a dataset!
59:          //
60:          verifyException("weka.core.AbstractInstance", e);
61:       }
62:   }
63: }
RegularFileObject[/tmp/EvoSuite_14_1575381636716/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:36 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:36.757 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.stemmerTipText();
File file0 = MockFile.createTempFile("w**1hOOM>", "-W <classname>");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
naiveBayesMultinomialText1.stemmerTipText();
File file1 = MockFile.createTempFile("w**1hOOM>", "nominal)");
file0.mkdirs();
MockFile mockFile0 = new MockFile(file1, "-W <classname>");
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer((byte)108);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText1.setOptions(stringArray0);
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.useStopListTipText();
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(10);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 14:00:36.965 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1575381636886/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1575381636886/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:36.965 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:36.965 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:36.965 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:00:36.965 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:00:36.966 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:00:36.966 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:00:36.966 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1575381636886/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:36 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.TestInstances;
17: import weka.core.stemmers.IteratedLovinsStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_18_tmp__ESTest extends NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.070976373972562
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
30:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       Integer integer0 = new Integer((-23));
33:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
34:       String[] stringArray0 = TestInstances.DEFAULT_WORDS;
35:       String string0 = naiveBayesMultinomialText1.LNormTipText();
36:       assertEquals("The LNorm to use for document length normalization.", string0);
37:       
38:       String string1 = naiveBayesMultinomialText1.normTipText();
39:       assertEquals("The norm of the instances after normalization.", string1);
40:       
41:       naiveBayesMultinomialText0.getTokenizer();
42:       String string2 = naiveBayesMultinomialText0.stopwordsTipText();
43:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
44:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
45:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
46:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
47:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
48:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
49:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string2);
50:   }
51: }
RegularFileObject[/tmp/EvoSuite_18_1575381636886/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:36 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:36.967 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer((-23));
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String[] stringArray0 = TestInstances.DEFAULT_WORDS;
String string0 = naiveBayesMultinomialText1.LNormTipText();
assertEquals("The LNorm to use for document length normalization.", string0);

String string1 = naiveBayesMultinomialText1.normTipText();
assertEquals("The norm of the instances after normalization.", string1);

naiveBayesMultinomialText0.getTokenizer();
String string2 = naiveBayesMultinomialText0.stopwordsTipText();
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string2);


[MASTER] 14:00:37.038 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_20_1575381637005/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_20_1575381637005/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:37.038 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.038 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.038 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 14:00:37.038 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 35
[MASTER] 14:00:37.039 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_20_1575381637005/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.util.MockRandom;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.Instances;
18: import weka.core.TestInstances;
19: import weka.core.neighboursearch.BallTree;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_20_tmp__ESTest extends NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.5355410969957366
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       TestInstances testInstances0 = new TestInstances();
32:       testInstances0.getRelationalClassFormat();
33:       MockRandom mockRandom0 = new MockRandom();
34:       BallTree ballTree0 = new BallTree((Instances) null);
35:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
38:       naiveBayesMultinomialText2.setOptions(testInstances0.DEFAULT_WORDS);
39:       assertFalse(naiveBayesMultinomialText2.getUseStopList());
40:       assertFalse(naiveBayesMultinomialText2.getNormalizeDocLength());
41:       assertFalse(naiveBayesMultinomialText2.getLowercaseTokens());
42:       
43:       naiveBayesMultinomialText1.listOptions();
44:       assertEquals(1.0, naiveBayesMultinomialText1.getNorm(), 0.01);
45:       assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
46:       assertFalse(naiveBayesMultinomialText1.getUseWordFrequencies());
47:       assertEquals(2.0, naiveBayesMultinomialText1.getLNorm(), 0.01);
48:       assertEquals(3.0, naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_20_1575381637005/weka/classifiers/bayes/NaiveBayesMultinomialText_20_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_20_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:37.040 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
TestInstances testInstances0 = new TestInstances();
testInstances0.getRelationalClassFormat();
MockRandom mockRandom0 = new MockRandom();
BallTree ballTree0 = new BallTree((Instances) null);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.setOptions(testInstances0.DEFAULT_WORDS);
assertFalse(naiveBayesMultinomialText2.getUseStopList());
assertFalse(naiveBayesMultinomialText2.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText2.getLowercaseTokens());

naiveBayesMultinomialText1.listOptions();
assertEquals(1.0, naiveBayesMultinomialText1.getNorm(), 0.01);
assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText1.getUseWordFrequencies());
assertEquals(2.0, naiveBayesMultinomialText1.getLNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);


[MASTER] 14:00:37.354 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_28_1575381637320/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_28_1575381637320/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:37.354 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.354 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.354 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 14:00:37.354 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 14:00:37.354 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 14:00:37.355 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_28_1575381637320/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_28_tmp__ESTest extends NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.1590695284682866
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.m_t = 0.0;
29:       String[] stringArray0 = new String[2];
30:       stringArray0[0] = "_i";
31:       naiveBayesMultinomialText0.setLowercaseTokens(true);
32:       stringArray0[1] = "}M47wy,fxkwvdD7-";
33:       naiveBayesMultinomialText0.setOptions(stringArray0);
34:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
35:       naiveBayesMultinomialText0.setLNorm(1.0E-4);
36:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
37:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText1.m_probOfWordGivenClass;
38:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       NaiveBayesMultinomialText.main(stringArray0);
40:       naiveBayesMultinomialText1.toString();
41:       naiveBayesMultinomialText1.normalizeDocLengthTipText();
42:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
43:       naiveBayesMultinomialText0.getLowercaseTokens();
44:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
45:       naiveBayesMultinomialText1.LNormTipText();
46:       naiveBayesMultinomialText0.useStopListTipText();
47:       assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_28_1575381637320/weka/classifiers/bayes/NaiveBayesMultinomialText_28_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_28_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:37.356 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.m_t = 0.0;
String[] stringArray0 = new String[2];
stringArray0[0] = "_i";
naiveBayesMultinomialText0.setLowercaseTokens(true);
stringArray0[1] = "}M47wy,fxkwvdD7-";
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.setLNorm(1.0E-4);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText1.m_probOfWordGivenClass;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText.main(stringArray0);
naiveBayesMultinomialText1.toString();
naiveBayesMultinomialText1.normalizeDocLengthTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText1.LNormTipText();
naiveBayesMultinomialText0.useStopListTipText();
assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 14:00:37.390 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_29_1575381637357/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_29_1575381637357/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:37.390 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.390 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.391 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:00:37.391 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:00:37.391 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_29_1575381637357/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.Capabilities;
17: import weka.core.FindWithCapabilities;
18: import weka.core.tokenizers.NGramTokenizer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_29_tmp__ESTest extends NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.5355410969957366
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
30:       FindWithCapabilities findWithCapabilities0 = new FindWithCapabilities();
31:       Capabilities.Capability capabilities_Capability0 = Capabilities.Capability.EMPTY_NOMINAL_ATTRIBUTES;
32:       findWithCapabilities0.disable(capabilities_Capability0);
33:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
35:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
36:       naiveBayesMultinomialText1.setUseWordFrequencies(false);
37:       String[] stringArray0 = new String[0];
38:       naiveBayesMultinomialText1.setOptions(stringArray0);
39:       double double0 = naiveBayesMultinomialText1.getNorm();
40:       assertFalse(naiveBayesMultinomialText1.getUseWordFrequencies());
41:       assertEquals(2.0, naiveBayesMultinomialText1.getLNorm(), 0.01);
42:       assertEquals(3.0, naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);
43:       assertFalse(naiveBayesMultinomialText1.getLowercaseTokens());
44:       assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
45:       assertFalse(naiveBayesMultinomialText1.getUseStopList());
46:       assertFalse(naiveBayesMultinomialText1.getNormalizeDocLength());
47:       assertEquals(1.0, double0, 0.01);
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_29_1575381637357/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:37.392 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
FindWithCapabilities findWithCapabilities0 = new FindWithCapabilities();
Capabilities.Capability capabilities_Capability0 = Capabilities.Capability.EMPTY_NOMINAL_ATTRIBUTES;
findWithCapabilities0.disable(capabilities_Capability0);
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setUseWordFrequencies(false);
String[] stringArray0 = new String[0];
naiveBayesMultinomialText1.setOptions(stringArray0);
double double0 = naiveBayesMultinomialText1.getNorm();
assertFalse(naiveBayesMultinomialText1.getUseWordFrequencies());
assertEquals(2.0, naiveBayesMultinomialText1.getLNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText1.getMinWordFrequency(), 0.01);
assertFalse(naiveBayesMultinomialText1.getLowercaseTokens());
assertEquals(0, naiveBayesMultinomialText1.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText1.getUseStopList());
assertFalse(naiveBayesMultinomialText1.getNormalizeDocLength());
assertEquals(1.0, double0, 0.01);


[MASTER] 14:00:37.478 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_31_1575381637441/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_31_1575381637441/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:37.478 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.478 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.478 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:00:37.479 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_31_1575381637441/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.attributeSelection.PrincipalComponents;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.IteratedLovinsStemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_31_tmp__ESTest extends NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=2.9010990903207046
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       PrincipalComponents principalComponents0 = new PrincipalComponents();
30:       double[] doubleArray0 = new double[9];
31:       doubleArray0[0] = (-265.86122199091665);
32:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
33:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
34:       Integer integer0 = new Integer(1123);
35:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
36:       String[] stringArray0 = naiveBayesMultinomialText1.getOptions();
37:       assertEquals(12, stringArray0.length);
38:       
39:       String string0 = naiveBayesMultinomialText0.LNormTipText();
40:       assertEquals("The LNorm to use for document length normalization.", string0);
41:       
42:       String string1 = naiveBayesMultinomialText1.normTipText();
43:       assertEquals("The norm of the instances after normalization.", string1);
44:       
45:       naiveBayesMultinomialText1.tokenizerTipText();
46:       String string2 = naiveBayesMultinomialText0.tokenizerTipText();
47:       assertEquals("The tokenizing algorithm to use on the strings.", string2);
48:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
49:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
50:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
51:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_31_1575381637441/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:37.480 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
PrincipalComponents principalComponents0 = new PrincipalComponents();
double[] doubleArray0 = new double[9];
doubleArray0[0] = (-265.86122199091665);
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
Integer integer0 = new Integer(1123);
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String[] stringArray0 = naiveBayesMultinomialText1.getOptions();
assertEquals(12, stringArray0.length);

String string0 = naiveBayesMultinomialText0.LNormTipText();
assertEquals("The LNorm to use for document length normalization.", string0);

String string1 = naiveBayesMultinomialText1.normTipText();
assertEquals("The norm of the instances after normalization.", string1);

naiveBayesMultinomialText1.tokenizerTipText();
String string2 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string2);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());


[MASTER] 14:00:37.676 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1575381637640/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1575381637640/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:37.676 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.676 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.677 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 14:00:37.677 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 14:00:37.678 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1575381637640/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.mock.java.io.MockFile;
16: import org.evosuite.runtime.testdata.EvoSuiteFile;
17: import org.evosuite.runtime.testdata.FileSystemHandling;
18: import org.junit.runner.RunWith;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_36_tmp__ESTest extends NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=3.400422389517661
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       naiveBayesMultinomialText0.stemmerTipText();
33:       naiveBayesMultinomialText0.stemmerTipText();
34:       File file0 = MockFile.createTempFile("w**1hOOM>", "-W <classname>");
35:       file0.toPath();
36:       MockFile mockFile0 = new MockFile(file0, "w**1hOOM>");
37:       mockFile0.setReadable(false, false);
38:       naiveBayesMultinomialText0.reset();
39:       naiveBayesMultinomialText0.setLNorm(1772.3855467923665);
40:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
41:       naiveBayesMultinomialText0.setStopwords(file0);
42:       naiveBayesMultinomialText0.getUseStopList();
43:       MockFile.createTempFile("w**1hOOM>", "-W <classname>");
44:       MockFile mockFile1 = new MockFile(mockFile0, "<pre>\n");
45:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
46:       Integer integer0 = new Integer(774);
47:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
48:       naiveBayesMultinomialText0.LNormTipText();
49:       naiveBayesMultinomialText0.setOptions(stringArray0);
50:       naiveBayesMultinomialText0.normTipText();
51:       assertTrue(naiveBayesMultinomialText0.getUseStopList());
52:   }
53: }
RegularFileObject[/tmp/EvoSuite_36_1575381637640/weka/classifiers/bayes/NaiveBayesMultinomialText_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:37.679 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.stemmerTipText();
File file0 = MockFile.createTempFile("w**1hOOM>", "-W <classname>");
file0.toPath();
MockFile mockFile0 = new MockFile(file0, "w**1hOOM>");
mockFile0.setReadable(false, false);
naiveBayesMultinomialText0.reset();
naiveBayesMultinomialText0.setLNorm(1772.3855467923665);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
naiveBayesMultinomialText0.setStopwords(file0);
naiveBayesMultinomialText0.getUseStopList();
MockFile.createTempFile("w**1hOOM>", "-W <classname>");
MockFile mockFile1 = new MockFile(mockFile0, "<pre>\n");
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer(774);
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.setOptions(stringArray0);
naiveBayesMultinomialText0.normTipText();
assertTrue(naiveBayesMultinomialText0.getUseStopList());


[MASTER] 14:00:37.877 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1575381637847/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1575381637847/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:37.877 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.877 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:37.877 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 14:00:37.877 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:00:37.877 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 14:00:37.877 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:00:37.877 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 14:00:37.878 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1575381637847/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.9676652704776565
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       double[] doubleArray0 = new double[9];
29:       doubleArray0[0] = 5239.389;
30:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       Integer integer0 = new Integer((-3));
33:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
34:       hashMap0.put((Integer) null, linkedHashMap0);
35:       NaiveBayesMultinomialText.main((String[]) null);
36:       naiveBayesMultinomialText0.toString();
37:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
38:       naiveBayesMultinomialText0.useWordFrequenciesTipText();
39:       naiveBayesMultinomialText0.getLowercaseTokens();
40:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
41:       
42:       naiveBayesMultinomialText0.setNormalizeDocLength(true);
43:       naiveBayesMultinomialText0.LNormTipText();
44:       naiveBayesMultinomialText0.lowercaseTokensTipText();
45:       naiveBayesMultinomialText0.periodicPruningTipText();
46:       naiveBayesMultinomialText0.getLowercaseTokens();
47:       naiveBayesMultinomialText0.getRevision();
48:       assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());
49:   }
50: }
RegularFileObject[/tmp/EvoSuite_41_1575381637847/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:37 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:37.879 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[9];
doubleArray0[0] = 5239.389;
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
Integer integer0 = new Integer((-3));
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put((Integer) null, linkedHashMap0);
NaiveBayesMultinomialText.main((String[]) null);
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.useWordFrequenciesTipText();
naiveBayesMultinomialText0.getLowercaseTokens();
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());

naiveBayesMultinomialText0.setNormalizeDocLength(true);
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.periodicPruningTipText();
naiveBayesMultinomialText0.getLowercaseTokens();
naiveBayesMultinomialText0.getRevision();
assertTrue(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 14:00:38.025 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1575381637996/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1575381637996/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:38.025 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:38.025 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:38.027 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 14:00:38.027 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 14:00:38.027 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1575381637996/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:37 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.DenseInstance;
20: import weka.core.tokenizers.AlphabeticTokenizer;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_45_tmp__ESTest extends NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.070976373972562
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       naiveBayesMultinomialText0.stemmerTipText();
34:       MockFile mockFile0 = new MockFile("MEq");
35:       mockFile0.setReadable(false, true);
36:       naiveBayesMultinomialText0.setStopwords(mockFile0);
37:       naiveBayesMultinomialText0.getUseStopList();
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
39:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
40:       naiveBayesMultinomialText0.useStopListTipText();
41:       DenseInstance denseInstance0 = new DenseInstance(1);
42:       // Undeclared exception!
43:       try { 
44:         naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, false);
45:         fail("Expecting exception: RuntimeException");
46:       
47:       } catch(RuntimeException e) {
48:          //
49:          // DenseInstance doesn't have access to a dataset!
50:          //
51:          verifyException("weka.core.AbstractInstance", e);
52:       }
53:   }
54: }
RegularFileObject[/tmp/EvoSuite_45_1575381637996/weka/classifiers/bayes/NaiveBayesMultinomialText_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:38 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:38.028 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.stemmerTipText();
MockFile mockFile0 = new MockFile("MEq");
mockFile0.setReadable(false, true);
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.getUseStopList();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.useStopListTipText();
DenseInstance denseInstance0 = new DenseInstance(1);
naiveBayesMultinomialText0.tokenizeInstance(denseInstance0, false);

[MASTER] 14:00:38.164 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_49_1575381638134/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_49_1575381638134/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.java]]
[MASTER] 14:00:38.164 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:38.164 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 14:00:38.164 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 14:00:38.164 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 45
[MASTER] 14:00:38.165 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_49_1575381638134/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 14:00:38 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.HashMap;
13: import java.util.LinkedHashMap;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.mock.java.io.MockFile;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.classifiers.functions.SimpleLinearRegression;
22: import weka.core.Capabilities;
23: import weka.core.Instances;
24: import weka.core.TestInstances;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class NaiveBayesMultinomialText_49_tmp__ESTest extends NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
28: 
29:   /**
30:   //Test case number: 0
31:   /*Coverage entropy=2.8069269423253673
32:   */
33:   @Test(timeout = 4000)
34:   public void test0()  throws Throwable  {
35:       FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
36:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
37:       naiveBayesMultinomialText0.LNormTipText();
38:       naiveBayesMultinomialText0.stemmerTipText();
39:       File file0 = MockFile.createTempFile("w**1hOOM>", "-W <classname>");
40:       MockFile mockFile0 = new MockFile("-W <classname>", "The LNorm to use for document length normalization.");
41:       FileSystemHandling.shouldAllThrowIOExceptions();
42:       file0.setExecutable(false, false);
43:       mockFile0.setReadable(false, false);
44:       FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
45:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
46:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
47:       String[] stringArray0 = new String[7];
48:       stringArray0[0] = "w**1hOOM>";
49:       stringArray0[1] = "The LNorm to use for document length normalization.";
50:       stringArray0[2] = "-W <classname>";
51:       stringArray0[3] = "-W <classname>";
52:       stringArray0[4] = "The stemming algorithm to use on the words.";
53:       stringArray0[5] = "The stemming algorithm to use on the words.";
54:       stringArray0[6] = "The stemming algorithm to use on the words.";
55:       naiveBayesMultinomialText0.setOptions(stringArray0);
56:       SimpleLinearRegression simpleLinearRegression0 = new SimpleLinearRegression();
57:       Capabilities capabilities0 = simpleLinearRegression0.getCapabilities();
58:       TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
59:       Instances instances0 = testInstances0.generate("7$@!b");
60:       try { 
61:         naiveBayesMultinomialText0.buildClassifier(instances0);
62:         fail("Expecting exception: Exception");
63:       
64:       } catch(Exception e) {
65:          //
66:          // weka.classifiers.bayes.NaiveBayesMultinomialText: Cannot handle numeric class!
67:          //
68:          verifyException("weka.core.Capabilities", e);
69:       }
70:   }
71: }
RegularFileObject[/tmp/EvoSuite_49_1575381638134/weka/classifiers/bayes/NaiveBayesMultinomialText_49_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 14:00:38 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.DistanceFunction",
92:       "org.pentaho.packageManagement.PackageConstraint",
93:       "weka.attributeSelection.AttributeEvaluator",
94:       "org.pentaho.packageManagement.Package",
95:       "weka.core.xml.XMLBasicSerialization",
96:       "weka.classifiers.CostMatrix",
97:       "weka.classifiers.bayes.net.search.local.K2",
98:       "weka.core.neighboursearch.BallTree",
99:       "weka.filters.UnsupervisedFilter",
100:       "weka.core.logging.Logger$Level",
101:       "weka.core.neighboursearch.CoverTree$DistanceNode",
102:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
103:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
104:       "weka.core.DenseInstance",
105:       "weka.core.stemmers.Stemmer",
106:       "weka.classifiers.functions.SimpleLinearRegression",
107:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
108:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
109:       "org.pentaho.packageManagement.DefaultPackageManager",
110:       "org.bounce.net.DefaultAuthenticator",
111:       "weka.core.neighboursearch.CoverTree$MyHeap",
112:       "weka.core.neighboursearch.KDTree",
113:       "weka.core.stemmers.NullStemmer",
114:       "weka.core.EnvironmentHandler",
115:       "weka.classifiers.functions.SGDText",
116:       "weka.core.RelationalLocator",
117:       "weka.core.Utils",
118:       "weka.core.CustomDisplayStringProvider",
119:       "weka.core.tokenizers.Tokenizer",
120:       "weka.core.NormalizableDistance",
121:       "weka.core.NoSupportForMissingValuesException",
122:       "weka.classifiers.UpdateableClassifier",
123:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
124:       "weka.core.TechnicalInformation$Type",
125:       "weka.core.MultiInstanceCapabilitiesHandler",
126:       "weka.core.Copyable",
127:       "weka.core.Capabilities",
128:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
129:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
130:       "weka.core.BinarySparseInstance",
131:       "weka.core.AttributeLocator",
132:       "weka.clusterers.UpdateableClusterer",
133:       "weka.core.Summarizable",
134:       "weka.core.AdditionalMeasureProducer",
135:       "weka.core.neighboursearch.balltrees.BallNode",
136:       "org.pentaho.packageManagement.PackageManager$1",
137:       "weka.core.Drawable",
138:       "weka.core.matrix.Matrix",
139:       "weka.core.SingleIndex",
140:       "weka.core.CapabilitiesHandler",
141:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
142:       "weka.attributeSelection.ASEvaluation",
143:       "weka.core.AbstractInstance",
144:       "weka.core.SelectedTag",
145:       "org.pentaho.packageManagement.DefaultPackage",
146:       "weka.core.neighboursearch.balltrees.BallSplitter",
147:       "weka.classifiers.misc.InputMappedClassifier",
148:       "weka.classifiers.bayes.BayesNet",
149:       "weka.core.Version",
150:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
151:       "weka.core.Tag",
152:       "weka.core.neighboursearch.CoverTree",
153:       "weka.classifiers.AbstractClassifier",
154:       "weka.core.FindWithCapabilities",
155:       "weka.filters.unsupervised.attribute.Center",
156:       "weka.core.OptionHandler",
157:       "weka.core.WekaException",
158:       "weka.core.ClassDiscovery",
159:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
160:       "weka.filters.StreamableFilter",
161:       "weka.core.Range",
162:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
163:       "weka.classifiers.Classifier",
164:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
165:       "weka.core.Capabilities$Capability",
166:       "weka.core.SparseInstance",
167:       "org.pentaho.packageManagement.PackageManager",
168:       "weka.attributeSelection.AttributeTransformer",
169:       "weka.core.tokenizers.WordTokenizer",
170:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
171:       "weka.attributeSelection.PrincipalComponents",
172:       "weka.core.stemmers.SnowballStemmer",
173:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
174:       "weka.core.stemmers.LovinsStemmer",
175:       "weka.classifiers.Evaluation",
176:       "weka.classifiers.functions.supportVector.Kernel",
177:       "weka.core.WekaPackageManager",
178:       "weka.filters.SupervisedFilter",
179:       "weka.core.TechnicalInformationHandler",
180:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
181:       "weka.core.neighboursearch.LinearNNSearch",
182:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
183:       "weka.core.Option",
184:       "weka.classifiers.meta.CostSensitiveClassifier",
185:       "weka.core.neighboursearch.PerformanceStats",
186:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
187:       "weka.filters.Sourcable",
188:       "weka.core.Attribute",
189:       "weka.core.Stopwords",
190:       "weka.core.tokenizers.AlphabeticTokenizer",
191:       "weka.core.FastVector",
192:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
193:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
194:       "weka.core.tokenizers.NGramTokenizer",
195:       "weka.core.UnassignedDatasetException",
196:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
197:       "weka.classifiers.RandomizableClassifier",
198:       "weka.classifiers.SingleClassifierEnhancer",
199:       "weka.core.RevisionUtils",
200:       "weka.core.Instance",
201:       "weka.core.ProtectedProperties",
202:       "weka.estimators.Estimator",
203:       "weka.core.StringLocator",
204:       "weka.classifiers.bayes.net.ADNode",
205:       "weka.core.AttributeStats",
206:       "weka.core.WeightedInstancesHandler",
207:       "weka.core.neighboursearch.NearestNeighbourSearch",
208:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
209:       "weka.core.TechnicalInformation$Field",
210:       "weka.core.neighboursearch.covertrees.Stack",
211:       "weka.filters.unsupervised.attribute.Remove",
212:       "weka.core.Randomizable",
213:       "weka.core.EuclideanDistance",
214:       "weka.core.Instances",
215:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
216:       "weka.core.UnassignedClassException",
217:       "weka.classifiers.bayes.net.BIFReader",
218:       "weka.classifiers.bayes.net.ParentSet",
219:       "weka.classifiers.rules.ZeroR",
220:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
221:       "weka.filters.unsupervised.attribute.Standardize",
222:       "weka.core.stemmers.IteratedLovinsStemmer",
223:       "weka.core.UnsupportedAttributeTypeException",
224:       "weka.core.TechnicalInformation",
225:       "weka.classifiers.Sourcable",
226:       "weka.core.RevisionHandler",
227:       "weka.classifiers.evaluation.output.prediction.PlainText",
228:       "weka.core.neighboursearch.TreePerformanceStats",
229:       "weka.core.xml.XMLSerialization",
230:       "weka.classifiers.xml.XMLClassifier",
231:       "weka.filters.Filter",
232:       "weka.filters.supervised.attribute.Discretize"
233:     );
234:   } 
235: 
236:   private static void resetClasses() {
237:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_49_tmp__ESTest_scaffolding.class.getClassLoader()); 
238: 
239:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
240:       "weka.classifiers.AbstractClassifier",
241:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
242:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
243:       "weka.core.Capabilities$Capability",
244:       "weka.core.tokenizers.Tokenizer",
245:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
246:       "weka.core.tokenizers.WordTokenizer",
247:       "weka.core.stemmers.NullStemmer",
248:       "weka.core.tokenizers.NGramTokenizer",
249:       "weka.core.Option",
250:       "weka.core.Utils",
251:       "weka.core.neighboursearch.NearestNeighbourSearch",
252:       "weka.core.neighboursearch.LinearNNSearch",
253:       "weka.core.NormalizableDistance",
254:       "weka.core.EuclideanDistance",
255:       "weka.core.Range",
256:       "weka.core.AbstractInstance",
257:       "weka.core.SparseInstance",
258:       "weka.core.BinarySparseInstance",
259:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
260:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
261:       "weka.core.stemmers.LovinsStemmer",
262:       "weka.core.stemmers.IteratedLovinsStemmer",
263:       "weka.core.TechnicalInformation",
264:       "weka.core.TechnicalInformation$Type",
265:       "weka.core.TechnicalInformation$Field",
266:       "weka.core.neighboursearch.balltrees.BallNode",
267:       "weka.core.SerializedObject",
268:       "weka.core.DenseInstance",
269:       "weka.core.Attribute",
270:       "weka.core.ProtectedProperties",
271:       "weka.classifiers.RandomizableClassifier",
272:       "weka.core.Tag",
273:       "weka.classifiers.functions.SGDText",
274:       "weka.core.Capabilities",
275:       "org.pentaho.packageManagement.PackageManager",
276:       "org.pentaho.packageManagement.DefaultPackageManager",
277:       "weka.core.Version",
278:       "weka.core.Environment",
279:       "weka.core.WekaPackageManager",
280:       "weka.attributeSelection.ASEvaluation",
281:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
282:       "weka.attributeSelection.PrincipalComponents",
283:       "weka.core.tokenizers.AlphabeticTokenizer",
284:       "weka.filters.Filter",
285:       "weka.filters.supervised.attribute.Discretize",
286:       "weka.core.RevisionUtils",
287:       "weka.classifiers.SingleClassifierEnhancer",
288:       "weka.classifiers.misc.InputMappedClassifier",
289:       "weka.classifiers.rules.ZeroR",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedDatasetException",
293:       "weka.classifiers.bayes.BayesNet",
294:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
295:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
296:       "weka.classifiers.bayes.net.search.local.K2",
297:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
298:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
299:       "weka.core.neighboursearch.CoverTree",
300:       "weka.core.stemmers.SnowballStemmer",
301:       "weka.core.stemmers.Stemming",
302:       "weka.classifiers.Evaluation",
303:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
304:       "weka.classifiers.meta.CostSensitiveClassifier",
305:       "weka.classifiers.CostMatrix",
306:       "weka.classifiers.lazy.IBk",
307:       "weka.core.Stopwords",
308:       "weka.classifiers.bayes.NaiveBayes",
309:       "weka.classifiers.IteratedSingleClassifierEnhancer",
310:       "weka.classifiers.RandomizableIteratedSingleClassifierEnhancer",
311:       "weka.classifiers.meta.LogitBoost",
312:       "weka.classifiers.trees.DecisionStump",
313:       "weka.classifiers.bayes.net.BIFReader",
314:       "weka.classifiers.MultipleClassifiersCombiner",
315:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
316:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
317:       "weka.classifiers.meta.Stacking",
318:       "weka.classifiers.ParallelIteratedSingleClassifierEnhancer",
319:       "weka.classifiers.RandomizableParallelIteratedSingleClassifierEnhancer",
320:       "weka.classifiers.meta.Bagging",
321:       "weka.classifiers.trees.REPTree",
322:       "weka.core.neighboursearch.KDTree",
323:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
324:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
325:       "weka.core.FindWithCapabilities",
326:       "weka.core.SingleIndex",
327:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
328:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
329:       "weka.estimators.Estimator",
330:       "weka.estimators.DiscreteEstimator",
331:       "weka.attributeSelection.CfsSubsetEval",
332:       "weka.core.neighboursearch.BallTree",
333:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
334:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
335:       "weka.core.neighboursearch.balltrees.BallSplitter",
336:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
337:       "weka.classifiers.trees.RandomTree",
338:       "weka.attributeSelection.ReliefFAttributeEval",
339:       "weka.classifiers.bayes.NaiveBayesMultinomial",
340:       "weka.core.ClassDiscovery",
341:       "weka.core.WekaEnumeration",
342:       "weka.core.Attribute$1",
343:       "weka.classifiers.functions.supportVector.Kernel",
344:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
345:       "weka.classifiers.misc.SerializedClassifier",
346:       "weka.core.Javadoc",
347:       "weka.core.GlobalInfoJavadoc",
348:       "weka.classifiers.meta.CVParameterSelection",
349:       "weka.core.FastVector",
350:       "weka.classifiers.lazy.LWL",
351:       "weka.classifiers.meta.MultiClassClassifier",
352:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
353:       "weka.classifiers.functions.Logistic",
354:       "weka.core.Check",
355:       "weka.core.CheckOptionHandler",
356:       "weka.classifiers.rules.PART",
357:       "weka.classifiers.rules.part.MakeDecList",
358:       "weka.core.CheckGOE",
359:       "weka.core.MinkowskiDistance",
360:       "weka.core.ClassCache",
361:       "weka.core.AllJavadoc",
362:       "weka.core.TechnicalInformationHandlerJavadoc",
363:       "weka.classifiers.functions.SimpleLinearRegression",
364:       "weka.core.WekaException",
365:       "weka.core.UnsupportedAttributeTypeException",
366:       "weka.core.ChebyshevDistance",
367:       "weka.core.ListOptions",
368:       "weka.core.UnassignedClassException"
369:     );
370:   }
371: }

[MASTER] 14:00:38.166 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.LNormTipText();
naiveBayesMultinomialText0.stemmerTipText();
File file0 = MockFile.createTempFile("w**1hOOM>", "-W <classname>");
MockFile mockFile0 = new MockFile("-W <classname>", "The LNorm to use for document length normalization.");
FileSystemHandling.shouldAllThrowIOExceptions();
file0.setExecutable(false, false);
mockFile0.setReadable(false, false);
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[7];
stringArray0[0] = "w**1hOOM>";
stringArray0[1] = "The LNorm to use for document length normalization.";
stringArray0[2] = "-W <classname>";
stringArray0[3] = "-W <classname>";
stringArray0[4] = "The stemming algorithm to use on the words.";
stringArray0[5] = "The stemming algorithm to use on the words.";
stringArray0[6] = "The stemming algorithm to use on the words.";
naiveBayesMultinomialText0.setOptions(stringArray0);
SimpleLinearRegression simpleLinearRegression0 = new SimpleLinearRegression();
Capabilities capabilities0 = simpleLinearRegression0.getCapabilities();
TestInstances testInstances0 = TestInstances.forCapabilities(capabilities0);
Instances instances0 = testInstances0.generate("7$@!b");
naiveBayesMultinomialText0.buildClassifier(instances0);

[MASTER] 14:00:40.223 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 14:00:40.291 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
[MASTER] 14:01:02.225 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14956
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1000
* Starting evolution
* Search finished after 125s and 11 generations, 15615 statements, best individual has fitness: 3744.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 217
* Number of covered goals: 176
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 428
* Number of covered goals: 246
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 260
* Number of covered goals: 211
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 428
* Number of covered goals: 242
* Generated 56 tests with total length 1202
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 67%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14961
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:11:37.165 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:11:37.182 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:11:37.183 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:11:37.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:11:37.340 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:11:37.354 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1000
* Starting evolution
[MASTER] 14:11:56.637 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.filters.unsupervised.attribute.Discretize.setInvertSelection(Z)V
[MASTER] 14:11:56.638 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.filters.unsupervised.attribute.Discretize.setInvertSelection(Z)V
[MASTER] 14:11:56.639 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.filters.unsupervised.attribute.Discretize.setInvertSelection(Z)V: root-Branch in context: weka.filters.unsupervised.attribute.Discretize:setInvertSelection(Z)V
* Search finished after 122s and 48 generations, 34185 statements, best individual has fitness: 9256.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 370
* Number of covered goals: 150
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 242
* Number of covered goals: 62
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 713
* Number of covered goals: 189
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 72
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 45
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 242
* Number of covered goals: 62
* Generated 48 tests with total length 884
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 14:15:10.300 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:15:10.839 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14956
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14961
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:20:51.292 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:20:51.304 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:20:51.305 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:20:54.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:20:55.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:20:55.338 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
[MASTER] 14:20:57.944 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:20:57.971 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:20:57.971 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:20:57.988 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1000
* Starting evolution
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1000
* Starting evolution
[MASTER] 14:21:04.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.NominalAntd.<init>(Lweka/classifiers/rules/JRip;Lweka/core/Attribute;)V
[MASTER] 14:21:05.990 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 14:21:14.783 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 412
[MASTER] 14:21:14.783 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 413
[MASTER] 14:21:14.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 414
[MASTER] 14:21:14.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 415
[MASTER] 14:21:14.785 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 416
[MASTER] 14:21:14.785 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 417
[MASTER] 14:21:14.786 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 419
[MASTER] 14:21:14.786 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 422
[MASTER] 14:21:14.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 425
[MASTER] 14:21:14.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 428
[MASTER] 14:21:14.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 429
[MASTER] 14:21:14.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: Line 431
[MASTER] 14:21:14.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: Line 491
[MASTER] 14:21:14.791 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: root-Branch
[MASTER] 14:21:14.793 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I93 Branch 7 IFEQ L419 - true
[MASTER] 14:21:14.793 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I105 Branch 8 IFNE L422 - true
[MASTER] 14:21:14.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I117 Branch 9 IFNE L425 - true
[MASTER] 14:21:14.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I130 Branch 10 IF_ICMPGE L428 - true
[MASTER] 14:21:14.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I130 Branch 10 IF_ICMPGE L428 - false
[MASTER] 14:21:14.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 125: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> 0
[MASTER] 14:21:14.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 126: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> 1
[MASTER] 14:21:14.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 127: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> -1
[MASTER] 14:21:14.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 128: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> 10
[MASTER] 14:21:14.798 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 129: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:412 - ReplaceConstant - 11 -> 12
[MASTER] 14:21:14.798 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 130: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:413 - ReplaceConstant - 0 -> 1
[MASTER] 14:21:14.798 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 131: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp Negation of current
[MASTER] 14:21:14.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 132: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp IINC 1 current
[MASTER] 14:21:14.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 133: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp IINC -1 current
[MASTER] 14:21:14.800 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 134: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - ReplaceConstant - -F -> 
[MASTER] 14:21:14.800 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 135: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp Negation of current
[MASTER] 14:21:14.801 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 136: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp IINC 1 current
[MASTER] 14:21:14.802 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 137: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp IINC -1 current
[MASTER] 14:21:14.803 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 138: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp Negation
[MASTER] 14:21:14.803 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 139: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp +1
[MASTER] 14:21:14.804 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 140: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:414 - InsertUnaryOp -1
[MASTER] 14:21:14.804 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 141: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp Negation of current
[MASTER] 14:21:14.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 142: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp IINC 1 current
[MASTER] 14:21:14.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 143: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp IINC -1 current
[MASTER] 14:21:14.805 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 144: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - ReplaceConstant - -N -> 
[MASTER] 14:21:14.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 145: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp Negation of current
[MASTER] 14:21:14.806 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 146: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp IINC 1 current
[MASTER] 14:21:14.807 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 147: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp IINC -1 current
[MASTER] 14:21:14.808 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 148: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:415 - InsertUnaryOp Negation
[MASTER] 14:21:14.808 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 149: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp Negation of current
[MASTER] 14:21:14.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 150: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp IINC 1 current
[MASTER] 14:21:14.809 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 151: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp IINC -1 current
[MASTER] 14:21:14.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 152: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - ReplaceConstant - -O -> 
[MASTER] 14:21:14.810 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 153: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp Negation of current
[MASTER] 14:21:14.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 154: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp IINC 1 current
[MASTER] 14:21:14.811 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 155: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp IINC -1 current
[MASTER] 14:21:14.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 156: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp Negation
[MASTER] 14:21:14.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 157: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp +1
[MASTER] 14:21:14.812 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 158: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:416 - InsertUnaryOp -1
[MASTER] 14:21:14.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 159: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp Negation of current
[MASTER] 14:21:14.813 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 160: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp IINC 1 current
[MASTER] 14:21:14.814 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 161: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp IINC -1 current
[MASTER] 14:21:14.814 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 162: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - ReplaceConstant - -S -> 
[MASTER] 14:21:14.815 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 163: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp Negation of current
[MASTER] 14:21:14.815 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 164: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp IINC 1 current
[MASTER] 14:21:14.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 165: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp IINC -1 current
[MASTER] 14:21:14.816 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 166: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - ReplaceVariable m_Seed -> serialVersionUID
[MASTER] 14:21:14.817 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 167: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:417 - InsertUnaryOp Negation
[MASTER] 14:21:14.817 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 168: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:419 - InsertUnaryOp Negation
[MASTER] 14:21:14.817 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 169: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:419 - ReplaceComparisonOperator == -> !=
[MASTER] 14:21:14.818 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 174: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:422 - InsertUnaryOp Negation
[MASTER] 14:21:14.819 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 175: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:422 - ReplaceComparisonOperator != -> ==
[MASTER] 14:21:14.819 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 194: weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;:491 - ReplaceConstant - The minimum total weight of the instances in a rule. -> 
[MASTER] 14:21:14.821 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 14:21:14.823 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;:NonEmptyArray
[MASTER] 14:21:14.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;
[MASTER] 14:21:14.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;
[MASTER] 14:21:14.826 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;
[MASTER] 14:21:14.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;
[MASTER] 14:21:14.828 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:minNoTipText()Ljava/lang/String;
[MASTER] 14:21:14.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I117 Branch 9 IFNE L425 - true in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 14:21:14.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I93 Branch 7 IFEQ L419 - true in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 14:21:14.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I105 Branch 8 IFNE L422 - true in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 14:21:14.831 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I130 Branch 10 IF_ICMPGE L428 - true in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 14:21:14.832 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptions()[Ljava/lang/String;: I130 Branch 10 IF_ICMPGE L428 - false in context: weka.classifiers.rules.JRip:getOptions()[Ljava/lang/String;
[MASTER] 14:21:16.748 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptimizations()I: Line 563
[MASTER] 14:21:16.764 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.getOptimizations()I: root-Branch
[MASTER] 14:21:16.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 206: weka.classifiers.rules.JRip.getOptimizations()I:563 - InsertUnaryOp Negation
[MASTER] 14:21:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 207: weka.classifiers.rules.JRip.getOptimizations()I:563 - InsertUnaryOp +1
[MASTER] 14:21:16.767 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 208: weka.classifiers.rules.JRip.getOptimizations()I:563 - InsertUnaryOp -1
[MASTER] 14:21:16.769 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.getOptimizations()I:Positive
[MASTER] 14:21:16.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.getOptimizations()I
[MASTER] 14:21:16.772 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.getOptimizations()I
[MASTER] 14:21:16.773 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.getOptimizations()I: root-Branch in context: weka.classifiers.rules.JRip:getOptimizations()I
[MASTER] 14:21:22.729 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.main([Ljava/lang/String;)V: Line 2066
[MASTER] 14:21:22.730 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.main([Ljava/lang/String;)V: Line 2067
[MASTER] 14:21:22.732 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.main([Ljava/lang/String;)V: root-Branch
[MASTER] 14:21:22.764 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.main([Ljava/lang/String;)V
[MASTER] 14:21:22.766 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.main([Ljava/lang/String;)V
[MASTER] 14:21:22.768 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.main([Ljava/lang/String;)V: root-Branch in context: weka.classifiers.rules.JRip:main([Ljava/lang/String;)V
* Search finished after 123s and 19 generations, 15087 statements, best individual has fitness: 13784.0
* Search finished after 123s and 32 generations, 25544 statements, best individual has fitness: 16704.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage of criterion LINE: 33%
* Total number of goals: 705
* Number of covered goals: 235
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 416
* Number of covered goals: 94
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 48%
* Total number of goals: 993
* Number of covered goals: 472
* Coverage analysis for criterion OUTPUT
* Generated 16 tests with total length 272
* Resulting test suite's coverage: 17% (average coverage for all fitness functions)
* Generating assertions
* Coverage of criterion OUTPUT: 26%
* Total number of goals: 93
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 72
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 72
* Number of covered goals: 67
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 92
* Generated 49 tests with total length 972
* Resulting test suite's coverage: 38% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 14956
* Connecting to master process on port 14953
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:25:39.969 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:25:39.992 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:25:39.993 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:25:40.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1000
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:26:02.109 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:26:02.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:26:02.125 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:26:03.564 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:26:04.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:26:04.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:26:08.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:26:08.685 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:26:08.685 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:26:08.686 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:26:08.686 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:26:08.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:26:08.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:26:08.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:26:08.689 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:26:08.838 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 14:26:08.857 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1000
* Starting evolution
[MASTER] 14:26:32.541 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 14:26:35.180 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: Line 3603
[MASTER] 14:26:35.182 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true
[MASTER] 14:26:35.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: I427 Branch 352 IFEQ L3587 - true
[MASTER] 14:26:35.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 856: weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;:1574 - ReplaceComparisonOperator == -> -2
[MASTER] 14:26:35.188 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.handleCostOption(Ljava/lang/String;I)Lweka/classifiers/CostMatrix;: I6 Branch 166 IFEQ L1574 - true in context: 
[MASTER] 14:26:35.188 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.Evaluation.makeOptionString(Lweka/classifiers/Classifier;Z)Ljava/lang/String;: I427 Branch 352 IFEQ L3587 - true in context: 
[MASTER] 14:27:30.561 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 130s and 3 generations, 3845 statements, best individual has fitness: 7296.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 647
* Number of covered goals: 553
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 441
* Number of covered goals: 321
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 71%
* Total number of goals: 678
* Number of covered goals: 484
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 244
* Number of covered goals: 45
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 56%
* Total number of goals: 124
* Number of covered goals: 70
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 56%
* Total number of goals: 124
* Number of covered goals: 70
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 57%
* Total number of goals: 441
* Number of covered goals: 250
* Generated 63 tests with total length 1270
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 17 generations, 11187 statements, best individual has fitness: 23448.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 1378
* Number of covered goals: 436
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 20%
* Total number of goals: 809
* Number of covered goals: 165
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 25%
* Total number of goals: 424
* Number of covered goals: 108
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 12%
* Total number of goals: 278
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 51%
* Total number of goals: 103
* Number of covered goals: 53
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 51%
* Total number of goals: 103
* Number of covered goals: 53
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 17%
* Total number of goals: 809
* Number of covered goals: 137
* Generated 45 tests with total length 947
* Resulting test suite's coverage: 25% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
[MASTER] 14:31:51.042 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 14:31:51.151 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 14:31:51.338 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 14:31:51.338 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 20%
[MASTER] 14:36:05.318 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 14:36:16.101 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ArrayIndexOutOfBoundsException: 0
[MASTER] 14:36:16.102 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2126);
resultMatrixLatex0.LOSS_STRING = "";
String[][] stringArray0 = new String[4][0];
String[] stringArray1 = new String[3];
stringArray1[0] = " ";
stringArray1[1] = "";
stringArray1[2] = "$circ$";
stringArray0[0] = stringArray1;
String[] stringArray2 = new String[1];
stringArray2[0] = "";
stringArray0[1] = stringArray2;
String[] stringArray3 = new String[7];
stringArray3[0] = "";
stringArray3[1] = " ";
stringArray3[2] = "(";
stringArray3[3] = " ";
stringArray3[4] = "(";
stringArray3[5] = "!]}?z.{P(%aU";
stringArray3[6] = ")";
stringArray0[2] = stringArray3;
String[] stringArray4 = new String[2];
stringArray4[0] = "$circ$";
stringArray4[1] = "";
stringArray0[3] = stringArray4;
resultMatrixLatex0.getColSize(stringArray0, 2126);
resultMatrixLatex0.isMean(0);
ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
resultMatrixSignificance0.toStringKey();
resultMatrixSignificance0.LOSS_STRING = "$circ$";
resultMatrixLatex0.setColName(1, "(");
resultMatrixSignificance0.toStringMatrix();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1000/107_weka/evosuite-tests
* Done!

* Computation finished
