* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.encodings.EncodingFactory
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 20194
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.encodings.EncodingFactory
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/encodings/EncodingFactory.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1003
* Starting evolution
* Search finished after 125s and 11 generations, 9156 statements, best individual has fitness: 1264.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 242
* Number of covered goals: 209
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 195
* Number of covered goals: 169
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 387
* Number of covered goals: 336
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 25
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 195
* Number of covered goals: 161
* Generated 68 tests with total length 891
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
[MASTER] 16:14:45.020 [logback-2] ERROR JUnitAnalyzer - Cannot create tmp dir: /tmp/EvoSuite_82_1575389685020
[MASTER] 16:14:45.020 [logback-2] ERROR JUnitAnalyzer - Failed to create tmp dir
* Writing JUnit test case 'EncodingFactory_ESTest' to /home/ubuntu/termite/qmosa/tests/s1003/110_firebird/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBProcedureCall
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.firebirdsql.jdbc.FBCachedFetcher
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 20192
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/110_firebird/evosuite-files/evosuite.properties
* Connecting to master process on port 20198
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBProcedureCall
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/jdbc/FBProcedureCall.java
[MASTER] 16:29:47.308 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:29:47.344 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:29:47.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:29:47.654 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1003
* Starting evolution
[MASTER] 16:29:48.542 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:29:48.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:29:48.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:29:49.808 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 16:29:49.823 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 16:29:49.823 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 16:29:49.993 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 16:29:49.994 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 16:29:49.995 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 16:29:49.996 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 16:29:50.000 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 16:29:50.001 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 16:29:50.338 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 16:29:50.533 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.firebirdsql.jdbc.FBCachedFetcher
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/110_firebird/src/main/java/org/firebirdsql/jdbc/FBCachedFetcher.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1003
* Starting evolution
[MASTER] 16:29:59.233 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.<init>(Ljava/util/List;Lorg/firebirdsql/jdbc/FBObjectListener$FetcherListener;)V
[MASTER] 16:29:59.233 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.afterLast()V
[MASTER] 16:29:59.240 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.isBeforeFirst()Z
[MASTER] 16:29:59.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.deleteRow()V
[MASTER] 16:29:59.241 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.relative(I)Z
[MASTER] 16:29:59.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.isEmpty()Z
[MASTER] 16:29:59.242 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.firebirdsql.jdbc.FBCachedFetcher.next()Z
[MASTER] 16:29:59.243 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.<init>(Ljava/util/List;Lorg/firebirdsql/jdbc/FBObjectListener$FetcherListener;)V
[MASTER] 16:29:59.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.afterLast()V
[MASTER] 16:29:59.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.isBeforeFirst()Z
[MASTER] 16:29:59.250 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.deleteRow()V
[MASTER] 16:29:59.250 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.relative(I)Z
[MASTER] 16:29:59.250 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.isEmpty()Z
[MASTER] 16:29:59.250 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.firebirdsql.jdbc.FBCachedFetcher.next()Z
[MASTER] 16:30:46.360 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 122s and 23 generations, 18849 statements, best individual has fitness: 856.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 117
* Number of covered goals: 110
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 98
* Number of covered goals: 81
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 347
* Number of covered goals: 310
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 70
* Number of covered goals: 43
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 98
* Number of covered goals: 81
* Generated 50 tests with total length 673
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 122s and 39 generations, 36630 statements, best individual has fitness: 1776.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 158
* Number of covered goals: 98
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 50%
* Total number of goals: 118
* Number of covered goals: 59
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 347
* Number of covered goals: 325
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 75%
* Total number of goals: 28
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 118
* Number of covered goals: 45
* Generated 39 tests with total length 1039
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
[MASTER] 16:32:20.344 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.LocalGDSImpl: no jaybird22_x64 in java.library.path
[MASTER] 16:32:20.663 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.JniGDSImpl: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 16:32:20.689 [logback-2] ERROR ClassStateSupport - Could not initialize org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl: org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 16:32:20.727 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
[MASTER] 16:32:36.041 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: java.lang.NoClassDefFoundError: Could not initialize class org.firebirdsql.gds.impl.jni.JniGDSImpl
* Writing JUnit test case 'FBCachedFetcher_ESTest' to /home/ubuntu/termite/qmosa/tests/s1003/110_firebird/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 65%
* Compiling and checking tests
* Writing JUnit test case 'FBProcedureCall_ESTest' to /home/ubuntu/termite/qmosa/tests/s1003/110_firebird/evosuite-tests
* Done!

* Computation finished
