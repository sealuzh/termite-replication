* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: Newzgrabber.Base64Decoder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/99_newzgrabber/evosuite-files/evosuite.properties
* Connecting to master process on port 11925
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:24:51.027 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:24:51.050 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:24:51.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:24:53.057 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:24:53.151 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:24:53.153 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:24:58.700 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 07:24:58.916 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 07:24:58.917 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 07:24:58.917 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 07:24:58.918 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 07:24:58.918 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 07:24:58.919 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 07:24:58.939 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 07:24:58.940 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 07:24:59.162 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class Newzgrabber.Base64Decoder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/99_newzgrabber/src/main/java/Newzgrabber/Base64Decoder.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1023
* Starting evolution
[MASTER] 07:25:39.154 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.decodeStream()V: Line 20
[MASTER] 07:25:39.154 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.decodeStream()V: Line 21
[MASTER] 07:25:39.154 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Newzgrabber.Base64Decoder.decodeStream()V: Line 23
[MASTER] 07:25:39.154 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 0: Newzgrabber.Base64Decoder.decodeStream()V:21 - InsertUnaryOp Negation
[MASTER] 07:25:39.155 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1: Newzgrabber.Base64Decoder.decodeStream()V:21 - ReplaceComparisonOperator == -> !=
[MASTER] 07:25:39.155 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] Newzgrabber.Base64Decoder.decodeStream()V
[MASTER] 07:25:39.155 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] Newzgrabber.Base64Decoder.decodeStream()V
[MASTER] 07:25:39.156 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch Newzgrabber.Base64Decoder.decodeStream()V: I7 Branch 1 IFEQ L21 - true in context: Newzgrabber.Base64Decoder:decodeStream()V
[MASTER] 07:25:52.143 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 123s and 24 generations, 23830 statements, best individual has fitness: 464.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 76
* Number of covered goals: 56
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 59
* Number of covered goals: 43
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 1
* Number of covered goals: 1
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 69
* Number of covered goals: 63
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 59
* Number of covered goals: 43
* Generated 5 tests with total length 120
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
[MASTER] 07:27:32.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-19954> but was:<-19928>
[MASTER] 07:27:32.530 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockPrintStream mockPrintStream0 = new MockPrintStream("7kBjC3^W YO>;VL");
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("7kBjC3^W YO>;VL");
FileSystemHandling.appendStringToFile(evoSuiteFile0, "Pq^-lrE#T*UsAKV'z");
mockPrintStream0.println(0.0);
mockPrintStream0.print(" elements");
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("7kBjC3^W YO>;VL");
Object[] objectArray0 = new Object[1];
objectArray0[0] = (Object) mockFileInputStream0;
PrintStream printStream0 = mockPrintStream0.format("7kBjC3^W YO>;VL", objectArray0);
Object object0 = new Object();
Locale locale0 = Locale.JAPAN;
Object object1 = new Object();
printStream0.println((long) 1632);
LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) priorityQueue0);
EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/99_newzgrabber");
FileSystemHandling.createFolder(evoSuiteFile1);
printStream0.printf(locale0, ";/t!|BTWX__e4,Oe", objectArray0);
byte[] byteArray0 = new byte[2];
objectArray0[0] = (Object) (byte)97;
byteArray0[1] = (byte)116;
mockFileInputStream0.read(byteArray0);
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
assertEquals((-19954), mockFileInputStream0.available());
assertEquals(2L, base64Decoder0.getLineCount());


[MASTER] 07:27:33.162 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-139977> but was:<-139958>
[MASTER] 07:27:33.163 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("7kBjC3^W YO>;VL", false);
MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
mockPrintStream0.print(" elements");
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("7kBjC3^W YO>;VL");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
Object[] objectArray0 = new Object[16];
PrintStream printStream0 = mockPrintStream0.format("a@o.TDD+Dw", objectArray0);
EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("7kBjC3^W YO>;VL");
FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
base64Decoder0.setBegin(true);
Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
base64Decoder0.decodeStream();
base64Decoder1.decodeStream();
mockPrintStream0.println(0.0F);
base64Decoder1.decodeStream();
base64Decoder0.decodeStream();
base64Decoder0.decodeStream();
base64Decoder1.decodeStream();
base64Decoder2.decodeStream();
Base64Decoder base64Decoder4 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
base64Decoder4.decodeStream();
Base64Decoder base64Decoder5 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
base64Decoder5.decodeStream();
base64Decoder4.decodeStream();
base64Decoder1.decodeStream();
base64Decoder0.decodeStream();
assertEquals((-139977), mockFileInputStream0.available());
assertEquals(1L, base64Decoder0.getLineCount());


[MASTER] 07:27:33.965 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-9964> but was:<-9932>
[MASTER] 07:27:33.967 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("7kBjC3^W YO>;VL", false);
MockPrintStream mockPrintStream0 = new MockPrintStream("7kBjC3^W YO>;VL");
mockPrintStream0.println(0.0);
mockPrintStream0.print(" elements");
MockFileInputStream mockFileInputStream0 = new MockFileInputStream("7kBjC3^W YO>;VL");
BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedCustomInputStream0);
BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(pushbackInputStream0, 1632);
Object[] objectArray0 = new Object[1];
objectArray0[0] = (Object) mockFileInputStream0;
PrintStream printStream0 = mockPrintStream0.format("7kBjC3^W YO>;VL", objectArray0);
Object object0 = new Object();
Locale locale0 = Locale.CANADA;
printStream0.println(2701);
Object object1 = new Object();
printStream0.println((long) 1632);
BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(pushbackInputStream0, true);
Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream2, mockFileOutputStream0);
base64Decoder0.ProgressSet = true;
byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)116;
mockFileInputStream0.read(byteArray0);
Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream2, printStream0);
base64Decoder0.decodeStream();
assertEquals((-9964), mockFileInputStream0.available());
assertEquals(3L, base64Decoder0.getLineCount());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'Base64Decoder_ESTest' to /home/ubuntu/termite/qmosa/tests/s1023/99_newzgrabber/evosuite-tests
* Done!

* Computation finished
