* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.util.FileIterator
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 19148
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:33:08.550 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:33:09.025 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:33:09.041 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:33:09.089 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.util.FileIterator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/util/FileIterator.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Search finished after 121s and 38 generations, 37757 statements, best individual has fitness: 696.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 107
* Number of covered goals: 101
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 67
* Number of covered goals: 64
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 53
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 74
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 28
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 67
* Number of covered goals: 59
* Generated 28 tests with total length 533
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 57%
* Compiling and checking tests
* Writing JUnit test case 'FileIterator_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 19147
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:43:55.854 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:43:55.855 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:43:55.860 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:43:55.893 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:43:55.900 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:43:55.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:43:56.091 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:43:56.093 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:43:56.094 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:43:56.095 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:43:56.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:43:56.097 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:43:56.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:43:56.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:43:56.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.PhdBuilder
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/assembly/consed/phd/PhdBuilder.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
* Search finished after 121s and 74 generations, 42294 statements, best individual has fitness: 240.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 93
* Number of covered goals: 86
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 27
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 47
* Number of covered goals: 43
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 16
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 27
* Number of covered goals: 22
* Generated 16 tests with total length 215
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
* Writing JUnit test case 'PhdBuilder_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.Range
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 19148
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 19153
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:03:22.856 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:03:22.868 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:03:22.870 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:03:22.967 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/residue/nt/DefaultNucleotideCodec.java
[MASTER] 02:03:23.586 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:03:23.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:03:23.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 02:03:23.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 02:03:23.653 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 02:03:23.823 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:03:23.824 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.core.Range
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/92_jcvi-javacommon/src/main/java/org/jcvi/jillion/core/Range.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 02:03:26.108 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 02:03:26.108 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1016
* Starting evolution
[MASTER] 02:03:33.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.getUngappedLength([B)J
[MASTER] 02:03:33.731 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.getNumberOfGapsUntil([BI)I
[MASTER] 02:03:33.773 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.getUngappedLength([B)J
[MASTER] 02:03:33.773 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.getNumberOfGapsUntil([BI)I
[MASTER] 02:03:33.775 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.decode([BJ)Lorg/jcvi/jillion/core/residue/nt/Nucleotide;
[MASTER] 02:03:33.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jcvi.jillion.core.residue.nt.DefaultNucleotideCodec.encode(ILjava/util/Iterator;)[B
[MASTER] 02:05:01.247 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 954
[MASTER] 02:05:01.249 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 955
[MASTER] 02:05:01.251 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 956
[MASTER] 02:05:01.253 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 957
[MASTER] 02:05:01.254 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 958
[MASTER] 02:05:01.256 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 959
[MASTER] 02:05:01.257 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: Line 960
[MASTER] 02:05:01.269 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1758
[MASTER] 02:05:01.270 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1761
[MASTER] 02:05:01.270 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1764
[MASTER] 02:05:01.270 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: Line 1765
[MASTER] 02:05:01.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 569: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:951 - ReplaceComparisonOperator >= -> ==
[MASTER] 02:05:01.347 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 578: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:956 - ReplaceComparisonOperator > -> !=
[MASTER] 02:05:01.348 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 589: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> %
[MASTER] 02:05:01.350 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 590: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> -
[MASTER] 02:05:01.351 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 591: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> *
[MASTER] 02:05:01.353 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 592: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator + -> /
[MASTER] 02:05:01.354 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 596: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> +
[MASTER] 02:05:01.355 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 597: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> %
[MASTER] 02:05:01.356 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 598: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> *
[MASTER] 02:05:01.379 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 599: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:957 - ReplaceArithmeticOperator - -> /
[MASTER] 02:05:01.380 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 616: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> %
[MASTER] 02:05:01.381 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 617: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> -
[MASTER] 02:05:01.382 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 618: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> *
[MASTER] 02:05:01.384 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 619: org.jcvi.jillion.core.Range.split(J)Ljava/util/List;:959 - ReplaceArithmeticOperator + -> /
[MASTER] 02:05:01.460 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1344: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z:1758 - ReplaceComparisonOperator != -> ==
[MASTER] 02:05:01.460 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1346: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z:1761 - ReplaceComparisonOperator != null -> = null
[MASTER] 02:05:01.460 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1348: org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z:1764 - ReplaceComparisonOperator == -> !=
[MASTER] 02:05:01.555 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: I12 Branch 104 IFNONNULL L1761 - true in context: 
[MASTER] 02:05:01.563 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I61 Branch 62 IFGT L956 - false in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 02:05:01.570 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I71 Branch 48 IFGT L810 - true in context: org.jcvi.jillion.core.Range:intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;
[MASTER] 02:05:01.573 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: I4 Branch 103 IF_ACMPNE L1758 - true in context: 
[MASTER] 02:05:01.576 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I38 Branch 61 IFGE L951 - true in context: org.jcvi.jillion.core.Range:split(J)Ljava/util/List;
[MASTER] 02:05:01.585 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.equals(Ljava/lang/Object;)Z: I23 Branch 105 IF_ACMPEQ L1764 - false in context: 
* Search finished after 123s and 16 generations, 11462 statements, best individual has fitness: 592.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 131
* Number of covered goals: 128
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 74
* Number of covered goals: 69
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 469
* Number of covered goals: 451
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 52
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 83%
* Total number of goals: 18
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 74
* Number of covered goals: 57
* Search finished after 128s and 8 generations, 4356 statements, best individual has fitness: 10312.0
* Generated 61 tests with total length 1042
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 54%
* Total number of goals: 632
* Number of covered goals: 343
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 426
* Number of covered goals: 229
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 45%
* Total number of goals: 802
* Number of covered goals: 363
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 77
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 37%
* Total number of goals: 107
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 426
* Number of covered goals: 225
* Generated 69 tests with total length 1024
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Resulting test suite's mutation score: 64%
* Compiling and checking tests
[MASTER] 02:07:39.360 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775808 would make range [2022 - ? ] beyond max allowed end offset
[MASTER] 02:07:39.361 [logback-1] WARN  JUnitAnalyzer - Failing test:
 long long0 = (-9223372036854775808L);
Range range0 = Range.of((-9223372036854775808L));
Range range1 = Range.of(0L);
range0.intersection(range1);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
range0.getBegin(range_CoordinateSystem0);
Range.of(255L, 255L);
long long1 = 2022L;
Range.of(2022L, (-9223372036854775808L));

[MASTER] 02:07:40.240 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<1>
[MASTER] 02:07:40.242 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.ofLength(2022L);
Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
range0.forEach(consumer0);
Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
range0.getEnd(range_CoordinateSystem0);
range0.getLength();
range0.getLength();
Consumer<Long> consumer1 = (Consumer<Long>) mock(Consumer.class, new ViolatedAssumptionAnswer());
range0.forEach(consumer1);
Range range1 = Range.of((-1L), 1916L);
Range range2 = Range.of(2022L);
List<Range> list0 = range2.complement(range1);
List<Range> list1 = range0.complementFrom(list0);
assertTrue(list0.contains(range2));
assertTrue(list1.contains(range2));
assertEquals(2, list1.size());


[MASTER] 02:07:41.202 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.IndexOutOfBoundsException: given length -9223372036854775808 would make range [4141 - ? ] beyond max allowed end offset
[MASTER] 02:07:41.202 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(4141L, 4141L);
range0.spliterator();
range0.endsBefore(range0);
long long0 = (-9223372036854775808L);
Range range1 = Range.of((-9223372036854775808L), (-9223372036854775808L));
range1.endsBefore(range0);
Range.ofLength(1798L);
range1.complement(range0);

[MASTER] 02:07:41.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 02:07:41.357 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Range range0 = Range.of(9223372036854775807L);
Range range1 = Range.of(9223372036854775807L, 9223372036854775807L);
Range range2 = range0.intersection(range1);
range0.endsBefore(range2);
Range range3 = Range.ofLength(9223372036854775807L);
List<Range> list0 = range1.complement(range2);
assertFalse(list0.contains(range0));
assertEquals(1, list0.size());

range1.iterator();
Range.of(9223372036854771700L);
range0.equals(range3);
assertFalse(range3.isEmpty());
assertSame(range0, range2);


* Writing JUnit test case 'Range_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'DefaultNucleotideCodec_ESTest' to /home/ubuntu/termite/qmosa/tests/s1016/92_jcvi-javacommon/evosuite-tests
* Done!

* Computation finished
