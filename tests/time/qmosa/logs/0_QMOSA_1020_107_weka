* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21263
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:37:29.021 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:37:29.043 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:37:29.045 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:37:29.070 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 04:37:32.768 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 04:38:17.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:38:17.008 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 121s and 29 generations, 28957 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 16 tests with total length 307
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21268
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:41:10.629 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:41:10.629 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:41:10.647 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:41:10.702 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:41:10.722 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:41:10.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 04:41:57.696 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 04:41:57.697 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 21 generations, 20058 statements, best individual has fitness: 5296.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 338
* Number of covered goals: 185
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 194
* Number of covered goals: 91
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 476
* Number of covered goals: 238
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 46%
* Total number of goals: 112
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 194
* Number of covered goals: 91
* Generated 48 tests with total length 784
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 04:46:02.247 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_12_1575434762207/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_12_1575434762207/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.java]]
[MASTER] 04:46:02.247 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:46:02.248 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:46:02.253 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 27
[MASTER] 04:46:02.254 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_12_1575434762207/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 04:46:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class NaiveBayesMultinomialText_12_tmp__ESTest extends NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding {
19: 
20:   /**
21:   //Test case number: 0
22:   /*Coverage entropy=1.0931471805599453
23:   */
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
27:       Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
28:       naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
29:       naiveBayesMultinomialText0.getUseStopList();
30:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
31:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
32:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
33:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
34:       assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
35:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_12_1575434762207/weka/classifiers/bayes/NaiveBayesMultinomialText_12_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 04:46:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.KDTree",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.AttributeLocator",
119:       "weka.core.BinarySparseInstance",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
121:       "weka.core.Summarizable",
122:       "weka.core.neighboursearch.balltrees.BallNode",
123:       "weka.core.AdditionalMeasureProducer",
124:       "org.pentaho.packageManagement.PackageManager$1",
125:       "weka.core.Drawable",
126:       "weka.core.matrix.Matrix",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.AbstractInstance",
129:       "weka.core.SelectedTag",
130:       "org.pentaho.packageManagement.DefaultPackage",
131:       "weka.core.Version",
132:       "weka.core.Tag",
133:       "weka.classifiers.AbstractClassifier",
134:       "weka.core.OptionHandler",
135:       "weka.core.WekaException",
136:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
137:       "weka.core.Range",
138:       "weka.classifiers.Classifier",
139:       "weka.core.Capabilities$Capability",
140:       "weka.core.SparseInstance",
141:       "org.pentaho.packageManagement.PackageManager",
142:       "weka.core.tokenizers.WordTokenizer",
143:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
144:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
145:       "weka.classifiers.Evaluation",
146:       "weka.classifiers.functions.supportVector.Kernel",
147:       "weka.core.WekaPackageManager",
148:       "weka.filters.SupervisedFilter",
149:       "weka.core.TechnicalInformationHandler",
150:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
151:       "weka.core.Option",
152:       "weka.classifiers.meta.CostSensitiveClassifier",
153:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
154:       "weka.core.neighboursearch.PerformanceStats",
155:       "weka.filters.Sourcable",
156:       "weka.core.Attribute",
157:       "weka.core.Stopwords",
158:       "weka.core.tokenizers.AlphabeticTokenizer",
159:       "weka.core.FastVector",
160:       "weka.core.UnassignedDatasetException",
161:       "weka.classifiers.RandomizableClassifier",
162:       "weka.classifiers.SingleClassifierEnhancer",
163:       "weka.core.RevisionUtils",
164:       "weka.core.Instance",
165:       "weka.core.ProtectedProperties",
166:       "weka.core.StringLocator",
167:       "weka.core.AttributeStats",
168:       "weka.core.WeightedInstancesHandler",
169:       "weka.core.neighboursearch.NearestNeighbourSearch",
170:       "weka.core.Randomizable",
171:       "weka.core.EuclideanDistance",
172:       "weka.core.Instances",
173:       "weka.core.UnassignedClassException",
174:       "weka.classifiers.rules.ZeroR",
175:       "weka.core.UnsupportedAttributeTypeException",
176:       "weka.core.TechnicalInformation",
177:       "weka.classifiers.Sourcable",
178:       "weka.core.RevisionHandler",
179:       "weka.classifiers.evaluation.output.prediction.PlainText",
180:       "weka.core.neighboursearch.TreePerformanceStats",
181:       "weka.core.xml.XMLSerialization",
182:       "weka.classifiers.xml.XMLClassifier",
183:       "weka.filters.Filter",
184:       "weka.filters.supervised.attribute.Discretize"
185:     );
186:   } 
187: 
188:   private static void resetClasses() {
189:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_12_tmp__ESTest_scaffolding.class.getClassLoader()); 
190: 
191:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
192:       "weka.classifiers.AbstractClassifier",
193:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
194:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
195:       "weka.core.Capabilities$Capability",
196:       "weka.core.tokenizers.Tokenizer",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.tokenizers.WordTokenizer",
199:       "weka.core.stemmers.NullStemmer",
200:       "weka.core.AbstractInstance",
201:       "weka.core.SparseInstance",
202:       "weka.core.BinarySparseInstance",
203:       "weka.core.Attribute",
204:       "weka.core.ProtectedProperties",
205:       "weka.core.Utils",
206:       "weka.core.UnassignedDatasetException",
207:       "weka.core.RevisionUtils",
208:       "weka.classifiers.Evaluation",
209:       "weka.core.Option",
210:       "weka.core.Instances",
211:       "weka.classifiers.bayes.NaiveBayes",
212:       "weka.classifiers.CostMatrix",
213:       "weka.core.Capabilities",
214:       "org.pentaho.packageManagement.PackageManager",
215:       "org.pentaho.packageManagement.DefaultPackageManager",
216:       "weka.core.Version",
217:       "weka.core.Environment",
218:       "weka.core.WekaPackageManager",
219:       "weka.core.SerializedObject",
220:       "weka.core.DenseInstance",
221:       "weka.core.neighboursearch.NearestNeighbourSearch",
222:       "weka.core.neighboursearch.CoverTree",
223:       "weka.core.NormalizableDistance",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Range",
226:       "weka.core.Stopwords",
227:       "weka.core.neighboursearch.BallTree",
228:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
229:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
230:       "weka.core.neighboursearch.balltrees.BallSplitter",
231:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
232:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
233:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
234:       "weka.core.TestInstances",
235:       "weka.attributeSelection.ASEvaluation",
236:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
237:       "weka.attributeSelection.PrincipalComponents",
238:       "weka.filters.Filter",
239:       "weka.filters.SimpleFilter",
240:       "weka.filters.SimpleStreamFilter",
241:       "weka.filters.MultiFilter",
242:       "weka.filters.AllFilter",
243:       "weka.core.tokenizers.NGramTokenizer",
244:       "weka.filters.supervised.attribute.Discretize",
245:       "weka.core.stemmers.LovinsStemmer",
246:       "weka.classifiers.trees.J48",
247:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
248:       "weka.core.neighboursearch.balltrees.BallNode",
249:       "weka.core.neighboursearch.LinearNNSearch",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.misc.InputMappedClassifier",
252:       "weka.classifiers.rules.ZeroR",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SGDText",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.K2",
260:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
261:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
262:       "weka.classifiers.functions.supportVector.Kernel",
263:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
264:       "weka.core.neighboursearch.KDTree",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.classifiers.rules.PART",
270:       "weka.core.tokenizers.AlphabeticTokenizer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.stemmers.Stemming",
273:       "weka.core.WekaEnumeration",
274:       "weka.core.Attribute$1",
275:       "weka.core.WekaException",
276:       "weka.classifiers.meta.AttributeSelectedClassifier",
277:       "weka.attributeSelection.CfsSubsetEval",
278:       "weka.attributeSelection.ASSearch",
279:       "weka.attributeSelection.BestFirst",
280:       "weka.core.converters.ArffLoader$ArffReader",
281:       "weka.classifiers.bayes.net.BIFReader",
282:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
283:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.SelectedTag",
287:       "weka.core.TechnicalInformation",
288:       "weka.core.TechnicalInformation$Type",
289:       "weka.core.TechnicalInformation$Field",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.Check",
292:       "weka.core.CheckGOE",
293:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
294:       "weka.classifiers.meta.RegressionByDiscretization",
295:       "weka.filters.unsupervised.attribute.Discretize",
296:       "weka.classifiers.trees.j48.ClassifierTree",
297:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
298:       "weka.classifiers.lazy.LWL",
299:       "weka.classifiers.trees.DecisionStump",
300:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
301:       "weka.classifiers.meta.CostSensitiveClassifier",
302:       "weka.estimators.Estimator",
303:       "weka.estimators.KernelEstimator",
304:       "weka.classifiers.bayes.NaiveBayesMultinomial",
305:       "weka.classifiers.MultipleClassifiersCombiner",
306:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Stacking",
309:       "weka.classifiers.functions.supportVector.CachedKernel",
310:       "weka.classifiers.functions.supportVector.RBFKernel",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.classifiers.functions.LinearRegression",
313:       "weka.core.CheckOptionHandler",
314:       "weka.core.ManhattanDistance",
315:       "weka.core.UnassignedClassException"
316:     );
317:   }
318: }

[MASTER] 04:46:02.254 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> map0 = naiveBayesMultinomialText0.m_probOfWordGivenClass;
naiveBayesMultinomialText0.m_probOfWordGivenClass = null;
naiveBayesMultinomialText0.getUseStopList();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(0, naiveBayesMultinomialText0.getPeriodicPruning());
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 04:46:02.531 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1575434762493/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1575434762493/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.java]]
[MASTER] 04:46:02.531 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:46:02.531 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:46:02.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:46:02.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:46:02.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 04:46:02.532 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 04:46:02.532 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1575434762493/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 04:46:02 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.BinarySparseInstance;
18: import weka.core.SparseInstance;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_18_tmp__ESTest extends NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=1.5981863871455346
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       naiveBayesMultinomialText0.reset();
34:       double[] doubleArray0 = new double[0];
35:       int[] intArray0 = new int[7];
36:       intArray0[0] = 1404;
37:       intArray0[1] = 1404;
38:       intArray0[2] = 1475;
39:       intArray0[3] = 1404;
40:       intArray0[4] = 0;
41:       intArray0[5] = 1404;
42:       intArray0[6] = 1404;
43:       SparseInstance sparseInstance0 = new SparseInstance((-3322.3), doubleArray0, intArray0, 74);
44:       BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
45:       try { 
46:         naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);
47:         fail("Expecting exception: RuntimeException");
48:       
49:       } catch(RuntimeException e) {
50:          //
51:          // DenseInstance doesn't have access to a dataset!
52:          //
53:          verifyException("weka.core.AbstractInstance", e);
54:       }
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_18_1575434762493/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 04:46:02 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.KDTree",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.AttributeLocator",
119:       "weka.core.BinarySparseInstance",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
121:       "weka.core.Summarizable",
122:       "weka.core.neighboursearch.balltrees.BallNode",
123:       "weka.core.AdditionalMeasureProducer",
124:       "org.pentaho.packageManagement.PackageManager$1",
125:       "weka.core.Drawable",
126:       "weka.core.matrix.Matrix",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.AbstractInstance",
129:       "weka.core.SelectedTag",
130:       "org.pentaho.packageManagement.DefaultPackage",
131:       "weka.core.Version",
132:       "weka.core.Tag",
133:       "weka.classifiers.AbstractClassifier",
134:       "weka.core.OptionHandler",
135:       "weka.core.WekaException",
136:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
137:       "weka.core.Range",
138:       "weka.classifiers.Classifier",
139:       "weka.core.Capabilities$Capability",
140:       "weka.core.SparseInstance",
141:       "org.pentaho.packageManagement.PackageManager",
142:       "weka.core.tokenizers.WordTokenizer",
143:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
144:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
145:       "weka.classifiers.Evaluation",
146:       "weka.classifiers.functions.supportVector.Kernel",
147:       "weka.core.WekaPackageManager",
148:       "weka.filters.SupervisedFilter",
149:       "weka.core.TechnicalInformationHandler",
150:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
151:       "weka.core.Option",
152:       "weka.classifiers.meta.CostSensitiveClassifier",
153:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
154:       "weka.core.neighboursearch.PerformanceStats",
155:       "weka.filters.Sourcable",
156:       "weka.core.Attribute",
157:       "weka.core.Stopwords",
158:       "weka.core.tokenizers.AlphabeticTokenizer",
159:       "weka.core.FastVector",
160:       "weka.core.UnassignedDatasetException",
161:       "weka.classifiers.RandomizableClassifier",
162:       "weka.classifiers.SingleClassifierEnhancer",
163:       "weka.core.RevisionUtils",
164:       "weka.core.Instance",
165:       "weka.core.ProtectedProperties",
166:       "weka.core.StringLocator",
167:       "weka.core.AttributeStats",
168:       "weka.core.WeightedInstancesHandler",
169:       "weka.core.neighboursearch.NearestNeighbourSearch",
170:       "weka.core.Randomizable",
171:       "weka.core.EuclideanDistance",
172:       "weka.core.Instances",
173:       "weka.core.UnassignedClassException",
174:       "weka.classifiers.rules.ZeroR",
175:       "weka.core.UnsupportedAttributeTypeException",
176:       "weka.core.TechnicalInformation",
177:       "weka.classifiers.Sourcable",
178:       "weka.core.RevisionHandler",
179:       "weka.classifiers.evaluation.output.prediction.PlainText",
180:       "weka.core.neighboursearch.TreePerformanceStats",
181:       "weka.core.xml.XMLSerialization",
182:       "weka.classifiers.xml.XMLClassifier",
183:       "weka.filters.Filter",
184:       "weka.filters.supervised.attribute.Discretize"
185:     );
186:   } 
187: 
188:   private static void resetClasses() {
189:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
190: 
191:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
192:       "weka.classifiers.AbstractClassifier",
193:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
194:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
195:       "weka.core.Capabilities$Capability",
196:       "weka.core.tokenizers.Tokenizer",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.tokenizers.WordTokenizer",
199:       "weka.core.stemmers.NullStemmer",
200:       "weka.core.AbstractInstance",
201:       "weka.core.SparseInstance",
202:       "weka.core.BinarySparseInstance",
203:       "weka.core.Attribute",
204:       "weka.core.ProtectedProperties",
205:       "weka.core.Utils",
206:       "weka.core.UnassignedDatasetException",
207:       "weka.core.RevisionUtils",
208:       "weka.classifiers.Evaluation",
209:       "weka.core.Option",
210:       "weka.core.Instances",
211:       "weka.classifiers.bayes.NaiveBayes",
212:       "weka.classifiers.CostMatrix",
213:       "weka.core.Capabilities",
214:       "org.pentaho.packageManagement.PackageManager",
215:       "org.pentaho.packageManagement.DefaultPackageManager",
216:       "weka.core.Version",
217:       "weka.core.Environment",
218:       "weka.core.WekaPackageManager",
219:       "weka.core.SerializedObject",
220:       "weka.core.DenseInstance",
221:       "weka.core.neighboursearch.NearestNeighbourSearch",
222:       "weka.core.neighboursearch.CoverTree",
223:       "weka.core.NormalizableDistance",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Range",
226:       "weka.core.Stopwords",
227:       "weka.core.neighboursearch.BallTree",
228:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
229:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
230:       "weka.core.neighboursearch.balltrees.BallSplitter",
231:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
232:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
233:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
234:       "weka.core.TestInstances",
235:       "weka.attributeSelection.ASEvaluation",
236:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
237:       "weka.attributeSelection.PrincipalComponents",
238:       "weka.filters.Filter",
239:       "weka.filters.SimpleFilter",
240:       "weka.filters.SimpleStreamFilter",
241:       "weka.filters.MultiFilter",
242:       "weka.filters.AllFilter",
243:       "weka.core.tokenizers.NGramTokenizer",
244:       "weka.filters.supervised.attribute.Discretize",
245:       "weka.core.stemmers.LovinsStemmer",
246:       "weka.classifiers.trees.J48",
247:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
248:       "weka.core.neighboursearch.balltrees.BallNode",
249:       "weka.core.neighboursearch.LinearNNSearch",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.misc.InputMappedClassifier",
252:       "weka.classifiers.rules.ZeroR",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SGDText",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.K2",
260:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
261:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
262:       "weka.classifiers.functions.supportVector.Kernel",
263:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
264:       "weka.core.neighboursearch.KDTree",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.classifiers.rules.PART",
270:       "weka.core.tokenizers.AlphabeticTokenizer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.stemmers.Stemming",
273:       "weka.core.WekaEnumeration",
274:       "weka.core.Attribute$1",
275:       "weka.core.WekaException",
276:       "weka.classifiers.meta.AttributeSelectedClassifier",
277:       "weka.attributeSelection.CfsSubsetEval",
278:       "weka.attributeSelection.ASSearch",
279:       "weka.attributeSelection.BestFirst",
280:       "weka.core.converters.ArffLoader$ArffReader",
281:       "weka.classifiers.bayes.net.BIFReader",
282:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
283:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.SelectedTag",
287:       "weka.core.TechnicalInformation",
288:       "weka.core.TechnicalInformation$Type",
289:       "weka.core.TechnicalInformation$Field",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.Check",
292:       "weka.core.CheckGOE",
293:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
294:       "weka.classifiers.meta.RegressionByDiscretization",
295:       "weka.filters.unsupervised.attribute.Discretize",
296:       "weka.classifiers.trees.j48.ClassifierTree",
297:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
298:       "weka.classifiers.lazy.LWL",
299:       "weka.classifiers.trees.DecisionStump",
300:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
301:       "weka.classifiers.meta.CostSensitiveClassifier",
302:       "weka.estimators.Estimator",
303:       "weka.estimators.KernelEstimator",
304:       "weka.classifiers.bayes.NaiveBayesMultinomial",
305:       "weka.classifiers.MultipleClassifiersCombiner",
306:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Stacking",
309:       "weka.classifiers.functions.supportVector.CachedKernel",
310:       "weka.classifiers.functions.supportVector.RBFKernel",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.classifiers.functions.LinearRegression",
313:       "weka.core.CheckOptionHandler",
314:       "weka.core.ManhattanDistance",
315:       "weka.core.UnassignedClassException"
316:     );
317:   }
318: }

[MASTER] 04:46:02.533 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.reset();
double[] doubleArray0 = new double[0];
int[] intArray0 = new int[7];
intArray0[0] = 1404;
intArray0[1] = 1404;
intArray0[2] = 1475;
intArray0[3] = 1404;
intArray0[4] = 0;
intArray0[5] = 1404;
intArray0[6] = 1404;
SparseInstance sparseInstance0 = new SparseInstance((-3322.3), doubleArray0, intArray0, 74);
BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(sparseInstance0);
naiveBayesMultinomialText0.distributionForInstance(binarySparseInstance0);

[MASTER] 04:46:03.459 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1575434763430/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1575434763430/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 04:46:03.459 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:46:03.459 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 04:46:03.459 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:46:03.459 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 04:46:03.459 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 04:46:03.459 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 31
[MASTER] 04:46:03.460 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1575434763430/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 04:46:03 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.HashMap;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.mock.java.io.MockFile;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.core.stemmers.NullStemmer;
18: import weka.core.tokenizers.Tokenizer;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=3.024884788669466
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
31:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
32:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
33:       naiveBayesMultinomialText0.reset();
34:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
35:       
36:       naiveBayesMultinomialText0.m_lnorm = 1.0;
37:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
38:       naiveBayesMultinomialText0.useStopListTipText();
39:       NullStemmer nullStemmer0 = new NullStemmer();
40:       naiveBayesMultinomialText0.setStemmer(nullStemmer0);
41:       naiveBayesMultinomialText0.setUseStopList(false);
42:       naiveBayesMultinomialText0.setUseStopList(false);
43:       MockFile mockFile0 = new MockFile("Pk,r_Q", "UHByWt");
44:       naiveBayesMultinomialText0.setStopwords(mockFile0);
45:       naiveBayesMultinomialText0.getStemmer();
46:       Tokenizer tokenizer0 = naiveBayesMultinomialText0.getTokenizer();
47:       naiveBayesMultinomialText0.setTokenizer(tokenizer0);
48:       naiveBayesMultinomialText0.reset();
49:       naiveBayesMultinomialText0.normTipText();
50:       naiveBayesMultinomialText0.minWordFrequencyTipText();
51:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
52:       naiveBayesMultinomialText0.getStopwords();
53:       assertEquals("If true, ignores all words that are on the stoplist.", naiveBayesMultinomialText0.useStopListTipText());
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_41_1575434763430/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 04:46:03 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.TestInstances",
90:       "weka.core.DistanceFunction",
91:       "org.pentaho.packageManagement.PackageConstraint",
92:       "org.pentaho.packageManagement.Package",
93:       "weka.core.xml.XMLBasicSerialization",
94:       "weka.classifiers.CostMatrix",
95:       "weka.filters.UnsupervisedFilter",
96:       "weka.core.logging.Logger$Level",
97:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
98:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
99:       "weka.core.DenseInstance",
100:       "weka.core.stemmers.Stemmer",
101:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
102:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
103:       "org.pentaho.packageManagement.DefaultPackageManager",
104:       "org.bounce.net.DefaultAuthenticator",
105:       "weka.core.neighboursearch.KDTree",
106:       "weka.core.stemmers.NullStemmer",
107:       "weka.classifiers.functions.SGDText",
108:       "weka.core.RelationalLocator",
109:       "weka.core.Utils",
110:       "weka.core.CustomDisplayStringProvider",
111:       "weka.core.tokenizers.Tokenizer",
112:       "weka.core.NormalizableDistance",
113:       "weka.core.NoSupportForMissingValuesException",
114:       "weka.classifiers.UpdateableClassifier",
115:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
116:       "weka.core.Copyable",
117:       "weka.core.Capabilities",
118:       "weka.core.AttributeLocator",
119:       "weka.core.BinarySparseInstance",
120:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
121:       "weka.core.Summarizable",
122:       "weka.core.neighboursearch.balltrees.BallNode",
123:       "weka.core.AdditionalMeasureProducer",
124:       "org.pentaho.packageManagement.PackageManager$1",
125:       "weka.core.Drawable",
126:       "weka.core.matrix.Matrix",
127:       "weka.core.CapabilitiesHandler",
128:       "weka.core.AbstractInstance",
129:       "weka.core.SelectedTag",
130:       "org.pentaho.packageManagement.DefaultPackage",
131:       "weka.core.Version",
132:       "weka.core.Tag",
133:       "weka.classifiers.AbstractClassifier",
134:       "weka.core.OptionHandler",
135:       "weka.core.WekaException",
136:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
137:       "weka.core.Range",
138:       "weka.classifiers.Classifier",
139:       "weka.core.Capabilities$Capability",
140:       "weka.core.SparseInstance",
141:       "org.pentaho.packageManagement.PackageManager",
142:       "weka.core.tokenizers.WordTokenizer",
143:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
144:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
145:       "weka.classifiers.Evaluation",
146:       "weka.classifiers.functions.supportVector.Kernel",
147:       "weka.core.WekaPackageManager",
148:       "weka.filters.SupervisedFilter",
149:       "weka.core.TechnicalInformationHandler",
150:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
151:       "weka.core.Option",
152:       "weka.classifiers.meta.CostSensitiveClassifier",
153:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
154:       "weka.core.neighboursearch.PerformanceStats",
155:       "weka.filters.Sourcable",
156:       "weka.core.Attribute",
157:       "weka.core.Stopwords",
158:       "weka.core.tokenizers.AlphabeticTokenizer",
159:       "weka.core.FastVector",
160:       "weka.core.UnassignedDatasetException",
161:       "weka.classifiers.RandomizableClassifier",
162:       "weka.classifiers.SingleClassifierEnhancer",
163:       "weka.core.RevisionUtils",
164:       "weka.core.Instance",
165:       "weka.core.ProtectedProperties",
166:       "weka.core.StringLocator",
167:       "weka.core.AttributeStats",
168:       "weka.core.WeightedInstancesHandler",
169:       "weka.core.neighboursearch.NearestNeighbourSearch",
170:       "weka.core.Randomizable",
171:       "weka.core.EuclideanDistance",
172:       "weka.core.Instances",
173:       "weka.core.UnassignedClassException",
174:       "weka.classifiers.rules.ZeroR",
175:       "weka.core.UnsupportedAttributeTypeException",
176:       "weka.core.TechnicalInformation",
177:       "weka.classifiers.Sourcable",
178:       "weka.core.RevisionHandler",
179:       "weka.classifiers.evaluation.output.prediction.PlainText",
180:       "weka.core.neighboursearch.TreePerformanceStats",
181:       "weka.core.xml.XMLSerialization",
182:       "weka.classifiers.xml.XMLClassifier",
183:       "weka.filters.Filter",
184:       "weka.filters.supervised.attribute.Discretize"
185:     );
186:   } 
187: 
188:   private static void resetClasses() {
189:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
190: 
191:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
192:       "weka.classifiers.AbstractClassifier",
193:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
194:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
195:       "weka.core.Capabilities$Capability",
196:       "weka.core.tokenizers.Tokenizer",
197:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
198:       "weka.core.tokenizers.WordTokenizer",
199:       "weka.core.stemmers.NullStemmer",
200:       "weka.core.AbstractInstance",
201:       "weka.core.SparseInstance",
202:       "weka.core.BinarySparseInstance",
203:       "weka.core.Attribute",
204:       "weka.core.ProtectedProperties",
205:       "weka.core.Utils",
206:       "weka.core.UnassignedDatasetException",
207:       "weka.core.RevisionUtils",
208:       "weka.classifiers.Evaluation",
209:       "weka.core.Option",
210:       "weka.core.Instances",
211:       "weka.classifiers.bayes.NaiveBayes",
212:       "weka.classifiers.CostMatrix",
213:       "weka.core.Capabilities",
214:       "org.pentaho.packageManagement.PackageManager",
215:       "org.pentaho.packageManagement.DefaultPackageManager",
216:       "weka.core.Version",
217:       "weka.core.Environment",
218:       "weka.core.WekaPackageManager",
219:       "weka.core.SerializedObject",
220:       "weka.core.DenseInstance",
221:       "weka.core.neighboursearch.NearestNeighbourSearch",
222:       "weka.core.neighboursearch.CoverTree",
223:       "weka.core.NormalizableDistance",
224:       "weka.core.EuclideanDistance",
225:       "weka.core.Range",
226:       "weka.core.Stopwords",
227:       "weka.core.neighboursearch.BallTree",
228:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
229:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
230:       "weka.core.neighboursearch.balltrees.BallSplitter",
231:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
232:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
233:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
234:       "weka.core.TestInstances",
235:       "weka.attributeSelection.ASEvaluation",
236:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
237:       "weka.attributeSelection.PrincipalComponents",
238:       "weka.filters.Filter",
239:       "weka.filters.SimpleFilter",
240:       "weka.filters.SimpleStreamFilter",
241:       "weka.filters.MultiFilter",
242:       "weka.filters.AllFilter",
243:       "weka.core.tokenizers.NGramTokenizer",
244:       "weka.filters.supervised.attribute.Discretize",
245:       "weka.core.stemmers.LovinsStemmer",
246:       "weka.classifiers.trees.J48",
247:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
248:       "weka.core.neighboursearch.balltrees.BallNode",
249:       "weka.core.neighboursearch.LinearNNSearch",
250:       "weka.classifiers.SingleClassifierEnhancer",
251:       "weka.classifiers.misc.InputMappedClassifier",
252:       "weka.classifiers.rules.ZeroR",
253:       "weka.classifiers.RandomizableClassifier",
254:       "weka.core.Tag",
255:       "weka.classifiers.functions.SGDText",
256:       "weka.classifiers.bayes.BayesNet",
257:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
259:       "weka.classifiers.bayes.net.search.local.K2",
260:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
261:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
262:       "weka.classifiers.functions.supportVector.Kernel",
263:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
264:       "weka.core.neighboursearch.KDTree",
265:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
266:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
267:       "weka.core.FindWithCapabilities",
268:       "weka.core.SingleIndex",
269:       "weka.classifiers.rules.PART",
270:       "weka.core.tokenizers.AlphabeticTokenizer",
271:       "weka.core.stemmers.IteratedLovinsStemmer",
272:       "weka.core.stemmers.Stemming",
273:       "weka.core.WekaEnumeration",
274:       "weka.core.Attribute$1",
275:       "weka.core.WekaException",
276:       "weka.classifiers.meta.AttributeSelectedClassifier",
277:       "weka.attributeSelection.CfsSubsetEval",
278:       "weka.attributeSelection.ASSearch",
279:       "weka.attributeSelection.BestFirst",
280:       "weka.core.converters.ArffLoader$ArffReader",
281:       "weka.classifiers.bayes.net.BIFReader",
282:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
283:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
284:       "weka.core.stemmers.SnowballStemmer",
285:       "weka.classifiers.misc.SerializedClassifier",
286:       "weka.core.SelectedTag",
287:       "weka.core.TechnicalInformation",
288:       "weka.core.TechnicalInformation$Type",
289:       "weka.core.TechnicalInformation$Field",
290:       "weka.classifiers.lazy.IBk",
291:       "weka.core.Check",
292:       "weka.core.CheckGOE",
293:       "weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension",
294:       "weka.classifiers.meta.RegressionByDiscretization",
295:       "weka.filters.unsupervised.attribute.Discretize",
296:       "weka.classifiers.trees.j48.ClassifierTree",
297:       "weka.classifiers.trees.j48.C45PruneableClassifierTree",
298:       "weka.classifiers.lazy.LWL",
299:       "weka.classifiers.trees.DecisionStump",
300:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
301:       "weka.classifiers.meta.CostSensitiveClassifier",
302:       "weka.estimators.Estimator",
303:       "weka.estimators.KernelEstimator",
304:       "weka.classifiers.bayes.NaiveBayesMultinomial",
305:       "weka.classifiers.MultipleClassifiersCombiner",
306:       "weka.classifiers.ParallelMultipleClassifiersCombiner",
307:       "weka.classifiers.RandomizableParallelMultipleClassifiersCombiner",
308:       "weka.classifiers.meta.Stacking",
309:       "weka.classifiers.functions.supportVector.CachedKernel",
310:       "weka.classifiers.functions.supportVector.RBFKernel",
311:       "weka.core.UnsupportedAttributeTypeException",
312:       "weka.classifiers.functions.LinearRegression",
313:       "weka.core.CheckOptionHandler",
314:       "weka.core.ManhattanDistance",
315:       "weka.core.UnassignedClassException"
316:     );
317:   }
318: }

[MASTER] 04:46:03.460 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.reset();
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);

naiveBayesMultinomialText0.m_lnorm = 1.0;
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.useStopListTipText();
NullStemmer nullStemmer0 = new NullStemmer();
naiveBayesMultinomialText0.setStemmer(nullStemmer0);
naiveBayesMultinomialText0.setUseStopList(false);
naiveBayesMultinomialText0.setUseStopList(false);
MockFile mockFile0 = new MockFile("Pk,r_Q", "UHByWt");
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.getStemmer();
Tokenizer tokenizer0 = naiveBayesMultinomialText0.getTokenizer();
naiveBayesMultinomialText0.setTokenizer(tokenizer0);
naiveBayesMultinomialText0.reset();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.getStopwords();
assertEquals("If true, ignores all words that are on the stoplist.", naiveBayesMultinomialText0.useStopListTipText());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21271
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:47:03.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:47:03.979 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:47:03.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:47:05.190 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:47:06.212 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:47:06.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:47:08.642 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 04:47:08.697 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 04:47:08.698 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 04:47:08.698 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 04:47:08.699 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 04:47:08.699 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 04:47:08.699 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 04:47:08.700 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 04:47:08.701 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 04:47:08.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 04:47:08.799 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 04:47:16.166 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 04:47:40.431 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.evaluateModelOnce(Lweka/classifiers/Classifier;Lweka/core/Instance;)D
[MASTER] 04:48:40.272 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.KBMeanInformation()D
[MASTER] 04:48:40.273 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.Evaluation.SFMeanPriorEntropy()D
[MASTER] 04:48:40.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.KBMeanInformation()D
[MASTER] 04:48:40.285 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.SFMeanPriorEntropy()D
[MASTER] 04:48:40.292 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.Evaluation.updateMargins([DID)V
* Search finished after 124s and 17 generations, 11355 statements, best individual has fitness: 19280.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 49%
* Total number of goals: 1378
* Number of covered goals: 675
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 809
* Number of covered goals: 265
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 44%
* Total number of goals: 424
* Number of covered goals: 188
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 15%
* Total number of goals: 278
* Number of covered goals: 42
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 103
* Number of covered goals: 73
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 71%
* Total number of goals: 103
* Number of covered goals: 73
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 23%
* Total number of goals: 809
* Number of covered goals: 190
* Generated 73 tests with total length 1329
* Resulting test suite's coverage: 39% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
[MASTER] 04:53:51.342 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 04:53:51.487 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:53:51.659 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 04:53:51.660 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21270
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
* Search finished after 124s and 9 generations, 13437 statements, best individual has fitness: 4040.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 76%
* Total number of goals: 217
* Number of covered goals: 165
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 428
* Number of covered goals: 226
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 260
* Number of covered goals: 223
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 52%
* Total number of goals: 428
* Number of covered goals: 224
* Generated 47 tests with total length 1108
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 70%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21264
* Connecting to master process on port 21268
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 21267
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:01:02.469 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:01:02.492 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:01:02.494 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:01:02.691 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:01:02.695 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:01:02.697 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:01:03.006 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:01:03.029 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:01:03.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:01:03.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 05:01:06.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:01:06.429 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:01:06.430 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 05:01:08.850 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:01:09.231 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:01:09.247 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1020
* Starting evolution
[MASTER] 05:01:16.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 136
[MASTER] 05:01:16.225 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 158
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 161
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 164
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 167
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 170
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 173
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 176
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 179
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 182
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 185
[MASTER] 05:01:16.226 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: Line 1075
[MASTER] 05:01:16.229 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.<init>()V: root-Branch
[MASTER] 05:01:16.246 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.<init>()V
[MASTER] 05:01:16.263 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.<init>()V
[MASTER] 05:01:16.266 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.<init>()V: root-Branch in context: weka.classifiers.rules.JRip:<init>()V
* Search finished after 122s and 35 generations, 29211 statements, best individual has fitness: 8760.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 44%
* Total number of goals: 370
* Number of covered goals: 162
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 242
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 33%
* Total number of goals: 713
* Number of covered goals: 236
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 72
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 242
* Number of covered goals: 63
* Generated 39 tests with total length 658
* Resulting test suite's coverage: 37% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 124s and 19 generations, 15678 statements, best individual has fitness: 14088.0
* Search finished after 131s and 3 generations, 3403 statements, best individual has fitness: 6512.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 705
* Number of covered goals: 219
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 21%
* Total number of goals: 416
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 993
* Number of covered goals: 458
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 93
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
[MASTER] 05:03:19.078 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 12 seconds more than allowed.
* Coverage of criterion METHOD: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 72
* Number of covered goals: 69
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 21%
* Total number of goals: 416
* Number of covered goals: 88
* Generated 57 tests with total length 1086
* Resulting test suite's coverage: 37% (average coverage for all fitness functions)
* Generating assertions
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 647
* Number of covered goals: 566
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 441
* Number of covered goals: 334
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 678
* Number of covered goals: 499
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 244
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 63%
* Total number of goals: 124
* Number of covered goals: 78
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 63%
* Total number of goals: 124
* Number of covered goals: 78
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 441
* Number of covered goals: 281
* Generated 58 tests with total length 1263
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 05:04:31.065 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 05:04:31.623 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 17%
[MASTER] 05:11:30.918 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1020/107_weka/evosuite-tests
* Done!

* Computation finished
