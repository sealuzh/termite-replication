* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20190
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20192
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaCharStream.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1003
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:33:45.365 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:33:45.411 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:33:45.412 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:33:45.444 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/JavaParserTokenManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1003
* Starting evolution
[MASTER] 16:34:29.606 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.soops.CEN4010.JMCA.JParser.JavaCharStream.ReInit(Ljava/io/Reader;)V
[MASTER] 16:34:29.610 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.ReInit(Ljava/io/Reader;)V
[MASTER] 16:34:49.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 586: com.soops.CEN4010.JMCA.JParser.JavaCharStream.BeginToken()C:173 - ReplaceComparisonOperator <= -> ==
[MASTER] 16:34:49.892 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 969: com.soops.CEN4010.JMCA.JParser.JavaCharStream.readChar()C:252 - ReplaceComparisonOperator <= -> ==
[MASTER] 16:34:49.905 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1241: com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V:378 - ReplaceArithmeticOperator + -> -
[MASTER] 16:34:49.906 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1242: com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V:378 - ReplaceArithmeticOperator + -> *
[MASTER] 16:34:49.912 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1267: com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V:379 - ReplaceArithmeticOperator - -> +
[MASTER] 16:34:49.914 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1269: com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V:379 - ReplaceArithmeticOperator - -> *
[MASTER] 16:34:49.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 1272: com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V:379 - ReplaceComparisonOperator >= -> ==
[MASTER] 16:34:49.928 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V
[MASTER] 16:34:49.950 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.UpdateLineColumn(C)V
[MASTER] 16:34:49.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V
[MASTER] 16:34:49.964 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.soops.CEN4010.JMCA.JParser.JavaCharStream.backup(I)V: I17 Branch 89 IFGE L379 - true in context: com.soops.CEN4010.JMCA.JParser.JavaCharStream:backup(I)V
* Search finished after 124s and 8 generations, 6086 statements, best individual has fitness: 3600.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 239
* Number of covered goals: 177
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 72%
* Total number of goals: 216
* Number of covered goals: 155
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 75%
* Total number of goals: 974
* Number of covered goals: 728
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 36
* Number of covered goals: 15
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 216
* Number of covered goals: 155
* Generated 77 tests with total length 1247
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 125s and 6 generations, 3673 statements, best individual has fitness: 25040.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 26%
* Total number of goals: 981
* Number of covered goals: 257
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 39%
* Total number of goals: 1707
* Number of covered goals: 664
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 434
* Number of covered goals: 116
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 39%
* Total number of goals: 1707
* Number of covered goals: 664
* Generated 24 tests with total length 329
* Resulting test suite's coverage: 36% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 16:36:23.970 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<6> but was:<0>
[MASTER] 16:36:23.971 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("6r4brOh@");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1988, 1853, 79);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
MockPrintStream mockPrintStream0 = new MockPrintStream("6r4brOh@");
Token token0 = javaParserTokenManager0.getNextToken();
byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte)113;
byteArray0[1] = (byte)4;
StringReader stringReader1 = new StringReader("6r4brOh@");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 22, 66, 1988);
javaCharStream1.adjustBeginLineColumn((byte)113, (-671));
javaParserTokenManager0.SkipLexicalActions(token0);
Token.GTToken token_GTToken0 = new Token.GTToken();
Token.GTToken token_GTToken1 = new Token.GTToken();
Token token1 = token_GTToken1.specialToken;
JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
javaParserTokenManager0.SkipLexicalActions((Token) null);
assertEquals(6, javaCharStream0.bufpos);
assertEquals(1859, javaCharStream0.getColumn());


[MASTER] 16:36:24.118 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<7> but was:<6>
[MASTER] 16:36:24.119 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StringReader stringReader0 = new StringReader("6r4brOh@");
JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1988, 1853, 79);
JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
MockPrintStream mockPrintStream0 = new MockPrintStream("6r4brOh@");
Token token0 = javaParserTokenManager0.getNextToken();
byte[] byteArray0 = new byte[2];
token0.endLine = 0;
token0.beginColumn = (-1615);
byteArray0[0] = (byte)113;
byteArray0[1] = (byte)4;
FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
StringReader stringReader1 = new StringReader("6r4brOh@");
JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 22, 1853, 0);
javaParserTokenManager0.jjFillToken();
javaParserTokenManager0.getNextToken();
assertEquals(7, javaCharStream0.bufpos);
assertEquals(1860, javaCharStream0.getBeginColumn());


* Writing JUnit test case 'JavaParserTokenManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1003/19_jmca/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'JavaCharStream_ESTest' to /home/ubuntu/termite/qmosa/tests/s1003/19_jmca/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.SimpleNode
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20190
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:42:40.248 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:42:40.270 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:42:40.271 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:42:40.791 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.SimpleNode
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/19_jmca/src/main/java/com/soops/CEN4010/JMCA/JParser/SimpleNode.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1003
* Starting evolution
* Search finished after 122s and 10 generations, 8787 statements, best individual has fitness: 488.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 62
* Number of covered goals: 55
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 67
* Number of covered goals: 54
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 121
* Number of covered goals: 101
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 67
* Number of covered goals: 54
* Generated 26 tests with total length 543
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 16:45:13.090 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test12 -> class java.lang.StackOverflowError: null
[MASTER] 16:45:13.092 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 27;
SimpleNode simpleNode0 = new SimpleNode(27);
Node[] nodeArray0 = new Node[4];
nodeArray0[1] = (Node) simpleNode0;
nodeArray0[3] = (Node) simpleNode0;
simpleNode0.children = nodeArray0;
StringWriter stringWriter0 = new StringWriter();
simpleNode0.dump("", stringWriter0);

* Writing JUnit test case 'SimpleNode_ESTest' to /home/ubuntu/termite/qmosa/tests/s1003/19_jmca/evosuite-tests
* Done!

* Computation finished
