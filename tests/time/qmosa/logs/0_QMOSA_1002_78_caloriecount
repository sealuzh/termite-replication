* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.lts.io.ArchiveScanner
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 2247
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:21:04.630 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:21:04.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:21:04.707 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:21:05.409 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:21:05.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:21:05.822 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.lts.io.ArchiveScanner
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/78_caloriecount/src/main/java/com/lts/io/ArchiveScanner.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 15:22:05.566 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 121s and 92 generations, 86250 statements, best individual has fitness: 768.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 67
* Number of covered goals: 50
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 45
* Number of covered goals: 36
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 202
* Number of covered goals: 145
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 45
* Number of covered goals: 36
* Generated 26 tests with total length 599
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 15:23:25.537 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 15:23:25.539 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[6];
byteArray0[0] = (byte)52;
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2787), (byte)52);
PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)52, 465);
PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)52, 465);
MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream1);
Locale locale0 = new Locale("q&*r qRAF.", "q&*r qRAF.", "78_caloriecount.jar");
Object[] objectArray0 = new Object[5];
Object object0 = new Object();
objectArray0[0] = object0;
objectArray0[1] = (Object) "q&*r qRAF.";
objectArray0[2] = (Object) byteArrayInputStream2;
objectArray0[3] = (Object) byteArrayInputStream2;
objectArray0[4] = (Object) mockPrintStream0;
PrintStream printStream0 = mockPrintStream0.format(locale0, "p)wwbB/7'^DLzh>N", objectArray0);
ImprovedFile.copy(byteArrayInputStream2, printStream0);
ImprovedFile improvedFile0 = new ImprovedFile(".ear", ".ear");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
assertFalse(boolean0);


[MASTER] 15:23:27.469 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 15:23:27.473 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[6];
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte)0);
byteArrayInputStream0.skip(0L);
PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
byteArrayInputStream0.markSupported();
PipedInputStream pipedInputStream0 = new PipedInputStream();
ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-1111603502), 2);
byteArrayInputStream1.markSupported();
byteArrayInputStream1.markSupported();
PipedInputStream pipedInputStream1 = new PipedInputStream();
PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
pipedOutputStream0.close();
BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream1);
PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
pipedOutputStream0.flush();
byte[] byteArray1 = new byte[0];
ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1, (byte)99, 395);
MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream1);
ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, (-231), 1);
PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(byteArray0, 1, 4);
byteArrayInputStream4.skip(395);
Object object0 = new Object();
ImprovedFile improvedFile0 = new ImprovedFile("u~?T>zJ?", "o1i5c^OHh6i,ohB");
ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
assertTrue(boolean0);


* Writing JUnit test case 'ArchiveScanner_ESTest' to /home/ubuntu/termite/qmosa/tests/s1002/78_caloriecount/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: com.lts.application.international.MessageFormatter
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/78_caloriecount/evosuite-files/evosuite.properties
* Connecting to master process on port 2250
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:34:21.668 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:34:21.691 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:34:21.692 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:34:22.138 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:34:22.713 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:34:22.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.lts.application.international.MessageFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/78_caloriecount/src/main/java/com/lts/application/international/MessageFormatter.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1002
* Starting evolution
[MASTER] 15:34:27.701 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 122s and 84 generations, 53273 statements, best individual has fitness: 664.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 130
* Number of covered goals: 116
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 150
* Number of covered goals: 140
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 50
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 52
* Number of covered goals: 46
* Generated 40 tests with total length 550
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 19%
* Compiling and checking tests
* Writing JUnit test case 'MessageFormatter_ESTest' to /home/ubuntu/termite/qmosa/tests/s1002/78_caloriecount/evosuite-tests
* Done!

* Computation finished
