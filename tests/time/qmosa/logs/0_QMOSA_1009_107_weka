* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7356
* Connecting to master process on port 7358
* Connecting to master process on port 7359
* Analyzing classpath: 
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:26:56.348 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:26:56.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:26:56.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:26:56.557 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:26:56.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:26:56.586 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:26:57.103 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:26:57.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:26:57.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:26:57.222 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 20:26:59.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:26:59.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:26:59.786 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 20:26:59.844 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:26:59.858 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:26:59.863 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1009
* Starting evolution
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 20:27:09.692 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: Line 536
[MASTER] 20:27:09.693 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: Line 564
[MASTER] 20:27:09.693 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: Line 574
[MASTER] 20:27:09.694 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: Line 605
[MASTER] 20:27:09.735 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: Line 615
[MASTER] 20:27:09.736 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: Line 635
[MASTER] 20:27:09.737 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: Line 666
[MASTER] 20:27:09.737 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: Line 704
[MASTER] 20:27:09.738 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z: Line 733
[MASTER] 20:27:09.738 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: Line 752
[MASTER] 20:27:09.739 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: Line 780
[MASTER] 20:27:09.740 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 20:27:09.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 828
[MASTER] 20:27:09.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 829
[MASTER] 20:27:09.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 831
[MASTER] 20:27:09.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 832
[MASTER] 20:27:09.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: Line 834
[MASTER] 20:27:09.741 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: Line 843
[MASTER] 20:27:09.743 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1034
[MASTER] 20:27:09.784 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1036
[MASTER] 20:27:09.791 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1039
[MASTER] 20:27:09.792 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1040
[MASTER] 20:27:09.793 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1042
[MASTER] 20:27:09.793 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1045
[MASTER] 20:27:09.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1046
[MASTER] 20:27:09.794 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1047
[MASTER] 20:27:09.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1050
[MASTER] 20:27:09.795 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1053
[MASTER] 20:27:09.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1057
[MASTER] 20:27:09.796 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1058
[MASTER] 20:27:09.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1059
[MASTER] 20:27:09.797 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1060
[MASTER] 20:27:09.798 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1062
[MASTER] 20:27:09.798 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1064
[MASTER] 20:27:09.799 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1065
[MASTER] 20:27:09.800 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1066
[MASTER] 20:27:09.800 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1067
[MASTER] 20:27:09.822 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1071
[MASTER] 20:27:09.823 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: Line 1074
[MASTER] 20:27:09.823 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1084
[MASTER] 20:27:09.824 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: Line 1085
[MASTER] 20:27:09.825 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch
[MASTER] 20:27:09.826 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStemmer()Lweka/core/stemmers/Stemmer;: root-Branch
[MASTER] 20:27:09.826 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z: root-Branch
[MASTER] 20:27:09.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D: root-Branch
[MASTER] 20:27:09.827 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D: root-Branch
[MASTER] 20:27:09.838 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I: root-Branch
[MASTER] 20:27:09.840 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getStopwords()Ljava/io/File;: root-Branch
[MASTER] 20:27:09.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: root-Branch
[MASTER] 20:27:09.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 20:27:09.860 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z: root-Branch
[MASTER] 20:27:09.861 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getTokenizer()Lweka/core/tokenizers/Tokenizer;: root-Branch
[MASTER] 20:27:09.864 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z: root-Branch
[MASTER] 20:27:09.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch
[MASTER] 20:27:09.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false
[MASTER] 20:27:09.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false
[MASTER] 20:27:09.865 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true
[MASTER] 20:27:09.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true
[MASTER] 20:27:09.866 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true
[MASTER] 20:27:09.874 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true
[MASTER] 20:27:09.877 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true
[MASTER] 20:27:09.878 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true
[MASTER] 20:27:09.878 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false
[MASTER] 20:27:09.879 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false
[MASTER] 20:27:09.879 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true
[MASTER] 20:27:09.880 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false
[MASTER] 20:27:09.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 243: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:574 - ReplaceConstant - The tokenizing algorithm to use on the strings. -> 
[MASTER] 20:27:09.890 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 255: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseWordFrequencies()Z:605 - InsertUnaryOp Negation
[MASTER] 20:27:09.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 256: weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;:615 - ReplaceConstant - Whether to convert all tokens to lowercase -> 
[MASTER] 20:27:09.891 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 267: weka.classifiers.bayes.NaiveBayesMultinomialText.getLowercaseTokens()Z:635 - InsertUnaryOp Negation
[MASTER] 20:27:09.893 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 273: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp Negation
[MASTER] 20:27:09.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 274: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp +1
[MASTER] 20:27:09.894 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 275: weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I:666 - InsertUnaryOp -1
[MASTER] 20:27:09.895 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 283: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_norm
[MASTER] 20:27:09.897 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 284: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_t
[MASTER] 20:27:09.898 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 285: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_leplace
[MASTER] 20:27:09.898 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 286: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - ReplaceVariable m_minWordP -> m_lnorm
[MASTER] 20:27:09.904 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 287: weka.classifiers.bayes.NaiveBayesMultinomialText.getMinWordFrequency()D:704 - InsertUnaryOp Negation
[MASTER] 20:27:09.915 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 299: weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z:733 - InsertUnaryOp Negation
[MASTER] 20:27:09.916 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 301: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_minWordP
[MASTER] 20:27:09.919 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 20:27:09.919 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 304: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_lnorm
[MASTER] 20:27:09.920 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - InsertUnaryOp Negation
[MASTER] 20:27:09.920 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 313: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_norm
[MASTER] 20:27:09.937 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 314: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_minWordP
[MASTER] 20:27:09.937 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 315: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_t
[MASTER] 20:27:09.939 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 316: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - ReplaceVariable m_lnorm -> m_leplace
[MASTER] 20:27:09.940 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 317: weka.classifiers.bayes.NaiveBayesMultinomialText.getLNorm()D:780 - InsertUnaryOp Negation
[MASTER] 20:27:09.941 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 20:27:09.941 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 336: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 20:27:09.941 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 337: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:828 - ReplaceComparisonOperator != null -> = null
[MASTER] 20:27:09.942 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 338: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:829 - ReplaceConstant - user.dir -> 
[MASTER] 20:27:09.942 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 339: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:831 - ReplaceVariable value -> m_stopwordsFile
[MASTER] 20:27:09.942 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 341: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 20:27:09.942 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 343: weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V:832 - ReplaceComparisonOperator == -> !=
[MASTER] 20:27:09.950 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 423: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1036 - ReplaceComparisonOperator == -> !=
[MASTER] 20:27:09.951 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 425: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1039 - ReplaceConstant - -P -> 
[MASTER] 20:27:09.951 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 426: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1040 - ReplaceConstant - -M -> 
[MASTER] 20:27:09.952 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 427: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1042 - ReplaceComparisonOperator == -> !=
[MASTER] 20:27:09.953 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 429: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1045 - ReplaceConstant - -norm -> 
[MASTER] 20:27:09.953 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 430: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1046 - ReplaceConstant - -lnorm -> 
[MASTER] 20:27:09.954 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 431: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1047 - ReplaceComparisonOperator == -> !=
[MASTER] 20:27:09.955 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 433: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:1050 - ReplaceComparisonOperator == -> !=
[MASTER] 20:27:09.956 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1084 - ReplaceComparisonOperator != null -> = null
[MASTER] 20:27:09.956 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:1085 - ReplaceConstant - NaiveBayesMultinomialText: No model built yet.
 -> 
[MASTER] 20:27:09.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 20:27:09.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 20:27:09.958 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;:NonEmptyArray
[MASTER] 20:27:09.960 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;:NonEmptyString
[MASTER] 20:27:09.960 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 20:27:09.961 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 20:27:09.961 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 20:27:09.961 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.963 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 20:27:09.964 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;
[MASTER] 20:27:09.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 20:27:09.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V
[MASTER] 20:27:09.965 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.966 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;
[MASTER] 20:27:09.976 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.toString()Ljava/lang/String;: I4 Branch 70 IFNONNULL L1084 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:toString()Ljava/lang/String;
[MASTER] 20:27:09.976 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.lowercaseTokensTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:lowercaseTokensTipText()Ljava/lang/String;
[MASTER] 20:27:09.976 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I104 Branch 64 IFEQ L1047 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.977 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I10 Branch 62 IFEQ L1036 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.984 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I127 Branch 66 IFNE L1053 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.985 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I3 Branch 48 IFNONNULL L828 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 20:27:09.985 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I57 Branch 63 IFEQ L1042 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.989 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizerTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:tokenizerTipText()Ljava/lang/String;
[MASTER] 20:27:09.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I34 Branch 49 IFEQ L832 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 20:27:09.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I158 Branch 67 IFEQ L1059 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.997 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I186 Branch 68 IFNULL L1064 - false in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.997 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I115 Branch 65 IFEQ L1050 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.998 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()[Ljava/lang/String;: I205 Branch 69 IFEQ L1067 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getOptions()[Ljava/lang/String;
[MASTER] 20:27:09.999 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setStopwords(Ljava/io/File;)V: I37 Branch 50 IFEQ L832 - true in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setStopwords(Ljava/io/File;)V
[MASTER] 20:27:13.994 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 20:27:13.994 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I
[MASTER] 20:27:13.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z
[MASTER] 20:27:13.995 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V
[MASTER] 20:27:13.997 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 20:27:13.997 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getPeriodicPruning()I
[MASTER] 20:27:14.004 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getNormalizeDocLength()Z
[MASTER] 20:27:14.006 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.reset()V
[MASTER] 20:27:49.195 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 20:27:49.195 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
* Search finished after 123s and 43 generations, 31983 statements, best individual has fitness: 9400.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 39%
* Total number of goals: 370
* Number of covered goals: 146
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 58
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 25%
* Total number of goals: 713
* Number of covered goals: 181
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 72
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 24%
* Total number of goals: 242
* Number of covered goals: 58
* Generated 44 tests with total length 724
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 17 generations, 15689 statements, best individual has fitness: 4408.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 338
* Number of covered goals: 208
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 49%
* Total number of goals: 194
* Number of covered goals: 95
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 65%
* Total number of goals: 476
* Number of covered goals: 311
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 112
* Number of covered goals: 58
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 48%
* Total number of goals: 194
* Number of covered goals: 94
* Generated 37 tests with total length 710
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 131s and 3 generations, 3618 statements, best individual has fitness: 6848.0
[MASTER] 20:29:13.275 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 12 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 647
* Number of covered goals: 546
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 74%
* Total number of goals: 441
* Number of covered goals: 326
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 678
* Number of covered goals: 487
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 244
* Number of covered goals: 52
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 62%
* Total number of goals: 124
* Number of covered goals: 77
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 62%
* Total number of goals: 124
* Number of covered goals: 77
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 65%
* Total number of goals: 441
* Number of covered goals: 285
* Generated 53 tests with total length 1176
* Resulting test suite's coverage: 68% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 20:30:49.862 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 20:30:50.369 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 20:32:59.257 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_1_1575405179168/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_1_1575405179168/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.java]]
[MASTER] 20:32:59.257 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:32:59.257 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:32:59.262 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 20:32:59.263 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 33
[MASTER] 20:32:59.264 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_1_1575405179168/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:32:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.util.SystemInUtil;
14: import org.junit.runner.RunWith;
15: import weka.attributeSelection.PrincipalComponents;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_1_tmp__ESTest extends NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=2.4221006252457893
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.toString();
29:       naiveBayesMultinomialText0.minWordFrequencyTipText();
30:       naiveBayesMultinomialText0.getRevision();
31:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
32:       SystemInUtil.addInputLine("alities");
33:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
34:       naiveBayesMultinomialText0.stemmerTipText();
35:       naiveBayesMultinomialText0.normTipText();
36:       naiveBayesMultinomialText1.stemmerTipText();
37:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
38:       naiveBayesMultinomialText2.lowercaseTokensTipText();
39:       PrincipalComponents principalComponents0 = new PrincipalComponents();
40:       assertEquals("Retain enough PC attributes to account for this proportion of variance.", principalComponents0.varianceCoveredTipText());
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_1_1575405179168/weka/classifiers/bayes/NaiveBayesMultinomialText_1_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:32:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.BallTree",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.Check",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.core.ProtectedProperties",
186:       "weka.core.StringLocator",
187:       "weka.core.AttributeStats",
188:       "weka.core.WeightedInstancesHandler",
189:       "weka.core.neighboursearch.NearestNeighbourSearch",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.core.TechnicalInformation",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_1_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.Option",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SparseInstance",
227:       "weka.core.BinarySparseInstance",
228:       "weka.core.Attribute",
229:       "weka.core.ProtectedProperties",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Instances",
238:       "weka.core.Capabilities",
239:       "org.pentaho.packageManagement.PackageManager",
240:       "org.pentaho.packageManagement.DefaultPackageManager",
241:       "weka.core.Version",
242:       "weka.core.Environment",
243:       "weka.core.WekaPackageManager",
244:       "weka.core.Stopwords",
245:       "weka.classifiers.functions.SimpleLogistic",
246:       "weka.core.SerializedObject",
247:       "weka.core.DenseInstance",
248:       "weka.core.neighboursearch.NearestNeighbourSearch",
249:       "weka.core.neighboursearch.KDTree",
250:       "weka.core.NormalizableDistance",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Range",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.classifiers.bayes.BayesNet",
256:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.K2",
259:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
260:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.WekaEnumeration",
266:       "weka.core.Attribute$1",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.converters.ArffLoader$ArffReader",
270:       "weka.core.TestInstances",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.core.FindWithCapabilities",
279:       "weka.core.SingleIndex",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.classifiers.CostMatrix",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.balltrees.BallNode",
290:       "weka.classifiers.functions.SGD",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.classifiers.misc.SerializedClassifier",
293:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
294:       "weka.classifiers.trees.RandomForest",
295:       "weka.core.tokenizers.AlphabeticTokenizer",
296:       "weka.core.neighboursearch.LinearNNSearch",
297:       "weka.core.ListOptions",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.filters.Filter",
300:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
301:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
302:       "weka.core.TechnicalInformation",
303:       "weka.core.TechnicalInformation$Type",
304:       "weka.core.TechnicalInformation$Field",
305:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
306:       "weka.classifiers.rules.DecisionTable",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.BestFirst",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.VotedPerceptron",
311:       "weka.core.WekaException",
312:       "weka.attributeSelection.GainRatioAttributeEval",
313:       "weka.classifiers.lazy.IBk",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.core.SelectedTag",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.core.UnassignedClassException"
319:     );
320:   }
321: }

[MASTER] 20:32:59.264 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.minWordFrequencyTipText();
naiveBayesMultinomialText0.getRevision();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
SystemInUtil.addInputLine("alities");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText1.stemmerTipText();
NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.lowercaseTokensTipText();
PrincipalComponents principalComponents0 = new PrincipalComponents();
assertEquals("Retain enough PC attributes to account for this proportion of variance.", principalComponents0.varianceCoveredTipText());


[MASTER] 20:32:59.683 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_7_1575405179631/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_7_1575405179631/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.java]]
[MASTER] 20:32:59.683 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:32:59.683 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:32:59.683 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:32:59.683 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:32:59.684 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:32:59.684 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 40
[MASTER] 20:32:59.684 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 20:32:59.685 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_7_1575405179631/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:32:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import java.util.Map;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.util.SystemInUtil;
16: import org.junit.runner.RunWith;
17: import weka.attributeSelection.PrincipalComponents;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.DenseInstance;
20: import weka.core.Instances;
21: import weka.core.neighboursearch.balltrees.BallNode;
22: import weka.filters.supervised.attribute.Discretize;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
25: public class NaiveBayesMultinomialText_7_tmp__ESTest extends NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
26: 
27:   /**
28:   //Test case number: 0
29:   /*Coverage entropy=2.5531257522061517
30:   */
31:   @Test(timeout = 4000)
32:   public void test0()  throws Throwable  {
33:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
34:       naiveBayesMultinomialText0.toString();
35:       naiveBayesMultinomialText0.minWordFrequencyTipText();
36:       SystemInUtil.addInputLine("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
37:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
38:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
39:       Integer integer0 = new Integer(200);
40:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
41:       linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
42:       naiveBayesMultinomialText0.stemmerTipText();
43:       naiveBayesMultinomialText0.normTipText();
44:       naiveBayesMultinomialText0.stemmerTipText();
45:       naiveBayesMultinomialText0.lowercaseTokensTipText();
46:       int int0 = 117;
47:       int int1 = (-2954);
48:       int[] intArray0 = new int[7];
49:       intArray0[0] = 6;
50:       intArray0[1] = 200;
51:       naiveBayesMultinomialText0.setPeriodicPruning(0);
52:       intArray0[2] = 3030;
53:       intArray0[3] = 1386;
54:       intArray0[4] = (-2954);
55:       intArray0[5] = 6;
56:       intArray0[6] = 200;
57:       PrincipalComponents principalComponents0 = new PrincipalComponents();
58:       naiveBayesMultinomialText0.setNormalizeDocLength(false);
59:       Discretize discretize0 = new Discretize();
60:       // Undeclared exception!
61:       try { 
62:         discretize0.getOutputFormat();
63:         fail("Expecting exception: NullPointerException");
64:       
65:       } catch(NullPointerException e) {
66:          //
67:          // No output format defined.
68:          //
69:          verifyException("weka.filters.Filter", e);
70:       }
71:   }
72: }
RegularFileObject[/tmp/EvoSuite_7_1575405179631/weka/classifiers/bayes/NaiveBayesMultinomialText_7_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:32:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.BallTree",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.Check",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.core.ProtectedProperties",
186:       "weka.core.StringLocator",
187:       "weka.core.AttributeStats",
188:       "weka.core.WeightedInstancesHandler",
189:       "weka.core.neighboursearch.NearestNeighbourSearch",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.core.TechnicalInformation",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_7_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.Option",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SparseInstance",
227:       "weka.core.BinarySparseInstance",
228:       "weka.core.Attribute",
229:       "weka.core.ProtectedProperties",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Instances",
238:       "weka.core.Capabilities",
239:       "org.pentaho.packageManagement.PackageManager",
240:       "org.pentaho.packageManagement.DefaultPackageManager",
241:       "weka.core.Version",
242:       "weka.core.Environment",
243:       "weka.core.WekaPackageManager",
244:       "weka.core.Stopwords",
245:       "weka.classifiers.functions.SimpleLogistic",
246:       "weka.core.SerializedObject",
247:       "weka.core.DenseInstance",
248:       "weka.core.neighboursearch.NearestNeighbourSearch",
249:       "weka.core.neighboursearch.KDTree",
250:       "weka.core.NormalizableDistance",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Range",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.classifiers.bayes.BayesNet",
256:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.K2",
259:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
260:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.WekaEnumeration",
266:       "weka.core.Attribute$1",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.converters.ArffLoader$ArffReader",
270:       "weka.core.TestInstances",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.core.FindWithCapabilities",
279:       "weka.core.SingleIndex",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.classifiers.CostMatrix",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.balltrees.BallNode",
290:       "weka.classifiers.functions.SGD",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.classifiers.misc.SerializedClassifier",
293:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
294:       "weka.classifiers.trees.RandomForest",
295:       "weka.core.tokenizers.AlphabeticTokenizer",
296:       "weka.core.neighboursearch.LinearNNSearch",
297:       "weka.core.ListOptions",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.filters.Filter",
300:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
301:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
302:       "weka.core.TechnicalInformation",
303:       "weka.core.TechnicalInformation$Type",
304:       "weka.core.TechnicalInformation$Field",
305:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
306:       "weka.classifiers.rules.DecisionTable",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.BestFirst",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.VotedPerceptron",
311:       "weka.core.WekaException",
312:       "weka.attributeSelection.GainRatioAttributeEval",
313:       "weka.classifiers.lazy.IBk",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.core.SelectedTag",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.core.UnassignedClassException"
319:     );
320:   }
321: }

[MASTER] 20:32:59.686 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.toString();
naiveBayesMultinomialText0.minWordFrequencyTipText();
SystemInUtil.addInputLine("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Integer integer0 = new Integer(200);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap1 = naiveBayesMultinomialText0.m_inputVector;
linkedHashMap0.put(integer0, (LinkedHashMap<String, NaiveBayesMultinomialText.Count>) null);
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.normTipText();
naiveBayesMultinomialText0.stemmerTipText();
naiveBayesMultinomialText0.lowercaseTokensTipText();
int int0 = 117;
int int1 = (-2954);
int[] intArray0 = new int[7];
intArray0[0] = 6;
intArray0[1] = 200;
naiveBayesMultinomialText0.setPeriodicPruning(0);
intArray0[2] = 3030;
intArray0[3] = 1386;
intArray0[4] = (-2954);
intArray0[5] = 6;
intArray0[6] = 200;
PrincipalComponents principalComponents0 = new PrincipalComponents();
naiveBayesMultinomialText0.setNormalizeDocLength(false);
Discretize discretize0 = new Discretize();
discretize0.getOutputFormat();

[MASTER] 20:32:59.886 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_11_1575405179839/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_11_1575405179839/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.java]]
[MASTER] 20:32:59.886 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:32:59.886 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:32:59.886 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:32:59.887 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:32:59.887 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_11_1575405179839/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:32:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.attributeSelection.PrincipalComponents;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.misc.InputMappedClassifier;
18: import weka.core.DenseInstance;
19: import weka.core.Instance;
20: import weka.core.Instances;
21: import weka.core.neighboursearch.LinearNNSearch;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class NaiveBayesMultinomialText_11_tmp__ESTest extends NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
25: 
26:   /**
27:   //Test case number: 0
28:   /*Coverage entropy=2.2584261358947213
29:   */
30:   @Test(timeout = 4000)
31:   public void test0()  throws Throwable  {
32:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
33:       String[] stringArray0 = new String[2];
34:       naiveBayesMultinomialText0.m_lnorm = (-3118.752690056);
35:       stringArray0[0] = "BiZ{iV7{";
36:       stringArray0[1] = "";
37:       NaiveBayesMultinomialText.main(stringArray0);
38:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>(0, 830.23364F);
39:       naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
40:       naiveBayesMultinomialText0.setPeriodicPruning((-1));
41:       naiveBayesMultinomialText0.getUseWordFrequencies();
42:       naiveBayesMultinomialText0.getNorm();
43:       PrincipalComponents principalComponents0 = new PrincipalComponents();
44:       try { 
45:         principalComponents0.transformedHeader();
46:         fail("Expecting exception: Exception");
47:       
48:       } catch(Exception e) {
49:          //
50:          // Principal components hasn't been built yet
51:          //
52:          verifyException("weka.attributeSelection.PrincipalComponents", e);
53:       }
54:   }
55: }
RegularFileObject[/tmp/EvoSuite_11_1575405179839/weka/classifiers/bayes/NaiveBayesMultinomialText_11_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:32:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.BallTree",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.Check",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.core.ProtectedProperties",
186:       "weka.core.StringLocator",
187:       "weka.core.AttributeStats",
188:       "weka.core.WeightedInstancesHandler",
189:       "weka.core.neighboursearch.NearestNeighbourSearch",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.core.TechnicalInformation",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_11_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.Option",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SparseInstance",
227:       "weka.core.BinarySparseInstance",
228:       "weka.core.Attribute",
229:       "weka.core.ProtectedProperties",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Instances",
238:       "weka.core.Capabilities",
239:       "org.pentaho.packageManagement.PackageManager",
240:       "org.pentaho.packageManagement.DefaultPackageManager",
241:       "weka.core.Version",
242:       "weka.core.Environment",
243:       "weka.core.WekaPackageManager",
244:       "weka.core.Stopwords",
245:       "weka.classifiers.functions.SimpleLogistic",
246:       "weka.core.SerializedObject",
247:       "weka.core.DenseInstance",
248:       "weka.core.neighboursearch.NearestNeighbourSearch",
249:       "weka.core.neighboursearch.KDTree",
250:       "weka.core.NormalizableDistance",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Range",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.classifiers.bayes.BayesNet",
256:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.K2",
259:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
260:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.WekaEnumeration",
266:       "weka.core.Attribute$1",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.converters.ArffLoader$ArffReader",
270:       "weka.core.TestInstances",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.core.FindWithCapabilities",
279:       "weka.core.SingleIndex",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.classifiers.CostMatrix",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.balltrees.BallNode",
290:       "weka.classifiers.functions.SGD",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.classifiers.misc.SerializedClassifier",
293:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
294:       "weka.classifiers.trees.RandomForest",
295:       "weka.core.tokenizers.AlphabeticTokenizer",
296:       "weka.core.neighboursearch.LinearNNSearch",
297:       "weka.core.ListOptions",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.filters.Filter",
300:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
301:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
302:       "weka.core.TechnicalInformation",
303:       "weka.core.TechnicalInformation$Type",
304:       "weka.core.TechnicalInformation$Field",
305:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
306:       "weka.classifiers.rules.DecisionTable",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.BestFirst",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.VotedPerceptron",
311:       "weka.core.WekaException",
312:       "weka.attributeSelection.GainRatioAttributeEval",
313:       "weka.classifiers.lazy.IBk",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.core.SelectedTag",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.core.UnassignedClassException"
319:     );
320:   }
321: }

[MASTER] 20:32:59.888 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String[] stringArray0 = new String[2];
naiveBayesMultinomialText0.m_lnorm = (-3118.752690056);
stringArray0[0] = "BiZ{iV7{";
stringArray0[1] = "";
NaiveBayesMultinomialText.main(stringArray0);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>(0, 830.23364F);
naiveBayesMultinomialText0.m_inputVector = linkedHashMap0;
naiveBayesMultinomialText0.setPeriodicPruning((-1));
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.getNorm();
PrincipalComponents principalComponents0 = new PrincipalComponents();
principalComponents0.transformedHeader();

[MASTER] 20:33:00.019 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_14_1575405179972/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_14_1575405179972/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.java]]
[MASTER] 20:33:00.019 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.019 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.019 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:33:00.019 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:33:00.019 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:33:00.020 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_14_1575405179972/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:32:59 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.util.SystemInUtil;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Option;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_14_tmp__ESTest extends NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.8778952727983707
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       String string0 = naiveBayesMultinomialText0.toString();
31:       assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string0);
32:       
33:       String string1 = naiveBayesMultinomialText0.minWordFrequencyTipText();
34:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string1);
35:       
36:       SystemInUtil.addInputLine("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
37:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
38:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
39:       Random.setNextRandom(200);
40:       naiveBayesMultinomialText0.stemmerTipText();
41:       String string2 = naiveBayesMultinomialText0.normTipText();
42:       assertEquals("The norm of the instances after normalization.", string2);
43:       
44:       String string3 = naiveBayesMultinomialText0.stemmerTipText();
45:       assertEquals("The stemming algorithm to use on the words.", string3);
46:       
47:       String string4 = naiveBayesMultinomialText0.lowercaseTokensTipText();
48:       assertEquals("Whether to convert all tokens to lowercase", string4);
49:       
50:       Option option0 = new Option(".enableDependency(", "NaiveBayesMultinomialText: No model built yet.\n", 200, ">!");
51:       option0.getRevision();
52:       linkedHashMap0.remove((Object) option0);
53:       String string5 = naiveBayesMultinomialText0.tokenizerTipText();
54:       assertEquals("The tokenizing algorithm to use on the strings.", string5);
55:       
56:       naiveBayesMultinomialText0.getStopwords();
57:       String string6 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
58:       assertEquals("Use word frequencies rather than binary bag of words representation", string6);
59:       
60:       naiveBayesMultinomialText0.getUseStopList();
61:       String string7 = naiveBayesMultinomialText0.stopwordsTipText();
62:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
63:       assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string7);
64:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
65:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
66:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
67:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
68:   }
69: }
RegularFileObject[/tmp/EvoSuite_14_1575405179972/weka/classifiers/bayes/NaiveBayesMultinomialText_14_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:32:59 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.BallTree",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.Check",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.core.ProtectedProperties",
186:       "weka.core.StringLocator",
187:       "weka.core.AttributeStats",
188:       "weka.core.WeightedInstancesHandler",
189:       "weka.core.neighboursearch.NearestNeighbourSearch",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.core.TechnicalInformation",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_14_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.Option",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SparseInstance",
227:       "weka.core.BinarySparseInstance",
228:       "weka.core.Attribute",
229:       "weka.core.ProtectedProperties",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Instances",
238:       "weka.core.Capabilities",
239:       "org.pentaho.packageManagement.PackageManager",
240:       "org.pentaho.packageManagement.DefaultPackageManager",
241:       "weka.core.Version",
242:       "weka.core.Environment",
243:       "weka.core.WekaPackageManager",
244:       "weka.core.Stopwords",
245:       "weka.classifiers.functions.SimpleLogistic",
246:       "weka.core.SerializedObject",
247:       "weka.core.DenseInstance",
248:       "weka.core.neighboursearch.NearestNeighbourSearch",
249:       "weka.core.neighboursearch.KDTree",
250:       "weka.core.NormalizableDistance",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Range",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.classifiers.bayes.BayesNet",
256:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.K2",
259:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
260:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.WekaEnumeration",
266:       "weka.core.Attribute$1",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.converters.ArffLoader$ArffReader",
270:       "weka.core.TestInstances",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.core.FindWithCapabilities",
279:       "weka.core.SingleIndex",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.classifiers.CostMatrix",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.balltrees.BallNode",
290:       "weka.classifiers.functions.SGD",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.classifiers.misc.SerializedClassifier",
293:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
294:       "weka.classifiers.trees.RandomForest",
295:       "weka.core.tokenizers.AlphabeticTokenizer",
296:       "weka.core.neighboursearch.LinearNNSearch",
297:       "weka.core.ListOptions",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.filters.Filter",
300:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
301:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
302:       "weka.core.TechnicalInformation",
303:       "weka.core.TechnicalInformation$Type",
304:       "weka.core.TechnicalInformation$Field",
305:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
306:       "weka.classifiers.rules.DecisionTable",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.BestFirst",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.VotedPerceptron",
311:       "weka.core.WekaException",
312:       "weka.attributeSelection.GainRatioAttributeEval",
313:       "weka.classifiers.lazy.IBk",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.core.SelectedTag",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.core.UnassignedClassException"
319:     );
320:   }
321: }

[MASTER] 20:33:00.021 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String string0 = naiveBayesMultinomialText0.toString();
assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string0);

String string1 = naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string1);

SystemInUtil.addInputLine("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Random.setNextRandom(200);
naiveBayesMultinomialText0.stemmerTipText();
String string2 = naiveBayesMultinomialText0.normTipText();
assertEquals("The norm of the instances after normalization.", string2);

String string3 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string3);

String string4 = naiveBayesMultinomialText0.lowercaseTokensTipText();
assertEquals("Whether to convert all tokens to lowercase", string4);

Option option0 = new Option(".enableDependency(", "NaiveBayesMultinomialText: No model built yet.\n", 200, ">!");
option0.getRevision();
linkedHashMap0.remove((Object) option0);
String string5 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string5);

naiveBayesMultinomialText0.getStopwords();
String string6 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string6);

naiveBayesMultinomialText0.getUseStopList();
String string7 = naiveBayesMultinomialText0.stopwordsTipText();
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals("The file containing the stopwords (if this is a directory then the default ones are used).", string7);
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());


[MASTER] 20:33:00.064 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_15_1575405180022/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_15_1575405180022/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.java]]
[MASTER] 20:33:00.064 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.064 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.064 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 20:33:00.064 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 41
[MASTER] 20:33:00.065 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_15_1575405180022/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:33:00 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: import weka.classifiers.bayes.NaiveBayesMultinomialText;
17: import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
18: import weka.core.Instances;
19: import weka.core.SparseInstance;
20: import weka.core.TestInstances;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class NaiveBayesMultinomialText_15_tmp__ESTest extends NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
24: 
25:   /**
26:   //Test case number: 0
27:   /*Coverage entropy=2.0557051606564785
28:   */
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
32:       double[] doubleArray0 = new double[5];
33:       naiveBayesMultinomialText0.setNorm(1953.31);
34:       doubleArray0[0] = 1953.31;
35:       doubleArray0[1] = 1953.31;
36:       PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
37:       precomputedKernelMatrixKernel0.setDebug(true);
38:       precomputedKernelMatrixKernel0.setDebug(false);
39:       precomputedKernelMatrixKernel0.getKernelMatrixFile();
40:       naiveBayesMultinomialText0.setStopwords((File) null);
41:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
42:       linkedHashMap0.entrySet();
43:       naiveBayesMultinomialText0.reset();
44:       SparseInstance sparseInstance0 = new SparseInstance(3.0, doubleArray0);
45:       try { 
46:         naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);
47:         fail("Expecting exception: RuntimeException");
48:       
49:       } catch(RuntimeException e) {
50:          //
51:          // DenseInstance doesn't have access to a dataset!
52:          //
53:          verifyException("weka.core.AbstractInstance", e);
54:       }
55:   }
56: }
RegularFileObject[/tmp/EvoSuite_15_1575405180022/weka/classifiers/bayes/NaiveBayesMultinomialText_15_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:33:00 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.BallTree",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.Check",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.core.ProtectedProperties",
186:       "weka.core.StringLocator",
187:       "weka.core.AttributeStats",
188:       "weka.core.WeightedInstancesHandler",
189:       "weka.core.neighboursearch.NearestNeighbourSearch",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.core.TechnicalInformation",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_15_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.Option",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SparseInstance",
227:       "weka.core.BinarySparseInstance",
228:       "weka.core.Attribute",
229:       "weka.core.ProtectedProperties",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Instances",
238:       "weka.core.Capabilities",
239:       "org.pentaho.packageManagement.PackageManager",
240:       "org.pentaho.packageManagement.DefaultPackageManager",
241:       "weka.core.Version",
242:       "weka.core.Environment",
243:       "weka.core.WekaPackageManager",
244:       "weka.core.Stopwords",
245:       "weka.classifiers.functions.SimpleLogistic",
246:       "weka.core.SerializedObject",
247:       "weka.core.DenseInstance",
248:       "weka.core.neighboursearch.NearestNeighbourSearch",
249:       "weka.core.neighboursearch.KDTree",
250:       "weka.core.NormalizableDistance",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Range",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.classifiers.bayes.BayesNet",
256:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.K2",
259:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
260:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.WekaEnumeration",
266:       "weka.core.Attribute$1",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.converters.ArffLoader$ArffReader",
270:       "weka.core.TestInstances",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.core.FindWithCapabilities",
279:       "weka.core.SingleIndex",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.classifiers.CostMatrix",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.balltrees.BallNode",
290:       "weka.classifiers.functions.SGD",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.classifiers.misc.SerializedClassifier",
293:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
294:       "weka.classifiers.trees.RandomForest",
295:       "weka.core.tokenizers.AlphabeticTokenizer",
296:       "weka.core.neighboursearch.LinearNNSearch",
297:       "weka.core.ListOptions",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.filters.Filter",
300:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
301:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
302:       "weka.core.TechnicalInformation",
303:       "weka.core.TechnicalInformation$Type",
304:       "weka.core.TechnicalInformation$Field",
305:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
306:       "weka.classifiers.rules.DecisionTable",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.BestFirst",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.VotedPerceptron",
311:       "weka.core.WekaException",
312:       "weka.attributeSelection.GainRatioAttributeEval",
313:       "weka.classifiers.lazy.IBk",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.core.SelectedTag",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.core.UnassignedClassException"
319:     );
320:   }
321: }

[MASTER] 20:33:00.066 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
double[] doubleArray0 = new double[5];
naiveBayesMultinomialText0.setNorm(1953.31);
doubleArray0[0] = 1953.31;
doubleArray0[1] = 1953.31;
PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
precomputedKernelMatrixKernel0.setDebug(true);
precomputedKernelMatrixKernel0.setDebug(false);
precomputedKernelMatrixKernel0.getKernelMatrixFile();
naiveBayesMultinomialText0.setStopwords((File) null);
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
linkedHashMap0.entrySet();
naiveBayesMultinomialText0.reset();
SparseInstance sparseInstance0 = new SparseInstance(3.0, doubleArray0);
naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);

[MASTER] 20:33:00.107 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1575405180067/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1575405180067/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.java]]
[MASTER] 20:33:00.107 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.107 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.107 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:33:00.107 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:33:00.108 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 20:33:00.108 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1575405180067/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:33:00 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.evosuite.runtime.util.SystemInUtil;
17: import org.junit.runner.RunWith;
18: import weka.classifiers.bayes.NaiveBayesMultinomialText;
19: import weka.core.Option;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class NaiveBayesMultinomialText_16_tmp__ESTest extends NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
23: 
24:   /**
25:   //Test case number: 0
26:   /*Coverage entropy=2.7825850929940454
27:   */
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
31:       String string0 = naiveBayesMultinomialText0.toString();
32:       assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string0);
33:       
34:       String string1 = naiveBayesMultinomialText0.minWordFrequencyTipText();
35:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string1);
36:       
37:       SystemInUtil.addInputLine("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
38:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
40:       Random.setNextRandom(200);
41:       naiveBayesMultinomialText0.stemmerTipText();
42:       String string2 = naiveBayesMultinomialText0.normTipText();
43:       assertEquals("The norm of the instances after normalization.", string2);
44:       
45:       String string3 = naiveBayesMultinomialText0.stemmerTipText();
46:       assertEquals("The stemming algorithm to use on the words.", string3);
47:       
48:       String string4 = naiveBayesMultinomialText0.lowercaseTokensTipText();
49:       assertEquals("Whether to convert all tokens to lowercase", string4);
50:       
51:       Option option0 = new Option(".enableDependency(", "NaiveBayesMultinomialText: No model built yet.\n", 200, ">!");
52:       FileSystemHandling.shouldAllThrowIOExceptions();
53:       linkedHashMap0.remove((Object) option0);
54:       String string5 = naiveBayesMultinomialText0.tokenizerTipText();
55:       assertEquals("The tokenizing algorithm to use on the strings.", string5);
56:       
57:       naiveBayesMultinomialText0.getStopwords();
58:       String string6 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
59:       assertEquals("Use word frequencies rather than binary bag of words representation", string6);
60:       
61:       naiveBayesMultinomialText0.periodicPruningTipText();
62:       String string7 = naiveBayesMultinomialText0.periodicPruningTipText();
63:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
64:       assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string7);
65:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
66:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
67:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
68:       assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);
69:   }
70: }
RegularFileObject[/tmp/EvoSuite_16_1575405180067/weka/classifiers/bayes/NaiveBayesMultinomialText_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:33:00 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.BallTree",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.Check",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.core.ProtectedProperties",
186:       "weka.core.StringLocator",
187:       "weka.core.AttributeStats",
188:       "weka.core.WeightedInstancesHandler",
189:       "weka.core.neighboursearch.NearestNeighbourSearch",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.core.TechnicalInformation",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.Option",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SparseInstance",
227:       "weka.core.BinarySparseInstance",
228:       "weka.core.Attribute",
229:       "weka.core.ProtectedProperties",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Instances",
238:       "weka.core.Capabilities",
239:       "org.pentaho.packageManagement.PackageManager",
240:       "org.pentaho.packageManagement.DefaultPackageManager",
241:       "weka.core.Version",
242:       "weka.core.Environment",
243:       "weka.core.WekaPackageManager",
244:       "weka.core.Stopwords",
245:       "weka.classifiers.functions.SimpleLogistic",
246:       "weka.core.SerializedObject",
247:       "weka.core.DenseInstance",
248:       "weka.core.neighboursearch.NearestNeighbourSearch",
249:       "weka.core.neighboursearch.KDTree",
250:       "weka.core.NormalizableDistance",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Range",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.classifiers.bayes.BayesNet",
256:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.K2",
259:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
260:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.WekaEnumeration",
266:       "weka.core.Attribute$1",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.converters.ArffLoader$ArffReader",
270:       "weka.core.TestInstances",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.core.FindWithCapabilities",
279:       "weka.core.SingleIndex",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.classifiers.CostMatrix",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.balltrees.BallNode",
290:       "weka.classifiers.functions.SGD",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.classifiers.misc.SerializedClassifier",
293:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
294:       "weka.classifiers.trees.RandomForest",
295:       "weka.core.tokenizers.AlphabeticTokenizer",
296:       "weka.core.neighboursearch.LinearNNSearch",
297:       "weka.core.ListOptions",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.filters.Filter",
300:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
301:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
302:       "weka.core.TechnicalInformation",
303:       "weka.core.TechnicalInformation$Type",
304:       "weka.core.TechnicalInformation$Field",
305:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
306:       "weka.classifiers.rules.DecisionTable",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.BestFirst",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.VotedPerceptron",
311:       "weka.core.WekaException",
312:       "weka.attributeSelection.GainRatioAttributeEval",
313:       "weka.classifiers.lazy.IBk",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.core.SelectedTag",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.core.UnassignedClassException"
319:     );
320:   }
321: }

[MASTER] 20:33:00.110 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String string0 = naiveBayesMultinomialText0.toString();
assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string0);

String string1 = naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string1);

SystemInUtil.addInputLine("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Random.setNextRandom(200);
naiveBayesMultinomialText0.stemmerTipText();
String string2 = naiveBayesMultinomialText0.normTipText();
assertEquals("The norm of the instances after normalization.", string2);

String string3 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string3);

String string4 = naiveBayesMultinomialText0.lowercaseTokensTipText();
assertEquals("Whether to convert all tokens to lowercase", string4);

Option option0 = new Option(".enableDependency(", "NaiveBayesMultinomialText: No model built yet.\n", 200, ">!");
FileSystemHandling.shouldAllThrowIOExceptions();
linkedHashMap0.remove((Object) option0);
String string5 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string5);

naiveBayesMultinomialText0.getStopwords();
String string6 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string6);

naiveBayesMultinomialText0.periodicPruningTipText();
String string7 = naiveBayesMultinomialText0.periodicPruningTipText();
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
assertEquals("How often (number of instances) to prune the dictionary of low frequency terms. 0 means don't prune. Setting a positive integer n means prune after every n instances", string7);
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(2.0, naiveBayesMultinomialText0.getLNorm(), 0.01);


[MASTER] 20:33:00.194 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_18_1575405180154/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_18_1575405180154/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.java]]
[MASTER] 20:33:00.194 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.194 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.194 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:33:00.194 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:33:00.195 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 20:33:00.196 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_18_1575405180154/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:33:00 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import java.util.Map;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.Random;
15: import org.evosuite.runtime.util.SystemInUtil;
16: import org.junit.runner.RunWith;
17: import weka.classifiers.bayes.NaiveBayesMultinomialText;
18: import weka.core.Option;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
21: public class NaiveBayesMultinomialText_18_tmp__ESTest extends NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
22: 
23:   /**
24:   //Test case number: 0
25:   /*Coverage entropy=2.7787755691845217
26:   */
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
30:       String string0 = naiveBayesMultinomialText0.toString();
31:       assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string0);
32:       
33:       String string1 = naiveBayesMultinomialText0.minWordFrequencyTipText();
34:       assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string1);
35:       
36:       SystemInUtil.addInputLine("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
37:       LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
38:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
39:       Random.setNextRandom(200);
40:       naiveBayesMultinomialText0.debugTipText();
41:       String string2 = naiveBayesMultinomialText0.normTipText();
42:       assertEquals("The norm of the instances after normalization.", string2);
43:       
44:       String string3 = naiveBayesMultinomialText0.stemmerTipText();
45:       assertEquals("The stemming algorithm to use on the words.", string3);
46:       
47:       String string4 = naiveBayesMultinomialText0.lowercaseTokensTipText();
48:       assertEquals("Whether to convert all tokens to lowercase", string4);
49:       
50:       Option option0 = new Option(".enableDependency(", "NaiveBayesMultinomialText: No model built yet.\n", 200, ">!");
51:       option0.getRevision();
52:       linkedHashMap0.remove((Object) option0);
53:       String string5 = naiveBayesMultinomialText0.tokenizerTipText();
54:       assertEquals("The tokenizing algorithm to use on the strings.", string5);
55:       
56:       naiveBayesMultinomialText0.getStopwords();
57:       String string6 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
58:       assertEquals("Use word frequencies rather than binary bag of words representation", string6);
59:       
60:       double double0 = naiveBayesMultinomialText0.getLNorm();
61:       assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
62:       assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
63:       assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
64:       assertEquals(2.0, double0, 0.01);
65:       assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);
66:   }
67: }
RegularFileObject[/tmp/EvoSuite_18_1575405180154/weka/classifiers/bayes/NaiveBayesMultinomialText_18_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:33:00 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.BallTree",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.Check",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.core.ProtectedProperties",
186:       "weka.core.StringLocator",
187:       "weka.core.AttributeStats",
188:       "weka.core.WeightedInstancesHandler",
189:       "weka.core.neighboursearch.NearestNeighbourSearch",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.core.TechnicalInformation",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_18_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.Option",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SparseInstance",
227:       "weka.core.BinarySparseInstance",
228:       "weka.core.Attribute",
229:       "weka.core.ProtectedProperties",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Instances",
238:       "weka.core.Capabilities",
239:       "org.pentaho.packageManagement.PackageManager",
240:       "org.pentaho.packageManagement.DefaultPackageManager",
241:       "weka.core.Version",
242:       "weka.core.Environment",
243:       "weka.core.WekaPackageManager",
244:       "weka.core.Stopwords",
245:       "weka.classifiers.functions.SimpleLogistic",
246:       "weka.core.SerializedObject",
247:       "weka.core.DenseInstance",
248:       "weka.core.neighboursearch.NearestNeighbourSearch",
249:       "weka.core.neighboursearch.KDTree",
250:       "weka.core.NormalizableDistance",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Range",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.classifiers.bayes.BayesNet",
256:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.K2",
259:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
260:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.WekaEnumeration",
266:       "weka.core.Attribute$1",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.converters.ArffLoader$ArffReader",
270:       "weka.core.TestInstances",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.core.FindWithCapabilities",
279:       "weka.core.SingleIndex",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.classifiers.CostMatrix",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.balltrees.BallNode",
290:       "weka.classifiers.functions.SGD",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.classifiers.misc.SerializedClassifier",
293:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
294:       "weka.classifiers.trees.RandomForest",
295:       "weka.core.tokenizers.AlphabeticTokenizer",
296:       "weka.core.neighboursearch.LinearNNSearch",
297:       "weka.core.ListOptions",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.filters.Filter",
300:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
301:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
302:       "weka.core.TechnicalInformation",
303:       "weka.core.TechnicalInformation$Type",
304:       "weka.core.TechnicalInformation$Field",
305:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
306:       "weka.classifiers.rules.DecisionTable",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.BestFirst",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.VotedPerceptron",
311:       "weka.core.WekaException",
312:       "weka.attributeSelection.GainRatioAttributeEval",
313:       "weka.classifiers.lazy.IBk",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.core.SelectedTag",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.core.UnassignedClassException"
319:     );
320:   }
321: }

[MASTER] 20:33:00.197 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
String string0 = naiveBayesMultinomialText0.toString();
assertEquals("NaiveBayesMultinomialText: No model built yet.\n", string0);

String string1 = naiveBayesMultinomialText0.minWordFrequencyTipText();
assertEquals("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value", string1);

SystemInUtil.addInputLine("Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value");
LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> linkedHashMap0 = new LinkedHashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) linkedHashMap0;
Random.setNextRandom(200);
naiveBayesMultinomialText0.debugTipText();
String string2 = naiveBayesMultinomialText0.normTipText();
assertEquals("The norm of the instances after normalization.", string2);

String string3 = naiveBayesMultinomialText0.stemmerTipText();
assertEquals("The stemming algorithm to use on the words.", string3);

String string4 = naiveBayesMultinomialText0.lowercaseTokensTipText();
assertEquals("Whether to convert all tokens to lowercase", string4);

Option option0 = new Option(".enableDependency(", "NaiveBayesMultinomialText: No model built yet.\n", 200, ">!");
option0.getRevision();
linkedHashMap0.remove((Object) option0);
String string5 = naiveBayesMultinomialText0.tokenizerTipText();
assertEquals("The tokenizing algorithm to use on the strings.", string5);

naiveBayesMultinomialText0.getStopwords();
String string6 = naiveBayesMultinomialText0.useWordFrequenciesTipText();
assertEquals("Use word frequencies rather than binary bag of words representation", string6);

double double0 = naiveBayesMultinomialText0.getLNorm();
assertFalse(naiveBayesMultinomialText0.getNormalizeDocLength());
assertFalse(naiveBayesMultinomialText0.getUseWordFrequencies());
assertEquals(1.0, naiveBayesMultinomialText0.getNorm(), 0.01);
assertEquals(2.0, double0, 0.01);
assertEquals(3.0, naiveBayesMultinomialText0.getMinWordFrequency(), 0.01);


[MASTER] 20:33:00.673 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_29_1575405180625/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_29_1575405180625/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.java]]
[MASTER] 20:33:00.673 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.673 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 20:33:00.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:33:00.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 37
[MASTER] 20:33:00.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 20:33:00.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 20:33:00.674 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 43
[MASTER] 20:33:00.675 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_29_1575405180625/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Dec 03 20:33:00 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.testdata.EvoSuiteFile;
18: import org.evosuite.runtime.testdata.FileSystemHandling;
19: import org.junit.runner.RunWith;
20: import weka.classifiers.bayes.NaiveBayesMultinomialText;
21: import weka.core.EuclideanDistance;
22: import weka.core.Instance;
23: import weka.core.Instances;
24: import weka.core.neighboursearch.BallTree;
25: import weka.core.neighboursearch.balltrees.BallNode;
26: 
27: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
28: public class NaiveBayesMultinomialText_29_tmp__ESTest extends NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
29: 
30:   /**
31:   //Test case number: 0
32:   /*Coverage entropy=2.9785775358639497
33:   */
34:   @Test(timeout = 4000)
35:   public void test0()  throws Throwable  {
36:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
37:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
38:       FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
39:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
40:       double[] doubleArray0 = new double[4];
41:       doubleArray0[0] = 6.283185307179586;
42:       doubleArray0[1] = 0.0;
43:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
44:       hashMap0.put((Integer) null, linkedHashMap0);
45:       hashMap0.keySet();
46:       doubleArray0[2] = 0.0;
47:       doubleArray0[3] = 0.0;
48:       naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
49:       EuclideanDistance euclideanDistance0 = new EuclideanDistance();
50:       hashMap0.remove((Object) euclideanDistance0, (Object) null);
51:       naiveBayesMultinomialText0.m_wordFrequencies = true;
52:       naiveBayesMultinomialText0.getOptions();
53:       naiveBayesMultinomialText0.lowercaseTokensTipText();
54:       naiveBayesMultinomialText0.getOptions();
55:       naiveBayesMultinomialText0.getCapabilities();
56:       naiveBayesMultinomialText0.getStopwords();
57:       naiveBayesMultinomialText0.getUseWordFrequencies();
58:       naiveBayesMultinomialText0.getRevision();
59:       System.setCurrentTimeMillis(2);
60:       naiveBayesMultinomialText0.tokenizerTipText();
61:       BallTree ballTree0 = new BallTree((Instances) null);
62:       BallNode ballNode0 = new BallNode(79, (-767), (-25));
63:       try { 
64:         BallNode.calcPivot(ballNode0, ballNode0, (Instances) null);
65:         fail("Expecting exception: NullPointerException");
66:       
67:       } catch(NullPointerException e) {
68:          //
69:          // no message in exception (getMessage() returned null)
70:          //
71:          verifyException("weka.core.neighboursearch.balltrees.BallNode", e);
72:       }
73:   }
74: }
RegularFileObject[/tmp/EvoSuite_29_1575405180625/weka/classifiers/bayes/NaiveBayesMultinomialText_29_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Dec 03 20:33:00 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.CheckOptionHandler",
89:       "weka.core.Environment",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "org.pentaho.packageManagement.PackageConstraint",
94:       "weka.attributeSelection.AttributeEvaluator",
95:       "org.pentaho.packageManagement.Package",
96:       "weka.core.xml.XMLBasicSerialization",
97:       "weka.classifiers.CostMatrix",
98:       "weka.filters.UnsupervisedFilter",
99:       "weka.core.neighboursearch.BallTree",
100:       "weka.core.logging.Logger$Level",
101:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
102:       "weka.core.DenseInstance",
103:       "weka.core.stemmers.Stemmer",
104:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
105:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
106:       "org.pentaho.packageManagement.DefaultPackageManager",
107:       "org.bounce.net.DefaultAuthenticator",
108:       "weka.core.stemmers.NullStemmer",
109:       "weka.core.EnvironmentHandler",
110:       "weka.classifiers.functions.SGDText",
111:       "weka.core.RelationalLocator",
112:       "weka.core.Utils",
113:       "weka.core.CustomDisplayStringProvider",
114:       "weka.core.tokenizers.Tokenizer",
115:       "weka.core.NormalizableDistance",
116:       "weka.core.NoSupportForMissingValuesException",
117:       "weka.classifiers.UpdateableClassifier",
118:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
119:       "weka.core.Copyable",
120:       "weka.core.Capabilities",
121:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
122:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
123:       "weka.core.BinarySparseInstance",
124:       "weka.core.AttributeLocator",
125:       "weka.core.SerializedObject",
126:       "weka.clusterers.UpdateableClusterer",
127:       "weka.core.Summarizable",
128:       "weka.core.neighboursearch.balltrees.BallNode",
129:       "weka.core.AdditionalMeasureProducer",
130:       "org.pentaho.packageManagement.PackageManager$1",
131:       "weka.core.Drawable",
132:       "weka.core.matrix.Matrix",
133:       "weka.core.Check",
134:       "weka.core.CapabilitiesHandler",
135:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
136:       "weka.attributeSelection.ASEvaluation",
137:       "weka.core.AbstractInstance",
138:       "weka.core.scripting.JythonObject",
139:       "weka.core.SelectedTag",
140:       "org.pentaho.packageManagement.DefaultPackage",
141:       "weka.core.neighboursearch.balltrees.BallSplitter",
142:       "weka.classifiers.misc.InputMappedClassifier",
143:       "weka.core.Version",
144:       "weka.core.Tag",
145:       "weka.classifiers.AbstractClassifier",
146:       "weka.filters.unsupervised.attribute.Center",
147:       "weka.core.OptionHandler",
148:       "weka.core.WekaException",
149:       "weka.filters.StreamableFilter",
150:       "weka.core.Range",
151:       "weka.core.scripting.JythonSerializableObject",
152:       "weka.classifiers.Classifier",
153:       "weka.core.Capabilities$Capability",
154:       "weka.core.SparseInstance",
155:       "org.pentaho.packageManagement.PackageManager",
156:       "weka.attributeSelection.AttributeTransformer",
157:       "weka.core.tokenizers.WordTokenizer",
158:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
159:       "weka.attributeSelection.PrincipalComponents",
160:       "weka.core.stemmers.SnowballStemmer",
161:       "weka.core.stemmers.LovinsStemmer",
162:       "weka.classifiers.Evaluation",
163:       "weka.classifiers.functions.supportVector.Kernel",
164:       "weka.core.WekaPackageManager",
165:       "weka.filters.SupervisedFilter",
166:       "weka.core.TechnicalInformationHandler",
167:       "weka.core.neighboursearch.LinearNNSearch",
168:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
169:       "weka.core.Option",
170:       "weka.classifiers.meta.CostSensitiveClassifier",
171:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
172:       "weka.core.neighboursearch.PerformanceStats",
173:       "weka.filters.Sourcable",
174:       "weka.core.Attribute",
175:       "weka.core.Stopwords",
176:       "weka.core.tokenizers.AlphabeticTokenizer",
177:       "weka.core.FastVector",
178:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
179:       "weka.core.UnassignedDatasetException",
180:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
181:       "weka.classifiers.RandomizableClassifier",
182:       "weka.classifiers.SingleClassifierEnhancer",
183:       "weka.core.RevisionUtils",
184:       "weka.core.Instance",
185:       "weka.core.ProtectedProperties",
186:       "weka.core.StringLocator",
187:       "weka.core.AttributeStats",
188:       "weka.core.WeightedInstancesHandler",
189:       "weka.core.neighboursearch.NearestNeighbourSearch",
190:       "weka.filters.unsupervised.attribute.Remove",
191:       "weka.core.Randomizable",
192:       "weka.core.EuclideanDistance",
193:       "weka.core.Instances",
194:       "weka.core.UnassignedClassException",
195:       "weka.classifiers.rules.ZeroR",
196:       "weka.core.stemmers.IteratedLovinsStemmer",
197:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
198:       "weka.filters.unsupervised.attribute.Standardize",
199:       "weka.core.UnsupportedAttributeTypeException",
200:       "weka.core.TechnicalInformation",
201:       "weka.classifiers.Sourcable",
202:       "weka.core.RevisionHandler",
203:       "weka.classifiers.evaluation.output.prediction.PlainText",
204:       "weka.core.neighboursearch.TreePerformanceStats",
205:       "weka.core.xml.XMLSerialization",
206:       "weka.classifiers.xml.XMLClassifier",
207:       "weka.filters.Filter",
208:       "weka.filters.supervised.attribute.Discretize"
209:     );
210:   } 
211: 
212:   private static void resetClasses() {
213:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_29_tmp__ESTest_scaffolding.class.getClassLoader()); 
214: 
215:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
216:       "weka.classifiers.AbstractClassifier",
217:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
218:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
219:       "weka.core.Capabilities$Capability",
220:       "weka.core.tokenizers.Tokenizer",
221:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
222:       "weka.core.tokenizers.WordTokenizer",
223:       "weka.core.stemmers.NullStemmer",
224:       "weka.core.Option",
225:       "weka.core.AbstractInstance",
226:       "weka.core.SparseInstance",
227:       "weka.core.BinarySparseInstance",
228:       "weka.core.Attribute",
229:       "weka.core.ProtectedProperties",
230:       "weka.core.UnassignedDatasetException",
231:       "weka.classifiers.Evaluation",
232:       "weka.core.Utils",
233:       "weka.core.RevisionUtils",
234:       "weka.classifiers.RandomizableClassifier",
235:       "weka.core.Tag",
236:       "weka.classifiers.functions.SGDText",
237:       "weka.core.Instances",
238:       "weka.core.Capabilities",
239:       "org.pentaho.packageManagement.PackageManager",
240:       "org.pentaho.packageManagement.DefaultPackageManager",
241:       "weka.core.Version",
242:       "weka.core.Environment",
243:       "weka.core.WekaPackageManager",
244:       "weka.core.Stopwords",
245:       "weka.classifiers.functions.SimpleLogistic",
246:       "weka.core.SerializedObject",
247:       "weka.core.DenseInstance",
248:       "weka.core.neighboursearch.NearestNeighbourSearch",
249:       "weka.core.neighboursearch.KDTree",
250:       "weka.core.NormalizableDistance",
251:       "weka.core.EuclideanDistance",
252:       "weka.core.Range",
253:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
254:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
255:       "weka.classifiers.bayes.BayesNet",
256:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
257:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
258:       "weka.classifiers.bayes.net.search.local.K2",
259:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
260:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
261:       "weka.attributeSelection.ASEvaluation",
262:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
263:       "weka.attributeSelection.PrincipalComponents",
264:       "weka.core.stemmers.SnowballStemmer",
265:       "weka.core.WekaEnumeration",
266:       "weka.core.Attribute$1",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.stemmers.IteratedLovinsStemmer",
269:       "weka.core.converters.ArffLoader$ArffReader",
270:       "weka.core.TestInstances",
271:       "weka.core.neighboursearch.BallTree",
272:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
273:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
274:       "weka.core.neighboursearch.balltrees.BallSplitter",
275:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
276:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
277:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
278:       "weka.core.FindWithCapabilities",
279:       "weka.core.SingleIndex",
280:       "weka.classifiers.functions.supportVector.Kernel",
281:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
282:       "weka.classifiers.bayes.NaiveBayes",
283:       "weka.classifiers.SingleClassifierEnhancer",
284:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
285:       "weka.classifiers.meta.CostSensitiveClassifier",
286:       "weka.classifiers.rules.ZeroR",
287:       "weka.classifiers.CostMatrix",
288:       "weka.core.tokenizers.NGramTokenizer",
289:       "weka.core.neighboursearch.balltrees.BallNode",
290:       "weka.classifiers.functions.SGD",
291:       "weka.core.neighboursearch.CoverTree",
292:       "weka.classifiers.misc.SerializedClassifier",
293:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
294:       "weka.classifiers.trees.RandomForest",
295:       "weka.core.tokenizers.AlphabeticTokenizer",
296:       "weka.core.neighboursearch.LinearNNSearch",
297:       "weka.core.ListOptions",
298:       "weka.classifiers.bayes.NaiveBayesMultinomial",
299:       "weka.filters.Filter",
300:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
301:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
302:       "weka.core.TechnicalInformation",
303:       "weka.core.TechnicalInformation$Type",
304:       "weka.core.TechnicalInformation$Field",
305:       "weka.classifiers.bayes.NaiveBayesMultinomialUpdateable",
306:       "weka.classifiers.rules.DecisionTable",
307:       "weka.attributeSelection.ASSearch",
308:       "weka.attributeSelection.BestFirst",
309:       "weka.filters.supervised.attribute.Discretize",
310:       "weka.classifiers.functions.VotedPerceptron",
311:       "weka.core.WekaException",
312:       "weka.attributeSelection.GainRatioAttributeEval",
313:       "weka.classifiers.lazy.IBk",
314:       "weka.classifiers.misc.InputMappedClassifier",
315:       "weka.core.SelectedTag",
316:       "weka.classifiers.meta.CVParameterSelection",
317:       "weka.core.FastVector",
318:       "weka.core.UnassignedClassException"
319:     );
320:   }
321: }

[MASTER] 20:33:00.676 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
double[] doubleArray0 = new double[4];
doubleArray0[0] = 6.283185307179586;
doubleArray0[1] = 0.0;
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = new LinkedHashMap<String, NaiveBayesMultinomialText.Count>();
hashMap0.put((Integer) null, linkedHashMap0);
hashMap0.keySet();
doubleArray0[2] = 0.0;
doubleArray0[3] = 0.0;
naiveBayesMultinomialText0.m_probOfClass = doubleArray0;
EuclideanDistance euclideanDistance0 = new EuclideanDistance();
hashMap0.remove((Object) euclideanDistance0, (Object) null);
naiveBayesMultinomialText0.m_wordFrequencies = true;
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.lowercaseTokensTipText();
naiveBayesMultinomialText0.getOptions();
naiveBayesMultinomialText0.getCapabilities();
naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.getUseWordFrequencies();
naiveBayesMultinomialText0.getRevision();
System.setCurrentTimeMillis(2);
naiveBayesMultinomialText0.tokenizerTipText();
BallTree ballTree0 = new BallTree((Instances) null);
BallNode ballNode0 = new BallNode(79, (-767), (-25));
BallNode.calcPivot(ballNode0, ballNode0, (Instances) null);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 19%
[MASTER] 20:37:22.481 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7353
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:38:05.420 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:38:05.426 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:38:05.427 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:38:07.582 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:38:08.111 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:38:08.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 20:38:17.785 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 20:38:28.588 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: Line 491
[MASTER] 20:38:28.590 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 554
[MASTER] 20:38:28.591 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: Line 555
[MASTER] 20:38:28.609 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: Line 1130
[MASTER] 20:38:28.610 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: Line 1132
[MASTER] 20:38:28.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: Line 1140
[MASTER] 20:38:28.615 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: root-Branch
[MASTER] 20:38:28.616 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch
[MASTER] 20:38:28.619 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: I13 Branch 110 IF_ICMPGE L1132 - true
[MASTER] 20:38:28.621 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 194: weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;:491 - ReplaceConstant - The minimum total weight of the instances in a rule. -> 
[MASTER] 20:38:28.622 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 203: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp Negation of run
[MASTER] 20:38:28.623 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 204: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC 1 run
[MASTER] 20:38:28.624 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 205: weka.classifiers.rules.JRip.setOptimizations(I)V:554 - InsertUnaryOp IINC -1 run
[MASTER] 20:38:28.626 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 433: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1130 - ReplaceConstant - 1 -> 0
[MASTER] 20:38:28.627 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 434: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - ReplaceConstant - 0 -> 1
[MASTER] 20:38:28.628 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 435: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - InsertUnaryOp Negation of i
[MASTER] 20:38:28.629 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 436: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - InsertUnaryOp IINC 1 i
[MASTER] 20:38:28.630 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 437: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - InsertUnaryOp IINC -1 i
[MASTER] 20:38:28.631 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 439: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1132 - ReplaceComparisonOperator >= -> >
[MASTER] 20:38:28.632 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 446: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1140 - InsertUnaryOp Negation of isCover
[MASTER] 20:38:28.633 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 447: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1140 - InsertUnaryOp IINC 1 isCover
[MASTER] 20:38:28.634 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 448: weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z:1140 - InsertUnaryOp IINC -1 isCover
[MASTER] 20:38:28.651 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 20:38:28.653 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;
[MASTER] 20:38:28.654 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 20:38:28.656 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.covers(Lweka/core/Instance;)Z
[MASTER] 20:38:28.659 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;
[MASTER] 20:38:28.660 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.setOptimizations(I)V
[MASTER] 20:38:28.674 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.rules.JRip.RipperRule.covers(Lweka/core/Instance;)Z
[MASTER] 20:38:28.677 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.minNoTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.rules.JRip:minNoTipText()Ljava/lang/String;
[MASTER] 20:38:28.679 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip$RipperRule.covers(Lweka/core/Instance;)Z: I13 Branch 110 IF_ICMPGE L1132 - true in context: weka.classifiers.rules.JRip$RipperRule:covers(Lweka/core/Instance;)Z
[MASTER] 20:38:28.681 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.rules.JRip.setOptimizations(I)V: root-Branch in context: weka.classifiers.rules.JRip:setOptimizations(I)V
* Search finished after 124s and 19 generations, 14539 statements, best individual has fitness: 14128.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 705
* Number of covered goals: 221
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 20%
* Total number of goals: 416
* Number of covered goals: 85
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 46%
* Total number of goals: 993
* Number of covered goals: 453
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 24%
* Total number of goals: 93
* Number of covered goals: 22
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 20%
* Total number of goals: 416
* Number of covered goals: 85
* Generated 51 tests with total length 955
* Resulting test suite's coverage: 36% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7355
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1009
* Starting evolution
* Search finished after 125s and 6 generations, 8601 statements, best individual has fitness: 3824.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 217
* Number of covered goals: 171
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 428
* Number of covered goals: 238
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 260
* Number of covered goals: 222
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 428
* Number of covered goals: 234
* Generated 43 tests with total length 1002
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7352
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 7357
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:59:58.505 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:59:58.521 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:59:58.527 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:59:58.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 21:00:04.830 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:00:12.686 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:00:12.690 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:00:12.692 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:00:14.158 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:00:15.267 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:00:15.269 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:00:17.775 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:00:17.844 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:00:17.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:00:17.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:00:17.846 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:00:17.846 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:00:17.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:00:17.849 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:00:17.853 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 21:00:17.994 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 21:00:18.009 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1009
* Starting evolution
[MASTER] 21:00:23.214 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
[MASTER] 21:00:23.414 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 123s and 34 generations, 31609 statements, best individual has fitness: 16712.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 10%
* Total number of goals: 620
* Number of covered goals: 59
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 37
* Generated 18 tests with total length 390
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
* Search finished after 125s and 17 generations, 13419 statements, best individual has fitness: 20520.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 48%
* Total number of goals: 1378
* Number of covered goals: 656
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 809
* Number of covered goals: 238
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 44%
* Total number of goals: 424
* Number of covered goals: 186
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 8%
* Total number of goals: 278
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 61%
* Total number of goals: 103
* Number of covered goals: 63
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 58%
* Total number of goals: 103
* Number of covered goals: 60
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 16%
* Total number of goals: 809
* Number of covered goals: 133
* Generated 44 tests with total length 1034
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
[MASTER] 21:06:35.036 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 21:06:35.302 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:06:35.303 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 21:06:36.323 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 21:06:36.339 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 21:06:36.520 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1009/107_weka/evosuite-tests
* Done!

* Computation finished
