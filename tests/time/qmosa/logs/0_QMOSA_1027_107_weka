* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.Evaluation
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.experiment.ResultMatrix
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18439
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18442
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:44:26.271 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:44:26.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:44:26.276 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:44:26.312 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.experiment.ResultMatrix
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/experiment/ResultMatrix.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:44:39.957 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:44:39.961 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:44:39.963 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:44:40.866 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:44:41.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:44:41.924 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:44:44.482 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 09:44:44.545 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 09:44:44.546 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 09:44:44.546 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 09:44:44.546 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 09:44:44.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 09:44:44.547 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 09:44:44.548 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 09:44:44.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 09:44:44.643 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 09:44:44.661 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class weka.classifiers.Evaluation
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/Evaluation.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 09:44:51.258 [logback-1] WARN  ClassResetter - class java.lang.NoClassDefFoundError thrown during execution of method  __STATIC_RESET() for class weka.core.converters.ConverterUtils, null
* Search finished after 130s and 3 generations, 4087 statements, best individual has fitness: 5784.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 88%
* Total number of goals: 647
* Number of covered goals: 570
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 78%
* Total number of goals: 441
* Number of covered goals: 342
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 678
* Number of covered goals: 541
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 244
* Number of covered goals: 61
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 124
* Number of covered goals: 86
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 124
* Number of covered goals: 85
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 441
* Number of covered goals: 299
* Generated 62 tests with total length 1479
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 125s and 17 generations, 12095 statements, best individual has fitness: 18672.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 50%
* Total number of goals: 1378
* Number of covered goals: 687
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 35%
* Total number of goals: 809
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 49%
* Total number of goals: 424
* Number of covered goals: 207
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 13%
* Total number of goals: 278
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 69%
* Total number of goals: 103
* Number of covered goals: 71
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 103
* Number of covered goals: 71
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 28%
* Total number of goals: 809
* Number of covered goals: 224
* Generated 69 tests with total length 1295
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 09:51:35.627 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 09:51:35.934 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:51:35.934 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.converters.ConverterUtils
[MASTER] 09:51:36.958 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
[MASTER] 09:51:36.967 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.AllJavadoc: null
[MASTER] 09:51:37.126 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class weka.core.AllJavadoc
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'Evaluation_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 17%
[MASTER] 09:54:50.446 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing JUnit test case 'ResultMatrix_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.rules.JRip
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18440
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:55:38.304 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:55:38.326 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:55:38.327 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:55:40.537 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:55:41.340 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:55:41.341 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.classifiers.rules.JRip
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/rules/JRip.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 09:55:49.973 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.rules.JRip.RipperRule.<init>(Lweka/classifiers/rules/JRip;)V
* Search finished after 124s and 13 generations, 12829 statements, best individual has fitness: 13776.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 32%
* Total number of goals: 705
* Number of covered goals: 228
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 23%
* Total number of goals: 416
* Number of covered goals: 94
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 48%
* Total number of goals: 993
* Number of covered goals: 478
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 93
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 72
* Number of covered goals: 67
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 72
* Number of covered goals: 67
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 22%
* Total number of goals: 416
* Number of covered goals: 93
* Generated 43 tests with total length 901
* Resulting test suite's coverage: 38% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
* Writing JUnit test case 'JRip_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.classifiers.bayes.NaiveBayesMultinomialText
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18442
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:00:34.753 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:00:34.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:00:34.756 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:00:34.796 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:00:34.820 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:00:34.821 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class weka.classifiers.bayes.NaiveBayesMultinomialText
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/classifiers/bayes/NaiveBayesMultinomialText.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 10:00:45.160 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 625
[MASTER] 10:00:45.160 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: Line 626
[MASTER] 10:00:45.160 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: Line 676
[MASTER] 10:00:45.161 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: Line 752
[MASTER] 10:00:45.161 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: Line 817
[MASTER] 10:00:45.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: Line 1144
[MASTER] 10:00:45.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch
[MASTER] 10:00:45.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch
[MASTER] 10:00:45.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch
[MASTER] 10:00:45.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch
[MASTER] 10:00:45.162 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch
[MASTER] 10:00:45.188 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 261: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp Negation of l
[MASTER] 10:00:45.188 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 262: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC 1 l
[MASTER] 10:00:45.188 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 263: weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V:625 - InsertUnaryOp IINC -1 l
[MASTER] 10:00:45.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 276: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:676 - ReplaceConstant - Ignore any words that don't occur at least min frequency times in the training data. If periodic pruning is turned on, then the dictionary is pruned according to this value -> 
[MASTER] 10:00:45.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 289: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_normalize
[MASTER] 10:00:45.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 290: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_wordFrequencies
[MASTER] 10:00:45.189 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 292: weka.classifiers.bayes.NaiveBayesMultinomialText.setNormalizeDocLength(Z)V:724 - ReplaceVariable norm -> m_lowercaseTokens
[MASTER] 10:00:45.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 301: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_minWordP
[MASTER] 10:00:45.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 302: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_t
[MASTER] 10:00:45.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 304: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - ReplaceVariable m_norm -> m_lnorm
[MASTER] 10:00:45.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 305: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:752 - InsertUnaryOp Negation
[MASTER] 10:00:45.190 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 335: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:817 - InsertUnaryOp Negation
[MASTER] 10:00:45.191 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 473: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:1144 - ReplaceConstant - $Revision: 9122 $ -> 
[MASTER] 10:00:45.191 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;:NonEmptyString
[MASTER] 10:00:45.192 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D:Positive
[MASTER] 10:00:45.192 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z:False
[MASTER] 10:00:45.192 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [Output]: weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;:NonEmptyString
[MASTER] 10:00:45.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 10:00:45.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 10:00:45.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 10:00:45.196 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 10:00:45.197 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 10:00:45.199 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V
[MASTER] 10:00:45.199 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 10:00:45.199 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D
[MASTER] 10:00:45.200 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z
[MASTER] 10:00:45.200 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;
[MASTER] 10:00:45.222 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.minWordFrequencyTipText()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:minWordFrequencyTipText()Ljava/lang/String;
[MASTER] 10:00:45.224 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getNorm()D: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getNorm()D
[MASTER] 10:00:45.224 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getUseStopList()Z: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getUseStopList()Z
[MASTER] 10:00:45.228 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.getRevision()Ljava/lang/String;: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:getRevision()Ljava/lang/String;
[MASTER] 10:00:45.228 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch weka.classifiers.bayes.NaiveBayesMultinomialText.setLowercaseTokens(Z)V: root-Branch in context: weka.classifiers.bayes.NaiveBayesMultinomialText:setLowercaseTokens(Z)V
[MASTER] 10:01:01.701 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:01:01.702 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 10:01:48.462 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 124s and 13 generations, 11518 statements, best individual has fitness: 5280.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 338
* Number of covered goals: 187
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 194
* Number of covered goals: 92
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 476
* Number of covered goals: 239
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 112
* Number of covered goals: 49
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 194
* Number of covered goals: 92
* Generated 48 tests with total length 1003
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
[MASTER] 10:08:29.328 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1575454109249/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1575454109249/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.java]]
[MASTER] 10:08:29.328 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:29.328 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:29.333 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 10:08:29.333 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 10:08:29.335 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1575454109249/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 10:08:29 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.testdata.EvoSuiteFile;
16: import org.evosuite.runtime.testdata.FileSystemHandling;
17: import org.junit.runner.RunWith;
18: import weka.attributeSelection.PrincipalComponents;
19: import weka.classifiers.bayes.NaiveBayesMultinomialText;
20: import weka.classifiers.functions.SGDText;
21: import weka.core.SparseInstance;
22: import weka.core.stemmers.IteratedLovinsStemmer;
23: import weka.core.tokenizers.WordTokenizer;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_4_tmp__ESTest extends NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.221751559072405
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\tThe epsilon for round-off error.(default 1.0e-12)");
35:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N\"MS!1*.H=\"art[");
36:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{<cSw_={Y$p*");
37:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
38:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       naiveBayesMultinomialText0.getStemmer();
40:       NaiveBayesMultinomialText.main((String[]) null);
41:       WordTokenizer wordTokenizer0 = new WordTokenizer();
42:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
43:       naiveBayesMultinomialText1.setNorm((-664.0559506825851));
44:       IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
45:       SGDText sGDText0 = new SGDText();
46:       SparseInstance sparseInstance0 = new SparseInstance(0);
47:       sparseInstance0.isMissing(3);
48:       try { 
49:         naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);
50:         fail("Expecting exception: NullPointerException");
51:       
52:       } catch(NullPointerException e) {
53:          //
54:          // no message in exception (getMessage() returned null)
55:          //
56:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
57:       }
58:   }
59: }
RegularFileObject[/tmp/EvoSuite_4_1575454109249/weka/classifiers/bayes/NaiveBayesMultinomialText_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 10:08:29 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
94:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
95:       "org.pentaho.packageManagement.PackageConstraint",
96:       "weka.attributeSelection.AttributeEvaluator",
97:       "org.pentaho.packageManagement.Package",
98:       "weka.core.xml.XMLBasicSerialization",
99:       "weka.classifiers.CostMatrix",
100:       "weka.classifiers.bayes.net.search.local.K2",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.neighboursearch.BallTree",
103:       "weka.core.logging.Logger$Level",
104:       "weka.core.neighboursearch.CoverTree$DistanceNode",
105:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
106:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
107:       "weka.core.DenseInstance",
108:       "weka.core.stemmers.Stemmer",
109:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
110:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "org.bounce.net.DefaultAuthenticator",
113:       "weka.core.neighboursearch.CoverTree$MyHeap",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.functions.SGDText",
118:       "weka.core.RelationalLocator",
119:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.BinarySparseInstance",
133:       "weka.core.AttributeLocator",
134:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
135:       "weka.core.SerializedObject",
136:       "weka.core.Summarizable",
137:       "weka.core.AdditionalMeasureProducer",
138:       "weka.core.neighboursearch.balltrees.BallNode",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Drawable",
141:       "weka.core.matrix.Matrix",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.bayes.BayesNet",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
155:       "weka.core.Tag",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.classifiers.trees.RandomForest",
163:       "weka.filters.StreamableFilter",
164:       "weka.core.Range",
165:       "weka.core.PartitionGenerator",
166:       "weka.core.scripting.JythonSerializableObject",
167:       "weka.classifiers.Classifier",
168:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
169:       "weka.core.Capabilities$Capability",
170:       "weka.core.SparseInstance",
171:       "org.pentaho.packageManagement.PackageManager",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
175:       "weka.attributeSelection.PrincipalComponents",
176:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.stemmers.LovinsStemmer",
179:       "weka.classifiers.Evaluation",
180:       "weka.classifiers.functions.supportVector.Kernel",
181:       "weka.core.WekaPackageManager",
182:       "weka.filters.SupervisedFilter",
183:       "weka.core.TechnicalInformationHandler",
184:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
185:       "weka.core.neighboursearch.LinearNNSearch",
186:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
187:       "weka.classifiers.meta.CostSensitiveClassifier",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
200:       "weka.classifiers.RandomizableClassifier",
201:       "weka.classifiers.SingleClassifierEnhancer",
202:       "weka.core.RevisionUtils",
203:       "weka.core.Instance",
204:       "weka.core.ProtectedProperties",
205:       "weka.estimators.Estimator",
206:       "weka.core.StringLocator",
207:       "weka.classifiers.bayes.net.ADNode",
208:       "weka.core.AttributeStats",
209:       "weka.core.WeightedInstancesHandler",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.core.TechnicalInformation$Field",
213:       "weka.core.neighboursearch.covertrees.Stack",
214:       "weka.filters.unsupervised.attribute.Remove",
215:       "weka.core.Randomizable",
216:       "weka.classifiers.functions.SGD",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.bayes.net.BIFReader",
222:       "weka.classifiers.bayes.net.ParentSet",
223:       "weka.classifiers.rules.ZeroR",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.filters.unsupervised.attribute.Standardize",
226:       "weka.core.stemmers.IteratedLovinsStemmer",
227:       "weka.core.TechnicalInformation",
228:       "weka.core.UnsupportedAttributeTypeException",
229:       "weka.classifiers.Sourcable",
230:       "weka.core.RevisionHandler",
231:       "weka.classifiers.evaluation.output.prediction.PlainText",
232:       "weka.core.neighboursearch.TreePerformanceStats",
233:       "weka.core.xml.XMLSerialization",
234:       "weka.classifiers.xml.XMLClassifier",
235:       "weka.filters.Filter",
236:       "weka.filters.supervised.attribute.Discretize"
237:     );
238:   } 
239: 
240:   private static void resetClasses() {
241:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
242: 
243:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
244:       "weka.classifiers.AbstractClassifier",
245:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
246:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
247:       "weka.core.Capabilities$Capability",
248:       "weka.core.tokenizers.Tokenizer",
249:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
250:       "weka.core.tokenizers.WordTokenizer",
251:       "weka.core.stemmers.NullStemmer",
252:       "weka.classifiers.Evaluation",
253:       "weka.core.Utils",
254:       "weka.core.Option",
255:       "weka.classifiers.RandomizableClassifier",
256:       "weka.core.Tag",
257:       "weka.classifiers.functions.SGDText",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.core.BinarySparseInstance",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.RevisionUtils",
269:       "weka.core.SerializedObject",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.core.neighboursearch.NearestNeighbourSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.NormalizableDistance",
280:       "weka.core.EuclideanDistance",
281:       "weka.core.Range",
282:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
283:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
284:       "weka.core.neighboursearch.balltrees.BallSplitter",
285:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
286:       "weka.core.DenseInstance",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedClassException",
293:       "weka.core.SelectedTag",
294:       "weka.classifiers.bayes.NaiveBayes",
295:       "weka.core.tokenizers.NGramTokenizer",
296:       "weka.core.UnassignedDatasetException",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.WrapperSubsetEval",
299:       "weka.classifiers.rules.ZeroR",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.functions.supportVector.Kernel",
302:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
305:       "weka.attributeSelection.PrincipalComponents",
306:       "weka.core.tokenizers.AlphabeticTokenizer",
307:       "weka.classifiers.SingleClassifierEnhancer",
308:       "weka.classifiers.misc.InputMappedClassifier",
309:       "weka.filters.Filter",
310:       "weka.core.Stopwords",
311:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
312:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
313:       "weka.classifiers.MultipleClassifiersCombiner",
314:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
315:       "weka.classifiers.meta.MultiScheme",
316:       "weka.filters.supervised.attribute.Discretize",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
319:       "weka.core.neighboursearch.balltrees.BallNode",
320:       "weka.core.neighboursearch.LinearNNSearch",
321:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.classifiers.CostMatrix",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.neighboursearch.CoverTree",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.AllFilter",
334:       "weka.core.TechnicalInformation",
335:       "weka.core.TechnicalInformation$Type",
336:       "weka.core.TechnicalInformation$Field",
337:       "weka.core.converters.ArffLoader$ArffReader",
338:       "weka.classifiers.meta.MultiClassClassifier",
339:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
340:       "weka.classifiers.functions.Logistic",
341:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
342:       "weka.core.stemmers.SnowballStemmer",
343:       "weka.core.WekaException",
344:       "weka.core.FindWithCapabilities",
345:       "weka.core.SingleIndex"
346:     );
347:   }
348: }

[MASTER] 10:08:29.335 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\tThe epsilon for round-off error.(default 1.0e-12)");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N\"MS!1*.H=\"art[");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{<cSw_={Y$p*");
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.getStemmer();
NaiveBayesMultinomialText.main((String[]) null);
WordTokenizer wordTokenizer0 = new WordTokenizer();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setNorm((-664.0559506825851));
IteratedLovinsStemmer iteratedLovinsStemmer0 = new IteratedLovinsStemmer();
SGDText sGDText0 = new SGDText();
SparseInstance sparseInstance0 = new SparseInstance(0);
sparseInstance0.isMissing(3);
naiveBayesMultinomialText0.distributionForInstance(sparseInstance0);

[MASTER] 10:08:30.806 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_31_1575454110772/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_31_1575454110772/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.java]]
[MASTER] 10:08:30.806 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:30.806 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:30.807 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 29
[MASTER] 10:08:30.808 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_31_1575454110772/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 10:08:30 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.LinkedHashMap;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.testdata.FileSystemHandling;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.tokenizers.WordTokenizer;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
19: public class NaiveBayesMultinomialText_31_tmp__ESTest extends NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding {
20: 
21:   /**
22:   //Test case number: 0
23:   /*Coverage entropy=3.358693545177819
24:   */
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
28:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
29:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
30:       naiveBayesMultinomialText0.m_inputVector = null;
31:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
32:       naiveBayesMultinomialText0.pruneDictionary();
33:       naiveBayesMultinomialText0.setPeriodicPruning((-2464));
34:       naiveBayesMultinomialText0.getStemmer();
35:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
36:       naiveBayesMultinomialText0.setPeriodicPruning((-2464));
37:       naiveBayesMultinomialText0.getStemmer();
38:       String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
39:       FileSystemHandling.shouldAllThrowIOExceptions();
40:       naiveBayesMultinomialText0.setMinWordFrequency((-5377.52304095653));
41:       WordTokenizer wordTokenizer0 = new WordTokenizer();
42:       naiveBayesMultinomialText0.setOptions(stringArray0);
43:       double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
44:       assertEquals((-2464), naiveBayesMultinomialText0.getPeriodicPruning());
45:       assertEquals(3.0, double0, 0.01);
46:   }
47: }
RegularFileObject[/tmp/EvoSuite_31_1575454110772/weka/classifiers/bayes/NaiveBayesMultinomialText_31_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 10:08:30 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
94:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
95:       "org.pentaho.packageManagement.PackageConstraint",
96:       "weka.attributeSelection.AttributeEvaluator",
97:       "org.pentaho.packageManagement.Package",
98:       "weka.core.xml.XMLBasicSerialization",
99:       "weka.classifiers.CostMatrix",
100:       "weka.classifiers.bayes.net.search.local.K2",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.neighboursearch.BallTree",
103:       "weka.core.logging.Logger$Level",
104:       "weka.core.neighboursearch.CoverTree$DistanceNode",
105:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
106:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
107:       "weka.core.DenseInstance",
108:       "weka.core.stemmers.Stemmer",
109:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
110:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "org.bounce.net.DefaultAuthenticator",
113:       "weka.core.neighboursearch.CoverTree$MyHeap",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.functions.SGDText",
118:       "weka.core.RelationalLocator",
119:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.BinarySparseInstance",
133:       "weka.core.AttributeLocator",
134:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
135:       "weka.core.SerializedObject",
136:       "weka.core.Summarizable",
137:       "weka.core.AdditionalMeasureProducer",
138:       "weka.core.neighboursearch.balltrees.BallNode",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Drawable",
141:       "weka.core.matrix.Matrix",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.bayes.BayesNet",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
155:       "weka.core.Tag",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.classifiers.trees.RandomForest",
163:       "weka.filters.StreamableFilter",
164:       "weka.core.Range",
165:       "weka.core.PartitionGenerator",
166:       "weka.core.scripting.JythonSerializableObject",
167:       "weka.classifiers.Classifier",
168:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
169:       "weka.core.Capabilities$Capability",
170:       "weka.core.SparseInstance",
171:       "org.pentaho.packageManagement.PackageManager",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
175:       "weka.attributeSelection.PrincipalComponents",
176:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.stemmers.LovinsStemmer",
179:       "weka.classifiers.Evaluation",
180:       "weka.classifiers.functions.supportVector.Kernel",
181:       "weka.core.WekaPackageManager",
182:       "weka.filters.SupervisedFilter",
183:       "weka.core.TechnicalInformationHandler",
184:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
185:       "weka.core.neighboursearch.LinearNNSearch",
186:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
187:       "weka.classifiers.meta.CostSensitiveClassifier",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
200:       "weka.classifiers.RandomizableClassifier",
201:       "weka.classifiers.SingleClassifierEnhancer",
202:       "weka.core.RevisionUtils",
203:       "weka.core.Instance",
204:       "weka.core.ProtectedProperties",
205:       "weka.estimators.Estimator",
206:       "weka.core.StringLocator",
207:       "weka.classifiers.bayes.net.ADNode",
208:       "weka.core.AttributeStats",
209:       "weka.core.WeightedInstancesHandler",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.core.TechnicalInformation$Field",
213:       "weka.core.neighboursearch.covertrees.Stack",
214:       "weka.filters.unsupervised.attribute.Remove",
215:       "weka.core.Randomizable",
216:       "weka.classifiers.functions.SGD",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.bayes.net.BIFReader",
222:       "weka.classifiers.bayes.net.ParentSet",
223:       "weka.classifiers.rules.ZeroR",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.filters.unsupervised.attribute.Standardize",
226:       "weka.core.stemmers.IteratedLovinsStemmer",
227:       "weka.core.TechnicalInformation",
228:       "weka.core.UnsupportedAttributeTypeException",
229:       "weka.classifiers.Sourcable",
230:       "weka.core.RevisionHandler",
231:       "weka.classifiers.evaluation.output.prediction.PlainText",
232:       "weka.core.neighboursearch.TreePerformanceStats",
233:       "weka.core.xml.XMLSerialization",
234:       "weka.classifiers.xml.XMLClassifier",
235:       "weka.filters.Filter",
236:       "weka.filters.supervised.attribute.Discretize"
237:     );
238:   } 
239: 
240:   private static void resetClasses() {
241:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_31_tmp__ESTest_scaffolding.class.getClassLoader()); 
242: 
243:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
244:       "weka.classifiers.AbstractClassifier",
245:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
246:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
247:       "weka.core.Capabilities$Capability",
248:       "weka.core.tokenizers.Tokenizer",
249:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
250:       "weka.core.tokenizers.WordTokenizer",
251:       "weka.core.stemmers.NullStemmer",
252:       "weka.classifiers.Evaluation",
253:       "weka.core.Utils",
254:       "weka.core.Option",
255:       "weka.classifiers.RandomizableClassifier",
256:       "weka.core.Tag",
257:       "weka.classifiers.functions.SGDText",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.core.BinarySparseInstance",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.RevisionUtils",
269:       "weka.core.SerializedObject",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.core.neighboursearch.NearestNeighbourSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.NormalizableDistance",
280:       "weka.core.EuclideanDistance",
281:       "weka.core.Range",
282:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
283:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
284:       "weka.core.neighboursearch.balltrees.BallSplitter",
285:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
286:       "weka.core.DenseInstance",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedClassException",
293:       "weka.core.SelectedTag",
294:       "weka.classifiers.bayes.NaiveBayes",
295:       "weka.core.tokenizers.NGramTokenizer",
296:       "weka.core.UnassignedDatasetException",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.WrapperSubsetEval",
299:       "weka.classifiers.rules.ZeroR",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.functions.supportVector.Kernel",
302:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
305:       "weka.attributeSelection.PrincipalComponents",
306:       "weka.core.tokenizers.AlphabeticTokenizer",
307:       "weka.classifiers.SingleClassifierEnhancer",
308:       "weka.classifiers.misc.InputMappedClassifier",
309:       "weka.filters.Filter",
310:       "weka.core.Stopwords",
311:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
312:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
313:       "weka.classifiers.MultipleClassifiersCombiner",
314:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
315:       "weka.classifiers.meta.MultiScheme",
316:       "weka.filters.supervised.attribute.Discretize",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
319:       "weka.core.neighboursearch.balltrees.BallNode",
320:       "weka.core.neighboursearch.LinearNNSearch",
321:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.classifiers.CostMatrix",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.neighboursearch.CoverTree",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.AllFilter",
334:       "weka.core.TechnicalInformation",
335:       "weka.core.TechnicalInformation$Type",
336:       "weka.core.TechnicalInformation$Field",
337:       "weka.core.converters.ArffLoader$ArffReader",
338:       "weka.classifiers.meta.MultiClassClassifier",
339:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
340:       "weka.classifiers.functions.Logistic",
341:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
342:       "weka.core.stemmers.SnowballStemmer",
343:       "weka.core.WekaException",
344:       "weka.core.FindWithCapabilities",
345:       "weka.core.SingleIndex"
346:     );
347:   }
348: }

[MASTER] 10:08:30.810 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setPeriodicPruning((-2464));
naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.setPeriodicPruning((-2464));
naiveBayesMultinomialText0.getStemmer();
String[] stringArray0 = naiveBayesMultinomialText0.getOptions();
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.setMinWordFrequency((-5377.52304095653));
WordTokenizer wordTokenizer0 = new WordTokenizer();
naiveBayesMultinomialText0.setOptions(stringArray0);
double double0 = naiveBayesMultinomialText0.getMinWordFrequency();
assertEquals((-2464), naiveBayesMultinomialText0.getPeriodicPruning());
assertEquals(3.0, double0, 0.01);


[MASTER] 10:08:30.845 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_32_1575454110811/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_32_1575454110811/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.java]]
[MASTER] 10:08:30.845 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:30.845 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:30.846 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 30
[MASTER] 10:08:30.847 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_32_1575454110811/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 10:08:30 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.LinkedHashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import weka.classifiers.bayes.NaiveBayesMultinomialText;
16: import weka.core.stemmers.NullStemmer;
17: import weka.core.stemmers.Stemmer;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class NaiveBayesMultinomialText_32_tmp__ESTest extends NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
21: 
22:   /**
23:   //Test case number: 0
24:   /*Coverage entropy=3.0549710111377664
25:   */
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
29:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
30:       LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
31:       naiveBayesMultinomialText0.m_inputVector = null;
32:       naiveBayesMultinomialText0.normalizeDocLengthTipText();
33:       naiveBayesMultinomialText0.pruneDictionary();
34:       naiveBayesMultinomialText0.setPeriodicPruning((-2464));
35:       Stemmer stemmer0 = naiveBayesMultinomialText0.getStemmer();
36:       naiveBayesMultinomialText0.setUseWordFrequencies(true);
37:       naiveBayesMultinomialText0.setPeriodicPruning((-2464));
38:       naiveBayesMultinomialText0.getStemmer();
39:       String[] stringArray0 = new String[4];
40:       stringArray0[0] = "If true then document length is normalized according to the settings for norm and lnorm";
41:       stringArray0[1] = "If true then document length is normalized according to the settings for norm and lnorm";
42:       stringArray0[2] = "If true then document length is normalized according to the settings for norm and lnorm";
43:       stringArray0[3] = "If true then document length is normalized according to the settings for norm and lnorm";
44:       naiveBayesMultinomialText0.getUseWordFrequencies();
45:       NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
46:       naiveBayesMultinomialText1.setPeriodicPruning(0);
47:       File file0 = naiveBayesMultinomialText0.getStopwords();
48:       naiveBayesMultinomialText0.setStopwords(file0);
49:       naiveBayesMultinomialText0.tokenizerTipText();
50:       naiveBayesMultinomialText1.setNormalizeDocLength(true);
51:       naiveBayesMultinomialText1.setLowercaseTokens(true);
52:       NullStemmer nullStemmer0 = (NullStemmer)naiveBayesMultinomialText0.m_stemmer;
53:       naiveBayesMultinomialText1.setStemmer(stemmer0);
54:       assertTrue(naiveBayesMultinomialText1.getLowercaseTokens());
55:       
56:       NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
57:       naiveBayesMultinomialText2.LNormTipText();
58:       naiveBayesMultinomialText2.setNormalizeDocLength(true);
59:       assertEquals(2.0, naiveBayesMultinomialText2.getLNorm(), 0.01);
60:   }
61: }
RegularFileObject[/tmp/EvoSuite_32_1575454110811/weka/classifiers/bayes/NaiveBayesMultinomialText_32_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 10:08:30 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
94:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
95:       "org.pentaho.packageManagement.PackageConstraint",
96:       "weka.attributeSelection.AttributeEvaluator",
97:       "org.pentaho.packageManagement.Package",
98:       "weka.core.xml.XMLBasicSerialization",
99:       "weka.classifiers.CostMatrix",
100:       "weka.classifiers.bayes.net.search.local.K2",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.neighboursearch.BallTree",
103:       "weka.core.logging.Logger$Level",
104:       "weka.core.neighboursearch.CoverTree$DistanceNode",
105:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
106:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
107:       "weka.core.DenseInstance",
108:       "weka.core.stemmers.Stemmer",
109:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
110:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "org.bounce.net.DefaultAuthenticator",
113:       "weka.core.neighboursearch.CoverTree$MyHeap",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.functions.SGDText",
118:       "weka.core.RelationalLocator",
119:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.BinarySparseInstance",
133:       "weka.core.AttributeLocator",
134:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
135:       "weka.core.SerializedObject",
136:       "weka.core.Summarizable",
137:       "weka.core.AdditionalMeasureProducer",
138:       "weka.core.neighboursearch.balltrees.BallNode",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Drawable",
141:       "weka.core.matrix.Matrix",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.bayes.BayesNet",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
155:       "weka.core.Tag",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.classifiers.trees.RandomForest",
163:       "weka.filters.StreamableFilter",
164:       "weka.core.Range",
165:       "weka.core.PartitionGenerator",
166:       "weka.core.scripting.JythonSerializableObject",
167:       "weka.classifiers.Classifier",
168:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
169:       "weka.core.Capabilities$Capability",
170:       "weka.core.SparseInstance",
171:       "org.pentaho.packageManagement.PackageManager",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
175:       "weka.attributeSelection.PrincipalComponents",
176:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.stemmers.LovinsStemmer",
179:       "weka.classifiers.Evaluation",
180:       "weka.classifiers.functions.supportVector.Kernel",
181:       "weka.core.WekaPackageManager",
182:       "weka.filters.SupervisedFilter",
183:       "weka.core.TechnicalInformationHandler",
184:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
185:       "weka.core.neighboursearch.LinearNNSearch",
186:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
187:       "weka.classifiers.meta.CostSensitiveClassifier",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
200:       "weka.classifiers.RandomizableClassifier",
201:       "weka.classifiers.SingleClassifierEnhancer",
202:       "weka.core.RevisionUtils",
203:       "weka.core.Instance",
204:       "weka.core.ProtectedProperties",
205:       "weka.estimators.Estimator",
206:       "weka.core.StringLocator",
207:       "weka.classifiers.bayes.net.ADNode",
208:       "weka.core.AttributeStats",
209:       "weka.core.WeightedInstancesHandler",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.core.TechnicalInformation$Field",
213:       "weka.core.neighboursearch.covertrees.Stack",
214:       "weka.filters.unsupervised.attribute.Remove",
215:       "weka.core.Randomizable",
216:       "weka.classifiers.functions.SGD",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.bayes.net.BIFReader",
222:       "weka.classifiers.bayes.net.ParentSet",
223:       "weka.classifiers.rules.ZeroR",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.filters.unsupervised.attribute.Standardize",
226:       "weka.core.stemmers.IteratedLovinsStemmer",
227:       "weka.core.TechnicalInformation",
228:       "weka.core.UnsupportedAttributeTypeException",
229:       "weka.classifiers.Sourcable",
230:       "weka.core.RevisionHandler",
231:       "weka.classifiers.evaluation.output.prediction.PlainText",
232:       "weka.core.neighboursearch.TreePerformanceStats",
233:       "weka.core.xml.XMLSerialization",
234:       "weka.classifiers.xml.XMLClassifier",
235:       "weka.filters.Filter",
236:       "weka.filters.supervised.attribute.Discretize"
237:     );
238:   } 
239: 
240:   private static void resetClasses() {
241:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_32_tmp__ESTest_scaffolding.class.getClassLoader()); 
242: 
243:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
244:       "weka.classifiers.AbstractClassifier",
245:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
246:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
247:       "weka.core.Capabilities$Capability",
248:       "weka.core.tokenizers.Tokenizer",
249:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
250:       "weka.core.tokenizers.WordTokenizer",
251:       "weka.core.stemmers.NullStemmer",
252:       "weka.classifiers.Evaluation",
253:       "weka.core.Utils",
254:       "weka.core.Option",
255:       "weka.classifiers.RandomizableClassifier",
256:       "weka.core.Tag",
257:       "weka.classifiers.functions.SGDText",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.core.BinarySparseInstance",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.RevisionUtils",
269:       "weka.core.SerializedObject",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.core.neighboursearch.NearestNeighbourSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.NormalizableDistance",
280:       "weka.core.EuclideanDistance",
281:       "weka.core.Range",
282:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
283:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
284:       "weka.core.neighboursearch.balltrees.BallSplitter",
285:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
286:       "weka.core.DenseInstance",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedClassException",
293:       "weka.core.SelectedTag",
294:       "weka.classifiers.bayes.NaiveBayes",
295:       "weka.core.tokenizers.NGramTokenizer",
296:       "weka.core.UnassignedDatasetException",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.WrapperSubsetEval",
299:       "weka.classifiers.rules.ZeroR",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.functions.supportVector.Kernel",
302:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
305:       "weka.attributeSelection.PrincipalComponents",
306:       "weka.core.tokenizers.AlphabeticTokenizer",
307:       "weka.classifiers.SingleClassifierEnhancer",
308:       "weka.classifiers.misc.InputMappedClassifier",
309:       "weka.filters.Filter",
310:       "weka.core.Stopwords",
311:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
312:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
313:       "weka.classifiers.MultipleClassifiersCombiner",
314:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
315:       "weka.classifiers.meta.MultiScheme",
316:       "weka.filters.supervised.attribute.Discretize",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
319:       "weka.core.neighboursearch.balltrees.BallNode",
320:       "weka.core.neighboursearch.LinearNNSearch",
321:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.classifiers.CostMatrix",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.neighboursearch.CoverTree",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.AllFilter",
334:       "weka.core.TechnicalInformation",
335:       "weka.core.TechnicalInformation$Type",
336:       "weka.core.TechnicalInformation$Field",
337:       "weka.core.converters.ArffLoader$ArffReader",
338:       "weka.classifiers.meta.MultiClassClassifier",
339:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
340:       "weka.classifiers.functions.Logistic",
341:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
342:       "weka.core.stemmers.SnowballStemmer",
343:       "weka.core.WekaException",
344:       "weka.core.FindWithCapabilities",
345:       "weka.core.SingleIndex"
346:     );
347:   }
348: }

[MASTER] 10:08:30.848 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText0.normalizeDocLengthTipText();
LinkedHashMap<String, NaiveBayesMultinomialText.Count> linkedHashMap0 = naiveBayesMultinomialText0.m_inputVector;
naiveBayesMultinomialText0.m_inputVector = null;
naiveBayesMultinomialText0.normalizeDocLengthTipText();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setPeriodicPruning((-2464));
Stemmer stemmer0 = naiveBayesMultinomialText0.getStemmer();
naiveBayesMultinomialText0.setUseWordFrequencies(true);
naiveBayesMultinomialText0.setPeriodicPruning((-2464));
naiveBayesMultinomialText0.getStemmer();
String[] stringArray0 = new String[4];
stringArray0[0] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[1] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[2] = "If true then document length is normalized according to the settings for norm and lnorm";
stringArray0[3] = "If true then document length is normalized according to the settings for norm and lnorm";
naiveBayesMultinomialText0.getUseWordFrequencies();
NaiveBayesMultinomialText naiveBayesMultinomialText1 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText1.setPeriodicPruning(0);
File file0 = naiveBayesMultinomialText0.getStopwords();
naiveBayesMultinomialText0.setStopwords(file0);
naiveBayesMultinomialText0.tokenizerTipText();
naiveBayesMultinomialText1.setNormalizeDocLength(true);
naiveBayesMultinomialText1.setLowercaseTokens(true);
NullStemmer nullStemmer0 = (NullStemmer)naiveBayesMultinomialText0.m_stemmer;
naiveBayesMultinomialText1.setStemmer(stemmer0);
assertTrue(naiveBayesMultinomialText1.getLowercaseTokens());

NaiveBayesMultinomialText naiveBayesMultinomialText2 = new NaiveBayesMultinomialText();
naiveBayesMultinomialText2.LNormTipText();
naiveBayesMultinomialText2.setNormalizeDocLength(true);
assertEquals(2.0, naiveBayesMultinomialText2.getLNorm(), 0.01);


[MASTER] 10:08:31.500 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_41_1575454111466/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_41_1575454111466/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.java]]
[MASTER] 10:08:31.500 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:31.500 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:31.501 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 10:08:31.501 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 10:08:31.501 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 10:08:31.502 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_41_1575454111466/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 10:08:31 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.mock.java.io.MockFile;
18: import org.evosuite.runtime.testdata.EvoSuiteFile;
19: import org.evosuite.runtime.testdata.FileSystemHandling;
20: import org.junit.runner.RunWith;
21: import weka.classifiers.bayes.NaiveBayesMultinomialText;
22: import weka.classifiers.meta.CostSensitiveClassifier;
23: import weka.core.tokenizers.WordTokenizer;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_41_tmp__ESTest extends NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.369978708581614
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\tThe epsilon for round-off error. (default 1.0e-12)");
35:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N\"MS!1*.H=\"art[");
36:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{<cSw_={Y$p*");
37:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
38:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
40:       naiveBayesMultinomialText0.pruneDictionary();
41:       naiveBayesMultinomialText0.LNormTipText();
42:       System.setCurrentTimeMillis(585L);
43:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
44:       File file0 = costSensitiveClassifier0.getOnDemandDirectory();
45:       naiveBayesMultinomialText0.setStopwords(file0);
46:       MockFile mockFile0 = new MockFile("{<cSw_={Y$p*", "");
47:       naiveBayesMultinomialText0.setStopwords(mockFile0);
48:       naiveBayesMultinomialText0.pruneDictionary();
49:       naiveBayesMultinomialText0.setPeriodicPruning(2);
50:       naiveBayesMultinomialText0.getStemmer();
51:       FileSystemHandling.shouldAllThrowIOExceptions();
52:       naiveBayesMultinomialText0.setMinWordFrequency(0.0);
53:       WordTokenizer wordTokenizer0 = new WordTokenizer();
54:       naiveBayesMultinomialText0.getMinWordFrequency();
55:       boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J~)c");
56:       assertTrue(boolean1 == boolean0);
57:   }
58: }
RegularFileObject[/tmp/EvoSuite_41_1575454111466/weka/classifiers/bayes/NaiveBayesMultinomialText_41_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 10:08:31 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
94:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
95:       "org.pentaho.packageManagement.PackageConstraint",
96:       "weka.attributeSelection.AttributeEvaluator",
97:       "org.pentaho.packageManagement.Package",
98:       "weka.core.xml.XMLBasicSerialization",
99:       "weka.classifiers.CostMatrix",
100:       "weka.classifiers.bayes.net.search.local.K2",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.neighboursearch.BallTree",
103:       "weka.core.logging.Logger$Level",
104:       "weka.core.neighboursearch.CoverTree$DistanceNode",
105:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
106:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
107:       "weka.core.DenseInstance",
108:       "weka.core.stemmers.Stemmer",
109:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
110:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "org.bounce.net.DefaultAuthenticator",
113:       "weka.core.neighboursearch.CoverTree$MyHeap",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.functions.SGDText",
118:       "weka.core.RelationalLocator",
119:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.BinarySparseInstance",
133:       "weka.core.AttributeLocator",
134:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
135:       "weka.core.SerializedObject",
136:       "weka.core.Summarizable",
137:       "weka.core.AdditionalMeasureProducer",
138:       "weka.core.neighboursearch.balltrees.BallNode",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Drawable",
141:       "weka.core.matrix.Matrix",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.bayes.BayesNet",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
155:       "weka.core.Tag",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.classifiers.trees.RandomForest",
163:       "weka.filters.StreamableFilter",
164:       "weka.core.Range",
165:       "weka.core.PartitionGenerator",
166:       "weka.core.scripting.JythonSerializableObject",
167:       "weka.classifiers.Classifier",
168:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
169:       "weka.core.Capabilities$Capability",
170:       "weka.core.SparseInstance",
171:       "org.pentaho.packageManagement.PackageManager",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
175:       "weka.attributeSelection.PrincipalComponents",
176:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.stemmers.LovinsStemmer",
179:       "weka.classifiers.Evaluation",
180:       "weka.classifiers.functions.supportVector.Kernel",
181:       "weka.core.WekaPackageManager",
182:       "weka.filters.SupervisedFilter",
183:       "weka.core.TechnicalInformationHandler",
184:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
185:       "weka.core.neighboursearch.LinearNNSearch",
186:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
187:       "weka.classifiers.meta.CostSensitiveClassifier",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
200:       "weka.classifiers.RandomizableClassifier",
201:       "weka.classifiers.SingleClassifierEnhancer",
202:       "weka.core.RevisionUtils",
203:       "weka.core.Instance",
204:       "weka.core.ProtectedProperties",
205:       "weka.estimators.Estimator",
206:       "weka.core.StringLocator",
207:       "weka.classifiers.bayes.net.ADNode",
208:       "weka.core.AttributeStats",
209:       "weka.core.WeightedInstancesHandler",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.core.TechnicalInformation$Field",
213:       "weka.core.neighboursearch.covertrees.Stack",
214:       "weka.filters.unsupervised.attribute.Remove",
215:       "weka.core.Randomizable",
216:       "weka.classifiers.functions.SGD",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.bayes.net.BIFReader",
222:       "weka.classifiers.bayes.net.ParentSet",
223:       "weka.classifiers.rules.ZeroR",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.filters.unsupervised.attribute.Standardize",
226:       "weka.core.stemmers.IteratedLovinsStemmer",
227:       "weka.core.TechnicalInformation",
228:       "weka.core.UnsupportedAttributeTypeException",
229:       "weka.classifiers.Sourcable",
230:       "weka.core.RevisionHandler",
231:       "weka.classifiers.evaluation.output.prediction.PlainText",
232:       "weka.core.neighboursearch.TreePerformanceStats",
233:       "weka.core.xml.XMLSerialization",
234:       "weka.classifiers.xml.XMLClassifier",
235:       "weka.filters.Filter",
236:       "weka.filters.supervised.attribute.Discretize"
237:     );
238:   } 
239: 
240:   private static void resetClasses() {
241:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_41_tmp__ESTest_scaffolding.class.getClassLoader()); 
242: 
243:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
244:       "weka.classifiers.AbstractClassifier",
245:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
246:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
247:       "weka.core.Capabilities$Capability",
248:       "weka.core.tokenizers.Tokenizer",
249:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
250:       "weka.core.tokenizers.WordTokenizer",
251:       "weka.core.stemmers.NullStemmer",
252:       "weka.classifiers.Evaluation",
253:       "weka.core.Utils",
254:       "weka.core.Option",
255:       "weka.classifiers.RandomizableClassifier",
256:       "weka.core.Tag",
257:       "weka.classifiers.functions.SGDText",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.core.BinarySparseInstance",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.RevisionUtils",
269:       "weka.core.SerializedObject",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.core.neighboursearch.NearestNeighbourSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.NormalizableDistance",
280:       "weka.core.EuclideanDistance",
281:       "weka.core.Range",
282:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
283:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
284:       "weka.core.neighboursearch.balltrees.BallSplitter",
285:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
286:       "weka.core.DenseInstance",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedClassException",
293:       "weka.core.SelectedTag",
294:       "weka.classifiers.bayes.NaiveBayes",
295:       "weka.core.tokenizers.NGramTokenizer",
296:       "weka.core.UnassignedDatasetException",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.WrapperSubsetEval",
299:       "weka.classifiers.rules.ZeroR",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.functions.supportVector.Kernel",
302:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
305:       "weka.attributeSelection.PrincipalComponents",
306:       "weka.core.tokenizers.AlphabeticTokenizer",
307:       "weka.classifiers.SingleClassifierEnhancer",
308:       "weka.classifiers.misc.InputMappedClassifier",
309:       "weka.filters.Filter",
310:       "weka.core.Stopwords",
311:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
312:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
313:       "weka.classifiers.MultipleClassifiersCombiner",
314:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
315:       "weka.classifiers.meta.MultiScheme",
316:       "weka.filters.supervised.attribute.Discretize",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
319:       "weka.core.neighboursearch.balltrees.BallNode",
320:       "weka.core.neighboursearch.LinearNNSearch",
321:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.classifiers.CostMatrix",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.neighboursearch.CoverTree",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.AllFilter",
334:       "weka.core.TechnicalInformation",
335:       "weka.core.TechnicalInformation$Type",
336:       "weka.core.TechnicalInformation$Field",
337:       "weka.core.converters.ArffLoader$ArffReader",
338:       "weka.classifiers.meta.MultiClassClassifier",
339:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
340:       "weka.classifiers.functions.Logistic",
341:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
342:       "weka.core.stemmers.SnowballStemmer",
343:       "weka.core.WekaException",
344:       "weka.core.FindWithCapabilities",
345:       "weka.core.SingleIndex"
346:     );
347:   }
348: }

[MASTER] 10:08:31.502 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\tThe epsilon for round-off error. (default 1.0e-12)");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N\"MS!1*.H=\"art[");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{<cSw_={Y$p*");
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.LNormTipText();
System.setCurrentTimeMillis(585L);
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
File file0 = costSensitiveClassifier0.getOnDemandDirectory();
naiveBayesMultinomialText0.setStopwords(file0);
MockFile mockFile0 = new MockFile("{<cSw_={Y$p*", "");
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setPeriodicPruning(2);
naiveBayesMultinomialText0.getStemmer();
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.setMinWordFrequency(0.0);
WordTokenizer wordTokenizer0 = new WordTokenizer();
naiveBayesMultinomialText0.getMinWordFrequency();
boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J~)c");
assertTrue(boolean1 == boolean0);


[MASTER] 10:08:31.569 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_43_1575454111537/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_43_1575454111537/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.java]]
[MASTER] 10:08:31.569 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:31.569 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:31.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 10:08:31.570 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 10:08:31.570 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_43_1575454111537/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 10:08:31 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.File;
12: import java.util.HashMap;
13: import java.util.LinkedHashMap;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.mock.java.io.MockFile;
18: import org.evosuite.runtime.testdata.EvoSuiteFile;
19: import org.evosuite.runtime.testdata.FileSystemHandling;
20: import org.junit.runner.RunWith;
21: import weka.classifiers.bayes.NaiveBayesMultinomialText;
22: import weka.classifiers.meta.CostSensitiveClassifier;
23: import weka.core.tokenizers.WordTokenizer;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_43_tmp__ESTest extends NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.413861375019163
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
35:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N\"MS!1*.H=\"art[");
36:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FINER");
37:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
38:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       naiveBayesMultinomialText0.pruneDictionary();
40:       System.setCurrentTimeMillis(585L);
41:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
42:       File file0 = costSensitiveClassifier0.getOnDemandDirectory();
43:       naiveBayesMultinomialText0.setStopwords(file0);
44:       MockFile mockFile0 = new MockFile("");
45:       naiveBayesMultinomialText0.setStopwords(mockFile0);
46:       naiveBayesMultinomialText0.pruneDictionary();
47:       naiveBayesMultinomialText0.setPeriodicPruning(2);
48:       naiveBayesMultinomialText0.getStemmer();
49:       FileSystemHandling.shouldAllThrowIOExceptions();
50:       naiveBayesMultinomialText0.setMinWordFrequency((-118.77084));
51:       WordTokenizer wordTokenizer0 = new WordTokenizer();
52:       naiveBayesMultinomialText0.getMinWordFrequency();
53:       naiveBayesMultinomialText0.getUseStopList();
54:       // Undeclared exception!
55:       try { 
56:         naiveBayesMultinomialText0.pruneDictionary();
57:         fail("Expecting exception: NullPointerException");
58:       
59:       } catch(NullPointerException e) {
60:          //
61:          // no message in exception (getMessage() returned null)
62:          //
63:          verifyException("weka.classifiers.bayes.NaiveBayesMultinomialText", e);
64:       }
65:   }
66: }
RegularFileObject[/tmp/EvoSuite_43_1575454111537/weka/classifiers/bayes/NaiveBayesMultinomialText_43_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 10:08:31 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
94:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
95:       "org.pentaho.packageManagement.PackageConstraint",
96:       "weka.attributeSelection.AttributeEvaluator",
97:       "org.pentaho.packageManagement.Package",
98:       "weka.core.xml.XMLBasicSerialization",
99:       "weka.classifiers.CostMatrix",
100:       "weka.classifiers.bayes.net.search.local.K2",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.neighboursearch.BallTree",
103:       "weka.core.logging.Logger$Level",
104:       "weka.core.neighboursearch.CoverTree$DistanceNode",
105:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
106:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
107:       "weka.core.DenseInstance",
108:       "weka.core.stemmers.Stemmer",
109:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
110:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "org.bounce.net.DefaultAuthenticator",
113:       "weka.core.neighboursearch.CoverTree$MyHeap",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.functions.SGDText",
118:       "weka.core.RelationalLocator",
119:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.BinarySparseInstance",
133:       "weka.core.AttributeLocator",
134:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
135:       "weka.core.SerializedObject",
136:       "weka.core.Summarizable",
137:       "weka.core.AdditionalMeasureProducer",
138:       "weka.core.neighboursearch.balltrees.BallNode",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Drawable",
141:       "weka.core.matrix.Matrix",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.bayes.BayesNet",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
155:       "weka.core.Tag",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.classifiers.trees.RandomForest",
163:       "weka.filters.StreamableFilter",
164:       "weka.core.Range",
165:       "weka.core.PartitionGenerator",
166:       "weka.core.scripting.JythonSerializableObject",
167:       "weka.classifiers.Classifier",
168:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
169:       "weka.core.Capabilities$Capability",
170:       "weka.core.SparseInstance",
171:       "org.pentaho.packageManagement.PackageManager",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
175:       "weka.attributeSelection.PrincipalComponents",
176:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.stemmers.LovinsStemmer",
179:       "weka.classifiers.Evaluation",
180:       "weka.classifiers.functions.supportVector.Kernel",
181:       "weka.core.WekaPackageManager",
182:       "weka.filters.SupervisedFilter",
183:       "weka.core.TechnicalInformationHandler",
184:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
185:       "weka.core.neighboursearch.LinearNNSearch",
186:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
187:       "weka.classifiers.meta.CostSensitiveClassifier",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
200:       "weka.classifiers.RandomizableClassifier",
201:       "weka.classifiers.SingleClassifierEnhancer",
202:       "weka.core.RevisionUtils",
203:       "weka.core.Instance",
204:       "weka.core.ProtectedProperties",
205:       "weka.estimators.Estimator",
206:       "weka.core.StringLocator",
207:       "weka.classifiers.bayes.net.ADNode",
208:       "weka.core.AttributeStats",
209:       "weka.core.WeightedInstancesHandler",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.core.TechnicalInformation$Field",
213:       "weka.core.neighboursearch.covertrees.Stack",
214:       "weka.filters.unsupervised.attribute.Remove",
215:       "weka.core.Randomizable",
216:       "weka.classifiers.functions.SGD",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.bayes.net.BIFReader",
222:       "weka.classifiers.bayes.net.ParentSet",
223:       "weka.classifiers.rules.ZeroR",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.filters.unsupervised.attribute.Standardize",
226:       "weka.core.stemmers.IteratedLovinsStemmer",
227:       "weka.core.TechnicalInformation",
228:       "weka.core.UnsupportedAttributeTypeException",
229:       "weka.classifiers.Sourcable",
230:       "weka.core.RevisionHandler",
231:       "weka.classifiers.evaluation.output.prediction.PlainText",
232:       "weka.core.neighboursearch.TreePerformanceStats",
233:       "weka.core.xml.XMLSerialization",
234:       "weka.classifiers.xml.XMLClassifier",
235:       "weka.filters.Filter",
236:       "weka.filters.supervised.attribute.Discretize"
237:     );
238:   } 
239: 
240:   private static void resetClasses() {
241:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_43_tmp__ESTest_scaffolding.class.getClassLoader()); 
242: 
243:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
244:       "weka.classifiers.AbstractClassifier",
245:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
246:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
247:       "weka.core.Capabilities$Capability",
248:       "weka.core.tokenizers.Tokenizer",
249:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
250:       "weka.core.tokenizers.WordTokenizer",
251:       "weka.core.stemmers.NullStemmer",
252:       "weka.classifiers.Evaluation",
253:       "weka.core.Utils",
254:       "weka.core.Option",
255:       "weka.classifiers.RandomizableClassifier",
256:       "weka.core.Tag",
257:       "weka.classifiers.functions.SGDText",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.core.BinarySparseInstance",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.RevisionUtils",
269:       "weka.core.SerializedObject",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.core.neighboursearch.NearestNeighbourSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.NormalizableDistance",
280:       "weka.core.EuclideanDistance",
281:       "weka.core.Range",
282:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
283:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
284:       "weka.core.neighboursearch.balltrees.BallSplitter",
285:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
286:       "weka.core.DenseInstance",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedClassException",
293:       "weka.core.SelectedTag",
294:       "weka.classifiers.bayes.NaiveBayes",
295:       "weka.core.tokenizers.NGramTokenizer",
296:       "weka.core.UnassignedDatasetException",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.WrapperSubsetEval",
299:       "weka.classifiers.rules.ZeroR",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.functions.supportVector.Kernel",
302:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
305:       "weka.attributeSelection.PrincipalComponents",
306:       "weka.core.tokenizers.AlphabeticTokenizer",
307:       "weka.classifiers.SingleClassifierEnhancer",
308:       "weka.classifiers.misc.InputMappedClassifier",
309:       "weka.filters.Filter",
310:       "weka.core.Stopwords",
311:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
312:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
313:       "weka.classifiers.MultipleClassifiersCombiner",
314:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
315:       "weka.classifiers.meta.MultiScheme",
316:       "weka.filters.supervised.attribute.Discretize",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
319:       "weka.core.neighboursearch.balltrees.BallNode",
320:       "weka.core.neighboursearch.LinearNNSearch",
321:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.classifiers.CostMatrix",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.neighboursearch.CoverTree",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.AllFilter",
334:       "weka.core.TechnicalInformation",
335:       "weka.core.TechnicalInformation$Type",
336:       "weka.core.TechnicalInformation$Field",
337:       "weka.core.converters.ArffLoader$ArffReader",
338:       "weka.classifiers.meta.MultiClassClassifier",
339:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
340:       "weka.classifiers.functions.Logistic",
341:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
342:       "weka.core.stemmers.SnowballStemmer",
343:       "weka.core.WekaException",
344:       "weka.core.FindWithCapabilities",
345:       "weka.core.SingleIndex"
346:     );
347:   }
348: }

[MASTER] 10:08:31.571 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N\"MS!1*.H=\"art[");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FINER");
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.pruneDictionary();
System.setCurrentTimeMillis(585L);
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
File file0 = costSensitiveClassifier0.getOnDemandDirectory();
naiveBayesMultinomialText0.setStopwords(file0);
MockFile mockFile0 = new MockFile("");
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setPeriodicPruning(2);
naiveBayesMultinomialText0.getStemmer();
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.setMinWordFrequency((-118.77084));
WordTokenizer wordTokenizer0 = new WordTokenizer();
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.pruneDictionary();

[MASTER] 10:08:31.619 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1575454111572/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1575454111572/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.java]]
[MASTER] 10:08:31.619 [logback-2] ERROR JUnitAnalyzer - Classpath: /home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar:/home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:31.619 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/ubuntu/termite/evosuite.jar:/home/ubuntu/termite/projects/107_weka/weka.jar:/home/ubuntu/termite/projects/107_weka/lib/packageManager.jar:/home/ubuntu/termite/projects/107_weka/lib/JFlex.jar:/home/ubuntu/termite/projects/107_weka/lib/java-cup.jar
[MASTER] 10:08:31.620 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 10:08:31.620 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 38
[MASTER] 10:08:31.620 [logback-2] ERROR JUnitAnalyzer - Diagnostic: weka.classifiers.bayes.NaiveBayesMultinomialText.Count has private access in weka.classifiers.bayes.NaiveBayesMultinomialText: 39
[MASTER] 10:08:31.620 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1575454111572/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Dec 04 10:08:31 GMT 2019
4:  */
5: 
6: package weka.classifiers.bayes;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.io.File;
11: import java.util.HashMap;
12: import java.util.LinkedHashMap;
13: import java.util.Map;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.System;
17: import org.evosuite.runtime.mock.java.io.MockFile;
18: import org.evosuite.runtime.testdata.EvoSuiteFile;
19: import org.evosuite.runtime.testdata.FileSystemHandling;
20: import org.junit.runner.RunWith;
21: import weka.classifiers.bayes.NaiveBayesMultinomialText;
22: import weka.classifiers.meta.CostSensitiveClassifier;
23: import weka.core.tokenizers.WordTokenizer;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class NaiveBayesMultinomialText_44_tmp__ESTest extends NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
27: 
28:   /**
29:   //Test case number: 0
30:   /*Coverage entropy=2.448693208504935
31:   */
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\tThe epsilon for round-off error.(default 1.0e-12)");
35:       FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N\"MS!1*.H=\"art[");
36:       FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{<cSw_={Y$p*");
37:       NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
38:       HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
39:       naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
40:       naiveBayesMultinomialText0.pruneDictionary();
41:       System.setCurrentTimeMillis(585L);
42:       CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
43:       File file0 = costSensitiveClassifier0.getOnDemandDirectory();
44:       naiveBayesMultinomialText0.setStopwords(file0);
45:       MockFile mockFile0 = new MockFile("{<cSw_={Y$p*");
46:       naiveBayesMultinomialText0.setStopwords(mockFile0);
47:       naiveBayesMultinomialText0.pruneDictionary();
48:       naiveBayesMultinomialText0.setPeriodicPruning(2);
49:       naiveBayesMultinomialText0.getStemmer();
50:       FileSystemHandling.shouldAllThrowIOExceptions();
51:       naiveBayesMultinomialText0.setMinWordFrequency(0.0);
52:       WordTokenizer wordTokenizer0 = new WordTokenizer();
53:       naiveBayesMultinomialText0.getMinWordFrequency();
54:       naiveBayesMultinomialText0.getUseStopList();
55:       naiveBayesMultinomialText0.pruneDictionary();
56:       naiveBayesMultinomialText0.getCapabilities();
57:       assertEquals(2, naiveBayesMultinomialText0.getPeriodicPruning());
58:   }
59: }
RegularFileObject[/tmp/EvoSuite_44_1575454111572/weka/classifiers/bayes/NaiveBayesMultinomialText_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Dec 04 10:08:31 GMT 2019
5:  */
6: 
7: package weka.classifiers.bayes;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "weka.classifiers.bayes.NaiveBayesMultinomialText"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("file.encoding", "UTF-8"); 
76:     java.lang.System.setProperty("java.awt.headless", "true"); 
77:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
78:     java.lang.System.setProperty("user.country", "US"); 
79:     java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/107_weka"); 
80:     java.lang.System.setProperty("user.home", "/home/ubuntu"); 
81:     java.lang.System.setProperty("user.language", "en"); 
82:     java.lang.System.setProperty("user.name", "ubuntu"); 
83:     java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
84:   }
85: 
86:   private static void initializeClasses() {
87:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
88:       "weka.core.Environment",
89:       "weka.core.CheckOptionHandler",
90:       "weka.filters.unsupervised.attribute.NominalToBinary",
91:       "weka.core.TestInstances",
92:       "weka.core.DistanceFunction",
93:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$TempNode",
94:       "weka.core.neighboursearch.balltrees.BottomUpConstructor$TempNode",
95:       "org.pentaho.packageManagement.PackageConstraint",
96:       "weka.attributeSelection.AttributeEvaluator",
97:       "org.pentaho.packageManagement.Package",
98:       "weka.core.xml.XMLBasicSerialization",
99:       "weka.classifiers.CostMatrix",
100:       "weka.classifiers.bayes.net.search.local.K2",
101:       "weka.filters.UnsupervisedFilter",
102:       "weka.core.neighboursearch.BallTree",
103:       "weka.core.logging.Logger$Level",
104:       "weka.core.neighboursearch.CoverTree$DistanceNode",
105:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
106:       "weka.classifiers.evaluation.output.prediction.AbstractOutput",
107:       "weka.core.DenseInstance",
108:       "weka.core.stemmers.Stemmer",
109:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
110:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
111:       "org.pentaho.packageManagement.DefaultPackageManager",
112:       "org.bounce.net.DefaultAuthenticator",
113:       "weka.core.neighboursearch.CoverTree$MyHeap",
114:       "weka.core.neighboursearch.KDTree",
115:       "weka.core.stemmers.NullStemmer",
116:       "weka.core.EnvironmentHandler",
117:       "weka.classifiers.functions.SGDText",
118:       "weka.core.RelationalLocator",
119:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
120:       "weka.core.Utils",
121:       "weka.core.CustomDisplayStringProvider",
122:       "weka.core.tokenizers.Tokenizer",
123:       "weka.core.NormalizableDistance",
124:       "weka.core.NoSupportForMissingValuesException",
125:       "weka.classifiers.UpdateableClassifier",
126:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
127:       "weka.core.TechnicalInformation$Type",
128:       "weka.core.Copyable",
129:       "weka.core.Capabilities",
130:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
131:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
132:       "weka.core.BinarySparseInstance",
133:       "weka.core.AttributeLocator",
134:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor$MyIdxList",
135:       "weka.core.SerializedObject",
136:       "weka.core.Summarizable",
137:       "weka.core.AdditionalMeasureProducer",
138:       "weka.core.neighboursearch.balltrees.BallNode",
139:       "org.pentaho.packageManagement.PackageManager$1",
140:       "weka.core.Drawable",
141:       "weka.core.matrix.Matrix",
142:       "weka.core.Check",
143:       "weka.core.CapabilitiesHandler",
144:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
145:       "weka.attributeSelection.ASEvaluation",
146:       "weka.core.AbstractInstance",
147:       "weka.core.scripting.JythonObject",
148:       "weka.core.SelectedTag",
149:       "org.pentaho.packageManagement.DefaultPackage",
150:       "weka.core.neighboursearch.balltrees.BallSplitter",
151:       "weka.classifiers.bayes.BayesNet",
152:       "weka.classifiers.misc.InputMappedClassifier",
153:       "weka.core.Version",
154:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
155:       "weka.core.Tag",
156:       "weka.core.neighboursearch.CoverTree",
157:       "weka.classifiers.AbstractClassifier",
158:       "weka.filters.unsupervised.attribute.Center",
159:       "weka.core.OptionHandler",
160:       "weka.core.WekaException",
161:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
162:       "weka.classifiers.trees.RandomForest",
163:       "weka.filters.StreamableFilter",
164:       "weka.core.Range",
165:       "weka.core.PartitionGenerator",
166:       "weka.core.scripting.JythonSerializableObject",
167:       "weka.classifiers.Classifier",
168:       "weka.core.neighboursearch.NearestNeighbourSearch$NeighborList",
169:       "weka.core.Capabilities$Capability",
170:       "weka.core.SparseInstance",
171:       "org.pentaho.packageManagement.PackageManager",
172:       "weka.attributeSelection.AttributeTransformer",
173:       "weka.core.tokenizers.WordTokenizer",
174:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
175:       "weka.attributeSelection.PrincipalComponents",
176:       "weka.core.neighboursearch.kdtrees.KDTreeNode",
177:       "weka.core.stemmers.SnowballStemmer",
178:       "weka.core.stemmers.LovinsStemmer",
179:       "weka.classifiers.Evaluation",
180:       "weka.classifiers.functions.supportVector.Kernel",
181:       "weka.core.WekaPackageManager",
182:       "weka.filters.SupervisedFilter",
183:       "weka.core.TechnicalInformationHandler",
184:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
185:       "weka.core.neighboursearch.LinearNNSearch",
186:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
187:       "weka.classifiers.meta.CostSensitiveClassifier",
188:       "weka.core.Option",
189:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
190:       "weka.core.neighboursearch.PerformanceStats",
191:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
192:       "weka.filters.Sourcable",
193:       "weka.core.Attribute",
194:       "weka.core.Stopwords",
195:       "weka.core.FastVector",
196:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
197:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
198:       "weka.core.UnassignedDatasetException",
199:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
200:       "weka.classifiers.RandomizableClassifier",
201:       "weka.classifiers.SingleClassifierEnhancer",
202:       "weka.core.RevisionUtils",
203:       "weka.core.Instance",
204:       "weka.core.ProtectedProperties",
205:       "weka.estimators.Estimator",
206:       "weka.core.StringLocator",
207:       "weka.classifiers.bayes.net.ADNode",
208:       "weka.core.AttributeStats",
209:       "weka.core.WeightedInstancesHandler",
210:       "weka.core.neighboursearch.NearestNeighbourSearch",
211:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
212:       "weka.core.TechnicalInformation$Field",
213:       "weka.core.neighboursearch.covertrees.Stack",
214:       "weka.filters.unsupervised.attribute.Remove",
215:       "weka.core.Randomizable",
216:       "weka.classifiers.functions.SGD",
217:       "weka.core.EuclideanDistance",
218:       "weka.core.Instances",
219:       "weka.core.neighboursearch.CoverTree$CoverTreeNode",
220:       "weka.core.UnassignedClassException",
221:       "weka.classifiers.bayes.net.BIFReader",
222:       "weka.classifiers.bayes.net.ParentSet",
223:       "weka.classifiers.rules.ZeroR",
224:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
225:       "weka.filters.unsupervised.attribute.Standardize",
226:       "weka.core.stemmers.IteratedLovinsStemmer",
227:       "weka.core.TechnicalInformation",
228:       "weka.core.UnsupportedAttributeTypeException",
229:       "weka.classifiers.Sourcable",
230:       "weka.core.RevisionHandler",
231:       "weka.classifiers.evaluation.output.prediction.PlainText",
232:       "weka.core.neighboursearch.TreePerformanceStats",
233:       "weka.core.xml.XMLSerialization",
234:       "weka.classifiers.xml.XMLClassifier",
235:       "weka.filters.Filter",
236:       "weka.filters.supervised.attribute.Discretize"
237:     );
238:   } 
239: 
240:   private static void resetClasses() {
241:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NaiveBayesMultinomialText_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
242: 
243:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
244:       "weka.classifiers.AbstractClassifier",
245:       "weka.classifiers.bayes.NaiveBayesMultinomialText",
246:       "weka.classifiers.bayes.NaiveBayesMultinomialText$Count",
247:       "weka.core.Capabilities$Capability",
248:       "weka.core.tokenizers.Tokenizer",
249:       "weka.core.tokenizers.CharacterDelimitedTokenizer",
250:       "weka.core.tokenizers.WordTokenizer",
251:       "weka.core.stemmers.NullStemmer",
252:       "weka.classifiers.Evaluation",
253:       "weka.core.Utils",
254:       "weka.core.Option",
255:       "weka.classifiers.RandomizableClassifier",
256:       "weka.core.Tag",
257:       "weka.classifiers.functions.SGDText",
258:       "weka.core.Capabilities",
259:       "org.pentaho.packageManagement.PackageManager",
260:       "org.pentaho.packageManagement.DefaultPackageManager",
261:       "weka.core.Version",
262:       "weka.core.Environment",
263:       "weka.core.WekaPackageManager",
264:       "weka.core.AbstractInstance",
265:       "weka.core.SparseInstance",
266:       "weka.core.BinarySparseInstance",
267:       "weka.core.stemmers.LovinsStemmer",
268:       "weka.core.RevisionUtils",
269:       "weka.core.SerializedObject",
270:       "weka.classifiers.bayes.BayesNet",
271:       "weka.classifiers.bayes.net.BIFReader",
272:       "weka.classifiers.bayes.net.search.SearchAlgorithm",
273:       "weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm",
274:       "weka.classifiers.bayes.net.search.local.K2",
275:       "weka.classifiers.bayes.net.estimate.BayesNetEstimator",
276:       "weka.classifiers.bayes.net.estimate.SimpleEstimator",
277:       "weka.core.neighboursearch.NearestNeighbourSearch",
278:       "weka.core.neighboursearch.BallTree",
279:       "weka.core.NormalizableDistance",
280:       "weka.core.EuclideanDistance",
281:       "weka.core.Range",
282:       "weka.core.neighboursearch.balltrees.BallTreeConstructor",
283:       "weka.core.neighboursearch.balltrees.TopDownConstructor",
284:       "weka.core.neighboursearch.balltrees.BallSplitter",
285:       "weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren",
286:       "weka.core.DenseInstance",
287:       "weka.core.Attribute",
288:       "weka.core.ProtectedProperties",
289:       "weka.classifiers.bayes.NaiveBayesMultinomial",
290:       "weka.core.TestInstances",
291:       "weka.core.Instances",
292:       "weka.core.UnassignedClassException",
293:       "weka.core.SelectedTag",
294:       "weka.classifiers.bayes.NaiveBayes",
295:       "weka.core.tokenizers.NGramTokenizer",
296:       "weka.core.UnassignedDatasetException",
297:       "weka.attributeSelection.ASEvaluation",
298:       "weka.attributeSelection.WrapperSubsetEval",
299:       "weka.classifiers.rules.ZeroR",
300:       "weka.core.stemmers.IteratedLovinsStemmer",
301:       "weka.classifiers.functions.supportVector.Kernel",
302:       "weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel",
303:       "weka.classifiers.misc.SerializedClassifier",
304:       "weka.attributeSelection.UnsupervisedAttributeEvaluator",
305:       "weka.attributeSelection.PrincipalComponents",
306:       "weka.core.tokenizers.AlphabeticTokenizer",
307:       "weka.classifiers.SingleClassifierEnhancer",
308:       "weka.classifiers.misc.InputMappedClassifier",
309:       "weka.filters.Filter",
310:       "weka.core.Stopwords",
311:       "weka.filters.unsupervised.attribute.PotentialClassIgnorer",
312:       "weka.filters.unsupervised.attribute.ReplaceMissingValues",
313:       "weka.classifiers.MultipleClassifiersCombiner",
314:       "weka.classifiers.RandomizableMultipleClassifiersCombiner",
315:       "weka.classifiers.meta.MultiScheme",
316:       "weka.filters.supervised.attribute.Discretize",
317:       "weka.core.stemmers.Stemming",
318:       "weka.core.neighboursearch.balltrees.BottomUpConstructor",
319:       "weka.core.neighboursearch.balltrees.BallNode",
320:       "weka.core.neighboursearch.LinearNNSearch",
321:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeap",
322:       "weka.core.neighboursearch.NearestNeighbourSearch$MyHeapElement",
323:       "weka.classifiers.RandomizableSingleClassifierEnhancer",
324:       "weka.classifiers.meta.CostSensitiveClassifier",
325:       "weka.classifiers.CostMatrix",
326:       "weka.core.neighboursearch.KDTree",
327:       "weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter",
328:       "weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide",
329:       "weka.core.neighboursearch.CoverTree",
330:       "weka.filters.SimpleFilter",
331:       "weka.filters.SimpleStreamFilter",
332:       "weka.filters.MultiFilter",
333:       "weka.filters.AllFilter",
334:       "weka.core.TechnicalInformation",
335:       "weka.core.TechnicalInformation$Type",
336:       "weka.core.TechnicalInformation$Field",
337:       "weka.core.converters.ArffLoader$ArffReader",
338:       "weka.classifiers.meta.MultiClassClassifier",
339:       "weka.classifiers.meta.MultiClassClassifierUpdateable",
340:       "weka.classifiers.functions.Logistic",
341:       "weka.core.neighboursearch.balltrees.MiddleOutConstructor",
342:       "weka.core.stemmers.SnowballStemmer",
343:       "weka.core.WekaException",
344:       "weka.core.FindWithCapabilities",
345:       "weka.core.SingleIndex"
346:     );
347:   }
348: }

[MASTER] 10:08:31.621 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\tThe epsilon for round-off error.(default 1.0e-12)");
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N\"MS!1*.H=\"art[");
FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{<cSw_={Y$p*");
NaiveBayesMultinomialText naiveBayesMultinomialText0 = new NaiveBayesMultinomialText();
HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>> hashMap0 = new HashMap<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>();
naiveBayesMultinomialText0.m_probOfWordGivenClass = (Map<Integer, LinkedHashMap<String, NaiveBayesMultinomialText.Count>>) hashMap0;
naiveBayesMultinomialText0.pruneDictionary();
System.setCurrentTimeMillis(585L);
CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
File file0 = costSensitiveClassifier0.getOnDemandDirectory();
naiveBayesMultinomialText0.setStopwords(file0);
MockFile mockFile0 = new MockFile("{<cSw_={Y$p*");
naiveBayesMultinomialText0.setStopwords(mockFile0);
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.setPeriodicPruning(2);
naiveBayesMultinomialText0.getStemmer();
FileSystemHandling.shouldAllThrowIOExceptions();
naiveBayesMultinomialText0.setMinWordFrequency(0.0);
WordTokenizer wordTokenizer0 = new WordTokenizer();
naiveBayesMultinomialText0.getMinWordFrequency();
naiveBayesMultinomialText0.getUseStopList();
naiveBayesMultinomialText0.pruneDictionary();
naiveBayesMultinomialText0.getCapabilities();
assertEquals(2, naiveBayesMultinomialText0.getPeriodicPruning());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing JUnit test case 'NaiveBayesMultinomialText_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.stemmers.LovinsStemmer
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.core.Optimization
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18440
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18444
* Analyzing classpath: 
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class weka.core.stemmers.LovinsStemmer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/stemmers/LovinsStemmer.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:09:26.175 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:09:26.179 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:09:26.180 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:09:26.187 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class weka.core.Optimization
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/core/Optimization.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
[MASTER] 10:09:30.349 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] weka.core.Optimization.DynamicIntArray.<init>(Lweka/core/Optimization;I)V
[MASTER] 10:10:46.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:10:46.551 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Search finished after 124s and 10 generations, 12367 statements, best individual has fitness: 4032.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 78%
* Total number of goals: 217
* Number of covered goals: 169
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 428
* Number of covered goals: 236
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 260
* Number of covered goals: 201
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 428
* Number of covered goals: 233
* Generated 37 tests with total length 749
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Search finished after 123s and 39 generations, 35379 statements, best individual has fitness: 16736.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 9%
* Total number of goals: 620
* Number of covered goals: 58
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 36
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 926
* Number of covered goals: 258
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 10%
* Total number of goals: 21
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 50%
* Total number of goals: 18
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 8%
* Total number of goals: 448
* Number of covered goals: 36
* Generated 15 tests with total length 312
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
* Writing JUnit test case 'Optimization_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* Resulting test suite's mutation score: 69%
* Compiling and checking tests
* Writing JUnit test case 'LovinsStemmer_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: weka.filters.unsupervised.attribute.Discretize
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/107_weka/evosuite-files/evosuite.properties
* Connecting to master process on port 18438
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:24:36.925 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:24:36.945 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:24:36.946 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:24:37.124 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:24:37.130 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:24:37.132 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class weka.filters.unsupervised.attribute.Discretize
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/107_weka/src/main/java/weka/filters/unsupervised/attribute/Discretize.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1027
* Starting evolution
* Search finished after 123s and 41 generations, 28105 statements, best individual has fitness: 9264.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 370
* Number of covered goals: 149
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 25%
* Total number of goals: 242
* Number of covered goals: 61
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 26%
* Total number of goals: 713
* Number of covered goals: 187
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 72
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 45
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 242
* Number of covered goals: 61
* Generated 42 tests with total length 663
* Resulting test suite's coverage: 34% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 10:29:05.130 [logback-2] ERROR ClassStateSupport - Could not initialize weka.core.converters.ConverterUtils: null
[MASTER] 10:29:05.614 [logback-2] ERROR ClassStateSupport - Could not initialize weka.gui.GenericObjectEditor: Could not initialize class weka.gui.GenericObjectEditor
* Writing JUnit test case 'Discretize_ESTest' to /home/ubuntu/termite/qmosa/tests/s1027/107_weka/evosuite-tests
* Done!

* Computation finished
