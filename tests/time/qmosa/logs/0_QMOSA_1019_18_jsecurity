* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jsecurity.web.DefaultWebSecurityManager
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 13435
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:55:58.773 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:55:58.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:55:58.832 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:55:59.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.jsecurity.web.DefaultWebSecurityManager
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/18_jsecurity/src/main/java/org/jsecurity/web/DefaultWebSecurityManager.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
[MASTER] 03:58:26.768 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V: Line 245
[MASTER] 03:58:26.769 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V: Line 246
[MASTER] 03:58:26.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V: Line 254
[MASTER] 03:58:26.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V: Line 255
[MASTER] 03:58:26.771 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V: Line 256
[MASTER] 03:58:26.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 145: org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V:245 - ReplaceVariable PRINCIPALS_SESSION_KEY -> JSECURITY_SESSION_MODE
[MASTER] 03:58:26.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 146: org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V:245 - ReplaceVariable PRINCIPALS_SESSION_KEY -> AUTHENTICATED_SESSION_KEY
[MASTER] 03:58:26.787 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 147: org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V:245 - ReplaceVariable PRINCIPALS_SESSION_KEY -> HTTP_SESSION_MODE
[MASTER] 03:58:26.788 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 154: org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V:255 - ReplaceVariable AUTHENTICATED_SESSION_KEY -> JSECURITY_SESSION_MODE
[MASTER] 03:58:26.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 155: org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V:255 - ReplaceVariable AUTHENTICATED_SESSION_KEY -> HTTP_SESSION_MODE
[MASTER] 03:58:26.789 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 156: org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V:255 - ReplaceVariable AUTHENTICATED_SESSION_KEY -> PRINCIPALS_SESSION_KEY
[MASTER] 03:58:26.798 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jsecurity.web.DefaultWebSecurityManager.bind(Lorg/jsecurity/subject/Subject;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V: I46 Branch 25 IFEQ L253 - false in context: 
* Search finished after 145s and 24 generations, 16880 statements, best individual has fitness: 1056.0
[MASTER] 03:58:27.908 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 25 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 97
* Number of covered goals: 71
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 67
* Number of covered goals: 46
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 70%
* Total number of goals: 162
* Number of covered goals: 113
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 29
* Number of covered goals: 11
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 66%
* Total number of goals: 67
* Number of covered goals: 44
* Generated 26 tests with total length 409
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
[MASTER] 03:58:44.288 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 03:58:44.289 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper1);
ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper3);
ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper4);
ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper4);
SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection("eq&35Cp<uKE/wqWQZ$F", "org.jsecurity.web.DefaultWebSecurityManager_PRINCIPALS_SESSION_KEY");
InetAddress inetAddress0 = MockInetAddress.getLocalHost();
DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, false, inetAddress0, (Session) null, defaultWebSecurityManager0);
defaultWebSecurityManager0.getSubject();
defaultWebSecurityManager0.bind(delegatingSubject0, servletRequestWrapper1, servletResponseWrapper3);

[MASTER] 03:58:49.792 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 03:58:49.794 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteHost();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
defaultWebSecurityManager0.getSubject();
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletContainerSessionManager servletContainerSessionManager0 = new ServletContainerSessionManager();
SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(servletRequestWrapper1, "eq&35Cp<uKE/wqWQZ$F");
InetAddress inetAddress0 = MockInetAddress.getLocalHost();
DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, false, inetAddress0, (Session) null, defaultWebSecurityManager0);
Subject subject0 = defaultWebSecurityManager0.getSubject();
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper3, servletResponseWrapper0);
Subject subject1 = defaultWebSecurityManager0.createSubject((PrincipalCollection) simplePrincipalCollection0, false, (Session) null, (ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper1);
assertFalse(subject1.isAuthenticated());
assertTrue(defaultWebSecurityManager0.isHttpSessionMode());


[MASTER] 03:58:54.637 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalStateException: No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
[MASTER] 03:58:54.638 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(servletRequest0).getRemoteHost();
ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
defaultWebSecurityManager0.getSubject();
ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper0);
ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
ServletContainerSessionManager servletContainerSessionManager0 = new ServletContainerSessionManager();
SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(servletRequestWrapper1, "eq&35Cp<uKE/wqWQZ$F");
InetAddress inetAddress0 = MockInetAddress.getLocalHost();
DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, false, inetAddress0, (Session) null, defaultWebSecurityManager0);
Subject subject0 = defaultWebSecurityManager0.getSubject();
defaultWebSecurityManager0.bind(subject0, servletRequestWrapper3, servletResponseWrapper0);
defaultWebSecurityManager0.isAuthenticated((Session) null, servletRequestWrapper1, servletResponseWrapper0);
Subject subject1 = defaultWebSecurityManager0.createSubject((Session) null, (ServletRequest) servletRequestWrapper1, (ServletResponse) servletResponseWrapper0);
assertFalse(subject1.isAuthenticated());
assertTrue(defaultWebSecurityManager0.isHttpSessionMode());


* Writing JUnit test case 'DefaultWebSecurityManager_ESTest' to /home/ubuntu/termite/qmosa/tests/s1019/18_jsecurity/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: QMOSA
* Going to generate test cases for class: org.jsecurity.authc.UsernamePasswordToken
* Starting client
* Properties loaded from /home/ubuntu/termite/projects/18_jsecurity/evosuite-files/evosuite.properties
* Connecting to master process on port 13435
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.jsecurity.authc.UsernamePasswordToken
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
Production Code Path: /home/ubuntu/termite/SF110/18_jsecurity/src/main/java/org/jsecurity/authc/UsernamePasswordToken.java
Ranking Type: org.evosuite.ga.metaheuristics.mosa.QualityBasedPreferenceSorting
* Using seed 1019
* Starting evolution
* Search finished after 121s and 121 generations, 115851 statements, best individual has fitness: 72.0
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 54
* Number of covered goals: 54
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100% (no goals)
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 78%
* Total number of goals: 36
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Generated 28 tests with total length 368
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 79%
* Compiling and checking tests
* Writing JUnit test case 'UsernamePasswordToken_ESTest' to /home/ubuntu/termite/qmosa/tests/s1019/18_jsecurity/evosuite-tests
* Done!

* Computation finished
