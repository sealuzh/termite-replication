/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 14:01:45 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(162);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1468204495));
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setIdentifier((-1186461890));
      rawVariable0.setCodeBookNumber("|$.zi#");
      rawVariable0.setCategory("u:");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      user0.setIdentifier(2850);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("u:", rawVariable0.getCategory());
      assertEquals("|$.zi#", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.789954513063153
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("h yN_K7!>Z3)i");
      Variable.validateFields(rawVariable0);
      rawVariable0.setAvailability((String) null);
      rawVariable0.clone();
      rawVariable0.getAvailability();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      Variable.validateFields(derivedVariable0);
      rawVariable0.getValueLabels();
      derivedVariable0.addSourceVariables(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.7118335713470714
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.parallelStream();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAlias("Kh=gx_r6");
      rawVariable0.setIdentifier(1);
      rawVariable0.setColumnStart("");
      rawVariable0.setNotes("general.error.blankField");
      rawVariable0.getAlias();
      rawVariable0.columnEnd = "variable.cleaningDescription.label";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getForm();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("general.error.blankField", rawVariable0.getNotes());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.7540965380214835
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable0.setForm("variable.notes.label");
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.questionNumber = "";
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable2);
      derivedVariable0.getCategory();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable1.getAlias();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.getAlias();
      derivedVariable0.getValueLabels();
      User user0 = new User("", "UNABLE_TO_ASSOCIATE_SOURCE_VARIABLE");
      RawVariable rawVariable0 = new RawVariable();
      user0.clone();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      assertEquals("variable.notes.label", derivedVariable0.getForm());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable2.addSourceVariables(arrayList0);
      derivedVariable2.getSourceVariables();
      derivedVariable2.getCleaningDescription();
      derivedVariable2.getForm();
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd((String) null);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.columnStart = null;
      rawVariable0.getNotes();
      rawVariable0.getValueLabels();
      rawVariable0.getColumnEnd();
      rawVariable1.getCategory();
      rawVariable1.getColumnEnd();
      Variable.validateFields(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setIdentifier((-2028598554));
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getIdentifier();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNull(string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=4.211246485308962
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setIdentifier(1);
      rawVariable0.columnEnd = "DUPLICATE_ALIAS_FILE_PATH";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getCategory();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getColumnEnd();
      rawVariable0.getAlias();
      derivedVariable0.setLabel("[76Ydgp");
      System.setCurrentTimeMillis(2204L);
      derivedVariable0.getFilePath();
      rawVariable0.getCleaningStatus();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      rawVariable0.getColumnStart();
      assertEquals("DUPLICATE_ALIAS_FILE_PATH", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("A");
      rawVariable0.setAvailability("A");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("A", (String) null);
      rawVariable0.setIdentifier((-1980));
      user0.setIdentifier(2850);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      assertEquals("-1980", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.setName((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("A");
      assertEquals("A", derivedVariable1.getLabel());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(924);
      ontologyTerm0.setDescription("`&wg[e,LHb^");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      user0.setIdentifier((-2065335528));
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("924", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.19741190322987
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.getDisplayName();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setCleaningDescription("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      derivedVariable0.setColumnEnd("r`3*");
      derivedVariable0.setFilePath("");
      User user0 = new User("", "");
      arrayList0.add((Variable) derivedVariable0);
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.setLabel("");
      derivedVariable0.getCodeBookNumber();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.addSourceVariable(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable1.getYear();
      derivedVariable1.getDisplayItemIdentifier();
      Variable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.5423197945516156
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("\"i%g:tS]`3", "E}01(.fS(\u0003DG3$;=i");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlias("UNABLE_TO_GET_CATEGORY_NAME");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      assertEquals("UNABLE_TO_GET_CATEGORY_NAME", derivedVariable2.getAlias());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.setColumnStart("Y^Q");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnStart();
      assertEquals("Y^Q", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.name.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getQuestionNumber();
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.493529630382185
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("^M/7x09d[");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("user.affiliation.saveChanges", "^M/7x09d[");
      user0.setPostCode("^M/7x09d[");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.getIdentifier();
      derivedVariable1.getLabel();
      assertEquals("^M/7x09d[", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1968526675));
      rawVariable0.setCategory("u:");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      user0.setIdentifier(2850);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("u:", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setLastName((String) null);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getColumnEnd();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.630821318732888
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      ontologyTerm0.setIdentifier((-3591));
      rawVariable0.setCoded(true);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.isCoded();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertTrue(rawVariable0.isCoded());
      
      rawVariable1.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.stream();
      derivedVariable0.addSourceVariables(arrayList0);
      System.setCurrentTimeMillis((-3591));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5423765149766404
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("A");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("A");
      rawVariable0.setColumnStart((String) null);
      User user0 = new User("5_qJk(!<E5.G)g", "variable.codeBookNumber.label");
      user0.setPostCode("variable.codeBookNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      assertEquals("A", derivedVariable1.getLabel());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("A");
      rawVariable0.setAvailability("A");
      rawVariable0.getFilePath();
      rawVariable0.getFilePath();
      rawVariable0.getFilePath();
      rawVariable0.getDisplayName();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      User user0 = new User("", "qG,Pp\"k#=s");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.4925475601781946
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("-LHA", "A");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningStatus("A");
      RawVariable rawVariable2 = new RawVariable();
      User user1 = new User("54Qg@:JH", (String) null);
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      assertEquals("A", rawVariable1.getCleaningStatus());
      
      RawVariable rawVariable3 = new RawVariable();
      assertEquals("Unknown", rawVariable3.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.491227769049486
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User("macaw.util.ValidationUtility", "macaw.util.ValidationUtility");
      user0.setPostCode("macaw.util.ValidationUtility");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setCleaningStatus((String) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.4903559294679694
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "A";
      User user0 = new User("MISSING_DISPLAY_LIST_DELETER", "R]UktP$k@|d~%D_q");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getSourceVariables();
      boolean boolean0 = derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("A", derivedVariable1.getForm());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm((String) null);
      rawVariable0.setName("A");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("MISSING_DISPLAY_LIST_DELETER", "R]UktP$k@|d~%D_q");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=4.209974944402153
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("A");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("5_qJk(!<E5.G)g", "variable.codeBookNumber.label");
      User user1 = new User("", "");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setCoded(true);
      Variable.detectFieldChanges(user0, derivedVariable3, rawVariable1);
      derivedVariable1.clone();
      assertEquals("A", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("JCIpgxN;/%#iNj+8`X\"");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      System.setCurrentTimeMillis(34L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      derivedVariable0.columnStart = null;
      user0.setFirstName("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      user0.setPassword("5D(n`");
      user0.setPassword("5D(n`");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.setColumnEnd((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.containsSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        arrayList0.listIterator(714);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 714
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCleaned(true);
      rawVariable0.columnEnd = "ZE+RN=k=<:/X$neAa";
      rawVariable0.isNewRecord();
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("t");
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "+U1Ye~u*V8";
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = rawVariable0.getAlias();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.isNewRecord();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      boolean boolean0 = rawVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.669857109036471
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("JD[");
      rawVariable0.setCoded(true);
      rawVariable0.setYear("Z(");
      rawVariable0.getYear();
      rawVariable0.getQuestionNumber();
      assertTrue(rawVariable0.isCoded());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory("u:");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      user0.setIdentifier(2850);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals("u:", rawVariable0.getCategory());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory("u:");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("u:", rawVariable0.getCategory());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setName("A");
      rawVariable0.setCategory((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "R]UktP$k@|d~%D_q";
      User user0 = new User("MISSING_DISPLAY_LIST_DELETER", "R]UktP$k@|d~%D_q");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setColumnStart((String) null);
      arrayList0.add((Variable) derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getYear();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = null;
      arrayList1.add((Variable) derivedVariable0);
      stringArray0[3] = "";
      // Undeclared exception!
      try { 
        arrayList1.toArray(stringArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("general.fieldVnlue.unknown");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getYear();
      assertEquals("general.fieldVnlue.unknown", rawVariable0.getForm());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart(":kA_5fDPD");
      rawVariable0.setQuestionNumber("variable.name.label");
      User user1 = new User("b_>ezUV^:", (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("A");
      User user0 = new User("A", (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User("A", "variable.columnEnd.label");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6306398469971106
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setQuestionNumber("C,1t");
      derivedVariable0.setName("C,1t");
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.setLabel("C,1t");
      derivedVariable0.notes = "";
      derivedVariable0.getName();
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setAvailability("");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.441254265790644
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      User user0 = new User("OmY,1*SG&?CosXE>", "OmY,1*SG&?CosXE>");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user1 = new User("OmY,1*SG&?CosXE>", "OmY,1*SG&?CosXE>");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
      
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      String string0 = "u:";
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>(2062);
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(2062);
      arrayList0.add(supportingDocument0);
      arrayList0.add((SupportingDocument) null);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.isCoded();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("A");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(rawVariable0);
      assertEquals("A", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.name.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.name.label";
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.name.label", derivedVariable0.getCodeBookNumber());
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
      assertEquals(0, variable0.getIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.71322499330812
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("A");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("5_qJk(!<E5.G)g", "variable.codeBookNumber.label");
      user0.setPostCode("variable.codeBookNumber.label");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable1);
      assertEquals("A", derivedVariable1.getLabel());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.687787510885328
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setQuestionNumber("variable.name.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.ensureCapacity(1167);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-2061584299));
      derivedVariable0.createVariableSummary();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory("u:");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      user0.setIdentifier(2850);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("u:", rawVariable0.getCategory());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.form = "f.ai&ndamK).s";
      derivedVariable0.getOntologyTerms();
      String string0 = derivedVariable0.getLabel();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber(",=FiV_1~tY");
      derivedVariable0.getAlias();
      assertEquals(",=FiV_1~tY", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.name.label");
      rawVariable0.getColumnStart();
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.name.label");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getCleaningDescription();
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.form = "MISSING_DISPLAY_LIST_ADDER";
      derivedVariable0.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerms(arrayList0);
      ontologyTerm0.setNameSpace("-");
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("9n:K");
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("9n:K", rawVariable0.getYear());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.codeBookNumber = "KG?gN>9Z8~.J!K";
      rawVariable0.setCoded(false);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("KG?gN>9Z8~.J!K", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      supportingDocument0.clone();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.columnEnd = ".Djq0";
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.getCleaningDescription();
      rawVariable0.getQuestionNumber();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setYear(".-XWs;,YKvN<8*}");
      derivedVariable0.setColumnStart("&5");
      derivedVariable0.getColumnEnd();
      derivedVariable0.getLabel();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getValueLabels();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList0);
      assertEquals(".-XWs;,YKvN<8*}", derivedVariable0.getYear());
      
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("UNABLE_TO_CHECK_USER_EXISTS");
      rawVariable0.codeBookNumber = "variable.name.labe[l";
      rawVariable0.setLabel("");
      rawVariable0.getColumnStart();
      assertEquals("UNABLE_TO_CHECK_USER_EXISTS", rawVariable0.getCategory());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setColumnEnd("DUPLICATE_SOURCE_VARIABLE_EXISTS");
      derivedVariable0.setForm("&eZjIpvd|*?2h&<=Y");
      derivedVariable0.getColumnStart();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.name.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1394);
      rawVariable0.form = "variable.name.label";
      rawVariable0.setQuestionNumber("variable.name.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("1394", rawVariable0.getDisplayItemIdentifier());
      assertEquals("variable.name.label", rawVariable0.getForm());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User("rJO9", "3a?>7");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.columnStart = "variable.cleaningDescription.label";
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      String string0 = rawVariable0.getNotes();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCodeBookNumber();
      assertEquals("", string1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add((SupportingDocument) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("$1C2_HavP^IZ,zQ");
      derivedVariable0.createVariableSummary();
      derivedVariable0.codeBookNumber = "$1C2_HavP^IZ,zQ";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "$1C2_HavP^IZ,zQ";
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      assertEquals("$1C2_HavP^IZ,zQ", derivedVariable0.getYear());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "KaE-Q#0r9";
      assertFalse(rawVariable0.isNewRecord());
      
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getFilePath();
      rawVariable0.getCodeBookNumber();
      assertTrue(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.columnStart = "";
      rawVariable0.codeBookNumber = "";
      rawVariable0.setColumnEnd("C,1t");
      rawVariable0.setForm("");
      rawVariable0.setFilePath("C,1t");
      rawVariable0.getIdentifier();
      derivedVariable0.getAlias();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getSourceVariables();
      rawVariable0.getFilePath();
      boolean boolean1 = derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("C,1t", rawVariable0.getFilePath());
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "#\"kjv1t/nM{-\"40";
      rawVariable0.setIdentifier((-141));
      rawVariable0.setAlias("#\"kjv1t/nM{-\"40");
      rawVariable0.getFilePath();
      assertEquals("#\"kjv1t/nM{-\"40", rawVariable0.getAlias());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setForm("ae^|ow;>n0t^@p;ZK*");
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      assertEquals("ae^|ow;>n0t^@p;ZK*", rawVariable0.getForm());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.notes = "LRDRBqX";
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getFilePath();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.columnEnd = "ZD|";
      derivedVariable0.removeValueLabel(valueLabel0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("UNABLE_TO_GET_SUPPORTING_DOCUMENTS");
      derivedVariable0.createVariableSummary();
      String string0 = null;
      // Undeclared exception!
      try { 
        User.checkValidUserIDField((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument3);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument1);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable0.setForm("general.fieldVnlue.unknown");
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      assertEquals("general.fieldVnlue.unknown", rawVariable0.getForm());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      System.setCurrentTimeMillis(756L);
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "e";
      rawVariable0.setLabel("e");
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.name.label");
      rawVariable0.createVariableSummary();
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable variable0 = null;
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.codeBookNumber = "C`H/(J.US$ba^MeB";
      derivedVariable0.getForm();
      derivedVariable0.createVariableSummary();
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("zftA");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "macaw.businessLayer.Variable";
      derivedVariable0.createVariableSummary();
      try { 
        User.checkValidUserIDField("D[qA4Ir*V");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"D[qA4Ir*V\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setName("vb*?");
      derivedVariable0.createVariableSummary();
      assertEquals("vb*?", derivedVariable0.getDisplayName());
      
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.stream();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.cleaningStatus.label";
      String string0 = rawVariable0.getCodeBookNumber();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getForm();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string1);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "UNABLE_TO_INITIALISE_CONNECTION";
      rawVariable0.setNotes("variable.columnStart.label");
      rawVariable0.setIdentifier(69);
      rawVariable0.getNotes();
      assertEquals("69", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes((String) null);
      String string0 = derivedVariable0.getCleaningDescription();
      assertNotNull(string0);
      
      derivedVariable0.columnStart = "PsQ`0p7EjTVGcm";
      String string1 = derivedVariable0.getQuestionNumber();
      assertNotNull(string1);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.columnEnd = ":";
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("PsQ`0p7EjTVGcm");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.getAvailability();
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("PH2G&E(3F~cF");
      derivedVariable0.getAlias();
      assertEquals("PH2G&E(3F~cF", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.notes = "Qh`_:LmajHB4";
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setValueLabels(arrayList0);
      String string0 = "variable.form.label";
      derivedVariable0.setCleaningStatus("variable.form.label");
      derivedVariable0.getCodeBookNumber();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>(2192);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.add((Variable) rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.notes = null;
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setLabel((String) null);
      rawVariable0.getYear();
      derivedVariable1.setQuestionNumber("pa^");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      User user0 = new User("", "");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.setName("A");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getLabel();
      assertEquals("A", rawVariable0.getName());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.442236335994634
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("5_qJk(!<E5.G)g", "5_qJk(!<E5.G)g");
      User user1 = new User("5_qJk(!<E5.G)g", "variable.codeBookNumber.label");
      user1.setPostCode("variable.codeBookNumber.label");
      derivedVariable0.notes = "variable.codeBookNumber.label";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("variable.codeBookNumber.label", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("nj*BlS(_yVQ4oa.");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User("nj*BlS(_yVQ4oa.", "Zt}|qj<,W_C{O?G!");
      user1.setAddressLine2("nj*BlS(_yVQ4oa.");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      assertEquals("nj*BlS(_yVQ4oa.", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.3838782514026584
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("k");
      rawVariable1.setName("variable.notes.label");
      rawVariable0.setAvailability((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("variable.notes.label", "mZ:|Ut.T{:0G8|XGb");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "variable.isCoded.label";
      rawVariable0.setFilePath("variable.isCoded.label");
      String string1 = "macaw.businessLayer.SupportingDocument";
      User user0 = new User("variable.isCoded.label", "macaw.businessLayer.SupportingDocument");
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      User user0 = new User();
      int int0 = (-361);
      user0.setIdentifier((-361));
      derivedVariable0.addValueLabel((ValueLabel) null);
      user0.setIdentifier((-361));
      String string0 = "8/\"Rn= 8";
      user0.setPostCode("Unknown");
      user0.setAddressLine2("Unknown");
      derivedVariable0.form = "8/\"Rn= 8";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      rawVariable0.setForm("UNABLE_TO_GET_SUPPORTING_DOCUMENTS");
      User user0 = new User();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getForm();
      assertEquals("UNABLE_TO_GET_SUPPORTING_DOCUMENTS", rawVariable0.getForm());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setNotes("variable.saveChanges.valueChanged");
      derivedVariable0.getColumnStart();
      assertEquals("variable.saveChanges.valueChanged", derivedVariable0.getNotes());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("");
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.6941960781238792
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setLastName("Vh");
      user0.setIdentifier((-452));
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertNull(macawChangeEvent0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.9154553024197982
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("A");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setYear("S<#dg+Wq5c-r._W");
      derivedVariable0.setColumnEnd("MISSING_DISPLAY_LIST_DELETER");
      User user0 = new User("MISSING_DISPLAY_LIST_DELETER", "R]UktP$k@|d~%D_q");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getSourceVariables();
      assertEquals("S<#dg+Wq5c-r._W", derivedVariable0.getYear());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("q(1");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.codeBookNumber = "b1;[kAcX";
      rawVariable0.setColumnEnd("b1;[kAcX");
      rawVariable0.setCleaned(true);
      rawVariable0.getYear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setOntologyName("");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      User user0 = new User("A", (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("ZxPEu2*P`b\">.~ax$?");
      rawVariable0.clone();
      assertEquals("ZxPEu2*P`b\">.~ax$?", rawVariable0.getNotes());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      rawVariable0.questionNumber = "user.firstName.saveChanges";
      rawVariable0.setQuestionNumber("h.");
      rawVariable0.setIdentifier((-1725734905));
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("g6LDgM");
      rawVariable0.clone();
      assertEquals("g6LDgM", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("7$x)[:");
      rawVariable0.columnEnd = "NON_EXISTENT_VARIABLE_FOR_SUMMARY";
      rawVariable0.clone();
      assertEquals("7$x)[:", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("do");
      rawVariable0.clone();
      rawVariable0.getAlternativeVariable();
      assertEquals("do", rawVariable0.getName());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.ensureCapacity(1167);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "4W";
      derivedVariable0.setIdentifier(679);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.getColumnEnd();
      assertEquals("679", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.557902746889237
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.name.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("variable.name.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.48462116244288
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("GhM-W,9&H");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("GhM-W,9&H", rawVariable0.getCleaningStatus());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = true;
      rawVariable0.setCategory((String) null);
      User user0 = new User((String) null, "x~@m./Pnn^}+LyO4");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "^yY,{X~:6-=4kA`#?]";
      String string0 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("lPQ3:8RdGnKf{;3&");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        arrayList0.set((-852), ontologyTerm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }
}
