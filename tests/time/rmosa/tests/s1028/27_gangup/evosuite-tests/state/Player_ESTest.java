/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 14:01:19 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-908));
      player0.setMoney((-908));
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals((-908.0F), float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1), "v[xhDlL[/n", (-1));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-112), 13);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-1935));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player();
      player0.isDead();
      player0.getSubparty();
      player1.setDead((-2539L), true);
      player1.getIP();
      player1.setDead(15000L);
      Player player2 = new Player((-3372), "0.0.0.0", 17698);
      player2.isJoinOK(player0, false);
      player0.setDead((-5552L));
      long long0 = player0.getTimeOfDeath();
      assertEquals((-5552L), long0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(2128);
      Player player1 = new Player(2128);
      player1.setJoinOK(player0, true);
      player0.setDead(1392409296320L);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(8, (String) null, 8);
      player0.getIP();
      player0.getName();
      float float0 = Player.MOVE_DISTANCE;
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player(141, "", "", (-13563));
      player1.reset(false);
      Player player2 = new Player(15, (String) null, 283);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)84;
      player0.unpack(byteArray0);
      player2.setConnected(false);
      Player player3 = new Player(3977, "", "Jj$'g{~M\"<,?7 bj", 10, (-3573));
      player3.isJoinOK(player1, false);
      Player player4 = new Player((-1135), "4a Ml>Vpv~t2", 658);
      player1.toString();
      assertTrue(player1.isConnected());
      
      player2.toString();
      assertFalse(player2.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(4362, (String) null, 4362);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0, ";?bms>YyfM)e,O!~c", ";?bms>YyfM)e,O!~c", (-1461), (-7156));
      player0.setX((-1224.5839F));
      player0.pack();
      player0.pack();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)10;
      player0.unpack(byteArray0);
      player0.getStrength();
      player0.getMoney();
      int int0 = player0.type();
      assertEquals((-1224.5839F), player0.getX(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-1935));
      player0.setY((-1.0F));
      player0.setY((-1935));
      player0.setZ((-1.0F));
      Player player1 = new Player(228, "\"8wda", (short)4919);
      player1.add(player0);
      player1.reset(true);
      Player player2 = new Player();
      player2.toString();
      player0.getY();
      player0.setZ((-834.4F));
      player2.isDead();
      player2.getSubparty();
      player0.getIP();
      player1.setDead(0L);
      player2.isJoinOK(player0, true);
      assertEquals((-1935.0F), player0.getY(), 0.01F);
      
      player2.setDead(1L);
      assertEquals("Player-1", player2.getName());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(4242);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(3181L);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.getName());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-1132), "", ":Oo~5zc_%]FDiw^", 0);
      Party party0 = player0.head;
      player0.boss = null;
      player0.getPictureId();
      player0.setDead();
      player0.id = (-1);
      Player player1 = new Player((-231), ":Oo~5zc_%]FDiw^", 2567);
      player1.setZ(2567);
      player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)2;
      player1.unpack(byteArray0);
      player1.head = (Party) player0;
      player1.setConnected(false);
      player1.reset(false);
      player1.getName();
      player1.getZ();
      player0.setDead((long) (short)4919);
      assertEquals(4919L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(2163);
      player0.setJoinOK(player0, true);
      player0.setDead((long) (short)4919);
      boolean boolean0 = player0.isDead();
      assertEquals(4919L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(2378, (String) null, (String) null, 17);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      Party party0 = player0.prev;
      player0.setConnected(false);
      player0.type();
      player0.isConnected();
      player0.getMoney();
      player0.type();
      player0.getMoney();
      int int0 = player0.getStrength();
      assertFalse(player0.isConnected());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(17);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)69;
      byteArray0[3] = (byte)69;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(17);
      player0.setZ(1.0F);
      Player player1 = new Player(4919, "", 5);
      player0.add(player1);
      player1.reset(true);
      Player player2 = new Player();
      player1.toString();
      player2.getY();
      Player player3 = new Player();
      player3.setZ(0.2F);
      player2.isDead();
      player1.getSubparty();
      player1.getIP();
      player2.setDead(1392409281320L);
      player0.isJoinOK(player3, false);
      player1.setDead((-4171L));
      player0.gangStrength();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, ";?ms>JyM)e,!)~c", ";?ms>JyM)e,!)~c", 0, 0);
      player0.setX((-4755.0F));
      player0.pack();
      player0.pack();
      player0.reset(true);
      player0.reset(false);
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals((-4755.0F), player0.getX(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(5);
      Player player1 = new Player(1, "", "", (short)4919, (-3697));
      player0.boss = (Party) player1;
      Player player2 = new Player((-511), "", (short)4919);
      assertEquals(4919, player2.getPictureId());
      
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-3697), int0);
      assertEquals("Player5", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3787438509194208
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(2075, (String) null, (String) null, 0);
      player0.id = 983;
      player0.getIP();
      player0.setY(2075);
      player0.setX((-3246.0F));
      player0.id = 3;
      player0.getX();
      player0.getMoney();
      player0.isConnected();
      Party party0 = player0.boss;
      player0.remove((Party) null);
      player0.getIP();
      player0.setX(0.1F);
      player0.getStrength();
      player0.getZ();
      player0.type();
      player0.setZ(0.0F);
      player0.isDead();
      player0.setDead();
      player0.getY();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(965, (String) null, (String) null, 1);
      player0.setY((-176.11F));
      Player player1 = new Player((-45), (String) null, (String) null, 4, (short)4919);
      player1.setZ(0.2F);
      player0.reset(true);
      player0.isDead();
      player1.getSubparty();
      player1.getIP();
      player1.setDead((long) 965);
      player0.isJoinOK(player1, true);
      player1.setDead((long) 5);
      assertEquals(5L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(17, "", ".*[.]class$", (-26366));
      player0.getSubparty();
      player0.getIP();
      Player player1 = new Player(5, "", "", (-4302));
      player1.setDead((long) (-26366));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.isJoinOK(player1, true);
      player0.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream(17);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 64);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1132), "", ":Oo~5zc_%]FDiw^", (-1132));
      Party party0 = player0.head;
      player0.boss = null;
      player0.getPictureId();
      player0.setDead();
      player0.id = (-1);
      Player player1 = new Player((-231), ":Oo~5zc_%]FDiw^", (-5118));
      player1.setZ((-5118));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      player1.unpack(byteArray0);
      player1.head = (Party) player0;
      player1.setConnected(false);
      player1.reset(false);
      player1.getZ();
      player0.setDead((long) (short)4919);
      System.setCurrentTimeMillis((byte)0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Player player0 = new Player((-28));
      System.setCurrentTimeMillis((-1L));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, ";?bms>YyfM)e,O!~c", ";?bms>YyfM)e,O!~c", 0, 0);
      player0.setX(531.0F);
      byte[] byteArray0 = player0.pack();
      player0.pack();
      player0.unpack(byteArray0);
      int int0 = player0.getStrength();
      assertEquals(531.0F, player0.getX(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(4254);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player((-1), "W", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-1), 721);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = player0.gangStrength();
      assertEquals(721, int0);
      
      int int1 = player0.getStrength();
      assertEquals(721, int1);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1), player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.975815740697092
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1194.9368F);
      Player player1 = new Player((short)4919, "v*d\"0\"s,V", 1);
      player1.getSubparty();
      player1.add(player0);
      player0.reset(true);
      player1.reset(true);
      Player player2 = new Player();
      player0.toString();
      player0.getY();
      Player player3 = new Player(228, "Player-1", "", (-834), 228);
      player3.setZ(0.1F);
      player2.isDead();
      Player player4 = new Player();
      player4.getSubparty();
      player1.getIP();
      player0.setDead((long) (short)4919);
      Player player5 = new Player((short)4919, "", (short)4919);
      player3.isBoss();
      Player player6 = new Player(5);
      player6.setDead(1055L);
      assertEquals(1055L, player6.getTimeOfDeath());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(52);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 0, 17);
      player0.setZ((-1.0F));
      player0.getPictureId();
      Party party0 = player0.next;
      assertNull(party0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.26147761112867
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-752), "{79dfORHw;V", 1);
      player0.getY();
      player0.setConnected(false);
      player0.getSubparty();
      player0.type();
      player0.setDead();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.next = null;
      player0.add((Party) null);
      player0.prev = null;
      player0.getTimeOfDeath();
      player0.setX(0.0F);
      player0.setConnected(false);
      player0.setMoney(5);
      player0.head = null;
      player0.setConnected(false);
      player0.setMoney(1392409281320L);
      player0.getName();
      player0.getX();
      player0.getMoney();
      player0.setZ(1392409281320L);
      player0.reset(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(1.39240931E12F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(4197, "state.Party", 4197);
      player0.id = 4197;
      Player player1 = new Player();
      player1.setMoney(4197);
      player0.isJoinOK(player1, true);
      player1.setConnected(false);
      player1.pack();
      player1.pack();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)69;
      byteArray0[3] = (byte)101;
      player0.unpack(byteArray0);
      player1.pack();
      player0.getMoney();
      player1.type();
      player1.getMoney();
      player1.pack();
      player1.pack();
      String string0 = ".*[.]class$";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", ".*[.]class$");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(17826);
      player0.setDead((long) 17826, false);
      player0.getTimeOfDeath();
      player0.getMoney();
      Party party0 = new Party((short)4919);
      player0.prev = party0;
      party0.id = (-3133);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      party0.head = (Party) player0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      System.setCurrentTimeMillis(0L);
      float float0 = Player.TOLERANCE;
      party0.id = 1;
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(14085);
      PipedInputStream pipedInputStream0 = new PipedInputStream(14085);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player14085", player0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1349);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player1349", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-1754), "!<R@", (-1754));
      player0.setX(10.0F);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Player player0 = new Player(568);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player568", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.1F);
      player0.getX();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)90;
      byteArray0[5] = (byte)107;
      byteArray0[6] = (byte)10;
      player0.unpack(byteArray0);
      player0.setDead(5032L, false);
      int int0 = player0.getStrength();
      assertEquals(5032L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-3619), "", "", (-3619), (-3619));
      player0.setDead(725L);
      player0.type();
      player0.remove((Party) null);
      player0.pack();
      player0.getName();
      int int0 = player0.getPictureId();
      assertTrue(player0.isDead());
      assertEquals((-3619), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-809), ":Q:I?5IvVDmcA", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-809), (-809));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(":Q:I?5IvVDmcA", false);
      mockFileOutputStream0.getChannel();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertFalse(player0.isDead());
      assertEquals((-809), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(":Q:I?5IvVDmcA", player0.getIP());
      assertEquals((-809), player0.getStrength());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(0);
      int int0 = player0.type();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player0", player0.toString());
      assertEquals(5, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(27, (String) null, (String) null, 4919);
      Player player1 = new Player(1846, (String) null, 1846);
      player0.isJoinOK(player1, true);
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = new PipedInputStream(27);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 399);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", " W!/Zl1\"n", (-168));
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2);
      PipedInputStream pipedInputStream1 = new PipedInputStream(1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream0, (-168));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(2128);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player(10);
      player0.unpack(dataInputStream0);
      int int0 = Packable.UNDEFINED;
      assertEquals(0, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getStrength();
      player0.getZ();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte)73;
      byteArray0[5] = (byte)67;
      byteArray0[6] = (byte)48;
      byteArray0[7] = (byte)2;
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1161);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-3602), "module.ModuleBrowserDialog$ModuleFilter", (-3602));
      MockPrintStream mockPrintStream0 = new MockPrintStream("module.ModuleBrowserDialog$ModuleFilter");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-3602), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(15);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-443));
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(2027);
      player0.setMoney(2027);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-32));
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, long0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-32", player0.getName());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player(10);
      player0.isConnected();
      int int0 = Packable.PLAYER;
      assertEquals(5, int0);
  }
}
