/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 13:48:02 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringWriter;
import java.sql.Connection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.stream.IntStream;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LinkedHashSet<DBUniqueConstraint> linkedHashSet0 = new LinkedHashSet<DBUniqueConstraint>();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Oracle");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      Object[] objectArray0 = new Object[0];
      mockPrintWriter0.printf("~yI.g3e6(tWe]3Be!9", objectArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "~yI.g3e6(tWe]3Be!9";
      stringArray0[1] = "updatecheck";
      stringArray0[2] = "Oracle";
      stringArray0[3] = "updatecheck";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "unknown", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("unknown", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("(~o");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '(~o' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.272406787837455
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("selectunknown constraint tpe:");
      DBDataType dBDataType0 = DBDataType.getInstance((-95093664), "selectunknown constraint tpe:");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("selectunknown constraint tpe:", defaultDBTable0, dBDataType0);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.setDefaultValue("selectunknown constraint tpe:");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("table ");
      PrintWriter printWriter0 = mockPrintWriter0.printf((Locale) null, "selectunknown constraint tpe:", (Object[]) dBColumnArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      Boolean boolean0 = SQLUtil.mutatesStructure("(N<0");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-95093664), "DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("DATE", defaultDBTable0, dBDataType0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "DATE");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("columnIndex");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'columnIndex' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getColumns();
      SQLUtil.typeAndName(defaultDBTable0);
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("?0");
      DBDataType.getInstance(7, "?0");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBDataType dBDataType0 = DBDataType.getInstance((-9), "?0");
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("?0", defaultDBTable0, dBDataType0, integer1, (Integer) null);
      defaultDBColumn0.toString();
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-46);
      byteArray0[6] = (byte) (-52);
      byteArray0[7] = (byte)8;
      byteArray0[8] = (byte) (-113);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String string0 = SQLUtil.normalize("-- ERROR: ", false);
      assertEquals("-- ERROR :", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("v4gM_uyy");
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<j4ri_C&p%f+Jfwy@");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "<j4ri_C&p%f+Jfwy@";
      stringArray0[1] = "<j4ri_C&p%f+Jfwy@";
      stringArray0[2] = "org.firebirdsql.jca.FBManagedConnection$1";
      stringArray0[3] = "<j4ri_C&p%f+Jfwy@";
      stringArray0[4] = "<j4ri_C&p%f+Jfwy@";
      stringArray0[5] = "<j4ri_C&p%f+Jfwy@";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("fWbr+de&! h$\"I.~", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (<j4ri_C&p%f+Jfwy@, <j4ri_C&p%f+Jfwy@, org.firebirdsql.jca.FBManagedConnection$1, <j4ri_C&p%f+Jfwy@, <j4ri_C&p%f+Jfwy@, <j4ri_C&p%f+Jfwy@) REFERENCES <j4ri_C&p%f+Jfwy@(<j4ri_C&p%f+Jfwy@, <j4ri_C&p%f+Jfwy@, org.firebirdsql.jca.FBManagedConnection$1, <j4ri_C&p%f+Jfwy@, <j4ri_C&p%f+Jfwy@, <j4ri_C&p%f+Jfwy@)", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("selectunknown constraint tpe:");
      DBDataType dBDataType0 = DBDataType.getInstance((-95093664), "selectunknown constraint tpe:");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("selectunknown constraint tpe:", defaultDBTable0, dBDataType0);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      assertEquals("selectunknown constraint tpe:", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType dBDataType0 = DBDataType.getInstance((-932), "iv_?I,(wR");
      Integer integer0 = RawTransaction.ABORT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.COMMIT;
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" on ", (DBSchema) null);
      Integer integer3 = new Integer((-1468));
      Integer integer4 = new Integer((-1468));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" on ", defaultDBTable0, dBDataType0, integer3, integer4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      defaultDBColumn0.toString();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.normalize("Argument forwarded to constructor of SSLSocketFactory class.", false);
      SQLUtil.ownerDotComponent(tableContainer0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "pFlm.x';ZQ";
      stringArray0[1] = "iv_?I,(wR";
      Character character0 = Character.valueOf('#');
      // Undeclared exception!
      try { 
        defaultDBTable0.queryByPK(character0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "X,";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "execup";
      stringArray0[1] = "X,";
      stringArray0[2] = "X,";
      stringArray0[3] = "X,";
      stringArray0[4] = "X,";
      stringArray0[5] = "X,";
      stringArray0[6] = "X,";
      stringArray0[7] = "X,";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "X,", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("X,", stringBuilder0);
      StringBuilder stringBuilder2 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder2.delete(2185, (-1717986916));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "RoKT/*up";
      // Undeclared exception!
      SQLUtil.mutatesStructure("RoKT/*up");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append((String) null);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "getColumnFromRow", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append("getColumnFromRow");
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      assertEquals("getColumnFromRowCONSTRAINT getColumnFromRow ", stringBuilder1.toString());
      assertEquals("getColumnFromRowCONSTRAINT getColumnFromRow ", stringBuilder0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("TiJmesp");
      DBDataType dBDataType0 = DBDataType.getInstance(7, "TiJmesp");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("TiJmesp", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.toString();
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      TableContainer tableContainer0 = new TableContainer("MODE_TABLE");
      tableContainer0.getTable("MODE_TABLE");
      DBDataType dBDataType0 = DBDataType.getInstance((-1649), "nclob");
      Integer integer0 = RawTransaction.ABORT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("MODE_TABLE", (DBTable) null, dBDataType0, integer0, integer1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      defaultDBColumn0.toString();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.normalize("CLOB", false);
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SQLUtil.mutatesStructure("setAsciiSteam(lon)");
      SQLUtil.isDML("setAsciiSteam(lon)");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "setAsciiSteam(lon)";
      stringArray0[1] = "K6V`'2vAU";
      stringArray0[2] = "setAsciiSteam(lon)";
      stringArray0[3] = "setAsciiSteam(lon)";
      stringArray0[4] = "setAsciiSteam(lon)";
      stringArray0[5] = "K6V`'2vAU";
      stringArray0[6] = "setAsciiSteam(lon)";
      stringArray0[7] = "K6V`'2vAU";
      stringArray0[8] = "%&R'O&G/`";
      String[] stringArray1 = new String[5];
      stringArray0[5] = "%&R'O&G/`";
      stringArray1[1] = "%&R'O&G/`";
      stringArray1[2] = "setAsciiSteam(lon)";
      stringArray1[3] = "%&R'O&G/`";
      stringArray1[4] = "CHAR_LENGTH";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("K6V`'2vAU", stringArray0, "CHAR_LENGTH", "setAsciiSteam(lon)", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.renderValue(stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.addRequiredCondition((String) null, stringBuilder1);
      int int0 = 1401;
      // Undeclared exception!
      try { 
        DBDataType.getInstance((-177768894), stringArray0[3]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = SQLUtil.normalize("3ARQEwEwn'+f", true);
      assertEquals("3ARQEwEwn '+f'", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.chars();
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      Character character0 = Character.valueOf('$');
      String string1 = SQLUtil.renderValue(character0);
      assertEquals("'$'", string1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Character character0 = new Character('h');
      String string0 = SQLUtil.substituteMarkers("?<Tgj-y6@?ZMW4i!", "?<Tgj-y6@?ZMW4i!", character0);
      assertEquals("'h'", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[16];
      stringArray0[0] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", false, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("ResultSet type: ");
      dBPrimaryKeyConstraint0.setName("");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      FileUtil.canonicalFile("create table ");
      MockPrintStream mockPrintStream0 = new MockPrintStream("create table ");
      PrintStream printStream0 = mockPrintStream0.printf("insert", (Object[]) stringArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "create table ";
      Object object0 = new Object();
      objectArray0[1] = object0;
      mockPrintWriter1.printf("unknown", objectArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      assertEquals(0, linkedList0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("execute");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "execute", false, stringArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "execute");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = SQLUtil.normalize("m*/&#IMb`!t^K", false);
      assertEquals("m */ & # IMb ` ! t ^ K", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      SQLUtil.normalize("setAsciiStream(longC", true);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      assertEquals(0, linkedList0.size());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SQLUtil.isDML("update");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      genericDescriptorList0.add((Object) "update");
      genericDescriptorList0.add((Object) "update");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = " (";
      stringArray0[1] = " (";
      stringArray0[2] = " (";
      stringArray0[2] = " (";
      stringArray0[5] = " (";
      stringArray0[6] = " (";
      stringArray0[7] = " (";
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin(" (", stringArray0, " (", " (", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("%)vq", dBCatalog0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "k0DL}rxH!,_R";
      stringArray0[1] = "^n|cq)9SX$KN";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("k0DL}rxH!,_R", (String[]) null, "^n|cq)9SX$KN", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select into");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("selectunknown constraint tpe:");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("m*/&#IMb`!t^K");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.COMMIT;
      Integer integer3 = RawTransaction.SAVEPOINT_ROLLBACK;
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("GZIR`UiH(6_n(\tJc<", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "8dd:FLH,At/G{'Bxy");
      SQLUtil.addOptionalCondition("8dd:FLH,At/G{'Bxy", stringBuilder0);
      assertEquals("8dd:FLH,At/G{'Bxy or 8dd:FLH,At/G{'Bxy", stringBuilder0.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "alter table";
      DBDataType dBDataType0 = DBDataType.getInstance(1549, "alter table");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter table", (DBTable) null, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.parseColumnTypeAndSize("ALTER TABLE(3,1)");
      int int0 = 4674;
      // Undeclared exception!
      try { 
        DBDataType.getInstance("PRIMARY KEY ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "/*";
      stringArray0[1] = "/*";
      stringArray0[2] = "/*";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = "/*";
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = "g+1j";
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("g+1j", (String) null, "g+1j");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("MODE_TABLE", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = SQLUtil.normalize("3!o=w,)U\"t XdB4]h'", false);
      assertEquals("3 ! o = w,) U \"t XdB4]h'\"", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = " DEFAULT ";
      stringArray0[1] = " DEFAULT ";
      stringArray0[2] = " DEFAULT ";
      stringArray0[4] = " DEFAULT ";
      stringArray0[5] = "select";
      stringArray0[6] = " DEFAULT ";
      stringArray0[7] = " DEFAULT ";
      stringArray0[8] = " DEFAULT ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " DEFAULT ", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(" DEFAULT ");
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0);
      assertEquals(" DEFAULT CONSTRAINT \" DEFAULT \" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("rename");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("updatecheck");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      defaultDBTable0.addUniqueConstraint(dBPrimaryKeyConstraint0);
      StringBuilder stringBuilder0 = new StringBuilder(">DC)wtm~bj&o<UjEvD");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(3126, (CharSequence) ">DC)wtm~bj&o<UjEvD");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3126
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("W=,4F^Q<tF@3lg:)rhw");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "W=,4F^Q<tF@3lg:)rhw";
      stringArray0[1] = "W=,4F^Q<tF@3lg:)rhw";
      stringArray0[2] = "W=,4F^Q<tF@3lg:)rhw";
      stringArray0[3] = "W=,4F^Q<tF@3lg:)rhw";
      stringArray0[4] = "W=,4F^Q<tF@3lg:)rhw";
      stringArray0[5] = "W=,4F^Q<tF@3lg:)rhw";
      stringArray0[6] = "W=,4F^Q<tF@3lg:)rhw";
      stringArray0[7] = "W=,4F^Q<tF@3lg:)rhw";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "W=,4F^Q<tF@3lg:)rhw", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setAsciiStream(longC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: setAsciiStream(longC
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("setAsciiStream(long)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"long\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(90, "?Jz9");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("?Jz9", (DBTable) null, dBDataType0, integer0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      DBDataType dBDataType1 = DBDataType.getInstance(90, "?Jz9");
      assertFalse(dBDataType1.isTemporal());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(2682);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "m Y9AugB1g~", true, (String[]) null);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT \"m Y9AugB1g~\" ", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("a--L52U%1l?~!NG");
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockFileWriter mockFileWriter0 = new MockFileWriter(",");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("DROP AGGREGATE IF EXISTS ");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SQLUtil.isProcedureCall("callgetnclob (string)");
      VersionNumber.valueOf("*/");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      // Undeclared exception!
      try { 
        DBDataType.getInstance("callgetnclob (string)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("execupdtqcheck");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = SQLUtil.normalize("Premature end of input stream, expected {0} bytes, but only read {1}.", false);
      assertEquals("Premature end of input stream, expected { 0 } bytes, but only read { 1 }.", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = SQLUtil.normalize("av.;bm<caqFT8if>M<", true);
      assertEquals("av.; bm < caqFT8if > M <", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = SQLUtil.normalize("call#=+t,!*mga", true);
      assertEquals("call # = + t, ! * mga", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getIndex(">J(2VzWTO,tV");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter indexcreate materialized viewqfy0hl", defaultDBTable0, 49, "alter indexcreate materialized viewqfy0hl");
      String[] stringArray0 = new String[3];
      stringArray0[1] = ">J(2VzWTO,tV";
      stringArray0[2] = ">J(2VzWTO,tV";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      IntStream intStream0 = stringBuilder0.chars();
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      Character.valueOf('$');
      String string0 = SQLUtil.renderValue(intStream0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("m*/&#IMb`!t^K", false, "m*/&#IMb`!t^K", "F");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT m*/&#IMb`!t^K CHECK F", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(2682);
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Lu31?>]w*[B\"Up?", dBSchema0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-249385789), "FLx6t/(yM%Xkl<S5)");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter tbleunnon cons", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("alter tbleunnon cons FLX6T/(YM%XKL<S5) NULL", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.equals("getNClob(String)");
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderQuery(defaultDBTable1, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(">DC)wtm~bj&o<UjEvD");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(3126, (CharSequence) ">DC)wtm~bj&o<UjEvD");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3126
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("create materHalize viewqfy0Il");
      SQLUtil.addRequiredCondition("create materHalize viewqfy0Il", stringBuilder0);
      assertEquals("create materHalize viewqfy0Il and create materHalize viewqfy0Il", stringBuilder0.toString());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "*";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("l}IUR6<\"Zf`c}&jn^");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("SET NULL", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("<Z]sa!<0$S");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder2 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder1, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder2.insert(2526, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2526
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("}{,65x^HxS", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("%@gEV{P$8", dBSchema0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "HFlQ!eairGf/)'";
      stringArray0[1] = "%@gEV{P$8";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "}{,65x^HxS", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE (HFlQ!eairGf/)', %@gEV{P$8, )", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder();
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("!-vT]c,xK1Px", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "t|";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ".A", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("5I$w~(}+&uz; ", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(dBTable0, stringArray0[0], true, stringArray0);
      dBPrimaryKeyConstraint0.setTable(dBTable0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("v4gM_uyy");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "v4gM_uyy", false, (String[]) null);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT v4gM_uyy ", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "drop taleexecupatqchec";
      stringArray0[1] = "a(,vr#k5>zMY";
      stringArray0[2] = "a(,vr#k5>zMY";
      stringArray0[3] = "a(,vr#k5>zMY";
      String[] stringArray1 = new String[4];
      stringArray1[0] = " GKa+}H,AY#id'HS8n";
      stringArray1[1] = "MODE_TABLE";
      stringArray1[2] = "a(,vr#k5>zMY";
      stringArray1[3] = "{O~xF+(FR";
      SQLUtil.leftJoin("{O~xF+(FR", stringArray0, "{O~xF+(FR", " GKa+}H,AY#id'HS8n", stringArray1);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null' has no foreign key with the columns ( GKa+}H,AY#id'HS8n, MODE_TABLE, a(,vr#k5>zMY, {O~xF+(FR)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[4];
      StringBuilder stringBuilder0 = new StringBuilder("%");
      String string0 = SQLUtil.leftJoin("3", stringArray0, "41\":7g}AnbG N(uzj2", "41\":7g}AnbG N(uzj2", stringArray0);
      assertEquals("left join 41\":7g}AnbG N(uzj2 as 41\":7g}AnbG N(uzj2 on 3.null = 41\":7g}AnbG N(uzj2.null and 3.null = 41\":7g}AnbG N(uzj2.null and 3.null = 41\":7g}AnbG N(uzj2.null and 3.null = 41\":7g}AnbG N(uzj2.null", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("selectunknown constraint tpe:");
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      assertEquals("catalog selectunknown constraint tpe:", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String[] stringArray0 = new String[4];
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("NCLOB", dBCatalog0);
      dBSchema0.getTable("%");
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBTable dBTable0 = null;
      DBDataType dBDataType0 = DBDataType.getInstance(90, "");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getTable((String) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, dBDataType0, (Integer) null, (Integer) null);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("Expected date to be dash-separated, got '");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create unique indexexecupdtqcheck");
      defaultDBTable0.getPrimaryKeyConstraint();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "create unique indexexecupdtqcheck";
      stringArray0[2] = "create unique indexexecupdtqcheck";
      stringArray0[3] = "create unique indexexecupdtqcheck";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "create unique indexexecupdtqcheck";
      // Undeclared exception!
      try { 
        SQLUtil.join("create unique indexexecupdtqcheck", "create unique indexexecupdtqcheck", stringArray0, "create unique indexexecupdtqcheck", "create unique indexexecupdtqcheck", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        SQLUtil.join("org.firebirdsql.gds.impl.jni.ParameterBufferBase", (String) null, (String[]) null, (String) null, "create table", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = SQLUtil.normalize("vN\"", true);
      assertEquals("vN \"\"", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("selectunknown constraint tpe:");
      DBDataType dBDataType0 = DBDataType.getInstance((-95093664), "selectunknown constraint tpe:");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("selectunknown constraint tpe:", defaultDBTable0, dBDataType0);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-95093664), "DATE");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("DATE", defaultDBTable0, dBDataType0);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("DATE", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("/*", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      PGConnectionPoolDataSource pGConnectionPoolDataSource1 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource1.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = SQLUtil.removeComments("omit-xml-declaration");
      assertEquals("omit-xml-declaration", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[5];
      stringArray0[1] = "\u0001\u00D4";
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = SQLUtil.normalize("|dd-E>]S~mHR|", true);
      assertEquals("| dd - E > ] S ~ mHR |", string0);
      
      DBSchema dBSchema0 = new DBSchema("|dd-E>]S~mHR|");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("| dd - E > ] S ~ mHR |", dBSchema0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|dd-E>]S~mHR|";
      stringArray0[1] = "| dd - E > ] S ~ mHR |";
      stringArray0[2] = "|dd-E>]S~mHR|";
      stringArray0[3] = "";
      stringArray0[4] = "| dd - E > ] S ~ mHR |";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "|dd-E>]S~mHR|";
      stringArray1[4] = "|dd-E>]S~mHR|";
      stringArray1[5] = "drop indexmode_table";
      stringArray1[6] = "| dd - E > ] S ~ mHR |";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("| dd - E > ] S ~ mHR |", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (|dd-E>]S~mHR|, | dd - E > ] S ~ mHR |, |dd-E>]S~mHR|, , | dd - E > ] S ~ mHR |) REFERENCES | dd - E > ] S ~ mHR |(, , , |dd-E>]S~mHR|, |dd-E>]S~mHR|, drop indexmode_table, | dd - E > ] S ~ mHR |)", string1);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "qfy0HL";
      stringArray0[1] = "qfy0HL";
      String string0 = SQLUtil.innerJoin("qfy0HL", stringArray0, "qfy0HL", "qfy0HL", stringArray0);
      assertEquals("qfy0HL as qfy0HL on qfy0HL.qfy0HL = qfy0HL.qfy0HL and qfy0HL.qfy0HL = qfy0HL.qfy0HL", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = "";
      String string1 = "wbf 3oGZ^";
      SQLUtil.substituteMarkers("", "wbf 3oGZ^", "");
      SQLUtil.isProcedureCall("wbf 3oGZ^");
      VersionNumber versionNumber0 = VersionNumber.valueOf("P@d");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("wbf 3oGZ^", "wbf 3oGZ^", versionNumber0);
      String string2 = "]EE[k=h#X::;";
      // Undeclared exception!
      try { 
        defaultDatabase0.getSchema("]EE[k=h#X::;");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'wbf 3oGZ^'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("=_4DB4lG5c]E", "create materhalize ", "create mat");
      assertEquals("=_4DB4lG5c]E", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.join("inner", "GWDK?@Q+OF=Te8v}I", stringArray0, "inner", "NCLOB", stringArray0);
      assertEquals("inner as NCLOB on GWDK?@Q+OF=Te8v}I.null = NCLOB.null and GWDK?@Q+OF=Te8v}I.null = NCLOB.null and GWDK?@Q+OF=Te8v}I.null = NCLOB.null and GWDK?@Q+OF=Te8v}I.null = NCLOB.null", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("7h0=", "7h0=", (String[]) null, "7h0=", "7h0=", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("QbD8OA<>vQ;=#&^rG", (String[]) null, "QbD8OA<>vQ;=#&^rG", "QbD8OA<>vQ;=#&^rG", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[14];
      String string0 = SQLUtil.renderColumnListWithTableName("av.;bm<caqFT8if>M<", stringArray0);
      assertEquals("av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null, av.;bm<caqFT8if>M<.null", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("executeocr0m9rp9npzf,44");
      DBSchema dBSchema0 = new DBSchema("[", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("[", dBSchema0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "executeocr0m9rp9npzf,44";
      stringArray0[1] = "[";
      stringArray0[2] = "executeocr0m9rp9npzf,44";
      stringArray0[3] = "executeocr0m9rp9npzf,44";
      stringArray0[4] = "[";
      stringArray0[5] = "[";
      stringArray0[6] = "executeocr0m9rp9npzf,44";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "[", false, stringArray0);
      String string0 = SQLUtil.ownerDotComponent(dBPrimaryKeyConstraint0);
      assertEquals("[.[", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("v4gM_uyy");
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("v4gM_uyy", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("qfy0HL");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String string0 = SQLUtil.renderValue("(@\"QR8]@-/y.+w#>D");
      assertEquals("'(@\"QR8]@-/y.+w#>D'", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "alter indexcreate materialized viewqfy0hl";
      stringArray0[1] = ">J(2VzWTO,tV";
      // Undeclared exception!
      try { 
        defaultDBTable0.queryRowsByCellValues(stringArray0, dBColumnArray0, (Connection) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "NCLOB";
      stringArray0[1] = " join ";
      stringArray0[2] = "NCLOB";
      stringArray0[3] = "NCLOB";
      stringArray0[4] = "NCLOB";
      stringArray0[5] = "CLOB";
      stringArray0[6] = "NCLOB";
      stringArray0[7] = "NCLOB";
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition((String) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("", stringBuilder0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.join("NCLOB", "%", stringArray0, "%", "%", stringArray0);
      assertEquals("NCLOB join % as % on %.null = %.null and %.null = %.null and %.null = %.null and %.null = %.null", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("eA<z$y", "eA<z$y", stringArray0, "eA<z$y", "40XT7", stringArray0);
      assertEquals("eA<z$y join eA<z$y as 40XT7 on eA<z$y.null = 40XT7.null", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, (String) null, (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(90, "?Jz9");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("?Jz9");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("?Jz9", defaultDBTable0, dBDataType0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("?JZ9", stringBuilder0.toString());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-2654), "c*{}1G'jPTW[lnW$Z");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("c*{}1G'jPTW[lnW$Z", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("C*{}1G'JPTW[LNW$Z(3)", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = "delete8e(y%wj%h2'da)/:1";
      StringBuilder stringBuilder0 = new StringBuilder("delete8e(y%wj%h2'da)/:1");
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter tableunknon cons");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Object object0 = new Object();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("alter tableunknon cons");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("selectunknown constraint tpe:");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("selectu");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("nclob");
      assertNull(boolean0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("selectunknown constraint type:");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("create unique index");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("v4gM_uyy");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessioncreate");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
