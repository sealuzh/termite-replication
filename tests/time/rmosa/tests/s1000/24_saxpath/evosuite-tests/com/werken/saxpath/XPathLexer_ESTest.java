/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 16:35:39 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L/+aR");
      Token token0 = xPathLexer0.slashes();
      assertEquals("L/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kd}NF/P.M");
      Token token0 = xPathLexer0.minus();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (6) (K)", string0);
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifier();
      assertEquals("d", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("}", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.consume((-2092));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.consume((-3957));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8940193038061226
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.literal();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0790542697717447
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y(U[4u");
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.minus();
      String string0 = token0.toString();
      assertEquals("[ (5) (y)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (6) (()", string1);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("U", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.893958264924355
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I-QI2(ak0%wBjoF=&>");
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("%J>n2%t{");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7983834123217766
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b^>:@D*S:");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("b", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.identifier();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("/oMvpO&h");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(11, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.981638675931792
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(x,c8wN#!Jz3U!");
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.at();
      token0.toString();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0606758531880334
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pl.),eME\f.E`BDP");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("P", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      xPathLexer0.setXPath("{_O");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.number();
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("{_O");
      xPathLexer2.setPreviousToken(token2);
      assertEquals(30, token2.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals("{_O", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y(U[4u");
      XPathLexer xPathLexer1 = new XPathLexer("y(U[4u");
      xPathLexer1.consume((-2285));
      XPathLexer xPathLexer2 = new XPathLexer("y(U[4u");
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.696330122953393
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("M{G'Wsv~nR/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.sapath.Token", token0.getTokenText());
      
      Token token1 = xPathLexer1.notEquals();
      assertEquals("M{", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.sapath.Token");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer3.consume();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.endPosition();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("G", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.137738068401538
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token4);
      assertEquals(23, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.star();
      assertEquals("m", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertEquals(27, token6.getTokenType());
      assertNotNull(token6);
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("s", token7.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("axpath.Token", token8.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.655758935570581
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ajf<6x(");
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0617235510099245
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OOR>C0l_b9z25RjF4w");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (OR)", string0);
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      String string1 = token0.toString();
      assertEquals("[ (32) (O)", string1);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("OOR>C0l_b9z25RjF4w");
      xPathLexer2.setPreviousToken(token0);
      assertEquals("O", token0.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.800259511598697
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^vYSoVJ;})");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("^", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("^vYSoVJ;})");
      xPathLexer0.isIdentifierChar('q');
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("v", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("YSoVJ", token4.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.577115960284487
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y!z[^-PZA72+");
      xPathLexer0.star();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.consume((-2251));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com)werkenksax5lth.Toeen");
      xPathLexer0.consume((-3085));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4%");
      XPathLexer xPathLexer1 = new XPathLexer("U^\"i0?@,+l.)*_ZO");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("U", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("4%");
      xPathLexer2.relationalOperator();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.797912195797784
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.f");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.star();
      assertEquals(".", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.981638675931792
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("jXD!`,=J+]\"=3");
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer1.at();
      xPathLexer1.rightBracket();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer1.consume((-3191));
      xPathLexer0.setXPath("t:ZS2H}||:7~");
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer("4%");
      xPathLexer2.relationalOperator();
      xPathLexer0.number();
      xPathLexer1.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.8947105594225744
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setXPath("a-2}0u;Ux^");
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (23) (c)", string0);
      
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      xPathLexer0.not();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("u;Ux^", token4.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.576374057017259
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" Zp: ?#AS$]KgD");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Zp", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.575737837976132
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pzh04");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Pzh04", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6311900933936647
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("H");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.798452861589087
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CBQ");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("e^k8+e3^[aE`H3");
      Token token0 = xPathLexer0.not();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer1.star();
      Token token1 = xPathLexer2.div();
      assertNull(token1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.892632114903634
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setXPath(",g$/C|A#E#0+/:q ");
      Token token1 = xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.number();
      xPathLexer0.not();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4398860526697708
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("07=1x_OY%e");
      xPathLexer0.and();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.consume((-345));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7983834123217766
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jXD!`,=J+]\"=3");
      Token token0 = xPathLexer0.minus();
      assertEquals("j", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("X", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("D", token3.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.799994419418916
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("WN1OaDI(U1>S?3");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("WN1OaDI", token1.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.not();
      xPathLexer0.setXPath("HlvDF5kI;$;q&MdB#T");
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.consume((-99));
      XPathLexer xPathLexer1 = new XPathLexer("VQY6amRXIorQkS");
      xPathLexer1.operatorName();
      xPathLexer1.mod();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.not();
      xPathLexer0.setXPath("HlvDF5kI;$;q&MdB#T");
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.consume((-176));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6941570926736427
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-.{X=mD>lnq");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("-.", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("X", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("CBQ");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer3 = new XPathLexer("e^k8+e3^[aE`H3");
      xPathLexer3.relationalOperator();
      xPathLexer1.div();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer1.nextToken();
      assertEquals("CBQ", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Jyk>p+F4");
      xPathLexer0.setXPath("*mV8*");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(5, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7165455688794622
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.setXPath("$THd^0s+fr=");
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("$", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token4);
      assertEquals("T", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Hd^0s+fr=", token5.getTokenText());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("H", token6.getTokenText());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(62);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.3979465350414284
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("rO&TH>DoR");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("rO", token1.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.662762064424613
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jXD!`,=J+]\"=3");
      xPathLexer0.notEquals();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<lp LAzj@I;");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<(p LAzj@I;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<(p LAzj@I;");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4382178413630053
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer("#YjC'3npgjnX*#6h");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("#YjC'3npgjnX*#6h", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("vv");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("vv", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = 2070;
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-723));
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.795338716182451
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>=\";)O{Pt48/Z3Wn");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) ()", string0);
      
      Token token1 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (4) ()");
      Token token3 = xPathLexer0.leftParen();
      assertEquals(">", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.800439170247264
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$%");
      XPathLexer xPathLexer1 = new XPathLexer("FgG3VU?SDG~pP");
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer2 = new XPathLexer("hn&;x$%");
      Token token0 = xPathLexer1.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.colon();
      Token token1 = xPathLexer3.identifier();
      xPathLexer2.colon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.nextToken();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.983788081555339
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      xPathLexer0.setXPath("com.werken.sapath.Token");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (32) (o)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      assertEquals(".", token3.getTokenText());
      assertEquals(31, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token5 = xPathLexer0.identifier();
      assertEquals("erken.sapath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2707836680881566
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer2.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.and();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer2.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer1.consume(1);
      xPathLexer2.setXPath("t:ZS2H}||:7~");
      xPathLexer0.consume();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer2.currentPosition();
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("t", token8.getTokenText());
      
      xPathLexer0.consume();
      Token token9 = xPathLexer2.whitespace();
      assertEquals((-2), token9.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6761450693882238
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      String string0 = token0.toString();
      assertEquals("[ (2) (c)", string0);
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.setXPath("$THd^0s+fr=");
      xPathLexer0.and();
      Token token2 = xPathLexer0.comma();
      assertEquals("$", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.nextToken();
      assertEquals("THd^0s+fr=", token3.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.020225017639701
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.575737837976132
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bZp:r?#/@zF$]KgD");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("bZp", token0.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v1~4");
      Token token0 = xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (23) (v)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      xPathLexer0.not();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("07=1x_OY%e");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("07", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("x_OY", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.692637421372917
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(i");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("!hehHR'`+BX");
      XPathLexer xPathLexer2 = new XPathLexer("(i");
      xPathLexer2.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N23");
      xPathLexer0.setXPath("N23");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("N2", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.692551680139958
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.setXPath("a-2}0u;Ux^");
      xPathLexer0.and();
      Token token0 = xPathLexer0.comma();
      assertEquals("a", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("-", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(4708);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.444143364603016
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Vc3q6~Kpw]a80v~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.696115929886109
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (32) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("om.werken.sapath.Token", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.89527747175125
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("PcE@HywEVU-p");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Pc", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.at();
      String string0 = token2.toString();
      assertEquals("[ (16) (H)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (26) (E)", string1);
      
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("EVU-p", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>=\";)O{Pt48/Z3Wn");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.8953572017323808
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setXPath("com.werken.sapath.Token");
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("IT,H&#Xeo![S6wN");
      xPathLexer2.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals("IT", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.colon();
      assertEquals(",", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.9822039470852983
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_'2W$'H^rxblkq/U#%");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("_", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("_'2W$'H^rxblkq/U#%");
      xPathLexer1.mod();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("_", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("'", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("'", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals("2", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7995176083314686
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      XPathLexer xPathLexer1 = new XPathLexer("ylP3~=giXCp");
      Token token3 = xPathLexer1.colon();
      assertEquals("y", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("lP3", token4.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<(p LAzj@I;");
      XPathLexer xPathLexer1 = new XPathLexer("yB");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]L,MAQz.p98E$B83");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.relationalOperator();
      xPathLexer2.div();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.690731070842713
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      xPathLexer0.comma();
      xPathLexer0.setXPath("a-2}0u;Ux^");
      xPathLexer0.and();
      Token token0 = xPathLexer0.comma();
      assertEquals("a", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".FZFpgI?]-n`aYv");
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("FZFpgI?]-n`aYv", token1.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.6515367686714653
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(x,c8w#!Jz3U!");
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.at();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      XPathLexer xPathLexer1 = new XPathLexer("5om.werken.saxpat;.XPathLexer");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("5", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4468225162326824
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QoY?~^$ox)wuMNk%");
      Token token0 = xPathLexer0.star();
      assertEquals("Q", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer1.mod();
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("Q", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("oY", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals("?", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.89582058400169
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("REbP8m%G-HN@#8");
      int int0 = xPathLexer2.endPosition();
      assertEquals(14, int0);
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("REbP8m", token5.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("Sd?b");
      xPathLexer0.mod();
      Token token0 = xPathLexer1.nextToken();
      assertEquals("Sd", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.consume((-2092));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".FZFpgI?]-n`aYv");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$:%uHGWNAsF<Zr|+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(x,c8w#!Jz3U!");
      XPathLexer xPathLexer1 = new XPathLexer("(x,c8w#!Jz3U!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("M{G'Wsv~nR/");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("M{G'Wsv~nR/");
      xPathLexer2.consume();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.sapath.Token");
      assertEquals("com.werken.sapath.Token", xPathLexer3.getXPath());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")43wMJDm");
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("|$5 !T|;7dj6<8}Ke9");
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@0Xg'Oj");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("07=1x_OY%e");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("07", token0.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Jyk>p+F4");
      xPathLexer0.setXPath(":0qP8%,S");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.895005099387966
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer1.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      boolean boolean0 = xPathLexer1.isIdentifierStartChar(']');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      Token token2 = xPathLexer3.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer3.endPosition();
      XPathLexer xPathLexer4 = new XPathLexer("V^a4H,rB");
      Token token4 = xPathLexer4.nextToken();
      assertEquals("V", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.135560826118755
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Jyk>p+F4");
      Token token0 = xPathLexer1.equals();
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer1.doubleColon();
      assertEquals("yk", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals(">", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer1.div();
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("p", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token6 = xPathLexer1.nextToken();
      assertEquals(5, token6.getTokenType());
      assertEquals("+", token6.getTokenText());
      
      xPathLexer1.consume();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("hn", token0.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.693159536685813
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      int int0 = (-473);
      xPathLexer0.consume((-473));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.694334403925815
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mjwAem`Sl8Ia>HS2&Bb");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("jwAem", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (11) (m)", string0);
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.693913319058074
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QoY?~^$ox)wuMNk%");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer1.mod();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("QoY", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-859));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(x,c8w#!Jz3U!");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("(x", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("(x,c8w#!Jz3U!");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(",", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CBQ");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("e^k8?e3^[aE`H3");
      xPathLexer2.relationalOperator();
      xPathLexer2.div();
      xPathLexer1.setPreviousToken((Token) null);
      Token token0 = xPathLexer2.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("e", token0.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.9077617232358122
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.setXPath("$THd^0s+fr=");
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("$", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals(23, token4.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("^0s+fr=", token6.getTokenText());
      
      Token token7 = xPathLexer0.star();
      assertEquals("^", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(62);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.207496739020911
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("A LPvJLP#X");
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.69463390376109
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")43wMJDm");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      assertEquals(")", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("wMJDm", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HkFVShZQ'");
      XPathLexer xPathLexer1 = new XPathLexer("&");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5770941238394602
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^vYSoVJ;})");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("A LPvJLP#X");
      xPathLexer0.isIdentifierChar('q');
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("LPvJLP", token1.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aj<6x(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("aj", token0.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.2066727906338905
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("");
      xPathLexer0.slashes();
      xPathLexer0.equals();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("VIZg-~h9_L{");
      xPathLexer1.literal();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer1.identifier();
      xPathLexer1.literal();
      xPathLexer1.plus();
      xPathLexer0.consume((-3219));
      xPathLexer1.relationalOperator();
      xPathLexer2.nextToken();
      xPathLexer0.consume();
      xPathLexer1.rightParen();
      xPathLexer2.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@0Xg'Oj");
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.437138219230752
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9%");
      XPathLexer xPathLexer1 = new XPathLexer("9%");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.8968426412194233
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      assertEquals("m.werken.saxpath.T", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("ken", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer1.minus();
      assertEquals("c", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("om", token5.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.981360550497221
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      xPathLexer0.setXPath("");
      xPathLexer0.and();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("q]^bW-Lr>DjR>zaS,Y[");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer1.div();
      char char0 = xPathLexer1.LA(31);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&)x$%");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("hn", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("hn&)x$%");
      xPathLexer0.isIdentifierChar('q');
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("n", token2.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.2091445810480161
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Hph", token2.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.4400277961141366
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4%");
      XPathLexer xPathLexer1 = new XPathLexer("4%");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.9919566310746961
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setXPath("a-2}0u;Ux^");
      token0.toString();
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("}", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      String string0 = token1.toString();
      assertEquals("[ (32) (a)", string0);
      
      String string1 = token4.toString();
      assertEquals("[ (20) (0)", string1);
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("u", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(";", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("U", token7.getTokenText());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer0.setPreviousToken(token4);
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>=\";)O{Pt48/Z3Wn");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(114);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eZuYxx3USXX0/`?");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.576374057017259
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mjwAem`Sl8Ia>HS2&Bb");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("mjwAem", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>=\";)O{Pt48/Z3Wn");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("&7Qi.x2j(tuX.xqa'!");
      XPathLexer xPathLexer1 = new XPathLexer("_ DB:#~w%m\"'/*");
      boolean boolean0 = xPathLexer1.isIdentifierChar('-');
      assertTrue(boolean0);
      
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("7", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer1.plus();
      assertEquals("_", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.791946795121705
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&}m89");
      xPathLexer0.pipe();
      xPathLexer0.consume((-424));
      xPathLexer0.equals();
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.getXPath();
      int int0 = xPathLexer0.endPosition();
      assertEquals(24, int0);
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('|');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werkenksaxplth.Token");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.696381407015815
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.consume((-1754));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      char char0 = xPathLexer0.LA(27);
      assertEquals('x', char0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.444791580822651
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      xPathLexer0.setXPath("com.werken.sapath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.sapath.Token");
      XPathLexer xPathLexer2 = new XPathLexer("HT`Ya#cjRDv8{Bm_VQq");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("com.werken.sapath.Token", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.37286107169673
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>=\";)O{Pt48/Z3Wn");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.getPreviousToken();
      xPathLexer0.LA(112);
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.981030680795753
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (23) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(".w", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("e", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      Token token1 = xPathLexer0.colon();
      assertEquals("m", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.907150561194531
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.setXPath("$THd^0s+fr=");
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("$", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token5);
      assertEquals("H", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("d^0s+fr=", token6.getTokenText());
      
      Token token7 = xPathLexer0.star();
      assertEquals("d", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(62);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.2882133699372744
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mjwAem`Sl8Ia>HS2&Bb");
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.6754549691619591
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4%");
      xPathLexer0.consume(504);
      XPathLexer xPathLexer1 = new XPathLexer("4%");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.204136611347105
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4%");
      XPathLexer xPathLexer1 = new XPathLexer("4%");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("A LPvJLP#X");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.hasMoreChars();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('K');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.6940398639604233
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(x,c8w#!Jz3U!");
      Token token0 = xPathLexer0.dots();
      assertEquals("(", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("c", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.identifier();
      assertEquals("w", token3.getTokenText());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.082064755103108
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.Token");
      xPathLexer0.comma();
      xPathLexer0.setXPath("com.werken.sapath.Token");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.number();
      assertEquals(".", token3.getTokenText());
      assertEquals(31, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      String string0 = token5.toString();
      assertEquals("[ (20) (e)", string0);
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("r", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.plus();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("e", token7.getTokenText());
      
      Token token8 = xPathLexer0.literal();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer0.setPreviousToken(token8);
      assertEquals(".sapath.Toke", token8.getTokenText());
      assertEquals(27, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("com.werken.sapath.Token");
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertNull(token10);
      
      xPathLexer0.nextToken();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      assertEquals("c", token11.getTokenText());
      
      Token token12 = xPathLexer0.leftParen();
      assertEquals("o", token12.getTokenText());
      assertEquals(1, token12.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar(':');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('q');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.4600443991507501
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.7030883662021656
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")43wMJDm");
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("M", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.endPosition();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("JDm", token5.getTokenText());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.3376823990672262
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>=\";)O{Pt48/Z3Wn");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("_", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (4) ()", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(10, token2.getTokenType());
      assertEquals(">=", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1309809510367932
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.191193095858163
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-*.f");
      xPathLexer0.consume((-1161));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.1655609491867225
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      Token token0 = xPathLexer0.pipe();
      assertEquals(" ", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.comma();
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('=');
      assertFalse(boolean0);
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.endPosition();
      xPathLexer1.nextToken();
      xPathLexer1.getXPath();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.202871351746455
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$%");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(";x$%", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(";", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals("x", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.1352506614574231
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.0254451487108018
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      XPathLexer xPathLexer1 = new XPathLexer(".FZFpgI?]-n`aYv");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("FZFpgI", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.1669595505853239
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.1697974893455927
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      Token token0 = xPathLexer0.at();
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("H", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.1309809510367932
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(3212);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.4228254765934816
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l<@AA!nZ83`%3TpP");
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.star();
      assertEquals("@", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("AA", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("n", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      xPathLexer0.endPosition();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("83", token5.getTokenText());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.6320971228721226
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.337657045597604
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>=\";)O{Pt48/Z3Wn");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.2787943038873362
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.nextToken();
      xPathLexer1.consume();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.0877568326226335
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" :6Hph#7a&O|/4w");
      Token token0 = xPathLexer0.colon();
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.1829020888895199
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_>=\";)O{Pt48/Z3Wn");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      Token token2 = xPathLexer0.plus();
      assertEquals(">", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (1) (_)", string0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(21, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("\";", token4.getTokenText());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.1457265626321662
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(x,c8w#!Jz3U!");
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.at();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.0675397323065556
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(x,c8w#!Jz3U!");
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.at();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9489276520266061
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".FZFpgI?]-n`aYv");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("FZFpgI", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?]-n`aYv", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("?", token3.getTokenText());
  }
}
