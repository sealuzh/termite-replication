/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 16:49:13 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StreamCorruptedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.382435249959657
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.1F);
      player0.setY(0.1F);
      player0.setDead();
      player0.setDead();
      player0.setZ(10.0F);
      player0.type();
      player0.getY();
      player0.pack();
      Player player1 = new Player((-1194), "U0a8s[2$~", 4919);
      player0.setJoinOK(player1, true);
      player1.pack();
      player1.setDead();
      player1.pack();
      player0.isJoinOK(player1, true);
      player1.isConnected();
      System.setCurrentTimeMillis(1392409296320L);
      player1.getX();
      player0.getZ();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(10.0F, player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-3286));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte)28;
      byte byte0 = (byte) (-59);
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-53);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-31687), 2516);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 1065;
      Player player0 = new Player(1065);
      player0.setJoinOK(player0, false);
      Player player1 = new Player(1065);
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-73);
      byteArray0[2] = (byte)57;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte) (-13);
      float float0 = 1.0F;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(18692);
      Party party0 = new Party();
      player0.boss = party0;
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2428);
      Player player1 = new Player();
      player1.setJoinOK(player0, false);
      player0.setMoney(0.1F);
      player1.setDead((long) (short)4919);
      player0.toString();
      Player player2 = new Player(1121);
      player0.setDead(0L);
      Player player3 = new Player((-4112));
      player1.isJoinOK(player2, false);
      player1.pack();
      player0.setX(0.0F);
      player2.pack();
      float float0 = player0.getX();
      assertEquals(0.1F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(1568, (String) null, "$[G@;0HRMygc[ l^", 1568, 0);
      Player player1 = new Player((-7603), (String) null, 1);
      player0.isJoinOK(player1, true);
      assertEquals(1, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      
      int int0 = player0.gangStrength();
      assertEquals(1568, player0.getPictureId());
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-6012), "b_84-MwuyM)\"", "b_84-MwuyM)\"", (-6012), 3560);
      player0.isConnected();
      player0.setZ(3560);
      System.setCurrentTimeMillis(3762L);
      player0.getX();
      float float0 = player0.getZ();
      assertEquals(3560.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-1808));
      Player player1 = new Player((short)4919, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 8124);
      player1.isBoss();
      player0.id = (-1818);
      byte[] byteArray0 = player0.pack();
      player0.isConnected();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      player1.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      
      player0.pack();
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = (-899);
      Player player0 = new Player(1520, "", "", (-899), 1520);
      Player player1 = new Player();
      player0.next = (Party) player1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getIP();
      player0.getIP();
      byte[] byteArray0 = player0.pack();
      player0.getZ();
      player0.getZ();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 4919);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(Throwable e) {
         //
         // invalid stream header: 37F005F0
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.toString();
      Player player1 = new Player(29185);
      player1.setDead((-980L));
      player0.setX(0.2F);
      Player player2 = new Player(5);
      player0.isJoinOK(player1, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-36);
      byteArray0[0] = (byte)71;
      byteArray0[2] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      player2.unpack(dataInputStream0);
      player1.getTimeOfDeath();
      player0.pack();
      assertEquals(0.2F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(3945, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-1));
      player0.setZ((-1));
      System.setCurrentTimeMillis(3945);
      player0.getX();
      float float0 = player0.getZ();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)28;
      byteArray0[3] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      player0.setX((-664.345F));
      player0.isConnected();
      System.setCurrentTimeMillis((byte)0);
      float float0 = player0.getX();
      assertEquals((-664.345F), float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(1108, "", 2428);
      Player player1 = new Player();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-68);
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-96);
      byteArray0[4] = (byte) (-107);
      player0.unpack(byteArray0);
      Player player2 = new Player((byte)30);
      player2.pack();
      player2.setZ(0.2F);
      player0.setX((-1897.389F));
      player2.setMoney((-1897.389F));
      player0.getPictureId();
      Player player3 = new Player();
      player0.isJoinOK(player3, false);
      player2.getMoney();
      assertEquals(0.2F, player2.getZ(), 0.01F);
      
      int int0 = player1.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(7183);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.0F);
      player0.setY(0.0F);
      player0.setMoney(0.0F);
      player0.setY((-930.73F));
      player0.setDead();
      player0.setDead();
      player0.setZ((-450.5461F));
      player0.getY();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, (short)4919);
      // Undeclared exception!
      try { 
        bufferedOutputStream0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(1065);
      player0.setJoinOK(player0, false);
      Player player1 = new Player(1065);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("Player1065", player1.toString());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(383, (String) null, 14907);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)30;
      Party party0 = new Party();
      player0.next = party0;
      byteArray0[2] = (byte) (-49);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      assertEquals("Player-1", player0.boss.toString());
      assertEquals(0, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.getName();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      float float0 = player0.getMoney();
      assertEquals(14907, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1335, (String) null, "", 1335);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.release();
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player0.unpack(dataInputStream0);
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      player0.unpack(dataInputStream0);
      player0.type();
      player0.pack();
      int int1 = player0.type();
      assertEquals(5, int1);
      
      player0.getIP();
      Player player1 = new Player(540, (String) null, 5);
      player0.isJoinOK(player1, false);
      assertEquals(5, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      
      float float1 = player0.getMoney();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(float1, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(10.0F);
      player0.setY(0.0F);
      Player player1 = new Player((short)4919);
      float float0 = player0.getMoney();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.1F);
      player0.setY(0.1F);
      player0.setZ(10.0F);
      int int0 = Packable.PLAYER;
      player0.getY();
      player0.pack();
      Player player1 = new Player((-1), "IcI/_>4Q?JP", 1235);
      player1.setJoinOK(player0, true);
      assertEquals(0.1F, player0.getMoney(), 0.01F);
      
      Player player2 = new Player((-1683));
      boolean boolean0 = player2.isJoinOK(player1, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-4578), "state.Pl3yer", " ", (-4578));
      Player player1 = new Player();
      player1.setZ((-4578));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.reset(true);
      player0.setX((-1.0F));
      player1.setMoney((-1.0F));
      assertEquals((-1.0F), player1.getMoney(), 0.01F);
      
      player0.getPictureId();
      Player player2 = new Player();
      player2.prev = (Party) player0;
      boolean boolean0 = player2.isJoinOK(player0, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player((short)4919);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setConnected(false);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-124);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      player0.unpack(dataInputStream0);
      player0.isJoinOK(player1, false);
      player1.pack();
      player0.isConnected();
      assertFalse(player0.isConnected());
      
      player1.pack();
      Player player2 = new Player(5078, "", (short)4919);
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(1687, (String) null, 0);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-1254), "", "", (-1254), (-1254));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("%W");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-449), (String) null, (-449));
      player0.reset(true);
      player0.setMoney(10.0F);
      player0.setDead((-789L));
      player0.toString();
      Player player1 = new Player((-1385));
      Player player2 = new Player((-1619), "e", "", 0);
      player1.setDead(51L);
      player1.isJoinOK(player0, true);
      assertEquals(10.0F, player0.getMoney(), 0.01F);
      
      boolean boolean0 = player2.isConnected();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(161, "`", "`", 161, 161);
      Player player1 = new Player(2547, "E(ohF-`p+<", "`", (-32197));
      player0.next = (Party) player1;
      player0.getPictureId();
      float float0 = player0.getY();
      assertEquals(161, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      
      player1.toString();
      assertEquals((-32197), player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("E(ohF-`p+<", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-1000));
      player0.setDead(1092L);
      player0.gangStrength();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(1392409281320L);
      System.setCurrentTimeMillis(0L);
      Player player1 = new Player((-4415), "", 162);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1092L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-10530), "EV$a5!/=u", "EV$a5!/=u", (-10530), (-10530));
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-10530), int0);
      assertFalse(player0.isDead());
      assertEquals((-10530), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0, "", "", (-3916), 5);
      player0.id = 0;
      player0.setDead();
      player0.getSubparty();
      player0.type();
      player0.getName();
      player0.setDead(1813L);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(3929);
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((short)4919);
      player1.unpack(byteArray0);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("Player3929", player1.toString());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-796));
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-796", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(439);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      assertEquals(30, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals("Player439", player0.getName());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1065);
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player1065", player0.toString());
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n");
      Player player1 = new Player((-7454), "Player.unpack(): *** WARNING *** data is not of proper type!", 10);
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(10, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-2014), "", (-2014));
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals((-2014), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(2);
      player0.setX((-230.01F));
      int int0 = player0.gangStrength();
      assertEquals((-230.01F), player0.getX(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)5;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Player player0 = new Player((byte)5);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int1 = player0.getPictureId();
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals("Player5", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0, int1);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.1982462795335826
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, "0.0.0.0", "0.0.0.0", 4919, 0);
      Party party0 = new Party();
      party0.next = (Party) player0;
      player0.add(party0);
      player0.setMoney(0);
      player0.setDead(1L);
      player0.getIP();
      player0.setDead(1L, false);
      player0.setDead((long) 0);
      player0.setConnected(true);
      player0.setDead((-399L), false);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.setZ(0.0F);
      player0.setJoinOK(player1, false);
      player0.getY();
      player0.getStrength();
      assertEquals((-399L), player0.getTimeOfDeath());
      
      player1.setMoney(0);
      player1.setDead(0L, false);
      String string0 = player1.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-18822), "Player", "Player", 1335, (-599));
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-599), int0);
      assertEquals(1335, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-722));
      player0.setMoney(0.0F);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-722", player0.toString());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(1);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(1386);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player1386", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(1065);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-2216));
      int int0 = player0.type();
      assertEquals(5, int0);
      
      player0.reset(true);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-2216", player0.getName());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-1788));
      player0.setMoney((-1788));
      player0.setDead((long) (-1788), false);
      player0.setMoney((-1788));
      player0.isDead();
      System.setCurrentTimeMillis((-734L));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1065);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player1065", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(1065);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(40);
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", string0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player40", player0.getName());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(1065);
      player0.setDead();
      System.setCurrentTimeMillis(1808L);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(3974);
      player0.setDead(0L, true);
      Player player1 = new Player(1864);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertFalse(player0.isDead());
      assertFalse(boolean0);
      assertEquals("Player1864", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(1073, "u.> /e\")l5H1'+", (-1374));
      Player player1 = new Player((-1374));
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      assertEquals((-1374), player0.getPictureId());
      
      int int1 = player1.type();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertEquals(5, int1);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1374", player1.getName());
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(1065);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte) (-28);
      player0.unpack(byteArray0);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player1065", player0.getName());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-31683));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-1808));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(177);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player((-1224));
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1224", player0.getName());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player(1003);
      String string0 = player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player1003", string0);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player((-3374));
      player0.getStrength();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }
}
