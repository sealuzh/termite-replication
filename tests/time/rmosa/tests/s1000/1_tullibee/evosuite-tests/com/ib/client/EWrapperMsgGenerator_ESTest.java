/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 16:10:53 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.AnyWrapperMsgGenerator;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A");
      Contract contract0 = new Contract(13, "", "BAG", "BAG", 2011.591, "R.::lNl=zW/<&I", "ezjP*N>N^SZu", "BAG", "bidEFP", "|d/", vector0, "4?6YVa6UwZM/J-Tf &", false, "WEPxo", "A)R;k=|(s");
      Order order0 = new Order();
      Object object0 = new Object();
      contract0.equals(object0);
      order0.m_basisPoints = 407.74793;
      OrderState orderState0 = new OrderState(" stockRangeLower=", "7p.uZ'G%1FDJK:", "26WeekHigh", "", 1, Integer.MAX_VALUE, 0, "", "");
      String string1 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Contract contract0 = new Contract();
      Vector<TagValue> vector0 = new Vector<TagValue>();
      contract0.m_comboLegs = vector0;
      TagValue tagValue0 = new TagValue();
      vector0.add(tagValue0);
      TagValue tagValue1 = new TagValue("fundamentals", (String) null);
      vector0.add(tagValue1);
      Order order0 = new Order();
      order0.m_faProfile = "yll@$isuwfw";
      order0.m_algoParams = contract0.m_comboLegs;
      order0.m_algoStrategy = "closeEFP";
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(3, contract0, order0, orderState0);
      // Undeclared exception!
      try { 
        orderState0.equals("FA: ");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.ib.client.OrderState
         //
         verifyException("com.ib.client.OrderState", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      order0.m_algoStrategy = " jQ#n|erCo.mp.price=";
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = AnyWrapperMsgGenerator.connectionClosed();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(34, "Connection Closed", "BAG", "BAG", 34, "Connection Closed", "Connection Closed", "BAG", "Connection Closed", "BAG", vector0, "Connection Closed", true, "BAG", "Connection Closed");
      OrderState orderState0 = new OrderState();
      contract0.m_comboLegsDescrip = "}Ejs&=?T:eT_pdM";
      Order order0 = new Order();
      String string1 = EWrapperMsgGenerator.openOrder(34, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = AnyWrapperMsgGenerator.connectionClosed();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(34, "Connection Closed", "BAG", "BAG", 34, "Connection Closed", "Connection Closed", "BAG", "Connection Closed", "BAG", vector0, "Connection Closed", false, "BAG", "Connection Closed");
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      String string1 = EWrapperMsgGenerator.openOrder(34, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData((-2229), (-2229), (ContractDetails) null, "OptionAskExchStr", "ga", "ga", "OptionAskExchStr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, (-2144260118), 7.0, 1.7976931348623157E308, 1.0, 1.7976931348623157E308, 13, "D;4f&7z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 0.0, 13, 0.0, 0.0);
      assertEquals("id=13  modelOptComp: vol = 0.0 delta = N/A: modelPrice = 0.0: pvDividend = 0.0", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 13, 1.0, 13);
      assertEquals("id=13  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 1.0: pvDividend = 13.0", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, (-1.0), 13, (-1.0), (-1.0));
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(3, (Contract) null, order0, orderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      order0.m_algoStrategy = " jQ#n|erComp.price=";
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Contract contract0 = new Contract();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails((-3180), contract0, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_marketName = "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A";
      String string1 = EWrapperMsgGenerator.contractDetails(13, contractDetails0);
      assertEquals("reqId = 13 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, "com.ib.client.EException", "com.ib.client.EException", 100.0, "com.ib.client.EException", "com.ib.client.EException", (-855), "com.ib.client.EException", " underComp.price =", "/ ;6:Kq0<", "!_XLf)_PAq", "open", "/ ;6:Kq0<", "mS`{TPaq?lFz(}^Cp", "mS`{TPaq?lFz(}^Cp");
      contractDetails0.m_minTick = (double) (-855);
      contractDetails0.m_marketName = "open";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails((-855), contractDetails0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(272, (-755), "", (-755), 272, (-755), 272);
      assertEquals("updateMktDepth: 272 -755  -755 272 -755.0 272", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      String string0 = EWrapperMsgGenerator.realtimeBar(1917, 1917, 0.0, 0.0, 0.0, 0.0, 1917, 1917, 10);
      assertEquals("id=1917 time = 1917 open=0.0 high=0.0 low=0.0 close=0.0 volume=1917 count=10 WAP=1917.0", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-16), (-16), (-16), (-16), (-16), (-16));
      assertEquals("id=-16  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData(3680, "(J\"/+s lVg");
      assertEquals("id  = 3680 len = 10\n(J\"/+s lVg", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 1, 1.7976931348623157E308, 1, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=1  bidPrice: vol = N/A delta = 1.0", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 0, 0, 0, 0, 0);
      assertEquals("id=0  bidSize: vol = 0.0 delta = 0.0", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1, 1, 1, 1, 1, 1);
      assertEquals("id=1  bidPrice: vol = 1.0 delta = 1.0", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(261, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(1, 1, "K", (String) null);
      assertEquals("MsgId=1 :: MsgType=1 :: Origin=null :: Message=K", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(2, 39, "id=", "id=");
      assertEquals("MsgId=2 :: MsgType=39 :: Origin=id= :: Message=id=", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(2147483646, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation((-1), underComp0);
      assertEquals("id = -1 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(98, "u/egCQQZp#0", 42, 42, 42, 1049, 98, 1049, 42, "u/egCQQZp#0");
      assertEquals("order status: orderId=98 clientId=42 permId=1049 status=u/egCQQZp#0 filled=42 remaining=42 avgFillPrice=42.0 lastFillPrice=1049.0 parent Id=98 whyHeld=u/egCQQZp#0", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(2093796556, 2093796556, 1994091958, 1994091958, 2093796556, 2093796556);
      assertEquals("updateMktDepth: 2093796556 2093796556 1994091958 1994091958 2.093796556E9 2093796556", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-2760), (-2760), (-2760), (-2760), (-2555.13060659961), (-1250));
      assertEquals("updateMktDepth: -2760 -2760 -2760 -2760 -2555.13060659961 -1250", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-18), 2145894558, 2145894558, (-18), 2145894558, (-18));
      assertEquals("updateMktDepth: -18 2145894558 2145894558 -18 2.145894558E9 -18", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(4, 4, 4, 4, 4, 4);
      assertEquals("id=4  lastPrice: vol = 4.0 delta = N/A", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 13, 4151.54325, 4151.54325);
      assertEquals("id=13  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 4151.54325: pvDividend = 4151.54325", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(63, 63, (-1008.247564396), (-1008.247564396), (-1008.247564396), 63);
      assertEquals("id=63  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(29, 13, 13, 29, 13, 13);
      assertEquals("id=29  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 13.0: pvDividend = 13.0", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(34, 34, 34, 34, 34, 34);
      assertEquals("id=34  auctionVolume: vol = 34.0 delta = N/A", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters(" trailStopPrice=");
      assertEquals("SCANNER PARAMETERS:\n trailStopPrice=", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(2147483645, 2147483645, 1076);
      assertEquals("id=2147483645  unknown=1076", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize((-2204), 1982292598, 1982292598);
      assertEquals("id=-2204  unknown=1982292598", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(13, "UKVoUqOpbUZz7c", (-1403), 304, 304, 304, (-1403), (-1403), 13, "Connection Closed");
      assertEquals("order status: orderId=13 clientId=13 permId=304 status=UKVoUqOpbUZz7c filled=-1403 remaining=304 avgFillPrice=304.0 lastFillPrice=-1403.0 parent Id=-1403 whyHeld=Connection Closed", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric((-3394), 1, (-3394));
      assertEquals("id=-3394  bidPrice=-3394.0", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_summary = null;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(2192, contractDetails0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.bondContractDetails(449, contractDetails0);
      assertEquals("reqId = 449 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar((-3353), (-3353), (-3353), (-1.0), (-1.0), (-1.0), (-3353), 0.0, (-3353));
      assertEquals("id=-3353 time = -3353 open=-3353.0 high=-1.0 low=-1.0 close=-1.0 volume=-3353 count=-3353 WAP=0.0", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(27, 27, 27, (-3382.0322297415414), (-3382.0322297415414), 27, 0L, (-3382.0322297415414), 27);
      assertEquals("id=27 time = 27 open=27.0 high=-3382.0322297415414 low=-3382.0322297415414 close=27.0 volume=0 count=27 WAP=-3382.0322297415414", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(109, 109, (-1136.0), 1.0, 109, 1.0, 109, 1.0, 109);
      assertEquals("id=109 time = 109 open=-1136.0 high=1.0 low=109.0 close=1.0 volume=109 count=109 WAP=1.0", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      Contract contract0 = new Contract();
      String string1 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 1245.804059, 1245.804059, 1245.804059, 0.0, (-1.0), " ---- Execution Details begin ----\nreqId = ");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n0 1245.804059 1245.804059 1245.804059 0.0 -1.0  ---- Execution Details begin ----\nreqId = ", string1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.orderStatus(Integer.MAX_VALUE, (String) null, 2, 0, 0, 0, 43, 0, 0, (String) null);
      assertEquals("order status: orderId=2147483647 clientId=0 permId=0 status=null filled=2 remaining=0 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=43 whyHeld=null", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP((-914), 102, (-914), "BOND", (-914), 1686, "BOND", 102, 1686);
      assertEquals("id=-914  unknown: basisPoints = -914.0/BOND impliedFuture = -914.0 holdDays = 1686 futureExpiry = BOND dividendImpact = 102.0 dividends to expiry = 1686.0", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-1193), (-1193), (-1193), (-855));
      assertEquals("id=-1193  unknown=-1193.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-2229), 10, 10, (-2229));
      assertEquals("id=-2229  bidOptComp=10.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.tickPrice(0, 0, 0, 0);
      assertEquals("id=0  bidSize=0.0  noAutoExecute", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(99);
      assertEquals("id=99 =============== end ===============", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Contract contract0 = new Contract();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails(52, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 52\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("@");
      assertEquals("accountDownloadEnd: @", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      Contract contract0 = new Contract();
      String string1 = EWrapperMsgGenerator.updatePortfolio(contract0, 1968526677, 0.0, 1.7976931348623157E308, 190.820967084938, 190.820967084938, 1.7976931348623157E308, "PROFILES");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n1968526677 0.0 1.7976931348623157E308 190.820967084938 190.820967084938 1.7976931348623157E308 PROFILES", string1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(2147483645, "VD],gw|}4~^q", 2147483645, 2147483645, 2147483645, 2147483645, 1, 2147483645, 1, "VD],gw|}4~^q");
      assertEquals("order status: orderId=2147483645 clientId=1 permId=2147483645 status=VD],gw|}4~^q filled=2147483645 remaining=2147483645 avgFillPrice=2.147483645E9 lastFillPrice=2.147483645E9 parent Id=1 whyHeld=VD],gw|}4~^q", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(10, 10, 10, 10);
      assertEquals("id=10  bidOptComp=10.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals("Connection Closed", eWrapperMsgGenerator0.connectionClosed());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData(541, 44, contractDetails0, "=cN4R-PRfk{^#wSd/", (String) null, (String) null, (String) null);
      assertEquals("id = 541 rank=44 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance==cN4R-PRfk{^#wSd/ benchmark=null projection=null legsStr=null", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData(15, (-14), contractDetails0, (String) null, "mh_T$i:{X", (String) null, (String) null);
      assertEquals("id = 15 rank=-14 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=mh_T$i:{X projection=null legsStr=null", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData((-3303), "OptionImpliedVolatility", (-3303), (-3303), 2682.428205295889, (-3303), (-3303), (-3303), (-3303), true);
      assertEquals("id=-3303 date = OptionImpliedVolatility open=-3303.0 high=-3303.0 low=2682.428205295889 close=-3303.0 volume=-3303 count=-3303 WAP=-3303.0 hasGaps=true", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.historicalData(0, "com.ib.clent.TickTye", 1.7976931348623157E308, 0.0, 0, 1.7976931348623157E308, 12, Integer.MAX_VALUE, 3, false);
      assertEquals("id=0 date = com.ib.clent.TickTye open=1.7976931348623157E308 high=0.0 low=0.0 close=1.7976931348623157E308 volume=12 count=2147483647 WAP=3.0 hasGaps=false", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.currentTime(28L);
      assertEquals("current time = 28 (Jan 1, 1970 12:00:28 AM)", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerDataEnd(916);
      assertEquals("id = 916 =============== end ===============", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData((-2992), (-2992), contractDetails0, (String) null, "\u0003D\\+6rKtj'", "j6LP", (String) null);
      assertEquals("id = -2992 rank=-2992 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=\u0003D\\+6rKtj' projection=j6LP legsStr=null", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(36, "L<>u)$Rbiy*vY)28=z'", 1802.959530185956, 1802.959530185956, 36, 36, 36, 36, 36, true);
      assertEquals("id=36 date = L<>u)$Rbiy*vY)28=z' open=1802.959530185956 high=1802.959530185956 low=36.0 close=36.0 volume=36 count=36 WAP=36.0 hasGaps=true", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.receiveFA(195, "");
      assertEquals("FA: null ", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts("BgPWxSsr<op@Y");
      assertEquals("Connected : The list of managed accounts are : [BgPWxSsr<op@Y]", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.execDetailsEnd(22);
      assertEquals("reqId = 22 =============== end ===============", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId(5);
      assertEquals("Next Valid Order ID: 5", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(2070787803, 2070787803, "{j", (-1283), 2070787803, 1.7976931348623157E308, (-1283));
      assertEquals("updateMktDepth: 2070787803 2070787803 {j -1283 2070787803 1.7976931348623157E308 -1283", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("bidSize", "W=Jy'gRy{3*#", "bidSize", "bidSize");
      assertEquals("updateAccountValue: bidSize W=Jy'gRy{3*# bidSize bidSize", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("  It does not support realtime bar data query cancellation.", ".", "  It does not support realtime bar data query cancellation.", ".");
      assertEquals("updateAccountValue:   It does not support realtime bar data query cancellation. .   It does not support realtime bar data query cancellation. .", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("OptionCallOpenInterest", "OptionCallOpenInterest", (String) null, "OptionCallOpenInterest");
      assertEquals("updateAccountValue: OptionCallOpenInterest OptionCallOpenInterest null OptionCallOpenInterest", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP((-402), (-402), (-235.68600863754406), "+", 941.543131568838, (-402), "+", (-235.68600863754406), (-402));
      assertEquals("id=-402  unknown: basisPoints = -235.68600863754406/+ impliedFuture = 941.543131568838 holdDays = -402 futureExpiry = + dividendImpact = -235.68600863754406 dividends to expiry = -402.0", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP((-1793288043), 504, 504, "A)R;k=|(s", (-5.95624943), (-1793288043), "com.ib.client.TagValue", (-5.95624943), (-1793288043));
      assertEquals("id=-1793288043  unknown: basisPoints = 504.0/A)R;k=|(s impliedFuture = -5.95624943 holdDays = -1793288043 futureExpiry = com.ib.client.TagValue dividendImpact = -5.95624943 dividends to expiry = -1.793288043E9", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickString((-1), (-1952550229), "<1_");
      assertEquals("id=-1  unknown=<1_", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2((-9), (-9), "", (-9), 13, 13, 13);
      assertEquals("updateMktDepth: -9 -9  -9 13 13.0 13", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(577);
      assertEquals("reqId = 577 =============== end ===============", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("i-<yaL >z");
      assertEquals("updateAccountTime: i-<yaL >z", string0);
  }
}
