/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 03:39:40 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN6010.JMCA.JParser.JavaCharStrea\"");
      StringReader stringReader1 = new StringReader("com.soops.CEN6010.JMCA.JParser.JavaCharStrea\"");
      stringReader0.skip((-1));
      stringReader1.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), 716);
      assertEquals((-1), javaCharStream0.bufpos);
      
      StringReader stringReader2 = new StringReader(".");
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")QkwJ:B9Ux/tzuSXXW");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      stringReader1.skip((-1));
      stringReader2.skip((-835L));
      StringReader stringReader4 = new StringReader("");
      stringReader4.skip(0L);
      stringReader2.skip(3964L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, 716, 716);
      StringReader stringReader5 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader1.read();
      int int0 = 491;
      int int1 = (-1260);
      javaCharStream0.ReInit((Reader) stringReader5, 10, (-1), 4096);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3);
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@U*Y 0=iMZ=[hMNL$=7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream0.available = 855;
      stringReader0.markSupported();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      JavaCharStream.hexval('6');
      javaCharStream0.ExpandBuff(false);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream.hexval('0');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(70);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream2, (-4926));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      stringReader0.skip((-1));
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip(0L);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 98, 98, (-1));
      javaCharStream0.backup(4583);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -487
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte byte0 = (byte)4;
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavaCharStream.hexval('5');
      char char0 = 'C';
      JavaCharStream.hexval('C');
      int int0 = 3110;
      int int1 = 776;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 776, 3110);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char char0 = 'O';
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-88), (-5252), 92);
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.FillBuff();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      assertEquals(4095, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.816908469981155
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)54;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byteArray0[4] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)54, (byte)117, 98);
      javaCharStream0.backup((-1));
      javaCharStream0.UpdateLineColumn('+');
      char[] charArray0 = javaCharStream0.nextCharBuf;
      JavaCharStream.hexval('2');
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(2);
      JavaCharStream.hexval('2');
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      int int0 = javaCharStream0.getColumn();
      assertEquals(54, javaCharStream0.getBeginLine());
      assertEquals(118, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)117;
      byte byte0 = (byte)50;
      byteArray0[4] = (byte)50;
      StringReader stringReader0 = new StringReader("[*|X");
      JavaCharStream.hexval('A');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 77, 78, 77);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      stringReader0.skip((-1));
      stringReader0.skip(0L);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), (-1), 98);
      javaCharStream0.backup(1816);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(92);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      assertEquals(1816, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)54;
      byteArray0[4] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)54, (byte)117, 98);
      javaCharStream0.backup((-1));
      char char0 = 'W';
      javaCharStream0.bufcolumn = null;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('W');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w,cv@!i|4V-9PCr");
      StringReader stringReader1 = new StringReader("=9d/Vy(3Yc.db");
      int int0 = (-1);
      stringReader1.skip(1762L);
      stringReader1.skip((-837L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), 1384);
      StringReader stringReader2 = new StringReader("");
      stringReader2.read();
      javaCharStream0.ReInit((Reader) stringReader0, 1, 101, 1);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bc3n*9a#S=s*`?");
      StringReader stringReader1 = new StringReader("^7jO");
      stringReader1.skip(0L);
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2151), 5);
      stringReader1.read();
      javaCharStream0.ReInit((Reader) stringReader1, 94, 1133, 1133);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      stringReader0.skip(2068L);
      StringReader stringReader1 = new StringReader("P8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), (-1));
      stringReader1.read();
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      charArray0[1] = 'f';
      stringReader1.read(charArray0);
      stringReader1.read(charArray0);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1847), 4032);
      JavaCharStream.hexval('8');
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader1.read(charBuffer0);
      javaCharStream0.adjustBeginLineColumn((-1), 82);
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, 763, 78, 80);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      stringReader0.skip(0L);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2941), 85, 0);
      javaCharStream0.backup(4);
      javaCharStream0.UpdateLineColumn('(');
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(98);
      javaCharStream0.readChar();
      sequenceInputStream0.mark(3);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)54;
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaCharStream.hexval('c');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 12);
      pipedOutputStream0.close();
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavaCharStream.hexval('B');
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 43, 85, 98);
      javaCharStream0.backup(3440);
      javaCharStream0.UpdateLineColumn('(');
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(100);
      javaCharStream0.readChar();
      sequenceInputStream0.mark(11);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8690529818095458
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q");
      StringReader stringReader1 = new StringReader("jBQ2wvnggK3n ");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      stringReader2.skip((-4308L));
      StringReader stringReader4 = new StringReader("Invalid escape character at line ");
      stringReader4.skip(0L);
      stringReader4.skip(0L);
      stringReader2.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1816, 1816);
      StringReader stringReader5 = new StringReader("jBQ2wvnggK3n ");
      stringReader5.read();
      javaCharStream0.ReInit((Reader) stringReader5, 2372, 870, 1816);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(4093);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~SF_e2-");
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip((-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      stringReader1.skip((-1));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 98, (-1), 2304);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.backup(59);
      javaCharStream0.UpdateLineColumn('+');
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(2304);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.ReadByte();
      assertEquals(4038, javaCharStream0.bufpos);
      assertEquals('z', char0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)54;
      byteArray0[4] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)54, (byte)117, 98);
      javaCharStream0.backup((-1));
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3486), (byte)2, (byte)46);
      javaCharStream0.backup((byte)2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayInputStream0.read();
      javaCharStream0.UpdateLineColumn('K');
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z^P4K|P/V//*C~F_e2-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{mu_yhs9@A6t");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(2146, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark((-885));
      sequenceInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.bufsize = (-1862);
      sequenceInputStream0.available();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      StringReader stringReader1 = new StringReader("&b");
      stringReader1.read();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)67;
      sequenceInputStream1.read(byteArray0);
      sequenceInputStream1.read();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 2320, 61);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JavaCharStream.hexval('D');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 13);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-3626), 13, 1);
      javaCharStream0.adjustBeginLineColumn((-3626), (-200));
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8720086468341763
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      StringReader stringReader1 = new StringReader("&b");
      javaCharStream0.adjustBeginLineColumn(13, (-4319));
      stringReader1.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 4, (-910));
      stringReader0.read();
      javaCharStream1.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('^');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)54;
      byteArray0[4] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)54, (byte)117, 98);
      javaCharStream0.backup((-1));
      javaCharStream0.GetImage();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream1.read(byteArray0);
      sequenceInputStream1.read();
      javaCharStream0.UpdateLineColumn(' ');
      javaCharStream0.UpdateLineColumn('y');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j`Gd[%k=Q");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 522, 1613);
      javaCharStream0.adjustBeginLineColumn(2446, (-411));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-88);
      StringReader stringReader0 = new StringReader("^C8B,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 87, 87, 1892);
      javaCharStream0.FillBuff();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip((-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      stringReader1.skip(2068L);
      StringReader stringReader2 = new StringReader("omP[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1), (-1));
      stringReader2.read();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[0];
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 2256, (-1));
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)4;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('f');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, (byte) (-88), (byte)2, (-2751));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.874099239168671
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NVi-;!`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      stringReader0.reset();
      javaCharStream0.BeginToken();
      stringReader0.reset();
      stringReader0.skip(0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getBeginLine();
      javaCharStream0.ReadByte();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('-', char0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)1, 12);
      javaCharStream0.backup((byte) (-1));
      javaCharStream0.UpdateLineColumn('~');
      assertEquals(0, javaCharStream0.bufpos);
      
      javaCharStream0.bufpos = 3559;
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T8!c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2946, (-941));
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.bufpos = (-941);
      stringReader0.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -940
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)117, (byte)4);
      int int0 = 11;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 11, 87, (byte)117);
      int int1 = (-1);
      javaCharStream0.backup((byte)4);
      javaCharStream0.GetImage();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      try { 
        sequenceInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (byte)46, 13);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-2961), (-1), (-1));
      javaCharStream1.backup((-2297));
      javaCharStream1.UpdateLineColumn('l');
      javaCharStream1.BeginToken();
      javaCharStream0.GetSuffix(0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("28)_dC'~M_=6z$vg");
      StringReader stringReader2 = new StringReader("");
      stringReader2.skip(0L);
      stringReader2.skip(1L);
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, 491);
      StringReader stringReader4 = new StringReader("");
      stringReader4.read();
      javaCharStream0.ReInit((Reader) stringReader1, 491, (-1), 491);
      javaCharStream0.BeginToken();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("z^P4K|P/V//*C~F_e2-");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = (-2426);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-2426));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 0, 0, 0);
      javaCharStream0.inBuf = (-2426);
      javaCharStream0.line = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      int int0 = 4;
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.ReadByte();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h+o.c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2426), 2564);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0);
      javaCharStream0.tokenBegin = (-1035);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('T');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      stringReader0.skip((-1));
      stringReader0.skip((-1));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), (-1), (-1));
      javaCharStream0.backup(1135);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(5);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)117;
      byteArray0[7] = (byte)46;
      byteArray0[8] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-218), 71, (byte)46);
      javaCharStream0.backup(1);
      javaCharStream0.UpdateLineColumn('?');
      javaCharStream0.GetSuffix((byte)46);
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      assertEquals(4094, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      StringReader stringReader1 = new StringReader(".");
      StringReader stringReader2 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader2.skip((-1));
      stringReader0.skip(429L);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1), (-1));
      stringReader1.read();
      javaCharStream0.ReInit((Reader) null, 2620, (-1), 46);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("G");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-336), 1918);
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-336), javaCharStream0.getBeginLine());
      assertEquals('G', char0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      stringReader1.markSupported();
      stringReader1.skip((-1718L));
      stringReader1.skip((-1718L));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), 1, 1);
      javaCharStream0.backup((-921));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-6);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-6), (byte)117, 98);
      javaCharStream0.backup((byte) (-6));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)117);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-4096);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1416, (-70), 1416);
      javaCharStream0.backup((byte)0);
      javaCharStream0.UpdateLineColumn('.');
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix((byte)0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 255, (-6366), 92);
      javaCharStream0.backup((byte)117);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(80);
      assertEquals(3979, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jo`pzb`y");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1995), 10);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JavaCharStream.hexval('f');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-4647), 8, 8);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-11);
      byteArray0[0] = (byte) (-11);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-11), (byte) (-11), 793);
      int int0 = 0;
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, 1, 793);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 82, (byte) (-1), (byte) (-1));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      boolean boolean0 = JavaCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("qY?T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)2, 94);
      int int0 = (-3396);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-3396));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 8, 3440, 8);
      StringReader stringReader0 = new StringReader("$ryCdElP;P\"n3:tmHP");
      javaCharStream0.ReInit((Reader) stringReader0, (-2421), (-350));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3N,P%s\"gnu&7q0$D1h");
      stringReader0.mark(597);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)106;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)102;
      byteArray0[8] = (byte) (-126);
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 597, (-727));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 11, 11, 567);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1710), 82, 0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.482856956024611
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      stringReader0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader0, 491, 4, 491);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("vY4C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2259), (-1345));
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-2259), 0, (-2259));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-4037), (byte) (-1), (byte) (-1));
      javaCharStream0.backup((byte) (-1));
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      StringReader stringReader0 = new StringReader("");
      boolean boolean0 = JavaCharStream.staticFlag;
      StringReader stringReader1 = new StringReader("");
      stringReader0.markSupported();
      StringReader stringReader2 = new StringReader("hqYIT");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte)2, 94);
      javaCharStream0.AdjustBuffSize();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('q', char0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":(yW+dFLHX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.allocate(82);
      stringReader0.read(charBuffer0);
      javaCharStream0.bufpos = 5;
      char[] charArray0 = javaCharStream0.GetSuffix(67);
      assertEquals(67, charArray0.length);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":(yW+dFLHX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.allocate(82);
      stringReader0.read(charBuffer0);
      javaCharStream0.bufpos = 5;
      char[] charArray0 = javaCharStream0.GetSuffix(5);
      assertEquals(5, charArray0.length);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN6010.JMCA.JParser.JavaCharStrea\"");
      StringReader stringReader1 = new StringReader("com.soops.CEN6010.JMCA.JParser.JavaCharStrea\"");
      stringReader0.skip((-1));
      stringReader1.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), 716);
      StringReader stringReader2 = new StringReader(".");
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
      
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)15;
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)63;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("g>DPG`6-O2J0:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)13, (byte)15, (byte)10);
      javaCharStream0.available = (int) (byte)10;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, (-1), 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ho-O4-N6rr|3I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 54, 54, 54);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('<');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      JavaCharStream.hexval('D');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(13);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      int int0 = (-1260);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 13, 73);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader1.ready();
      javaCharStream0.ReInit((Reader) stringReader1, 2213, 491, 4096);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark((-561));
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 81, 92, 92);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-15), 4, 846);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)4;
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 73, (byte)117, 78);
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      try { 
        JavaCharStream.hexval('*');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.4983393353896088
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = 1184;
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1184);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1184, 1184);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn(',');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z^P4K|P/V//*C~F_e2-");
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip((-1));
      stringReader1.skip(2068L);
      StringReader stringReader2 = new StringReader("P8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1), (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
