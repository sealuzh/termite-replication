/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 04:01:36 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.EmptyStackException;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9590810588014558
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "Modifiers";
      StringReader stringReader0 = new StringReader(">=");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      int int0 = 43;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 43);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.identifiers = null;
      stringWriter0.close();
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'smh20RBQT>w");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("*lt");
      JavaParser javaParser1 = new JavaParser(stringReader1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      stringReader0.read();
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.setIdentifier("-");
      simpleNode0.dump("for", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode((-2918));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-2918));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(1245);
      stringWriter0.close();
      StringWriter stringWriter1 = new StringWriter(1245);
      stringWriter1.close();
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 37);
      simpleNode0.setIdentifier("BD5sg'e!");
      simpleNode0.dump("VariableDeclaratorId", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 37);
      simpleNode0.jjtAddChild(simpleNode1, 1245);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      Node node0 = simpleNode0.jjtGetChild(1245);
      simpleNode0.jjtAddChild(node0, 1245);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">=");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(63);
      StringWriter stringWriter0 = new StringWriter(63);
      stringWriter0.close();
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("Modifiers", stringWriter0);
      stringReader0.skip(63);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("Modifiers", stringWriter0);
      StringReader stringReader1 = new StringReader("*ge");
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null, 63, 63);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.192071911742741
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(79);
      StringWriter stringWriter0 = new StringWriter(2622);
      stringWriter0.close();
      simpleNode0.setIdentifier(":");
      simpleNode0.jjtAddChild(simpleNode0, 43);
      simpleNode0.setIdentifier(":");
      String string0 = "Xu*:wx`\"#|>~";
      // Undeclared exception!
      simpleNode0.dump((String) null, stringWriter0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XDS&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("&&");
      JavaParser javaParser1 = new JavaParser(stringReader1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 43);
      StringWriter stringWriter0 = new StringWriter(102);
      stringWriter0.close();
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump("&&", stringWriter0);
      assertEquals("<InclusiveOrExpression>\n  <identifier>*amp</identifier>\n</InclusiveOrExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 43);
      StringWriter stringWriter0 = new StringWriter(2064);
      simpleNode0.setIdentifier(";");
      simpleNode0.dump("@", stringWriter0);
      assertEquals("<InclusiveOrExpression>\n</InclusiveOrExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.975635158878412
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">=");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 43);
      StringWriter stringWriter0 = new StringWriter(43);
      stringWriter0.close();
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("Modifiers", stringWriter0);
      stringReader0.skip(43);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("Modifiers", stringWriter0);
      StringReader stringReader1 = new StringReader("*ge");
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null, 43, 1683);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(79);
      StringWriter stringWriter0 = new StringWriter(79);
      stringWriter0.close();
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("", stringWriter0);
      simpleNode0.dump("*lshft", stringWriter0);
      assertEquals("<SwitchLabel>\n  <identifier>*lt</identifier>\n</SwitchLabel>\n<SwitchLabel>\n  <identifier>*lt</identifier>\n</SwitchLabel>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(79);
      StringWriter stringWriter0 = new StringWriter(79);
      stringWriter0.close();
      simpleNode0.setIdentifier(">");
      simpleNode0.dump("StatementExpression", stringWriter0);
      assertEquals("<SwitchLabel>\n  <identifier>*gt</identifier>\n</SwitchLabel>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "Modifiers";
      StringReader stringReader0 = new StringReader(">=");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 43);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("Modifiers", stringWriter0);
      stringReader0.skip(43);
      stringWriter0.write(587);
      stringWriter0.close();
      String string1 = "{";
      simpleNode0.setIdentifier("{");
      stringReader0.markSupported();
      simpleNode0.dump("&G@=gfn|", stringWriter0);
      int int0 = (-1934024445);
      StringWriter stringWriter1 = null;
      try {
        stringWriter1 = new StringWriter((-1934024445));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0843488460674409
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(1245);
      stringWriter0.close();
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier(":");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      simpleNode0.dump("StatementExpression", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("StatementExpression");
      stringWriter0.write(37);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("u;lK", stringWriter0);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 37);
      simpleNode1.setIdentifier("\"package\"");
      simpleNode1.dump("fdg", stringWriter0);
      assertEquals("\u04DD<NameList>\n  <identifier>:</identifier>\n</NameList>\n%<NameList>\n  <identifier>:</identifier>\n  <identifier>*le</identifier>\n</NameList>\n<NameList>\n  <identifier>\"package\"</identifier>\n</NameList>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("!lT~wSX zYS}_lo3~)");
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.close();
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*lshft</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      int int0 = 1245;
      stringWriter0.write((-567));
      stringWriter0.close();
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("}");
      simpleNode0.dump("K{!(~%3yqJ:4~eeJ", stringWriter0);
      StringReader stringReader0 = new StringReader(":");
      StringReader stringReader1 = new StringReader(":");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 37, 1245);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 37);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 37. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Modifiers");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 43);
      StringWriter stringWriter0 = new StringWriter(43);
      stringWriter0.close();
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump(">>", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null, 756, 43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SystemInUtil.addInputLine("!lT~wSX zYS}_lo3~)");
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("K");
      StringWriter stringWriter0 = new StringWriter(0);
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : K", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8760902794872374
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      SimpleNode simpleNode1 = new SimpleNode(12);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtAddChild(simpleNode1, 105);
      simpleNode0.toString("Modifiers");
      simpleNode1.toString();
      simpleNode0.toString();
      simpleNode1.jjtGetNumChildren();
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode1.identifiers = arrayList0;
      arrayList0.addAll((Collection<? extends String>) simpleNode1.identifiers);
      simpleNode1.toString();
      simpleNode0.toString("%");
      simpleNode0.setIdentifier("]lE_.a%jf*=C");
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      SystemInUtil.addInputLine(";");
      simpleNode0.toString("Zym$rjo");
      simpleNode1.jjtGetNumChildren();
      simpleNode0.setIdentifier("ze?&gO(<taL2z");
      simpleNode0.jjtGetNumChildren();
      simpleNode1.jjtGetParent();
      simpleNode1.jjtGetNumChildren();
      simpleNode1.toString("TypeParameter");
      simpleNode0.jjtAddChild(simpleNode1, 106);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.dump("%TypeParameter", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1074787335));
      SimpleNode simpleNode1 = new SimpleNode((-745));
      simpleNode1.id = (-1074787335);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode1;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.id = (-1074787335);
      simpleNode0.jjtAddChild(simpleNode1, 122);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1157);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1157
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1074787335));
      SimpleNode simpleNode1 = new SimpleNode((-1074787335));
      simpleNode1.id = (-1074787335);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode1;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.id = (-1074787335);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1074787335));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1074787335
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter(3);
      SimpleNode simpleNode1 = new SimpleNode(3);
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      assertFalse(node0.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3014));
      SimpleNode simpleNode1 = new SimpleNode(1475);
      simpleNode0.jjtSetParent(simpleNode1);
      assertFalse(simpleNode1.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(95);
      stringWriter0.close();
      String string0 = null;
      simpleNode0.setIdentifier((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump(":", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 43);
      int int0 = 44;
      simpleNode0.setIdentifier("");
      int int1 = 102;
      StringWriter stringWriter0 = new StringWriter(102);
      simpleNode0.setIdentifier("y");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.dump("y", stringWriter0);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Modifiers");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 95);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(43);
      StringWriter stringWriter0 = new StringWriter(43);
      stringWriter0.write(2289);
      stringWriter0.close();
      simpleNode0.jjtAddChild((Node) null, 95);
      simpleNode0.jjtGetChild(95);
      simpleNode0.jjtGetParent();
      assertEquals(96, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'smh20RBQT>w");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("*lt");
      JavaParser javaParser1 = new JavaParser(stringReader1);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 18);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.id = 18;
      simpleNode0.setIdentifier("-");
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 18);
      simpleNode0.jjtGetChild(18);
      assertEquals(19, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4547);
      StringReader stringReader0 = new StringReader("=F");
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4547
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 2905);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9549783515321212
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(79);
      StringWriter stringWriter0 = new StringWriter(2622);
      simpleNode0.jjtGetParent();
      simpleNode0.parent = null;
      stringWriter0.close();
      simpleNode0.dump("\"default\"", stringWriter0);
      simpleNode0.setIdentifier(":");
      simpleNode0.setIdentifier("pb;:zB7BZw^");
      simpleNode0.setIdentifier("\"default\"");
      simpleNode0.dump("SwitchStatement", stringWriter0);
      simpleNode0.dump("Literal", stringWriter0);
      assertEquals("<SwitchLabel>\n  <identifier>:</identifier>\n  <identifier>pb;:zB7BZw^</identifier>\n  <identifier>\"default\"</identifier>\n</SwitchLabel>\n<SwitchLabel>\n  <identifier>:</identifier>\n  <identifier>pb;:zB7BZw^</identifier>\n  <identifier>\"default\"</identifier>\n</SwitchLabel>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.close();
      StringWriter stringWriter1 = new StringWriter(1);
      stringWriter0.close();
      simpleNode0.dump((String) null, stringWriter1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "u_jL";
      stringArray0[3] = "";
      JavaParser.main(stringArray0);
      simpleNode0.setIdentifier("u_jL");
      simpleNode0.dump("wu?D6vC*1+v", stringWriter1);
      simpleNode0.dump("V(s)/aMZp/H7[^LKEe", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>u_jL</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Modifiers");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(43);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(2289);
      stringWriter0.close();
      char[] charArray0 = new char[9];
      charArray0[0] = '5';
      charArray0[1] = '`';
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      charArray0[2] = '-';
      charArray0[3] = 'V';
      charArray0[4] = '7';
      charArray0[5] = '|';
      charArray0[6] = '6';
      charArray0[7] = 'n';
      charArray0[8] = '';
      stringWriter0.write(charArray0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-2446));
      simpleNode0.dump("while", stringWriter0);
      assertEquals("\u08F15`-V7|6n", stringWriter0.toString());
      
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2801));
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("ioIyhl~<", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2801
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("V8YR=K\"g;*@5", stringWriter0);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0915269783609793
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#]WKn=tH|o xoVP\"qv");
      stringReader0.skip((-1L));
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaParser javaParser1 = new JavaParser("&");
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 18);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.setIdentifier("&");
      simpleNode0.dump(">Z", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.dump("&", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(562);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.014784547108511
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringWriter stringWriter0 = new StringWriter(2622);
      stringWriter0.close();
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier("r");
      StringReader stringReader0 = new StringReader("IN_SINGLE_LINE_COMMENT");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      simpleNode0.parent = null;
      stringWriter0.close();
      simpleNode0.setIdentifier(",,");
      simpleNode0.dump(",,", stringWriter0);
      simpleNode0.dump("r", stringWriter0);
      assertEquals("v<CompilationUnit>\n  <identifier>r</identifier>\n  <identifier>,,</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>r</identifier>\n  <identifier>,,</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("Statement");
      assertEquals("StatementCompilationUnit : r : ,,", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.090048405751954
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "Modifiers";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = ">=";
      StringReader stringReader0 = new StringReader(">=");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      try { 
        javaParser0.Literal();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: >=
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }
}
