/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 03:52:08 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(1159);
      player0.reset(false);
      player0.getSubparty();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9pxIuMWx");
      Player player1 = new Player(1);
      player0.prev = (Party) player1;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      dataInputStream0.skipBytes(264);
      player1.unpack(dataInputStream0);
      player0.reset(false);
      player0.getMoney();
      player0.type();
      player0.setMoney(0.1F);
      player1.isJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      player0.getMoney();
      player1.isJoinOK(player0, false);
      player1.type();
      player0.setMoney((-3557.78F));
      player0.gangStrength();
      player1.pack();
      float float0 = player0.getMoney();
      assertEquals((-3557.78F), float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0558584483706284
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1734), "", (-23131));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setDead();
      player0.setDead((long) (-1734));
      player0.getMoney();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.gangStrength();
      player0.type();
      player0.getMoney();
      player0.setZ((-2929.9524F));
      player0.setDead((-3365L), false);
      Player player1 = new Player(12544, "z!G>UJ=y", "", 24074);
      player1.gangStrength();
      player1.next = (Party) player0;
      player1.setMoney(0.0F);
      Player player2 = new Player();
      player1.add(player2);
      player0.setX(0.0F);
      player0.isJoinOK(player1, false);
      player0.reset(false);
      player1.getMoney();
      player1.getMoney();
      player0.getX();
      float float0 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 12551;
      Player player0 = new Player(12551);
      boolean boolean0 = true;
      player0.setJoinOK(player0, true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)24;
      byteArray0[5] = (byte)32;
      byteArray0[6] = (byte)124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1046), (byte)32);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(12562);
      Player player1 = new Player(12562);
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
      assertEquals("Player12562", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(24074);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player24074", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-25360), (String) null, (-25360));
      player0.next = null;
      player0.remove((Party) null);
      player0.setZ((-25360));
      player0.getName();
      assertEquals((-25360.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(704);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)22;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DZy%L");
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)106;
      player0.reset(true);
      byteArray0[6] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.gangStrength();
      player0.type();
      System.setCurrentTimeMillis((short)4919);
      Player player1 = new Player((-17338), "", "", (-17338));
      player1.getSubparty();
      player0.isJoinOK(player1, false);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(659, (String) null, 659);
      player0.getSubparty();
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(659, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(4, "CQPa@RcWu", 4);
      Party party0 = new Party();
      party0.prev = (Party) player0;
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(844);
      int int0 = player0.getPictureId();
      Player player1 = new Player(504);
      player0.isJoinOK(player1, true);
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player2 = new Player(844, "state.Party", (short)4919);
      int int1 = player0.gangStrength();
      assertEquals(1, int1);
      assertEquals("Player844", player0.toString());
      
      player2.pack();
      assertEquals(1, player2.getStrength());
      assertEquals("0.0.0.0", player2.getIP());
      
      Player player3 = new Player((-344), "wo:dB%:V%88z'34x|", "5}EgX&H:sF7*", 844, 0);
      int int2 = player3.getStrength();
      assertEquals("wo:dB%:V%88z'34x|", player3.getIP());
      assertTrue(int2 == int0);
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals(0L, player3.getTimeOfDeath());
      assertEquals(844, player3.getPictureId());
      assertEquals(0.0F, player3.getY(), 0.01F);
      assertEquals(0, int2);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(659);
      player0.setDead((long) 659);
      player0.getTimeOfDeath();
      String string0 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-2506), "", 1);
      player0.getName();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-2809), "", (-2809));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.add(player1);
      player0.setDead((long) (-2809));
      player0.setZ((-2809));
      player0.getX();
      System.setCurrentTimeMillis(873L);
      player1.getMoney();
      player0.getZ();
      player1.getStrength();
      player0.getTimeOfDeath();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-2809L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-78), "", "", 10);
      player0.setDead((long) (-78), true);
      Player player1 = new Player((short)4919, "_)>q3}xE)c", "", 1);
      Party party0 = player1.boss;
      player0.remove((Party) null);
      player0.getZ();
      player0.setX((-1.0F));
      player0.getTimeOfDeath();
      int int0 = player0.getPictureId();
      assertEquals((-78L), player0.getTimeOfDeath());
      assertEquals(10, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-1), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-1), (-1));
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setZ(1.0F);
      player0.getPictureId();
      player1.isJoinOK(player0, true);
      player0.getZ();
      assertEquals(1.0F, player0.getZ(), 0.01F);
      
      Player player2 = new Player((short)4919, "Mh(ilL", (-1));
      player1.pack();
      int int0 = player1.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-59), "", "", (-59));
      byte[] byteArray0 = new byte[4];
      player0.setY((-1503.73F));
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-3);
      player0.isJoinOK(player0, false);
      player0.getY();
      int int0 = player0.gangStrength();
      assertEquals((-1503.73F), player0.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(833);
      player0.setMoney(0.0F);
      Player player1 = new Player(1266, (String) null, (String) null, 1266, (short)4919);
      player0.isJoinOK(player1, false);
      player0.setX(1238.5763F);
      assertEquals(1238.5763F, player0.getX(), 0.01F);
      
      player1.getIP();
      assertEquals(1266, player1.getPictureId());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-59), "", "", (-59));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-21);
      player0.unpack(byteArray0);
      player0.unpack(byteArray0);
      player0.pack();
      player0.setX((byte) (-91));
      player0.getIP();
      int int0 = player0.type();
      assertEquals((-91.0F), player0.getX(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(1676, "state.Party", "state.Party", 5, (-3349));
      player0.getSubparty();
      player0.getSubparty();
      player0.pack();
      Player player1 = new Player();
      player1.setConnected(true);
      player1.setConnected(true);
      player0.setDead((long) 5, true);
      int int0 = player0.getStrength();
      assertEquals(5L, player0.getTimeOfDeath());
      assertEquals((-3349), int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(3753);
      player0.setY(0.0F);
      String string0 = player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player3753", string0);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.2627848006711537
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1676, "_}~hT", "_}~hT", 1676, 1676);
      player0.getSubparty();
      player0.getSubparty();
      player0.pack();
      Player player1 = new Player();
      player0.setConnected(false);
      player1.setConnected(false);
      Player player2 = new Player((short)4919, "_}~hT", "", (short)4919);
      player2.setDead((-234L), true);
      player1.getStrength();
      player2.setY((-1787.58F));
      player1.getX();
      player2.setJoinOK(player0, false);
      player2.setConnected(false);
      Player player3 = new Player(1676, "Z)", 444);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.isConnected();
      player2.setY(0.1F);
      player1.toString();
      assertFalse(player1.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(659, "", 833);
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(833, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(10.0F);
      player0.setMoney(0.0F);
      player0.setZ(0.0F);
      player0.gangStrength();
      player0.reset(true);
      player0.getMoney();
      player0.gangStrength();
      player0.getX();
      player0.setMoney(102.31241F);
      player0.getY();
      player0.setZ(0.0F);
      player0.setY(2960.2815F);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, "F8B4fV}Q6.&tY}", "F8B4fV}Q6.&tY}", 0, 0);
      player0.setDead(843L, false);
      player0.setConnected(true);
      int int0 = player0.gangStrength();
      assertEquals(843L, player0.getTimeOfDeath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(1754, "n]>CA:%|'qbP", "n]>CA:%|'qbP", 1754, (-394));
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals((-394), int0);
      assertEquals(1754, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(642);
      Player player1 = new Player(642);
      player1.setX(0.2F);
      player0.head = (Party) player1;
      assertEquals(0.2F, player1.getX(), 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(659, "Y8ssG^yF", (String) null, 659, 659);
      int int0 = player0.gangStrength();
      assertEquals(659, player0.getPictureId());
      assertEquals(659, int0);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-4605));
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-4605", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(1606);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      player0.setDead((long) 1606);
      Player player1 = new Player(1606, "3&;A.Kqt5Gqm=d~", "Player", 2621, 1606);
      player0.setJoinOK(player1, true);
      player0.add(player1);
      player0.getIP();
      player0.isDead();
      player1.setY((-1124.1636F));
      assertEquals((-1124.1636F), player1.getY(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 3;
      String string0 = "";
      Player player0 = new Player(3, "4>2>B2SIQ<wb(", "", 3);
      int int1 = 1;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      pipedOutputStream0.close();
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1084));
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      assertEquals((-60), player0.getId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Player.unpack(): *** WARNING *** data is not of proper type!");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-78), "", "", 10);
      player0.getZ();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX((-1.0F));
      player0.getTimeOfDeath();
      int int0 = player0.getPictureId();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1017, ";lc% &_*{", (-15872));
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX((-1.0F));
      player0.getPictureId();
      Player player1 = new Player(1017, ";lc% &_*{", (-15872));
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-4605));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(6717);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player6717", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      float float0 = player0.getY();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-4605));
      Player player1 = new Player((short)4919);
      player0.head = (Party) player1;
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.getIP();
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-4605));
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(1L);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-4605));
      player0.setDead((long) (-4605), false);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(659, (String) null, 659);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(659, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "|)TN#y`CHL1y", (-1680), (short)4919);
      player1.next = (Party) player0;
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      int int0 = player1.getStrength();
      assertEquals("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", player1.getIP());
      assertEquals((-1680), player1.getPictureId());
      assertEquals(4919, int0);
      
      String string0 = player0.getName();
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(3);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(1455);
      int int0 = player0.getStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player1455", player0.toString());
      assertEquals(1, int0);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-4599));
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-23274));
      player0.setX((-23274));
      player0.pack();
      float float0 = player0.getX();
      assertEquals((-23274.0F), float0, 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-2935));
      float float0 = player0.getX();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-2935", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-116);
      Player player0 = new Player((-3257));
      String string0 = player0.getName();
      assertEquals("Player-3257", string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player((-2374));
      long long0 = player0.getTimeOfDeath();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player-2374", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, long0);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(12562);
      boolean boolean0 = player0.isDead();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player12562", player0.getName());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(12551);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-4605));
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-4605", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(5);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-4565));
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte)0;
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-4565", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(12551);
      player0.setZ(12551);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
