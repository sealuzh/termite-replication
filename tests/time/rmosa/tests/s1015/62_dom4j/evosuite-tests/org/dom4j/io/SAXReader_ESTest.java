/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 04:09:52 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.URL;
import java.net.URLStreamHandler;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Dmp?=Z:P{!Tc");
      sAXReader0.setEncoding("http://xml.org/sax/properties/lexical-handler");
      StringReader stringReader0 = new StringReader("http://xml.org/sax/properties/lexical-handler");
      try { 
        sAXReader0.read((Reader) stringReader0, "http://xml.org/sax/properties/lexical-handler");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document http://xml.org/sax/properties/lexical-handler : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setEncoding("Q>eI5Tr/k2@%s");
      sAXReader0.createContentHandler(xMLFilterImpl0);
      URL uRL0 = MockURL.getFileExample();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0516819854659416
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/HT#k2Lg>9>1HT#k2Lg>9>");
      sAXReader_SAXEntityResolver0.resolveEntity(":&OG3{-Kx768cx4e", ":&OG3{-Kx768cx4e");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "//tmp/HT#k2Lg>9>1HT#k2Lg>9>");
      SAXReader sAXReader0 = new SAXReader(false);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl2, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      XMLFilter xMLFilter0 = sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter(xMLFilter0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      DefaultDocumentFactory.getInstance();
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertNotNull(documentFactory0);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader0.setEntityResolver(sAXReader_SAXEntityResolver0);
      sAXReader0.getEntityResolver();
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("", "");
      StringReader stringReader0 = new StringReader(">K:cx2%SJr;j%`");
      inputSource0.setPublicId("");
      InputSource inputSource1 = new InputSource(stringReader0);
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      MockFile mockFile0 = new MockFile("Yu(E]e", "GTYv|u@1XB@$((");
      File file0 = MockFile.createTempFile("Yu(E]e", "Yu(E]e", (File) mockFile0);
      // Undeclared exception!
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("P0");
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("ceiling() requires one argument.");
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0, (String) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, false);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      xMLFilterImpl0.resolveEntity("En]cB27", "");
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("//home/ubuntu/termite/projects/62_dom4j/`/ W*94%TGuOH80xAu4NEiztyWu;");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class //home/ubuntu/termite/projects/62_dom4j/`/ W*94%TGuOH80xAu4NEiztyWu; not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      sAXReader0.installXMLFilter(xMLFilterImpl0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setEncoding("org.jaxen.dom4j.Dom4jXPath");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("`");
      xMLFilterImpl1.resolveEntity("", "");
      sAXReader0.createContentHandler(xMLFilterImpl0);
      sAXReader0.createDefaultEntityResolver("");
      sAXReader0.getEncoding();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getXMLFilter();
      sAXReader0.setProperty("http://xml.org/sax/properties/declaration-handler", (Object) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("`");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("//tmp97Y}lCY6F0jxd<$", "//tmp97Y}lCY6F0jxd<$");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      InputSource inputSource1 = new InputSource();
      SAXReader sAXReader0 = new SAXReader(false);
      try { 
        sAXReader0.setProperty("http://xml.org/sax/properties/lexical-handler", inputSource0);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // The value specified for property 'http://xml.org/sax/properties/lexical-handler' cannot be casted to org.xml.sax.ext.LexicalHandler.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0538382463504266
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setErrorHandler(xMLFilterImpl0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.getXMLReader();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2623);
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "file://");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SAXReader sAXReader0 = new SAXReader(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      sAXReader0.setMergeAdjacentText(true);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.resetHandlers();
      ElementStack elementStack0 = new ElementStack();
      // Undeclared exception!
      try { 
        pruningDispatchHandler0.onStart(elementStack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.DispatchHandler", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      pipedInputStream0.skip((-996L));
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getDocumentFactory();
      String string0 = "http://xml.org/sax/features/use-locator2";
      String string1 = "jxd<$";
      try { 
        sAXReader0.setFeature("http://xml.org/sax/features/use-locator2", true);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // Feature 'http://xml.org/sax/features/use-locator2' is read only.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      StringReader stringReader0 = new StringReader("m");
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0538382463504266
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 47);
      sAXReader0.setFeature("http://xml.org/sax/features/namespace-prefixes", false);
      try { 
        sAXReader0.read((InputStream) null, "//tmp/http:/xml.org/sax/features/use-locator20`u?^$yzFrkT4*/q");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //tmp/http:/xml.org/sax/features/use-locator20`u?^$yzFrkT4*_/q Nested exception: no protocol: //tmp/http:/xml.org/sax/features/use-locator20`u?^$yzFrkT4*_/q
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.isStringInternEnabled();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      XMLReaderAdapter xMLReaderAdapter0 = null;
      try {
        xMLReaderAdapter0 = new XMLReaderAdapter((XMLReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // XMLReader must not be null
         //
         verifyException("org.xml.sax.helpers.XMLReaderAdapter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endDocument();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      sAXReader0.createDefaultEntityResolver("/Q-d8zDchaJMcPK$lWD");
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "L{D@mwdcna");
      SAXReader sAXReader0 = new SAXReader(true);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.isValidating();
      File file0 = MockFile.createTempFile("Bi:(D1", "//tmp/http:/xml.org/sax/properties/lexical-handler0http:/xml.org/sax/properties/lexical-handler");
      MockFile mockFile0 = new MockFile(file0, "(wO4<2b");
      mockFile0.setExecutable(true);
      try { 
        MockFile.createTempFile("*c)", "org.jaxen.expr.iter.IterableDescendantOrSelfAxis", (File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.setStringInternEnabled(false);
      MockFile.createTempFile("name() requires zero or one argument.", "O0Y0r]E:su=_=)qomo");
      SAXReader sAXReader1 = new SAXReader();
      try { 
        sAXReader0.setXMLReaderClassName("{");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class { not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null);
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", (String) null);
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.createXMLReader();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "//tmp/http:/xml.org/sax/features/use-locator20concat() requires at least two arguments";
      StringReader stringReader0 = new StringReader("//tmp/http:/xml.org/sax/features/use-locator20concat() requires at least two arguments");
      stringReader0.read();
      InputSource inputSource0 = new InputSource(stringReader0);
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      defaultHandler2_0.resolveEntity((String) null, (String) null);
      // Undeclared exception!
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QName qName0 = new QName("UNKNOWN_NODE");
      QName qName1 = new QName("UNKNOWN_NODE");
      qName0.getDocumentFactory();
      qName0.getDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      qName0.getQualifiedName();
      boolean boolean0 = true;
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      StringReader stringReader0 = new StringReader("//tmp/97Y}lCY6F0jxd<$");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.setXMLReader(parserAdapter0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = '\\';
      charArray0[2] = 'a';
      charArray0[3] = 'Q';
      charArray0[4] = 'G';
      stringReader0.read(charArray0);
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      String string0 = "//tmp/http:/xml.org/sax/features/namespace-prefixes0`g$Y<G:mp,?VP\\S&sx";
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      StringReader stringReader0 = new StringReader("//tmp/http:/xml.org/sax/features/namespace-prefixes0`g$Y<G:mp,?VPS&sx");
      try { 
        sAXReader0.read((Reader) stringReader0, "//tmp/tmp/PI nodes cannot have children0PI nodes cannot have children0HT#k2Lg>9>");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("M4Y/AaA@=P5e]");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class M4Y/AaA@=P5e] not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("http://xml.org/sax/features/use-locator2");
      try { 
        sAXReader0.read((Reader) stringReader0, "http://xml.org/sax/features/use-locator2");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getEncoding();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      try { 
        sAXReader0.setXMLReaderClassName("//tmp/HT#k2Lg>9>1HT#k2Lg>9>");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class //tmp/HT#k2Lg>9>1HT#k2Lg>9> not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      ElementStack elementStack0 = new ElementStack();
      elementStack0.getDispatchHandler();
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      try { 
        sAXReader0.setFeature("//tmp/http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/string-interning", true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: //tmp/http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/string-interning
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("Error on line ");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      dispatchHandler0.getHandler("49z2OP2@mA~ #1");
      sAXReader0.addHandler("49z2OP2@mA~ #1", (ElementHandler) null);
      String string0 = null;
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.addHandler("//tmp/http:/xml.org/sax/features/use-locator206UjqYi?`M/~8BQ_", (ElementHandler) null);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      pipedInputStream0.skip((-996L));
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, ":)2");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      try { 
        sAXReader0.setProperty("http://xml.org/sax/properties/lexical-handler", "2");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: http://xml.org/sax/properties/lexical-handler
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("np9R+}", "Namespace");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Bad surrogate pair in string ");
      InputSource inputSource0 = new InputSource();
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("$assertionsDisabled", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class $assertionsDisabled not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("", "//tmp/http:/xml.org/sax/features/use-locator20/tmp/ \t\n\r0http:/xml.org/sax/features/use-locator2");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.setValidation(true);
      XMLReader xMLReader0 = null;
      DefaultHandler defaultHandler0 = new DefaultHandler();
      String string0 = ")j<*";
      defaultHandler0.resolveEntity(")j<*", ")j<*");
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      MockFile mockFile0 = new MockFile(">pB");
      MockFile mockFile1 = new MockFile(mockFile0, ">pB");
      try { 
        sAXReader0.read((File) mockFile1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setEncoding("D zqUi");
      String string0 = "http://xml.org/sax/features/use-locator2";
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("http://xml.org/sax/features/use-locator2");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class http://xml.org/sax/features/use-locator2 not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getEntityResolver();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      QName qName0 = QName.get("", "_]m>s.J4pZ]4_JUw");
      qName0.getDocumentFactory();
      QName.get("+CrKM\"3l-[5S-", "", "+CrKM\"3l-[5S-");
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.setIgnoreComments(true);
      XMLReader xMLReader0 = null;
      XMLReaderAdapter xMLReaderAdapter0 = null;
      try {
        xMLReaderAdapter0 = new XMLReaderAdapter((XMLReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // XMLReader must not be null
         //
         verifyException("org.xml.sax.helpers.XMLReaderAdapter", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.196939089991099
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      String string0 = "97Y}l\\CY6F";
      sAXReader0.setEncoding("97Y}lCY6F");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      boolean boolean0 = true;
      sAXReader0.setIgnoreComments(true);
      sAXReader0.setEntityResolver(defaultHandler0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("http://xml.org/sax/features/use-locator2");
      String string1 = "jxd<$";
      File file0 = MockFile.createTempFile("97Y}lCY6F", "jxd<$");
      file0.setExecutable(true);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"97Y}LCY6F\". Nested exception: Invalid encoding name \"97Y}LCY6F\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      pipedInputStream0.skip((-996L));
      File file0 = MockFile.createTempFile(">4A#ND4Mw~", ">4A#ND4Mw~", (File) null);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.createDefaultEntityResolver("");
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("Cause cannot be reset");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      DocumentFactory documentFactory1 = sAXReader0.getDocumentFactory();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertSame(documentFactory1, documentFactory0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      StringReader stringReader0 = new StringReader("_+> :;qicc");
      try { 
        sAXReader0.read((Reader) stringReader0, "_+> :;qicc");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document _+> :;qicc : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.resolveEntity("//tmp/`g$Y<G:mp,?VPS&sx0`g$Y<G:mp,?VPS&sx", "substring-before");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.removeHandler("substring-before");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, (-501));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      StringReader stringReader0 = new StringReader("org.jaxen.expr.iter.IterableDescendantAxis");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.installXMLFilter(xMLFilterImpl1);
      try { 
        sAXReader0.read("org.jaxen.function.FloorFunction");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.resetHandlers();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isStripWhitespaceText());
      
      sAXReader0.setStripWhitespaceText(true);
      assertTrue(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      sAXReader0.setXMLReader(xMLFilterImpl0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "(@G lgI");
      try { 
        sAXReader0.read(uRL1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createDefaultEntityResolver("//tmp/http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/string-interning/tmp/http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/string-interning/tmp/http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/string-interning0/tmp/http:/xml.org/sax/features/string-interning0http:/xml.org/sax/features/string-interning");
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.createDefaultEntityResolver("|8)[k");
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      sAXReader0.createDefaultEntityResolver((String) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.createContentHandler(parserAdapter0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      assertFalse(sAXReader0.isValidating());
      
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      defaultHandler0.unparsedEntityDecl("o`!HaUM", "[^DlXXK{zZ;@[", "false() requires no arguments.", "[^DlXXK{zZ;@[");
      DefaultHandler defaultHandler1 = new DefaultHandler();
      sAXReader0.configureReader(xMLFilterImpl1, defaultHandler1);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/http:/xml.org/sax/features/use-locator20jxd<$");
      sAXReader_SAXEntityResolver0.resolveEntity("$wt'97xRT~X!9y|E*", "u4qs1sMRxs");
      SAXReader sAXReader0 = new SAXReader(true);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertNotNull(xMLReader0);
      
      sAXReader0.createContentHandler(xMLReader0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      sAXReader0.configureReader(xMLReader0, sAXContentHandler0);
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, defaultHandler2_0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@7a72ea18 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.installXMLFilter((XMLReader) null);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.getHandler((String) null);
      sAXReader0.setDefaultHandler((ElementHandler) null);
      sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SAXReader sAXReader0 = new SAXReader((String) null);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertNotNull(xMLReader0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setErrorHandler(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("`gYG:mp,?VPS&sx", "`gYG:mp,?VPS&sx");
      assertEquals(0L, file0.getUsableSpace());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      StringReader stringReader0 = new StringReader("3T=AHr#r*");
      SAXReader sAXReader0 = new SAXReader((String) null);
      boolean boolean0 = sAXReader0.isMergeAdjacentText();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3T=AHr#r*");
      MockURL.getHttpExample();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(boolean0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      xMLFilterImpl0.getErrorHandler();
      StringReader stringReader0 = new StringReader("A)(bcw..K");
      char[] charArray0 = new char[8];
      charArray0[0] = '{';
      sAXReader0.isIncludeInternalDTDDeclarations();
      charArray0[1] = ')';
      charArray0[2] = 'S';
      charArray0[3] = 'v';
      charArray0[4] = 'v';
      charArray0[5] = 'y';
      charArray0[6] = 'x';
      charArray0[7] = 'Q';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, (-1225), (-691));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      QName qName0 = defaultDocumentFactory0.createQName("", namespace0);
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.isValidating();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      InputSource inputSource0 = new InputSource();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      xMLFilterImpl0.setParent(xMLReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.read((String) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, true);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("//tmp/M4D8H`: 0/tmp/DBfS6Jta15`60DBfS6Jta15`6", "//tmp/M4D8H`: 0/tmp/DBfS6Jta15`60DBfS6Jta15`6", 4399, "//tmp/M4D8H`: 0/tmp/DBfS6Jta15`60DBfS6Jta15`6", uRLStreamHandler0);
      // Undeclared exception!
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1191);
      // Undeclared exception!
      try { 
        sAXReader0.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }
}
