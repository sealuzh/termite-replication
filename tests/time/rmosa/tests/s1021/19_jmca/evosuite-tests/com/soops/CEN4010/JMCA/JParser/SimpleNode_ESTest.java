/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 09:01:03 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.InputStream;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(8);
      SimpleNode simpleNode0 = new SimpleNode(98);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("CompilationUnit", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      String string0 = ">";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("CompilationUnit");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      simpleNode0.jjtOpen();
      simpleNode0.jjtClose();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add(";");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      arrayList0.add("<");
      arrayList2.add((String) null);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump(";", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode0.jjtOpen();
      simpleNode0.jjtClose();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList0, locale_FilteringMode0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      arrayList0.removeAll(linkedList1);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList0.add("<=");
      arrayList0.add("m,O;~F,IKo=");
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("bNA^m!d+5w['");
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('U');
      stringWriter0.append('.');
      simpleNode0.dump("}", stringWriter0);
      assertEquals("U.<PackageDeclaration>\n  <identifier>*le</identifier>\n  <identifier>m,O;~F,IKo=</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`");
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode0.jjtOpen();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add(";3(q6G^g!Eu");
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      arrayList0.add("<<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('A');
      StringWriter stringWriter1 = stringWriter0.append('A');
      simpleNode0.dump(";3(q6G^g!Eu", stringWriter1);
      assertEquals("AA<PackageDeclaration>\n  <identifier>*lshft</identifier>\n</PackageDeclaration>\n", stringWriter1.toString());
      assertEquals("AA<PackageDeclaration>\n  <identifier>*lshft</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.parent = null;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("EnumConstant");
      arrayList0.add("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('s');
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("s<CompilationUnit>\n  <identifier>EnumConstant</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      simpleNode0.jjtClose();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild(simpleNode0, 0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("%2a6[dL9ee;uxT@3v");
      arrayList0.add("</");
      arrayList0.add("}");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('.');
      stringWriter1.append('.');
      simpleNode0.dump("<+,|BQ%dQ8u uD", stringWriter1);
      assertEquals("..<CompilationUnit>\n  <identifier></</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      assertEquals("..<CompilationUnit>\n  <identifier></</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">=");
      arrayList0.add(">=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("<", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*ge</identifier>\n  <identifier>*ge</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(77);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("\"return\"");
      arrayList0.add(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("</identifier>", stringWriter0);
      assertEquals("<StatementExpression>\n  <identifier>\"return\"</identifier>\n  <identifier>*rshft</identifier>\n</StatementExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(77);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&&");
      StringWriter stringWriter1 = new StringWriter();
      arrayList0.add("{");
      arrayList0.add("L(>[muEKM/J*Kd\"4=H");
      StringWriter stringWriter2 = new StringWriter(77);
      simpleNode0.dump("wj6[wDU_Qz", stringWriter2);
      assertEquals("<StatementExpression>\n  <identifier>*amp</identifier>\n  <identifier>L(>[muEKM/J*Kd\"4=H</identifier>\n</StatementExpression>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2508158349996463
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.jjtOpen();
      simpleNode0.jjtOpen();
      simpleNode0.jjtClose();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("&");
      arrayList1.add("@");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('n');
      simpleNode0.dump("Zk/21:82kOEqWM", stringWriter0);
      assertEquals("n<Modifiers>\n  <identifier>*amp</identifier>\n  <identifier>@</identifier>\n</Modifiers>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("Modifiers : & : @", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode0.jjtClose();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.toString("Y=k4");
      simpleNode0.jjtClose();
      simpleNode0.toString();
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.jjtGetNumChildren();
      simpleNode1.setIdentifier("<");
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode1.toString("\"IK&-kkUUXC8#k@G");
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.toString("\"IK&-kkUUXC8#k@G");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringWriter stringWriter1 = new StringWriter(1);
      simpleNode0.dump("<", stringWriter1);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.parent = (Node) simpleNode0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode((-1));
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('s');
      simpleNode0.dump((String) null, stringWriter1);
      simpleNode0.jjtGetParent();
      simpleNode1.dump((String) null, stringWriter1);
      assertEquals("s<CompilationUnit></CompilationUnit>\n", stringWriter1.toString());
      assertEquals("s<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5977939580625449
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.jjtAddChild(simpleNode0, 0);
      String string0 = null;
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit");
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode((-2093064));
      Node node0 = simpleNode1.parent;
      nodeArray0[1] = null;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode2 = new SimpleNode(27);
      simpleNode2.toString("");
      simpleNode0.jjtAddChild(simpleNode2, 27);
      simpleNode0.jjtGetChild(27);
      assertEquals(28, simpleNode0.jjtGetNumChildren());
      
      String string0 = simpleNode2.toString("");
      assertEquals("Initializer", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-186));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("zSaYaIH+Ld");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump(">=", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -186
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1881171110));
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      Node node0 = simpleNode0.parent;
      nodeArray0[6] = null;
      nodeArray0[7] = (Node) simpleNode0;
      nodeArray0[8] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1881171110
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'r';
      charArray0[1] = 'J';
      charArray0[2] = 'L';
      charArray0[3] = '0';
      charArray0[4] = 'B';
      charArray0[5] = '#';
      charArray0[6] = '^';
      charArray0[7] = ';';
      charArray0[8] = '}';
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 10);
      simpleNode0.jjtGetChild(10);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("o");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>o</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add((String) null);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("~", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7519698627856062
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      simpleNode0.jjtClose();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("#j");
      arrayList0.add("\"IK&-kkUUXC8#k@G");
      arrayList0.add("\"IK&-kkUUXC8#k@G");
      arrayList0.retainAll(simpleNode0.identifiers);
      arrayList0.add("\"new\"");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.toString("Y=k4");
      simpleNode0.toString();
      arrayList0.add(0, "\"IK&-kkUUXC8#k@G");
      simpleNode0.jjtClose();
      simpleNode0.toString();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      arrayList0.parallelStream();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode1.toString("\"IK&-kkUUXC8#k@G");
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString("<U\"{^N-|YV@GJ4mn");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.dump("6 !m.R#FTT/Q^=U)w&", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      Node node1 = simpleNode1.jjtGetParent();
      assertNull(node1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode((-1717986916));
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 45);
      assertEquals(46, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(86);
      StringWriter stringWriter1 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 2243);
      simpleNode0.dump("...", stringWriter0);
      simpleNode0.toString();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(2244, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("Q");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Q", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>Q</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-6254807));
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[1], (-6254807));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6254807
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1127));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-637));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "*amp";
      JavaParser javaParser0 = new JavaParser("*amp");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-701));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-701));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -701
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1983047582));
      // Undeclared exception!
      try { 
        simpleNode0.toString("PrimaryExpression");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1983047582
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(77);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&&");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('}');
      simpleNode0.dump("!:v", stringWriter2);
      assertEquals("}<StatementExpression>\n  <identifier>*amp</identifier>\n</StatementExpression>\n", stringWriter2.toString());
      
      String string0 = simpleNode0.toString("FB");
      assertEquals("FBStatementExpression : &&", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-695));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -695
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      byte[] byteArray0 = new byte[3];
      arrayList0.add("Y=k4");
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-82);
      simpleNode0.jjtSetParent((Node) null);
      byteArray0[2] = (byte)54;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArrayList<InputStream> arrayList1 = new ArrayList<InputStream>();
      arrayList0.add("Q");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('n');
      simpleNode0.dump("hnQ", stringWriter0);
      assertEquals("n<CompilationUnit>\n  <identifier>Y=k4</identifier>\n  <identifier>Q</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1106101594));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(77);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("_#X=Z:?wma4U\"");
      arrayList0.add("&&");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('*');
      simpleNode0.dump("!:v", stringWriter1);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.parent = (Node) simpleNode0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("~");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Ft", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertSame(node0, simpleNode0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.014784547108511
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      simpleNode0.setIdentifier(">");
      simpleNode0.dump("CompilationUnit", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("CompilationUnit", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : >", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9686421518854049
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      simpleNode0.jjtClose();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(0);
      arrayList0.add("<");
      arrayList0.add(">=");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList0.removeAll(linkedList0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("<");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      charArray0[1] = 'f';
      charArray0[2] = '{';
      charArray0[3] = '9';
      charArray0[4] = '9';
      charArray0[5] = ':';
      stringWriter0.write(charArray0, 0, 0);
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*lt</identifier>\n  <identifier>*ge</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-2013488817));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
