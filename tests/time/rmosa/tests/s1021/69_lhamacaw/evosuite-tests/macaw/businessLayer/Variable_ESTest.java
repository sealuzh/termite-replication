/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 08:17:21 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1610612734));
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("{");
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      derivedVariable1.getColumnEnd();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getCleaningStatus();
      derivedVariable1.getCodeBookNumber();
      derivedVariable0.getLabel();
      assertEquals("{", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.setCleaned(true);
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("^gX");
      derivedVariable0.setLabel("K*oD0pp<.XnCz),.!3p");
      User user0 = new User();
      user0.setEmail("Y`L)9b<q2PKx$>&_");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getName();
      assertEquals("K*oD0pp<.XnCz),.!3p", derivedVariable0.getLabel());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1156295494));
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.927814364978974
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(21);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias("5b");
      rawVariable0.getOntologyTerms();
      rawVariable0.getAlias();
      rawVariable0.getDisplayItemIdentifier();
      User user0 = new User("bzf?Bdhn", "21");
      user0.clone();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getIdentifier();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      rawVariable0.getValueLabels();
      assertEquals("5b", rawVariable0.getAlias());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("$%");
      supportingDocument0.setIdentifier((-1205));
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("$%", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      derivedVariable0.questionNumber = "variable.alternativeVariable.label";
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getValueLabels();
      derivedVariable0.getForm();
      derivedVariable0.getColumnStart();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = false;
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.995412454458509
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setIsNewRecord(true);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.questionNumber = "QhA";
      arrayList0.sort(comparator0);
      derivedVariable0.addSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      supportingDocument0.setIsNewRecord(true);
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList1.add(derivedVariable1);
      arrayList0.addAll((Collection<? extends Variable>) arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getSourceVariables();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("uo ymCl5*Ej-<zZS{");
      derivedVariable0.columnStart = "macaw.system.MacawChangeEvent";
      derivedVariable0.setNotes("variable.name.label");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      valueLabel0.setValue("A");
      valueLabel0.clone();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayItemIdentifier();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setYear("0");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getOntologyTerms();
      assertEquals("uo ymCl5*Ej-<zZS{", derivedVariable0.getName());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("G/M71suAsssON");
      ontologyTerm0.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.columnStart = "}HCCpTW(";
      rawVariable0.getValueLabels();
      User user0 = new User((String) null, (String) null);
      user0.setPhone("}HCCpTW(");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getColumnStart();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1644));
      rawVariable0.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.324122434965307
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setQuestionNumber("?jMC\"MUcq-Y!pGI\"");
      rawVariable0.getQuestionNumber();
      rawVariable0.getForm();
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setIdentifier(1046);
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.isNewRecord();
      rawVariable0.getIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("variable.label.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      derivedVariable1.setName(";z`nf%;11{nu1TFv`C");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      boolean boolean0 = derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("1046", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath(".x.5@*");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument0, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.4925876194659407
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("UNABLE_TO_CREATE_VARIABLE");
      rawVariable1.columnStart = "7-";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("7-", rawVariable1.getColumnStart());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setName((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = derivedVariable0.getName();
      assertNull(string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.630907059965847
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setAvailability("{");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.setCoded(true);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAvailability("+])gAW<'FW$h<U '[");
      derivedVariable0.setAvailability("{");
      derivedVariable0.setLabel("{");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("7-");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.addSourceVariable(derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getCategory();
      assertEquals("7-", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setFilePath("uU");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setCoded(true);
      derivedVariable0.setName("user.password.saveChanges");
      boolean boolean0 = derivedVariable0.isCoded();
      assertEquals("user.password.saveChanges", derivedVariable0.getName());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User(",#", "{b6uB:");
      user1.setCity(",#");
      User.detectFieldChanges(user1, user0, user1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user2 = new User("SuJIPGR", "?lT6Lc&");
      derivedVariable0.setYear("SuJIPGR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user2, derivedVariable0, derivedVariable1);
      assertEquals("SuJIPGR", derivedVariable0.getYear());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1584));
      rawVariable0.setQuestionNumber("user.password.saveChanges");
      rawVariable0.setCleaned(false);
      rawVariable0.createVariableSummary();
      rawVariable0.getIdentifier();
      rawVariable0.setCategory("user.password.saveChanges");
      rawVariable0.getIdentifier();
      Variable.validateFields(rawVariable0);
      rawVariable0.getForm();
      rawVariable0.getAlternativeVariable();
      assertEquals("user.password.saveChanges", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "QzX-%A9M~";
      rawVariable0.setNotes("7-");
      rawVariable0.clone();
      rawVariable0.getNotes();
      assertEquals("7-", rawVariable0.getNotes());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.6306398469971106
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setName("3");
      rawVariable0.setAvailability((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.createVariableSummary();
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user1 = new User();
      derivedVariable1.setAvailability("variable.alias.label");
      derivedVariable2.setAvailability((String) null);
      derivedVariable2.setLabel("UNABLE_TO_CREATE_TABLES");
      user0.clone();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.getFilePath();
      derivedVariable0.getColumnEnd();
      derivedVariable2.getAvailability();
      assertEquals("UNABLE_TO_CREATE_TABLES", derivedVariable2.getLabel());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.isCleaned());
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User("$%#&CJ(u;KR>FhyV", "$%#&CJ(u;KR>FhyV");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(arrayList1.isEmpty());
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setName("3");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setAvailability("5?UD");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      derivedVariable1.setAvailability((String) null);
      derivedVariable1.setLabel("5?UD");
      derivedVariable1.getLabel();
      System.setCurrentTimeMillis((-233L));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.columnStart = "FK7H6Q!hS'(+/%du";
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setIdentifier((-2610));
      User user0 = new User("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS", "UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("-2610", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setName(" ");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setAvailability((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setAvailability((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      arrayList0.removeIf(predicate2);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setFilePath("WU*#1W");
      rawVariable0.setForm("Y%=");
      rawVariable0.getForm();
      rawVariable0.getAvailability();
      rawVariable0.createVariableSummary();
      assertEquals("WU*#1W", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "@ASXz3aU,ujM]";
      ontologyTerm0.setOntologyName("@ASXz3aU,ujM]");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3848772524016595
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "MISSING_DISPLAY_LIST_VIEWER";
      Variable.validateFields(rawVariable0);
      rawVariable0.getColumnStart();
      User user0 = new User();
      user0.setAddressLine2("O`QRkWGS#v?9mLt\"");
      user0.setPassword("f'o{+[mo&Irf<05D]g#");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "macaw.businessLayer.Variable";
      derivedVariable0.codeBookNumber = "variable.availability.label";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("MISSING_DISPLAY_LIST_VIEWER", rawVariable0.getForm());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setAffiliation("7-");
      derivedVariable0.columnEnd = "-6CRIM";
      derivedVariable0.setLabel("");
      user0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable1.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("clV%(Lq.^C5OK0Im", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable1.setNotes("YkiW");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable2.setSourceVariables(arrayList1);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      assertEquals("YkiW", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getForm());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9706387677830204
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setAvailability("{");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      derivedVariable0.setAvailability("+])gAW<'FW$h<U '[");
      derivedVariable1.setAlias("+])gAW<'FW$h<U '[");
      derivedVariable0.setAvailability("{");
      derivedVariable0.setLabel("{");
      user1.clone();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.438556626225264
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "n";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Object object0 = new Object();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("n", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.862981898596878
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setAvailability("{");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      derivedVariable0.setAvailability("+])gAW<'FW$h<U '[");
      derivedVariable0.setAvailability("{");
      derivedVariable0.setLabel("{");
      user1.clone();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User("7-", "");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAvailability("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("bz8+ZiphMY");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnEnd(")PB^4H+JPs");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setDescription("7-");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "7-";
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6692819005233845
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("NON_EXISTENT_SOURCE_VARIABLE");
      rawVariable0.columnEnd = "UNABLE_TO_CREATE_TABLES";
      rawVariable0.getDisplayName();
      assertEquals("NON_EXISTENT_SOURCE_VARIABLE", rawVariable0.getName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.861507153604866
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setName("&AC\"+7%OA|");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setAvailability("UNABLE_TO_GET_ALL_ONTOLOGY_TERMS");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable1.setAvailability((String) null);
      user0.clone();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6320083096536524
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      String string0 = derivedVariable0.getForm();
      assertNotNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("Unknown");
      derivedVariable0.getFilePath();
      assertEquals("Unknown", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      derivedVariable0.questionNumber = "variable.alternativeVariable.label";
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.columnEnd = "3Upy*rr";
      derivedVariable0.getColumnEnd();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getValueLabels();
      derivedVariable0.getForm();
      derivedVariable0.getColumnStart();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = false;
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("_/U`';5JqY6nd^H%Q");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("3E(gI%L&");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getAlias();
      assertEquals("3E(gI%L&", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.4925064671023778
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("IQx[%GJL{-{f].Ka");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("IQx[%GJL{-{f].Ka", "IQx[%GJL{-{f].Ka");
      user0.setFirstName("IQx[%GJL{-{f].Ka");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("IQx[%GJL{-{f].Ka", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("{");
      derivedVariable0.setYear("{");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getName();
      assertEquals("{", derivedVariable0.getName());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "v~z}y2)O-&";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getYear());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getFilePath());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("v~z}y2)O-&", derivedVariable2.getForm());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getNotes());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.8261804137896616
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.setAvailability("");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier(0);
      rawVariable0.setCleaningDescription("5hVfQ0:oML/26c");
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      User user0 = new User("", "n6");
      rawVariable0.isCoded();
      rawVariable0.getName();
      rawVariable0.getCleaningStatus();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.ensureCapacity(900);
      user0.setCounty("");
      arrayList0.clone();
      rawVariable0.getAvailability();
      rawVariable0.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlias((String) null);
      assertTrue(rawVariable0.isNewRecord());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable1.getName();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setIdentifier((-813));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.isCleaned.saveChanges.changedToNotClean";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("UNABLE_TO_GET_STUDY_YEARS");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_CLOSE_CONNECTION");
      ontologyTerm0.setNameSpace("variable.cleaningDescription.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("<tytzX");
      derivedVariable0.setLabel("s<9}02");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("UNABLE_TO_REGISTER_CHANGE_EVENTS", "52Z@ujXa(v:hcJV$D");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.notes = "52Z@ujXa(v:hcJV$D";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      assertEquals("<tytzX", derivedVariable0.getCodeBookNumber());
      assertEquals("52Z@ujXa(v:hcJV$D", derivedVariable2.getNotes());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setName("3");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setAvailability("5?UD");
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      derivedVariable0.setCleaningStatus("5?UD");
      derivedVariable1.setAvailability((String) null);
      User user2 = new User();
      user2.clone();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.976432073516815
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setAvailability("$kj0N@|+v");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setAvailability("eWcl,'||<gM");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.setCleaningStatus((String) null);
      derivedVariable3.setAvailability("$kj0N@|+v");
      derivedVariable1.setLabel("$kj0N@|+v");
      user0.clone();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable3, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.columnEnd = "|n*sxM&}@U";
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getNotes();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      String string0 = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE";
      user0.setUserID("");
      rawVariable0.columnStart = "general.fieldValue.unknown";
      User user1 = new User("", "V5!qS");
      try { 
        User.validateFields(user1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("fbKk>p2\"0,*-D=u+");
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      assertEquals("fbKk>p2\"0,*-D=u+", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "@}w*z^wWE";
      derivedVariable0.notes = "ontologyTerm.description.saveChanges";
      ValueLabel valueLabel0 = null;
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.getColumnStart();
      Variable variable0 = null;
      derivedVariable0.addSourceVariable((Variable) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "7-";
      derivedVariable0.setIsNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      System.setCurrentTimeMillis(3736L);
      derivedVariable0.getLabel();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCleaningDescription();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5573884596225187
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "[@,it0*";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("[@,it0*", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setNotes("I+3\"%^r.c7Qj");
      derivedVariable0.setNotes("UNABLE_TO_CHECK_VARIABLE_DUPLICATES");
      derivedVariable0.getForm();
      derivedVariable0.getCleaningDescription();
      assertEquals("UNABLE_TO_CHECK_VARIABLE_DUPLICATES", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.6144681725122147
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User("7-", "");
      user0.setCounty("MISSING_DISPLAY_LIST_EDITOR");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.setIdentifier((-1842102234));
      derivedVariable0.createVariableSummary();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      assertEquals("-1842102234", derivedVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("{");
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("{");
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setQuestionNumber("{");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getNotes();
      assertEquals("{", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.spliterator();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaningStatus("7-");
      derivedVariable0.setForm("variable.columnStart.label");
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      arrayList1.add((Variable) rawVariable0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getQuestionNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "&AC\"+7%OA|";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("&AC\"+7%OA|", derivedVariable0.getNotes());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setQuestionNumber("O!Oe.51mPdWo\"/$");
      rawVariable0.getForm();
      assertEquals("O!Oe.51mPdWo\"/$", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.questionNumber = "variable.isCoded.label";
      rawVariable0.form = "variable.category.label";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.iterator();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ontologyTerm0.setNewRecord(true);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getAlias();
      assertEquals("", string1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = " ";
      derivedVariable0.getFilePath();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCleaningStatus();
      assertEquals(" ", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      User user0 = new User("7-", "");
      user0.setStatus("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "7-";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals("7-", derivedVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "d1d";
      rawVariable0.setCleaningDescription("%b");
      rawVariable0.getYear();
      assertEquals("%b", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "p^ 9MsI)(t4xpw%pI";
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber(">H3 S/e9y*A");
      derivedVariable0.getName();
      derivedVariable0.getForm();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setAlias("E{nkYTn5jQV1i~");
      derivedVariable0.getColumnStart();
      derivedVariable0.getAlias();
      assertEquals("E{nkYTn5jQV1i~", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setCodeBookNumber("NON_EXISTENT_VARIABLE");
      derivedVariable0.getName();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getColumnEnd();
      assertEquals("NON_EXISTENT_VARIABLE", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.getForm();
      derivedVariable0.getCleaningDescription();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.removeIf((Predicate<? super Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("&7Ag_wJpx");
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable1.getYear();
      assertEquals("&7Ag_wJpx", derivedVariable1.getYear());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.5573884596225187
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setAffiliation("L{tD24mp,8y'IdCow,");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, arrayList0.size());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("!W/u<4(T+'Kq7TX");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      assertEquals("!W/u<4(T+'Kq7TX", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setCodeBookNumber("7-");
      arrayList0.add(supportingDocument0);
      derivedVariable0.setAlias("d#5xZMJa*;0fD}");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setDescription("7-");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("7-", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      String string0 = "general.fieldValue.blank";
      Variable variable0 = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("jnFG");
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.codeBookNumber = "variable.cleaningStatus.label";
      rawVariable0.setIdentifier((-1161));
      rawVariable0.getNotes();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals((-1161), rawVariable0.getIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("7-");
      derivedVariable0.clone();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("variable.year.label");
      derivedVariable0.clone();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("variable.notes.label");
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User("7-", "7-");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("macaw.system.MacawErrorType");
      rawVariable0.setNotes("#Es");
      rawVariable0.clone();
      assertEquals("#Es", rawVariable0.getNotes());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setNotes("j3:.xMN");
      ontologyTerm0.setNameSpace("9n-");
      rawVariable0.setColumnStart("b`S0'R{T");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("b`S0'R{T", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      User user0 = new User("7-", "");
      user0.setCounty("variable.saveChanges.valueChanged");
      user0.setAddressLine1("7-");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "]zr!_";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertFalse(boolean0);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("]zr!_", derivedVariable1.getColumnEnd());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("general.fieldValue.unknown");
      rawVariable0.clone();
      assertEquals("general.fieldValue.unknown", rawVariable0.getLabel());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add((SupportingDocument) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      User user0 = new User("7-", "");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.getQuestionNumber();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5578332976219267
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      user0.setLastName("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.48462116244288
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.8911601612408218
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.6941960781238792
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertNull(macawChangeEvent1);
      
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      User user0 = new User("7-", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("^I~/yEp_prDvEQ1t");
      derivedVariable0.questionNumber = "wC!iL(";
      derivedVariable0.createVariableSummary();
      derivedVariable0.getLabel();
      assertEquals("^I~/yEp_prDvEQ1t", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCodeBookNumber("3");
      derivedVariable0.setAlias("d#5xZMJa*;0fD}");
      supportingDocument0.setDescription("3");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnStart();
      derivedVariable0.createVariableSummary();
      assertEquals("3", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("q}G>$");
      derivedVariable0.createVariableSummary();
      assertEquals("q}G>$", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      User user0 = new User("7-", "");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = ")}_ieQpDco";
      rawVariable0.setColumnStart(")}_ieQpDco");
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.setCleaningStatus("yy[y; Q[O,HF#[mL9l");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("==");
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
  }
}
