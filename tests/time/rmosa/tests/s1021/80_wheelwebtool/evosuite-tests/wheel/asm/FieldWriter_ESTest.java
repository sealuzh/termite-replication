/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 08:49:10 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "ACdV7`H-C/B7M";
      stringArray0[2] = "u=E";
      classWriter0.visit(49, 981, "ACdV7`H-C/B7M", "^hSwxBsA", "=;/y-4E%/,", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1162), "^hSwxBsA", "ACdV7`H-C/B7M", "=;/y-4E%/,", "RuntimeInvisibleParameterAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3655));
      String[] stringArray0 = new String[0];
      classWriter0.visit(45, 45, "x\"h01/j`Zj$vhLMB", "u=E", "u=E", stringArray0);
      classWriter0.index = (-3655);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3655), "u=E", "u=E", "u=E", "u=E");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3655));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "u=E";
      stringArray0[3] = "u=E";
      stringArray0[4] = "u=E";
      stringArray0[5] = "u=E";
      classWriter0.visit(49, (-3655), "", "u=E", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3655), "org.apache.commons.io.filefilter.AndFileFilter", "d6/|qW:!6]!rnD", "u=E", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-5), "C1&??LS%X", "C1&??LS%X", "C1&??LS%X", "C1&??LS%X");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-5);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      classWriter0.version = 191;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "T", "T", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.version = 185;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "T", "T", "T", "T");
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 20, "CJ&??LS%X", "CJ&??LS%X", "CJ&??LS%X", "CJ&??LS%X");
      classWriter0.visitSource("CJ&??LS%X", "Signature");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 70;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1855);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1855, "P2", "P2", "P2", "P2");
      fieldWriter0.visitAnnotation("P2", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3655));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3655), "l~wgz", "l~wgz", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("_ZGfo(gKg4028M");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 56, "lgz", "lgz", "lgz", "lgz");
      String string0 = "wheel.asm.FieldWriter";
      Attribute attribute0 = new Attribute("wheel.asm.FieldWriter");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClass("rsmiuh:A_");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-43), "rsmiuh:A_", "LO", "rsmiuh:A_", "rsmiuh:A_");
      fieldWriter0.visitAnnotation("rsmiuh:A_", true);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3655));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3655), "lgz", "lgz", "lgz", "lgz");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2593));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 297, "oFL]gd|Nr  rlg", "oFL]gd|Nr  rlg", "oFL]gd|Nr  rlg", "oFL]gd|Nr  rlg");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("mf7,|hxZ8& oU\"ZH c)", false);
      ByteVector byteVector1 = byteVector0.putLong((-169L));
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 56, "l*z", "l*z", "l*z", "l*z");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("l*z", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3655));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3655), "l~wgz", "l~wgz", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter(56);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "", "", "", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3655));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3655), "l~wgz", "l~wgz", "l~wgz", "l~wgz");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2180);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "[AHC!ued`<7", "[AHC!ued`<7", "[AHC!ued`<7", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putInt(1);
      byte[] byteArray0 = new byte[5];
      byteVector0.putInt(0);
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)0;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte)5, "[AHC!ued`<7", "[AHC!ued`<7", "[AHC!ued`<7", (Object) null);
      fieldWriter1.getSize();
      fieldWriter1.getSize();
      fieldWriter0.visitEnd();
      assertFalse(fieldWriter0.equals((Object)fieldWriter1));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777207, "lgz", "lgz", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(20, "", "org.apache.commons.io.filefilter.HiddenFileFilter", "", "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 20, "C1&??LS%X", "C1&??LS%X", "C1&??LS%X", "C1&??LS%X");
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "n`3POBbDpX", "n`3POBbDpX", "n`3POBbDpX", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3655));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3655), "lgz", "lgz", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 50, "\"o", "\"o", "\"o", "\"o");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 56, "lgz", "lgz", "lgz", "lgz");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 139, "8@GT7~JK.", "8@GT7~JK.", "8@GT7~JK.", "8@GT7~JK.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
