/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 08:49:30 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(4919);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PjG<2+k`l3WLSl");
      Player player1 = new Player((-223));
      player0.setZ(1521.0F);
      player0.setJoinOK(player1, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      float float0 = player0.getZ();
      assertEquals(1521.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-35), "", 859);
      player0.setZ((-35));
      player0.getZ();
      Player player1 = new Player((short)4919, "", "", 2143, 348);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-35.0F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9fN^\"eM,QPC-");
      Player player0 = new Player(0);
      Player player1 = new Player(0, "", "", (short)4919, 0);
      player1.setJoinOK(player0, false);
      int int0 = Packable.PLAYER;
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.getName());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      
      int int1 = player1.getStrength();
      assertEquals(0, int1);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getIP();
      player0.boss = (Party) player0;
      player0.setY(0);
      player0.getSubparty();
      player0.setConnected(false);
      player0.setDead((long) 0);
      player0.setZ(0);
      player0.getIP();
      player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      player0.getX();
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(1);
      player0.setDead(1392409296320L);
      player0.setMoney(10.0F);
      player0.setX(1);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.setDead((-2383L));
      player0.pack();
      player0.getTimeOfDeath();
      MockFile mockFile0 = new MockFile((File) null, "b3'MQ]<");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player1.pack(dataOutputStream0);
      player1.setDead(1141L, false);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("5=$#b(h;O\"iEl^hVOC");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      int int0 = Packable.UNDEFINED;
      Player player1 = new Player((-1981), "K'", (String) null, 129, 2430);
      player1.isJoinOK(player0, true);
      player0.pack();
      player1.toString();
      player0.isJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(255, (String) null, 255);
      Player player1 = new Player(4919);
      player0.head = (Party) player1;
      player0.setMoney(255);
      player0.getX();
      player0.getMoney();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(5);
      player0.setY((-181));
      Player player1 = new Player((-2933));
      player1.setJoinOK(player0, false);
      player0.setY((-384.0F));
      player1.isJoinOK(player0, false);
      player1.getStrength();
      player0.pack();
      player0.getY();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-384.0F), player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-2751), (String) null, (-2751));
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-2751), player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#U");
      Player player0 = new Player(0);
      player0.setJoinOK(player0, false);
      int int0 = Packable.PLAYER;
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player0", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(1028, (String) null, 1028);
      Player player1 = new Player(4919);
      player0.setJoinOK(player1, true);
      player0.setY((short)4919);
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)12;
      player0.unpack(byteArray0);
      Player player2 = new Player(5, (String) null, 241);
      player1.getStrength();
      player0.isJoinOK(player1, true);
      player0.getY();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(10);
      player0.toString();
      Player player1 = new Player();
      player1.id = (-1746);
      player0.boss = (Party) player1;
      byte[] byteArray0 = new byte[3];
      player1.setConnected(true);
      byteArray0[0] = (byte) (-94);
      player0.head = (Party) player1;
      byteArray0[1] = (byte) (-10);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.setZ((-3160.955F));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setConnected(true);
      player0.setMoney((-3160.955F));
      byteArray0[2] = (byte)81;
      player1.unpack(byteArray0);
      player0.isJoinOK(player1, false);
      player0.getMoney();
      player1.getY();
      player1.getX();
      player1.getX();
      int int0 = player1.getStrength();
      assertEquals((-3160.955F), player1.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      Player player1 = (Player)player0.gangBoss();
      player1.remove(player0);
      player0.add(player1);
      player0.getTimeOfDeath();
      boolean boolean0 = false;
      player0.setDead(1543L);
      player0.isJoinOK(player1, false);
      player0.toString();
      player1.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 3319);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-25084));
      player0.getTimeOfDeath();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte) (-6);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-64);
      byteArray0[7] = (byte)36;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1975), 10);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(893, (String) null, "u?ivM>PMK", 257);
      player0.pack();
      player0.setZ(257);
      player0.setDead((long) 257, false);
      player0.setDead((long) 257);
      player0.gangStrength();
      player0.setMoney((-1693.12F));
      player0.getIP();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PjG<2+k`l3WLSl");
      Player player0 = new Player((-969));
      Player player1 = new Player(1028, "state.Player$JoinInfo", "e?ar/f~<rR(J)L", 1, (-2160));
      int int0 = player1.gangStrength();
      assertEquals((-2160), int0);
      
      player0.setJoinOK(player1, false);
      Player player2 = new Player(696, "i?n5nMiLH~bDJH')Fz", "_EH&P", (-2160), 696);
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player2.isDead());
      assertFalse(boolean0);
      assertEquals("i?n5nMiLH~bDJH')Fz", player2.getIP());
      assertEquals((-2160), player2.getPictureId());
      assertEquals("Player-969", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(1, "", "2Ar08F\"p%RXa9+80Z", 1);
      player0.pack();
      player0.setZ(0.0F);
      player0.setDead((-1L), false);
      player0.setDead((-2030L));
      player0.gangStrength();
      player0.setMoney((-87));
      player0.getIP();
      player0.setX(1.0F);
      player0.getStrength();
      int int0 = player0.gangStrength();
      assertEquals((-2030L), player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(371, "", (-1586));
      player0.setX((-1672.869F));
      player0.setMoney(889.759F);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)82;
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.pack();
      player0.getName();
      player0.getZ();
      float float0 = player0.getX();
      assertEquals(889.759F, player0.getMoney(), 0.01F);
      assertEquals((-1672.869F), float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0L);
      Player player1 = new Player((short)4919, (String) null, (String) null, 573, 4919);
      player1.getPictureId();
      Player player2 = new Player();
      player2.head = (Party) player1;
      player2.gangStrength();
      String string0 = player2.getName();
      assertEquals("Player-1", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(0, "", "", (-20736), 0);
      Player player1 = new Player((-1), "HN", "HN", 14242);
      player0.setJoinOK(player1, false);
      player0.gangStrength();
      Player player2 = new Player((short)4919, "*R )`)XcV8;", "*R )`)XcV8;", (-1), (-20736));
      player1.setDead((long) (short)4919);
      player2.isJoinOK(player1, true);
      assertTrue(player1.isDead());
      
      Player player3 = new Player(1127, "HN", (short)4919);
      player3.setDead((long) (short)4919, false);
      player3.getMoney();
      player2.getIP();
      assertFalse(player2.isDead());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1028, "ZY!vLxK*5'|*OuQT5", (String) null, 1028);
      Player player1 = new Player(835);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = (-240);
      Player player2 = new Player((-240));
      String string0 = "gP't>*\"1i||x&*oY'6";
      Player player3 = new Player(1028, "gP't>*\"1i||x&*oY'6", ")_#I}N`j~e6)vx#i", 779, (short)4919);
      player3.gangStrength();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.isJoinOK(player1, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player2 = new Player();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      player2.unpack(dataInputStream1);
      assertEquals(0, byteArrayInputStream0.available());
      
      String string0 = player0.getName();
      assertEquals("Player-1", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(5, "sLc~6~y{HcQ?&]Q'j,", 5);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Player player0 = new Player();
      player0.isJoinOK(player0, false);
      player0.getTimeOfDeath();
      player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)1;
      player0.setX((-1.0F));
      player0.setMoney(0.0F);
      player0.setConnected(false);
      player0.getX();
      player0.setX((-1.0F));
      player0.getStrength();
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(3226, "", 3226);
      Player player1 = new Player((-4042), "", "Oy-\"wYDU&^w'!tsP=Q", (short)4919, (-2514));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      
      int int0 = player1.getStrength();
      assertEquals(4919, player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals((-2514), int0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals("", player1.getIP());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-1084), "Bp Kf551N;u7", "+p~`t:L-IHys", (-1084));
      Player player1 = new Player(5, "+p~`t:L-IHys", "+p~`t:L-IHys", (-397), 5);
      player0.setJoinOK(player1, true);
      player0.getPictureId();
      player0.setMoney((-1084));
      assertEquals((-1084.0F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      boolean boolean0 = player0.isDead();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0, "", "AHC!ued", 4, 93);
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((byte) (-57));
      String string0 = player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-57", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(3376);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player3376", player0.getName());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-3227));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(3072, "rqiW-r?deqVgba", "P*gy0wcy4//xC<8!Y_", (-3013), 3072);
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(3072, int0);
      assertEquals("rqiW-r?deqVgba", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-3013), player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-486));
      float float0 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-486", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(1);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-727));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(29, byteArrayOutputStream0.size());
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      Player player0 = new Player(3, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 4919, 0);
      player0.pack(dataOutputStream0);
      assertEquals(0, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(4919, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Player player0 = new Player(1509, "AZ?0G%yj", 3396);
      player0.reset(false);
      System.setCurrentTimeMillis((-223));
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(2413);
      player0.setZ(0.0F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 0;
      String string0 = "gui.ModuleBrowserDialog$ModuleFilter";
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", 0);
      player0.getIP();
      Player player1 = new Player(0, "0.0.0.0", (String) null, 0);
      boolean boolean0 = true;
      player1.setY((-1170.13F));
      player0.reset(true);
      String string1 = "VU1\"A^";
      // Undeclared exception!
      try { 
        MockFile.createTempFile("P", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-727), "I", 5);
      player0.reset(true);
      System.setCurrentTimeMillis(5);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-12));
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(4919);
      Player player1 = new Player(1536, "", (-3618));
      player0.setConnected(true);
      int int0 = Packable.GAME_STATE;
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals((-3618), player1.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player4919", player0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-23818));
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.gangBoss();
      player0.add(party0);
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(0, ".*[.]class$", 5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)1;
      player0.unpack(byteArray0);
      int int0 = player0.type();
      assertEquals(5, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-1564), "):M_-{m^I;{'E``C", "):M_-{m^I;{'E``C", (-1888));
      byte[] byteArray0 = new byte[2];
      player0.unpack(byteArray0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-1888), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = 13;
      Player player0 = new Player(13);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-1796));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1796", player0.toString());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(0);
      float float0 = player0.getZ();
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player0", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-3129), "T", (-3129));
      player0.setMoney(0.0F);
      Player player1 = new Player((-3129));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals((-3129), player0.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-3129", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-2443));
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      Player player1 = new Player(19, "\"S", (short)4919);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(586);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      int int1 = player0.type();
      assertFalse(player0.isDead());
      assertEquals(5, int1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("Player586", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
