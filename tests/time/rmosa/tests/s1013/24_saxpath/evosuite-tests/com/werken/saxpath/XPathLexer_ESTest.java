/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 02:05:47 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!80");
      xPathLexer0.consume((-826));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7976345979445405
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!80");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("!80");
      Token token1 = xPathLexer2.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.892400767303865
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}$eX");
      XPathLexer xPathLexer1 = new XPathLexer("}$eX");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("}$eX", token0.getTokenText());
      
      Token token1 = xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setPreviousToken(token1);
      assertEquals("}$", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.operatorName();
      Token token3 = xPathLexer2.dollar();
      assertEquals(26, token3.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.89597956398611
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aIr0.t ^iV%Jk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("aIr0.t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.setXPath("aIr0.t ^iV%Jk");
      Token token1 = xPathLexer0.rightParen();
      assertEquals("a", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.star();
      assertEquals("r", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(31, token3.getTokenType());
      assertEquals("0.", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("t", token4.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<}-<4,ANO_sJs<j^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("}-", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("4", token3.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.794892785301738
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.equals();
      xPathLexer0.setXPath("");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume((-3477));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7923810113613925
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9802337525917397
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("5tGj.NR");
      xPathLexer0.consume(26);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.consume((-338));
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.colon();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0005IspKX!");
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5@CI%b");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.794892785301738
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2687));
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7623154736762552
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aIr0.t ^iV%Jk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("aIr0.t", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(" ", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.setXPath("aIr0.t ^iV%Jk");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("aIr0.t ^iV%Jk", token2.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      XPathLexer xPathLexer1 = new XPathLexer("o2Z8vjq}nreK");
      xPathLexer1.consume((-3581));
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8958032225891657
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("diAQx");
      Token token0 = xPathLexer0.pipe();
      assertEquals("d", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("AQx", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath(">9");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
      
      Token token5 = xPathLexer0.or();
      assertNull(token5);
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("9", token6.getTokenText());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C5o");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("C5o", token0.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("R", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G.i(2(w*OI");
      Token token0 = xPathLexer0.dots();
      assertEquals("G.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("i(", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.setXPath("!");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7C.]v");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5762568283040395
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K/I8kp/js9|A/7;");
      Token token0 = xPathLexer0.slashes();
      assertEquals("K/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("kp", token3.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6364186076252583
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("");
      xPathLexer1.consume();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("*", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer1.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.setXPath("h/P&nv4y$8n{)ol=I");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("h/P&nv4y$8n{)ol=I", token3.getTokenText());
      assertNotSame(token3, token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.797208748908024
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",C2#04ThMT*)JY[t3=");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6905579106695527
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("#)]\"9D3%41f?j");
      xPathLexer1.nextToken();
      xPathLexer1.notEquals();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oy[W\"e`{");
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.consume();
      assertEquals("oy[W\"e`{", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G.i(2(w*OI");
      xPathLexer0.consume();
      xPathLexer0.consume((-1489));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8908530192772437
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.setXPath("Be=");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.star();
      assertEquals("e", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(21, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2826685601371457
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ ");
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.893390768293866
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-750));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F1}V2N)J`q9PpS=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("F1", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.div();
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Mu<b4]vrrB]uP]");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Mu", token0.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7987682991009155
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5DM,nE&KA\u0004RF]rn");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("5DM,nE&KA\u0004RF]rn");
      Token token1 = xPathLexer1.star();
      assertEquals("5", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("DM", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",09dGVExB*y\"0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("0", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6910517378300467
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s6!'H|");
      xPathLexer0.dollar();
      xPathLexer0.LA(1);
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer(",Y3~n]b7-X");
      Token token0 = xPathLexer3.and();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6905579106695527
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.literal();
      xPathLexer0.dollar();
      xPathLexer0.consume(0);
      xPathLexer0.consume((-102));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.consume((-149));
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.797321935099309
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<}-<4,ANO_sJs<j^");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("}-<4,ANO_sJs<j^", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("}-", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(U>bqSp%1I@");
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7986480851200297
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nVB\"Ia");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("nVB", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("\"", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.815813513267187
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<}-<4,ANO_sJs<j^");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("<}", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("<4", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("A", token5.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ow.6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Ow.6", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.283562747916579
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&D ~:}A@&4>R");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&D ~:}A@&4>R", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&D ~:}A@&4>R", token1.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8949366929167137
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("qnSVt%232azlKw");
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer1.at();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&3");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("3", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4382178413630053
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      XPathLexer xPathLexer1 = new XPathLexer("d`ZY");
      xPathLexer1.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5786232110742713
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.setXPath("V;z.0 ,pz5[8X.3b:L");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("V;z.0 ,pz5[8X.3b:L", token1.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G.i(2(w*OI");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("i", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.694660474772117
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LMlhxf=IB-^*qHE");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5762157352282227
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      Token token0 = xPathLexer0.slashes();
      assertEquals(".", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.setXPath("k");
      xPathLexer0.setXPath("ThS(p _P54");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ThS", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.8934704940373086
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.setXPath("?E:>mg");
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("E", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]<<$xi=o61Hhhu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|@94C2Ym]5T");
      XPathLexer xPathLexer1 = new XPathLexer("K'7.");
      xPathLexer1.pipe();
      xPathLexer0.nextToken();
      xPathLexer1.leftParen();
      xPathLexer0.setXPath("K'7.");
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.620218554494845
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("P<g");
      Token token2 = xPathLexer0.notEquals();
      assertEquals("P<", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("g", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6434242318866
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}$eX");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.799822662054819
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("'YDRuF>:$xRv%");
      Token token0 = xPathLexer0.star();
      assertEquals("'", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("YDRuF", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G.i(2(w*OI");
      xPathLexer0.consume();
      xPathLexer0.setXPath("S4<:-8w");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.8013443982049635
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8\"TRvc8MRVMC4A5{H");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("TRvc8MRVMC4A5", token2.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer1.identifier();
      xPathLexer1.setXPath("");
      xPathLexer0.setXPath("Jbx!");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Jbx!", token4.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("jZUR^s*");
      xPathLexer0.div();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ZUR^s*", token2.getTokenText());
      assertNotSame(token2, token0);
      
      Token token3 = xPathLexer0.comma();
      assertEquals("Z", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4461011932556305
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aIr0.t ^iV%Jk");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t@a]~^TE#kxNa|9YS");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.438867895534186
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.7994795029319337
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L|%x&");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals("", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("vvfkD+SXunz~p");
      Token token1 = xPathLexer0.star();
      assertEquals("v", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals("v", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("fkD", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("+", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4Fw#n");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";Ir0.t ^iV%Jk");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(";Ir0.t ^iV%Jk");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz,`E4@Fa3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("dz", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aIr0.t ^iV%Jk");
      XPathLexer xPathLexer1 = new XPathLexer("%sL>|\"");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("%sL>|\"", token0.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3814508269696402
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s6!'H|");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("6", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals("!", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("'", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("H", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!80");
      xPathLexer0.consume();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0&,-UQYVT");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s1");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8626459989507866
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K/I8kp/js9|A/7;");
      Token token0 = xPathLexer0.star();
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("kp", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("9", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("|", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s6!'H|");
      Token token0 = xPathLexer0.dollar();
      assertEquals("s", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K/I8kp/js9|A/7;");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5771790982409217
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aIr0.t ^iV%Jk");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("uB\tQ{n\"Le6fwq");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("qG%Wt%yp8TO(+u:{/'");
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz,`E4@Fa3");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!80");
      XPathLexer xPathLexer1 = new XPathLexer("`^u(VaS[EsA0x7");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("`^u(VaS[EsA0x7", token0.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7388514740357945
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~+]A");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.equals();
      Token token1 = xPathLexer0.leftParen();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.570776114086319
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5944980221436322
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.setXPath("\"!\"XA0cxJ`<=1(w)m");
      xPathLexer0.div();
      xPathLexer0.div();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertNotNull(token5);
      
      Token token6 = xPathLexer0.dots();
      assertEquals("`", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("<=", token7.getTokenText());
      assertEquals(8, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("1", token8.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G.i(2(w*OI");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("{q+qd2eUf@*-F#f");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("{q+qd2eUf@*-F#f", token2.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.8004930427848405
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ysdwsr>YPJ6T]m~");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("sdwsr", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("ysdwsr>YPJ6T]m~");
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("k`8|xKw<}R;");
      xPathLexer2.operatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer2.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("diAQx");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("uj");
      Token token1 = xPathLexer1.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("j", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.51083507295103
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aIr0.t ^iV%Jk");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.7981603142329834
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals(".:", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("*", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("R", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*F=gO)W/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.575624747786706
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G.i(2(w*OI");
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.setXPath("pv+rZ}S\"p6pz5*R;~G");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7504531057567179
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("diAQx");
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath(">9");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.796091586500539
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("W");
      xPathLexer0.nextToken();
      xPathLexer0.consume(1237);
      assertEquals("W", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wom.werJen8saxpath.Token");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.6961009818306017
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.LA(62);
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werJen.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.0624112863955477
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("?E:>mP");
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.or();
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token1 = xPathLexer4.rightParen();
      assertEquals(2, token1.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.plus();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      xPathLexer5.leftParen();
      xPathLexer4.rightBracket();
      xPathLexer4.div();
      boolean boolean1 = xPathLexer1.hasMoreChars();
      assertFalse(boolean1 == boolean0);
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      xPathLexer2.operatorName();
      xPathLexer5.leftParen();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer6.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer2.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer4.rightBracket();
      assertEquals(4, token6.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz,`E4@Fa3");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.007688293250985
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G.i(2(w*OI");
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2)pAyXD=F03LhHx9|");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.setXPath("2)pAyXD=F03LhHx9|");
      assertEquals("2)pAyXD=F03LhHx9|", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.097242790482881
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("diAQx");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7577775159980915
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("l86ld59k4S");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.star();
      assertEquals("8", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("6", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("l", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8105824378860786
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K/I8kp/js9|A/7;");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.star();
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("/", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("kp", token4.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.576953979490781
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" PPMZGh '");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("PPMZGh", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.576411238649533
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Lbv6R9");
      xPathLexer0.setXPath("Lbv6R9");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Lbv6R9", token0.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5758954423890557
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.dots();
      assertEquals("X", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("bkq", token1.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.setXPath("G.i(2(w*OI");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("G.i(2(w*OI", token1.getTokenText());
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cm@>?W$`");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tbwp");
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.4384474624881487
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m>m]");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer0.dollar();
      assertEquals(">", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('m', char0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r_\"f,rP");
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      assertEquals("r_\"f,rP", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("`e(icN VE}a");
      xPathLexer0.dollar();
      int int0 = 0;
      XPathLexer xPathLexer3 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer3.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.9180777440762844
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K/I8kp/js9|A/7;");
      xPathLexer0.star();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("kp", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("j", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("s9|A/7;", token5.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.281621938371099
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.setXPath("?E:>mg");
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.6595664713313816
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G.i(2(w*OI");
      xPathLexer0.consume();
      xPathLexer0.number();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B\"f_b,7C3x,zP^-=}*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.5753765010294294
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r/Cp");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.2872549647235503
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aIr0.t ^iV%Jk");
      xPathLexer0.mod();
      xPathLexer0.setXPath("I`|}~p:GFz-\"(Ce;q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`|}~p:GFz-\"(Ce;q", token1.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.750779484707786
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("diAQx");
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath(">9");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.7579736521165577
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("l86ld59k4S");
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.833213373245382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Uf|C");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("U", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("C", token5.getTokenText());
      
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.colon();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      xPathLexer0.setXPath("-Uf|C");
      Token token11 = xPathLexer0.star();
      assertEquals("-", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals(15, token12.getTokenType());
      assertEquals("Uf", token12.getTokenText());
      
      Token token13 = xPathLexer0.plus();
      assertEquals("|", token13.getTokenText());
      assertEquals(5, token13.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m>mQ]");
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.consume((-1764));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.1372905451629616
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.endPosition();
      xPathLexer0.getXPath();
      xPathLexer0.slashes();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.slashes();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.div();
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.isIdentifierStartChar('m');
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.plus();
      xPathLexer1.literal();
      xPathLexer0.getXPath();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2091));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.2708093628091763
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pLjPRNXB04p i8p=cfV");
      xPathLexer0.consume(123);
      xPathLexer0.at();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.getXPath();
      xPathLexer0.getXPath();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('n');
      xPathLexer0.slashes();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(139, int0);
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer0.getPreviousToken();
      boolean boolean1 = xPathLexer0.hasMoreChars();
      assertFalse(boolean1 == boolean0);
      
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-390));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.2829875394034933
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.3187442639376115
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("?E:>mg");
      Token token1 = xPathLexer0.star();
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("E", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tovu^");
      Token token0 = xPathLexer0.pipe();
      assertEquals("t", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("vu", token2.getTokenText());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<}-<4,ANO_sJs<j");
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.4460287413003332
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aIr0.t ^iV%Jk");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.79709058749954
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.isIdentifierChar('\"');
      xPathLexer0.not();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.2061196991717082
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.isIdentifierChar('');
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.hasMoreChars();
      xPathLexer0.rightParen();
      xPathLexer0.hasMoreChars();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.285877116286878
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("\"!\"XA0cxJ`<=1(w)m");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("\"!\"XA0cxJ`<=1(w)m");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.mod();
      Token token0 = xPathLexer1.literal();
      assertEquals("!", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      assertNotNull(token0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.7052481915490576
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<}-<4,ANO_sJs<j^");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("}-", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.7211888327267306
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.setXPath("\"!\"XA0cxJ`<=1(w)m");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("\"!\"XA0cxJ`<=1(w)m");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      xPathLexer1.consume();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("XA0cxJ`<=1(w)m", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals("\"", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.consume((-1653));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.2470796179718646
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.setXPath("?E:>mg");
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5258764255663537
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!80");
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.7060865706827326
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<}-<4,ANO_sJs<j^");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("<}-<4,ANO_sJs<j^");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.0605079768764678
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0600019680213129
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("R%", token3.getTokenText());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.2747505712964988
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s6!'H|");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.number();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.5174674590655692
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.setXPath("\"!\"XA0cxJ`<=1(w)m");
      xPathLexer0.div();
      Token token1 = xPathLexer0.pipe();
      assertEquals("\"", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("XA0cxJ", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("\"3s\"53v");
      xPathLexer0.setXPath("-zt:");
      Token token5 = xPathLexer1.rightBracket();
      assertEquals("\"", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.setXPath("?f+*");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.div();
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("?f+*", token7.getTokenText());
      
      xPathLexer2.currentPosition();
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0965100211308343
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.comma();
      assertEquals(".", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("*", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0965100211308343
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("*", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.5509239449472323
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^");
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("[ (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.0978003437114796
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(":", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("*", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("R", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("%", token4.getTokenText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.6461561822531636
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!80");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.consume(7018);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.060001968021313
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.setXPath(")");
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(921);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.5276400939966888
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!80");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.0979135299027643
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("%", token4.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.0230684404517407
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(":", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.4400277961141366
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
      
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('&');
      assertFalse(boolean0);
      
      xPathLexer0.literal();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.isIdentifierStartChar('m');
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('C');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.3179095725746799
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("?E:>mg");
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.2386157384909002
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N3{ `");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("N3", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.134905768759913
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.5195887982110068
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("^", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("[ (");
      xPathLexer0.consume();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.0593908144689828
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("R", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.0219461059960728
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (3) (.)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.020426637809938
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".:*R%>o;n ");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.minus();
      assertEquals(".", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }
}
