/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 02:44:26 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StreamCorruptedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.gangBoss();
      player0.boss = party0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.setDead((-1L));
      Player player1 = (Player)player0.boss;
      player0.next = (Party) player1;
      player1.add((Party) null);
      player1.head = (Party) player0;
      player0.next = (Party) player1;
      player0.getTimeOfDeath();
      player0.type();
      long long0 = (-528L);
      System.setCurrentTimeMillis((-528L));
      Player player2 = new Player(1353, " ", " ", 5, 1353);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player2.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.gangBoss();
      player0.next = party0;
      player0.setMoney(148.83F);
      player0.setMoney(0);
      player0.setY(0);
      player0.getTimeOfDeath();
      player0.setZ((-1300.3428F));
      player0.getZ();
      System.setCurrentTimeMillis(0L);
      player0.type();
      player0.pack();
      assertEquals((-1300.3428F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(403, "{imv8Ui3r", "gAIu,uJqrk0", 403, 799);
      player0.reset(false);
      Player player1 = new Player((short)4919, "{imv8Ui3r", ".*[.]class$", 799, (-14645));
      player1.remove(player0);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      player1.getStrength();
      assertEquals(799, player1.getPictureId());
      
      int int0 = player0.getStrength();
      assertEquals(799, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("{imv8Ui3r", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)114;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-533), (String) null, 1120);
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY((-1.0F));
      player0.getY();
      player0.getTimeOfDeath();
      player0.getX();
      Player player1 = new Player((-26111), (String) null, "", 2443);
      player0.remove(player1);
      System.setCurrentTimeMillis((short)4919);
      player0.type();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WX&7jaG");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(21245);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      Player player0 = new Player();
      Party party0 = new Party((-1945));
      party0.id = 5;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      player0.setDead(1494L, false);
      player0.add(party0);
      player0.setDead(1392409281320L, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(2228, "state.Party", (String) null, 4);
      Party party0 = player0.head;
      player0.getTimeOfDeath();
      player0.getName();
      player0.getTimeOfDeath();
      player0.setMoney((-1.0F));
      player0.setY(0L);
      player0.id = 1667;
      player0.getY();
      player0.getMoney();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(1039, "E", "E", 1039);
      player0.reset(true);
      byte[] byteArray0 = player0.pack();
      float float0 = Player.MOVE_DISTANCE;
      Player player1 = new Player();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.boss = (Party) player0;
      player1.prev = (Party) player0;
      player0.isJoinOK(player1, false);
      player1.isJoinOK(player0, false);
      player0.getTimeOfDeath();
      player1.pack();
      float float1 = Player.TOLERANCE;
      player0.isJoinOK(player1, true);
      assertEquals(15, player1.getId());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.setMoney(0.1F);
      Player player1 = new Player((short)4919, "", "", 0);
      player1.remove(player0);
      player0.next = (Party) player1;
      player0.reset(false);
      player0.setX((-2793.81F));
      player1.boss = null;
      player0.gangStrength();
      player0.setDead();
      player0.getName();
      player0.isJoinOK(player1, false);
      int int0 = player0.getStrength();
      assertEquals(0.1F, player0.getMoney(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(1021);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-100));
      Player player1 = new Player((-100));
      player0.setJoinOK(player1, true);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte) (-58);
      byteArray0[7] = (byte) (-58);
      player0.unpack(byteArray0);
      player1.isDead();
      Player player2 = new Player((short)4919, "&E0<;ya", "&E0<;ya", (byte)55);
      player2.setDead(0L);
      player0.setMoney(0.0F);
      player0.setX((byte) (-58));
      player0.getIP();
      player2.gangStrength();
      player1.getZ();
      player0.getZ();
      System.setCurrentTimeMillis((-1L));
      player1.isDead();
      player0.isJoinOK(player1, true);
      assertEquals((-58.0F), player0.getX(), 0.01F);
      
      boolean boolean0 = player2.isDead();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-14677));
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-102);
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte)4);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-299));
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      player1.gangStrength();
      player1.setY(10.0F);
      player0.isJoinOK(player1, false);
      player0.isConnected();
      player1.pack();
      player1.reset(true);
      player1.isJoinOK(player0, true);
      Player player2 = new Player((-4), "NHw##`;0uJ!csH", 162);
      float float0 = player1.getY();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-1336), (String) null, (String) null, (-401), (-1558));
      player0.setX((-651.0F));
      float float0 = player0.getX();
      assertEquals((-651.0F), float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-2879));
      Player player1 = new Player((-2879), "[F]`eA>588|z", (String) null, (-2452));
      Party party0 = player1.head;
      player0.remove((Party) null);
      player0.getSubparty();
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-2879", player0.toString());
      
      Player player2 = new Player((-494), "`98D#+#~m9+t", "`98D#+#~m9+t", (-1), (-2879));
      int int0 = player2.gangStrength();
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals((-2879), int0);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals((-1), player2.getPictureId());
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(4919, "modle.ModuleBrowserDialog$ModuleFilter", 4919);
      Player player1 = new Player((short)4919, (String) null, 4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      player1.toString();
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(4919, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(21236);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertTrue(player0.isConnected());
      assertEquals("Player21236", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(2228, "state.Party", (String) null, 4);
      Party party0 = player0.head;
      player0.getTimeOfDeath();
      player0.getName();
      player0.getTimeOfDeath();
      player0.getMoney();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, 0);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(281, "", "", 281, 281);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(281, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(281, player0.getStrength());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1, (String) null, "LP'UTBTewQSm", 1, 1);
      player0.pack();
      player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(1, player0.getPictureId());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      Player player1 = new Player((-1817));
      player0.setJoinOK(player1, true);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte)0;
      player1.next = (Party) player0;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte) (-58);
      player0.setMoney(2140.2922F);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1394, (byte) (-58));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      float float0 = player0.getMoney();
      assertEquals(2140.2922F, float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-10122), "(F>;MBZp", 1);
      player0.gangStrength();
      player0.pack();
      player0.setDead((long) (-10122));
      player0.setZ(0.0F);
      player0.getPictureId();
      player0.setMoney((-1506.8004F));
      assertEquals((-10122L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(1865);
      Player player1 = new Player((short)4919);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      player0.getZ();
      player0.setZ(0.0F);
      player0.setZ((-2700.456F));
      player0.reset(true);
      player0.getPictureId();
      player0.setDead((long) 0, true);
      int int0 = player0.type();
      assertEquals((-2700.456F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(4, "", "", (-437));
      player0.getPictureId();
      player0.pack();
      player0.getY();
      player0.getY();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("Mv7j!OO(]HEQ2&@+n");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-3849));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      int int0 = player0.type();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(5, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(4919, "", 1);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      Party party0 = player0.next;
      assertNull(party0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(1402, (String) null, 1498);
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(5, "", (-299));
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-299), player0.getPictureId());
      assertEquals(5, player0.getId());
      assertEquals("", player0.toString());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(21273);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setMoney((-2442.21F));
      Player player1 = new Player((short)4919, "", "", 0);
      player1.remove(player0);
      player0.next = (Party) player1;
      player0.reset(false);
      player0.setX((-1.0F));
      player0.gangStrength();
      assertEquals((-1.0F), player0.getX(), 0.01F);
      
      player1.getName();
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-1067));
      Player player1 = new Player((short)4919);
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1067", player0.toString());
      assertEquals(2, int0);
      
      Player player2 = new Player((-1067), "h,V;%DvFBnH", (short)4919);
      assertTrue(player2.isConnected());
      assertFalse(player2.isDead());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(4919, player2.getPictureId());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player0", player0.getName());
      
      Player player1 = new Player(1081, ",E[k", ",E[k", 554, 1081);
      int int0 = player1.gangStrength();
      assertEquals(1081, int0);
      assertEquals(554, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-6));
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX((-1.0F));
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(806);
      player0.getSubparty();
      player0.id = 2355;
      player0.setDead((-1365L));
      player0.setX(2355);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.getStrength();
      player0.getIP();
      player0.reset(false);
      player0.getName();
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-235), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "", (-235), 1869);
      int int0 = player0.getStrength();
      assertEquals(1869, int0);
      
      player0.reset(true);
      player0.getName();
      assertEquals("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-235), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-141));
      float float0 = player0.getMoney();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("Player-141", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(151);
      player0.setDead((long) 151, true);
      Player player1 = new Player((-2451), "4xcy*g&", 151);
      player0.getTimeOfDeath();
      player1.getTimeOfDeath();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(151L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(1025);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      Player player1 = new Player(1025);
      player0.head = (Party) player0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)55;
      player0.unpack(byteArray0);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      String string0 = player1.toString();
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player1025", string0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(14065);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(55);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-127);
      byteArray0[5] = (byte) (-61);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(Integer.MAX_VALUE);
      float float0 = player0.getX();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player2147483647", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-2879));
      player0.reset(false);
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-2879", player0.getName());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(21251);
      float float0 = player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player21251", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(21250);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-2879));
      player0.setDead((-1762L));
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[3] = object0;
      Player player1 = new Player(1830);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-1762L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(21250);
      boolean boolean0 = false;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-9);
      player0.setDead();
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte)1;
      player0.setDead((long) (byte) (-1), false);
      byteArray0[5] = (byte)93;
      byteArray0[6] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pushbackInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(Throwable e) {
         //
         // invalid stream header: FF98F724
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }
}
