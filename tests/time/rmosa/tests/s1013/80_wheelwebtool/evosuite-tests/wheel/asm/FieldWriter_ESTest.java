/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 02:11:21 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      classWriter0.visit(54, 49, "", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "", "", (Object) null);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 16, "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte) (-93);
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(127);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(49, 54, "", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "Nuv?", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      classWriter0.visit(54, 49, "", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "", "", (Object) null);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "A#S}oZ41$`p=", "f:w;y_4", "FtvSCVJ", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter1.getSize();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte) (-8);
      byteArray0[5] = (byte) (-39);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-4);
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("Deprecated", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Z";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      classWriter0.visit(49, 49, "", "Z", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "Z", "<OkG", "Z", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      classWriter0.index = (-32768);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-32768), "`vzNi>eO@^w?Bu^\"", "UN}", "FKzP8ArL3+j>5PK$f", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      classWriter0.index = (-993);
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 256, "", "", "", "");
      fieldWriter0.getSize();
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-989));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "F";
      stringArray0[1] = "The FileFilter must not be null";
      classWriter0.visit(256, 1183, "\"Oro Ew|", "F", "org.apache.commons.io.filefilter.SizeFileFilter", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2205), "org.apache.commons.io.filefilter.SizeFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "\"Oro Ew|", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(181);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 181, "#o8ak2{O[", "#o8ak2{O[", "#o8ak2{O[", "#o8ak2{O[");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("#o8ak2{O[", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(280);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "p3<5e6/vTfaeO", "p3<5e6/vTfaeO", "p3<5e6/vTfaeO", "Lb9`1)QCha8");
      fieldWriter0.visitAnnotation("Lb9`1)QCha8", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F", "F", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("F", true);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-161));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-161), "F", "F", "F", "F");
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling.shouldAllThrowIOExceptions();
      fieldWriter0.visitAnnotation("Q['(JW9Izzuqk=u", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 257, "", "", "", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(241);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 241, "", "B$/[", "B$/[", "B$/[");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F", "F", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(181);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 181, "NO.HD#vp0|`(m'}jo", "NO.HD#vp0|`(m'}jo", "NO.HD#vp0|`(m'}jo", "NO.HD#vp0|`(m'}jo");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[0];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F", "F", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-820), "Lb9`1)QCha8", "", "", (Object) null);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11(256, 28);
      ByteVector byteVector2 = byteVector1.putUTF8("ConstantValue");
      ByteVector byteVector3 = byteVector2.putLong((-820));
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector3);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(284);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 284, "", "", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 257, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(108);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 108, "Tm^i@", "Tm^i@", (String) null, classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 256, "", "", "", (Object) null);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "", "", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2456));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2456), "#oakP2O[", "#oakP2O[", "#oakP2O[", "#oakP2O[");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = classWriter0.pool;
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "Db@;E_Rl0]z", "Db@;E_Rl0]z", "Db@;E_Rl0]z", "Db@;E_Rl0]z");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 256, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(288);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 288, "|Q.#9(r1<:{3/lU:)c", "|Q.#9(r1<:{3/lU:)c", "|Q.#9(r1<:{3/lU:)c", "|Q.#9(r1<:{3/lU:)c");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-30), "<$j ]3\"onZ", "<$j ]3\"onZ", "<$j ]3\"onZ", "<$j ]3\"onZ");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1547));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "Synthetic", "org.apache.commons.io.filefilter.SuffixFileFilter", "G @.%80K", "org.apache.commons.io.filefilter.SuffixFileFilter");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-3021), (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
