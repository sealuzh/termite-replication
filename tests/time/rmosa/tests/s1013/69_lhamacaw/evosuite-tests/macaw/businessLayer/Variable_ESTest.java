/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 02:12:20 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.saveChanges.valueChanged");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setName("#");
      rawVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable2.getOntologyTerms();
      derivedVariable2.getSupportingDocuments();
      assertEquals("#", derivedVariable2.getName());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      user0.clone();
      valueLabel0.setLabel("EMPTY_LIST_CHOICE");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.setIdentifier(157);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.iterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace(")?'d");
      ontologyTerm0.setIdentifier((-88));
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setOntologyName(")?'d");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setIdentifier((-88));
      derivedVariable0.setName("Unknown");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      derivedVariable1.getSupportingDocuments();
      derivedVariable0.getForm();
      assertEquals("Unknown", derivedVariable0.getName());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("Unknown");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.715116426371958
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("8HCx=?L-QTIt*Ba6{hA");
      rawVariable0.setColumnStart("Uf^<");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      rawVariable0.setAlias("Uf^<");
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setIdentifier(801);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(rawVariable1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setName("FQ>h");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getColumnStart();
      rawVariable0.getColumnEnd();
      rawVariable0.getSupportingDocuments();
      User user0 = new User();
      user0.setEmail("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User.checkValidUserIDField("variable.cleaningDescription.label");
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      // Undeclared exception!
      try { 
        unaryOperator0.andThen((Function<? super Variable, ? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=4.210123790842242
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = ".";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setLabel("c");
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-3654));
      rawVariable0.setCleaningDescription(".");
      ontologyTerm0.setNewRecord(true);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis((-1967L));
      Variable.validateFields(rawVariable0);
      rawVariable0.isNewRecord();
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      derivedVariable0.removeSourceVariable(rawVariable1);
      derivedVariable0.getCodeBookNumber();
      User user0 = new User("ap5.)bf89$dx{\"8Sw", "gm7tekzrkqt4m.fzDw");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(".", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2652);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.setColumnStart((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory((String) null);
      arrayList1.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
      
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isCoded());
      assertNull(string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.8264573837384224
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("nASCc~%Fp\tva!G);");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("QSe,Q^V/R;");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      arrayList0.clone();
      arrayList0.add(ontologyTerm0);
      rawVariable0.form = "nASCc~%Fp\tva!G);";
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setForm("Qv.8.sOOUq_a");
      rawVariable0.getCategory();
      System.setCurrentTimeMillis(168L);
      rawVariable0.setColumnStart("macaw.businessLayer.OntologyTerm");
      rawVariable0.createVariableSummary();
      rawVariable0.setQuestionNumber("macaw.businessLayer.OntologyTerm");
      rawVariable0.getForm();
      rawVariable0.getColumnEnd();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      derivedVariable0.questionNumber = "Qv.8.sOOUq_a";
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.clone();
      rawVariable0.getCategory();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("macaw.businessLayer.OntologyTerm", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("(|$u9R3[UW%DC2,ti=");
      ontologyTerm0.setIdentifier(3260);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setIdentifier(3260);
      derivedVariable0.setName("(|$u9R3[UW%DC2,ti=");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getForm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      assertEquals("(|$u9R3[UW%DC2,ti=", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = null;
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setName((String) null);
      rawVariable0.questionNumber = null;
      user0.setAddressLine2((String) null);
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.927658090561096
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("ht|HB:o.$TbB");
      derivedVariable0.setIsNewRecord(true);
      String string0 = "variable.codeBookNumber.label";
      derivedVariable0.setColumnEnd("variable.codeBookNumber.label");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getLabel();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList2 = rawVariable0.getValueLabels();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "variable.codeBookNumber.label";
      stringArray0[1] = "";
      stringArray0[2] = "ht|HB:o.$TbB";
      stringArray0[3] = "ht|HB:o.$TbB";
      stringArray0[4] = "ht|HB:o.$TbB";
      stringArray0[5] = ".4r^+/74ax0n1G4@4(";
      stringArray0[6] = "";
      arrayList2.toArray(stringArray0);
      rawVariable0.setValueLabels(arrayList2);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setOntologyTerms(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      User user0 = new User();
      user0.setCounty((String) null);
      User user1 = new User();
      user1.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("PBa[HKV_%X+q5");
      User user2 = new User((String) null, "variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      int int0 = rawVariable0.getIdentifier();
      assertEquals("PBa[HKV_%X+q5", rawVariable0.getAlias());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.929854973080188
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      rawVariable0.getCategory();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("Unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("Unknown");
      valueLabel0.setIdentifier(1353);
      derivedVariable0.columnEnd = "O[qYW!8K;L2r+o~D";
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getAvailability();
      derivedVariable0.addSourceVariable(rawVariable1);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      rawVariable1.setValueLabels(arrayList1);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getValueLabels();
      derivedVariable0.createVariableSummary();
      rawVariable1.getQuestionNumber();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.8608023234929654
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("");
      derivedVariable0.setCategory("");
      derivedVariable0.columnEnd = "variable.form.label";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.getColumnEnd();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setLabel("_}");
      valueLabel0.clone();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.setCleaningDescription("");
      derivedVariable0.clone();
      rawVariable0.setCategory("");
      rawVariable0.getCategory();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8257110036816973
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("LIST_CHOICE");
      derivedVariable0.setAlias("]`2|^x!vqspn@UG");
      derivedVariable0.setQuestionNumber("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE");
      derivedVariable0.questionNumber = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE";
      derivedVariable0.getIdentifier();
      derivedVariable0.codeBookNumber = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      linkedList0.add(ontologyTerm0);
      ontologyTerm0.setOntologyName("d#u%C[lVIKSLX3{W");
      linkedList0.push(ontologyTerm0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      arrayList0.addAll(0, (Collection<? extends OntologyTerm>) linkedList0);
      arrayList0.clone();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getQuestionNumber();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList2);
      rawVariable0.getIdentifier();
      rawVariable0.getCategory();
      assertEquals("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.539259279828685
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("UNABLE_TO_GET_NTOLOGY_TERM_IDENTIFIE)");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.columnEnd = "FoPWGHQG~(\"_kBDLqM(";
      rawVariable1.setLabel("DUPLICATE_SOURCE_VARIABLE_EXISTS");
      User user0 = new User("UNABLE_TO_GET_NTOLOGY_TERM_IDENTIFIE)", "DUPLICATE_SOURCE_VARIABLE_EXISTS");
      user0.setAddressLine2("DUPLICATE_SOURCE_VARIABLE_EXISTS");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = rawVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("FoPWGHQG~(\"_kBDLqM(", rawVariable0.getColumnEnd());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5864552973950117
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("Eowb>a7", "R^5Nfn9H/f9{<Y9a");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setCity("Eowb>a7");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("fO(LzH%G_!pK7(Y2M}");
      user0.setPostCode("fO(LzH%G_!pK7(Y2M}");
      user0.setCounty("R^5Nfn9H/f9{<Y9a");
      derivedVariable0.setCategory("Eowb>a7");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("Eowb>a7", derivedVariable0.getCategory());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSourceVariables();
      User user1 = new User("Eowb>a7", "Eowb>a7");
      derivedVariable2.getAlias();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable2);
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      User user0 = new User("Eowb>a7", "R^5Nfn9H/f9{<Y9a");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setCity("Eowb>a7");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setCounty("R^5Nfn9H/f9{<Y9a");
      derivedVariable0.setCategory((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(169);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setCleaningDescription(";,0BtYB95ZY)r/SjE");
      derivedVariable0.getQuestionNumber();
      arrayList0.stream();
      derivedVariable0.getDisplayItemIdentifier();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable0);
      arrayList1.containsAll(arrayList0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getIdentifier();
      derivedVariable0.isNewRecord();
      derivedVariable0.getCategory();
      assertEquals(";,0BtYB95ZY)r/SjE", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("c");
      rawVariable1.setYear("c");
      rawVariable1.columnStart = "wmH~sm})>-f=+aROm";
      User user0 = new User((String) null, "ariadeyer.label");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("wmH~sm})>-f=+aROm", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.5395719426739167
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("c");
      rawVariable1.setYear("c");
      rawVariable1.columnStart = null;
      User user0 = new User((String) null, "ariale.yer.label");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("c", rawVariable1.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      User user1 = new User("c", "c");
      Variable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.539259279828685
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.notes = "user.status.label";
      User user0 = new User();
      user0.setLastName("user.status.label");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setYear("user.status.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCategory();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getCleaningStatus();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription((String) null);
      rawVariable0.getColumnEnd();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.getFilePath();
      String string0 = rawVariable0.getCleaningDescription();
      assertNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4390626350804188
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      rawVariable0.setYear("variable.year.label");
      User user1 = new User((String) null, "");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user2 = new User("wv$?Kpt<", "variable.year.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      assertEquals("variable.year.label", rawVariable0.getYear());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier(4);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User("UNABLE_TO_CHECK_DOCUMENT_DUPLICATES", "variable.name.label");
      assertEquals("variable.name.label", user0.getPassword());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("LIST_CHOICE");
      rawVariable0.columnEnd = "LIST_CHOICE";
      rawVariable0.setYear("LIST_CHOICE");
      User user1 = new User("variable.cleaningDescription.label", "variable.alias.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("LIST_CHOICE", rawVariable0.getYear());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      User user2 = new User((String) null, "kr)2{Cs,!wR_x|J");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable1);
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "d7:zQo[vT%;ED}`]G";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("c");
      User user0 = new User();
      rawVariable1.codeBookNumber = "ontologyTerm.term.label";
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("ontologyTerm.term.label", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getNotes());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.747084611161251
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("c");
      rawVariable1.setYear("c");
      User user0 = new User((String) null, "ariale.yer.label");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("c", rawVariable1.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      User user1 = new User("c", "c");
      Variable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.clone();
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      boolean boolean0 = rawVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setColumnStart(">=#?NI7,m& !");
      rawVariable0.setAvailability("DUPLICATE_CLEANING_STATE");
      rawVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getColumnEnd();
      rawVariable0.getForm();
      assertEquals(">=#?NI7,m& !", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.User");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getColumnStart();
      assertEquals("macaw.businessLayer.User", derivedVariable0.getForm());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.539259279828685
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      String string0 = "2u";
      rawVariable1.setLabel("2u");
      rawVariable2.setAvailability("variable.year.label");
      String string1 = null;
      User user0 = new User("2u", "variable.year.label");
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getQuestionNumber();
      RawVariable rawVariable4 = new RawVariable();
      try { 
        User.checkValidUserIDField("2u");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"2u\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.0574866708943733
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.codeBookNumber = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel(">X6\"SBAYiet6");
      User user0 = new User((String) null, ">X6\"SBAYiet6");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "Mj4qi#W[=m5r@Nyh;";
      rawVariable0.columnEnd = "=message==";
      rawVariable0.codeBookNumber = "l";
      String string0 = rawVariable0.getForm();
      assertEquals("", string0);
      
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
      
      String string1 = rawVariable0.getCategory();
      assertEquals("Unknown", string1);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("FJAmVQeU3X+l1O");
      derivedVariable0.form = "variable.category.label";
      derivedVariable0.setColumnEnd("Bow]mD?1TP");
      derivedVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user1 = new User("UNABLE_TO_GET_VALUE_LABELS", "/h;-K*ZmP5?;j]NKp");
      boolean boolean0 = rawVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1478140668098065
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setName("variable.isCoded.label");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.setCoded(true);
      User user0 = new User("yl=aRn\"D=+", "variable.cleaningStatus.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCoded());
      
      Variable.validateFields(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      rawVariable0.questionNumber = "-";
      User user0 = new User("NON_EXISTENT_CLEANING_STATE", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertEquals("", rawVariable0.getYear());
      
      rawVariable2.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(3403);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      Variable.validateFields(rawVariable0);
      assertEquals("c", rawVariable0.getDisplayName());
      assertEquals("c", rawVariable0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("variable.cleaningDescription.label", "variable.columnEnd.label");
      user0.setEmail("variable.columnEnd.label");
      rawVariable1.setName("UNABLE_TO_DELETE_DERIVED_VARIABLE");
      rawVariable0.setLabel("Unknown");
      rawVariable0.setYear("`@+.");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable1.getCategory();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCoded(true);
      rawVariable1.getName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User("variable.name.label", "variable.name.label");
      assertEquals("variable.name.label", user0.getUserID());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.8612717336009297
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier((-2474));
      User user0 = new User();
      user0.setAddressLine1("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(false);
      rawVariable0.createVariableSummary();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.createVariableSummary();
      rawVariable0.getYear();
      rawVariable0.getAlternativeVariable();
      assertEquals((-2474), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.setIdentifier((-124));
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      assertEquals((-124), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Object object0 = new Object();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("bIY%v ");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      assertEquals("bIY%v ", rawVariable0.getColumnStart());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5066794971566395
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("c");
      rawVariable0.setYear((String) null);
      User user0 = new User((String) null, "ariale.yer.label");
      user0.setStatus((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      supportingDocument0.clone();
      derivedVariable0.columnEnd = "UNABLE_TO_DELETE_DERIVED_VARIABLE";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getName());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("QlMPT!b>_AkM`\"#;D");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier(165);
      rawVariable1.getYear();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      supportingDocument0.clone();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.createVariableSummary();
      rawVariable0.getAvailability();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      user0.setAddressLine2((String) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      supportingDocument0.setDocumentCode("general.fieldValue.blank");
      rawVariable0.columnEnd = "+bWAm&owf]0";
      supportingDocument0.setDocumentCode("#w");
      rawVariable0.setAlternativeVariable(rawVariable1);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.getValueLabels();
      String string0 = rawVariable0.getColumnStart();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("c");
      rawVariable0.setYear((String) null);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("c", rawVariable0.getLabel());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.4892387670604843
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("PO&U?G '~|c.Atc");
      String string0 = ">,a3>";
      User user0 = new User(">,a3>", ">,a3>");
      rawVariable0.setCleaned(false);
      user0.setIdentifier((-2177));
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User.detectFieldChanges(user0, user0, user0);
      user0.setStatus(">,a3>");
      try { 
        User.checkValidEmail("UNABLE_TO_DELETE_RAW_VARIABLE");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"UNABLE_TO_DELETE_RAW_VARIABLE\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.3838782514026584
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("variable.label.label", "variable.label.label");
      user0.setPassword("variable.label.label");
      User.detectFieldChanges(user0, user0, user0);
      user0.setEmail("variable.label.label");
      user0.setPostCode("variable.label.label");
      rawVariable0.form = "variable.label.label";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      String string0 = "jF1u";
      valueLabel0.setValue((String) null);
      valueLabel0.getDisplayName();
      valueLabel0.setIdentifier((-2516));
      derivedVariable0.setName("jF1u");
      derivedVariable0.setColumnStart("jF1u");
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("YLgO#dltj,UWr");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getCategory();
      derivedVariable0.getFilePath();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.getQuestionNumber();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        User.checkValidEmail("Unknown");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"Unknown\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.getAlias();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getColumnStart();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.1958550791509905
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.questionNumber = "nwB?K~Ml";
      Variable.validateFields(rawVariable0);
      rawVariable0.getCategory();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getForm();
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      derivedVariable0.getValueLabels();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.setNotes("nwB?K~Ml");
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getName();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      unaryOperator0.apply(ontologyTerm0);
      arrayList1.replaceAll(unaryOperator0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.getValueLabels();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList2);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("nwB?K~Ml", derivedVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Unknown");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.questionNumber = "Unknown";
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.removeOntologyTerms(arrayList1);
      arrayList0.removeIf(predicate0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getAvailability();
      derivedVariable0.getAvailability();
      String string1 = derivedVariable0.getColumnStart();
      assertEquals("", string1);
      
      System.setCurrentTimeMillis((-3310L));
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.questionNumber = null;
      String string0 = rawVariable0.getYear();
      assertNotNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("c");
      rawVariable1.setYear("c");
      User user0 = new User((String) null, "ariale.yer.label");
      rawVariable1.questionNumber = "Q[OoR!Zw2i\u0000";
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable1.createVariableSummary();
      assertEquals("c", rawVariable1.getYear());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=4.211407564539809
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      User user0 = new User();
      derivedVariable0.setCleaningStatus("{.O%nD~[`iX|D");
      user0.setAffiliation("{.O%nD~[`iX|D");
      String string0 = "variable.cleaningDescription.label";
      user0.setPassword("variable.cleaningDescription.label");
      derivedVariable1.questionNumber = "variable.cleaningDescription.label";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.clone();
      derivedVariable0.isCoded();
      User user1 = new User();
      try { 
        User.checkValidEmail("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument0, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      rawVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable0.setNotes("!+:,Q6m:y;K?K");
      rawVariable0.notes = "SfQ.tPC9e[83ASG=k";
      rawVariable0.getFilePath();
      ontologyTerm0.clone();
      rawVariable0.getValueLabels();
      ontologyTerm0.setOntologyName("SfQ.tPC9e[83ASG=k");
      rawVariable0.getForm();
      rawVariable0.getCategory();
      rawVariable0.getOntologyTerms();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "Q3yt(t|evN/;H[{";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getCategory();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.2641141459685947
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setAlias((String) null);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.columnStart = "UNABLE_TO_CREATE_DERIVED_VARIABLE";
      derivedVariable0.getIdentifier();
      derivedVariable0.isNewRecord();
      User user0 = new User("variable.alias.label", "UNABLE_TO_CREATE_DERIVED_VARIABLE");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.setLabel("INVALID_ADMINISTRATOR");
      User user0 = new User("d+$O>MX?T|vBHYH<C,-", (String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      derivedVariable0.setNotes("c%Nww4/ M0");
      derivedVariable0.getLabel();
      assertEquals("c%Nww4/ M0", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("t-L0YLNp~0}Y`xu2j");
      assertEquals("t-L0YLNp~0}Y`xu2j", derivedVariable0.getCodeBookNumber());
      
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.notes = "blank";
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.8609667160624213
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1));
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable1.setCategory("");
      derivedVariable1.setAlias("");
      derivedVariable1.getYear();
      derivedVariable1.createVariableSummary();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable1.removeSupportingDocument((SupportingDocument) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCodeBookNumber("");
      derivedVariable0.getAlternativeVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.clone();
      arrayList0.add(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      derivedVariable0.setCleaned(false);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.995412454458509
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getAvailability();
      derivedVariable0.getNotes();
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getTerm());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.626722286104588
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.setColumnStart((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      String string0 = rawVariable0.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "+Cbvn.fV";
      rawVariable0.setName("5");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      assertEquals("5", rawVariable0.getName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("+8!?L=|$f^4U!`vr");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail((String) null);
      rawVariable0.setName("c");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setCleaningDescription("c");
      rawVariable1.setCoded(true);
      rawVariable0.getCleaningDescription();
      assertEquals("c", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("variable.columUStart.label", "iPXgta6);E 8f`%oXh~");
      assertEquals("0", user0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.iterator();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("`@+.");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      derivedVariable0.addSourceVariables(arrayList1);
      User user0 = new User("NON_EXISTENT_CLEANING_STATE", "Y");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      assertFalse(derivedVariable1.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("KZQ");
      derivedVariable0.getQuestionNumber();
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getColumnStart();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add((SupportingDocument) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("c");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel((String) null);
      // Undeclared exception!
      try { 
        rawVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.5575292584210354
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.listIterator();
      arrayList0.parallelStream();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "variable.cleaningDescription.label";
      String string1 = "2c0&.7TK2k>`";
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      user0.setAddressLine2((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.notes = "user.status.label";
      rawVariable0.setYear("user.status.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      assertEquals("user.status.label", rawVariable0.getYear());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.557969937643789
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.parallelStream();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("_)`UFA`faZ");
      rawVariable0.setCodeBookNumber("_)`UFA`faZ");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_)`UFA`faZ";
      stringArray0[1] = ",j[1GEnzKFH+$";
      stringArray0[2] = "_)`UFA`faZ";
      stringArray0[3] = "_)`UFA`faZ";
      stringArray0[4] = "_)`UFA`faZ";
      stringArray0[4] = "_)`UFA`faZ";
      stringArray0[6] = "_)`UFA`faZ";
      stringArray0[7] = "_)`UFA`faZ";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes("_)`UFA`faZ");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getNotes();
      rawVariable0.getFilePath();
      assertEquals("_)`UFA`faZ", rawVariable0.getNotes());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("UNABLE_TO_CREATE_DATABASE");
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument0, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("s=g,:");
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument0, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("UNABLE_TO_GET_CATEGORY");
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument0, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("t-L0YLNp~0}Y`xu2j");
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument0, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5");
      rawVariable0.clone();
      assertEquals("5", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "~";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.523299650329738
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setCounty((String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.parallelStream();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("u|>+9po <q%DGuRs");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("u|>+9po <q%DGuRs", derivedVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.columnEnd = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = " h";
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertTrue(derivedVariable0.isNewRecord());
      
      derivedVariable1.getColumnEnd();
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setColumnEnd("-FkF");
      ontologyTerm0.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("");
      ontologyTerm0.setNameSpace("PQ4+?BLL\"*c~-0T\"0^");
      String string0 = "variable.form.label";
      ontologyTerm0.clone();
      derivedVariable0.setCategory("");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("variable.notes.label");
      rawVariable0.setLabel((String) null);
      assertEquals("variable.notes.label", rawVariable0.getCategory());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = null;
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      User user0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "\"H/Dr}:]a+}$>";
      derivedVariable0.setNotes("\"H/Dr}:]a+}$>");
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = rawVariable0.getNotes();
      assertFalse(rawVariable0.isNewRecord());
      assertNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.setCoded(false);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      String string0 = derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("variable.cleaningDescription.label");
      rawVariable0.getCleaningDescription();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "";
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("szABzLnu>Xe1_");
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setNotes("NON_EXISTENT_VALUE_LABELS");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.getFilePath();
      rawVariable0.getYear();
      assertEquals("NON_EXISTENT_VALUE_LABELS", rawVariable0.getNotes());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }
}
