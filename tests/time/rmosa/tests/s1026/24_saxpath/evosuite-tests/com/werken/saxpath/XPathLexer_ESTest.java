/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 12:32:09 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.798520052343639
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W_}Ad>9ecpmS}w");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("W", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("W_}Ad>9ecpmS}w");
      xPathLexer1.setXPath("<:+P/rBi#2&T(F");
      xPathLexer1.consume();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals("+", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals("P/", token4.getTokenText());
      assertEquals(12, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.97915952335122
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("< !__x_9|7");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(")");
      xPathLexer0.whitespace();
      xPathLexer0.consume((-206));
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7991368171319766
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",{ k?*M,yxre(WU},");
      XPathLexer xPathLexer1 = new XPathLexer(",{ k?*M,yxre(WU},");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer1.dots();
      assertEquals("{", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      assertNotNull(token2);
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer1.div();
      xPathLexer1.currentPosition();
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("{", token5.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.136466656040129
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-");
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      int int0 = (-1877);
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-1877));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.894245637761874
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?X>2w&");
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.consume((-809));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ch`]6M&c=P|");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1069345519488334
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<U@rQ>iR@M9mRa=va");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("U", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7986480851200297
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6O}");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4375679522036136
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xjCd><gg6n</N");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("j", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("C", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("d", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(9, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6901823238150926
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s/o");
      Token token0 = xPathLexer0.star();
      assertEquals("s", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.or();
      assertNull(token2);
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.693520873632516
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">E.;");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("RI;'dS\"GNMY6b8#~<");
      Token token2 = xPathLexer2.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer2.div();
      xPathLexer1.currentPosition();
      XPathLexer xPathLexer3 = new XPathLexer("6W_QP'");
      Token token3 = xPathLexer3.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("6", token3.getTokenText());
      
      xPathLexer2.and();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.690731070842713
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.consume((-910));
      int int0 = (-1);
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.205091621220553
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.consume((-1880));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.799879888210559
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7Was0Q,K%m[w-Im");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Was0Q,K%m[w-Im", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("W", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("as", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("v", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("$", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5765175650716485
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W_}Ad>9ecpmS}w");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("W_", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("d>9ecpmS}w", token2.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5236872457080355
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("loVS");
      Token token0 = xPathLexer0.star();
      assertEquals("l", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("VS", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath(":+P/rBi#2^T(F");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(18, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("+", token5.getTokenText());
      
      xPathLexer0.colon();
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7978231882321407
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.consume((-599));
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2r9");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<U@rQ>iR@M9mRa=va");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("r", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Q", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1955));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4034939893255998
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xjCd><gg6n</N");
      Token token0 = xPathLexer0.at();
      assertEquals("x", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Cd", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(9, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*=%");
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@p;M$Z-Vql(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8690626659713363
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W_}Ad>9ecpmS}w");
      xPathLexer0.slashes();
      xPathLexer0.or();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("_}", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("A", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.setXPath(":+P/rBi#2^T(F");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(12, token4.getTokenType());
      assertEquals("P/", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("r", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("Bi", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals("#", token7.getTokenText());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("2", token8.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9KSX@]X");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9oeT?(='vSL.gVpldh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.694492336899061
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M`Xi");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.div();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.star();
      assertEquals("i", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/G)lx3o");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("G", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.692637421372917
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("vY:mSsw");
      Token token0 = xPathLexer1.colon();
      assertEquals("v", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer1.mod();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Y", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.894245637761874
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":y2ZaQ+cV1V");
      XPathLexer xPathLexer1 = new XPathLexer(",'X+ZEd");
      Token token0 = xPathLexer1.notEquals();
      assertEquals(",'", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(",'X+ZEd");
      xPathLexer2.and();
      Token token1 = xPathLexer2.doubleColon();
      xPathLexer2.setPreviousToken(token1);
      assertEquals(",'", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals("X", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer2.operatorName();
      Token token3 = xPathLexer1.comma();
      assertEquals("X", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3 t5SB$^'ZCS(o7;");
      xPathLexer0.and();
      xPathLexer0.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.690731070842713
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath("[ (");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">E.;");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6899782005246253
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      assertNotNull(token1);
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("|", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.798881389290342
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lT|l}s}");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fT|lF}");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.576551368269431
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lT|l}s}");
      Token token0 = xPathLexer0.literal();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fGd/t#$'uC|iG:");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Gd", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.376338589793645
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i#_N%V(FIvB=T8g}2");
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("i#", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("_N", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("%", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("< !__x_9|7");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-850));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g|>7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("g", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":{$p trWCA");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("I>!3");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("I", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.282325506963904
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{}");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5595896983989401
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("< !__x_9|7");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("< ", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("_", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("_", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("x_9|7", token4.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.594752334430096
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2v_5{m`%Clu");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("2v", token0.getTokenText());
      
      xPathLexer0.comma();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("{", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("`%Clu", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("`%", token5.getTokenText());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("C", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.893390768293866
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k']~kejh#,YeIjgFL");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("k'", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(4, token1.getTokenType());
      assertEquals("]", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("~", token2.getTokenText());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("kejh#,YeIjgFL", token3.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ki@'@~l?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ki", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.889123342973809
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bp]");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("bp", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("]", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ugI/66S|n~Soh");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("ugI", token0.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.3123411546114796
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lT|l}s}");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("l", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("T", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q-<");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("q-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*=%");
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2R#K]^?:j7Gzb@>67:");
      Token token0 = xPathLexer0.star();
      assertEquals("2", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.694832232838612
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R.J3\ni]A1");
      xPathLexer0.identifier();
      xPathLexer0.and();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("\n", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f`S]$[sgZ EaBtUh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("`", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.2761420902242704
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i#_N%V(FIvB=T8g}2");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("i", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("#", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0(y9z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("(", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+_kU($lP_(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8030637932911633
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2r9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dots();
      assertEquals("r", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QZ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("QZ", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-1039));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.4112702390068876
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pp$;-6*<&e&IJ7(<Zx^");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Pp", token0.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("Pp$;-6*<&e&IJ7(<Zx^");
      Token token1 = xPathLexer1.equals();
      assertEquals("P", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("p", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^1z<XYld0 7*E\"");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("^", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4377134277438377
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^1z<XYld0 7*E\"");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3432382158769902
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lT|l}}");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("T", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(17, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.3380897810178738
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("A", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O.jQ*");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("O.", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("jQ", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(28);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-?(s>-3?,!;Atm}sV");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?(s>-3?,!;Atm}sV", token1.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.690895463412169
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SO");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m;Tb5Ap#!k8%J`=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("m", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(4);
      assertEquals('5', char0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Fu");
      XPathLexer xPathLexer1 = new XPathLexer("2nhS");
      XPathLexer xPathLexer2 = new XPathLexer("Q'X*");
      xPathLexer0.nextToken();
      xPathLexer1.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.4423130267531548
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"U:uP5x");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K_[Ej2Fn~C\"# MP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("K_", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("[", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5999423669221788
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.3166953120368867
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7Was0Q,K%m[w-Im");
      xPathLexer0.and();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("7W", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("as0Q", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.6030332707083954
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*=%");
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4566178815905704
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("loVS");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("oVS", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath(":+P/rBi#2^T(F");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("+", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bCv|^8n6S:].PDx)@'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("bCv", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.576040181135618
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3 t5SB$^'ZCS(oY;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("t", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("SB$^'ZCS(oY;", token2.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4090344073747307
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i#_N%V(FIvB=T8g}2");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("i", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#_N%V(FIvB=T8g}2", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("_", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.687609653404609
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":{$p trWCA");
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6903752622677266
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-?(s>-3?,!;Atm}sV");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.2663702973463185
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">E.;");
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.655054395076974
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3 t5SB$^'ZCS(oY;");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("t", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.435094628763574
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xjCd><gg6n</N");
      xPathLexer0.setXPath(") (");
      Token token0 = xPathLexer0.at();
      assertEquals(")", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.187323606944052
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^1z<XYld0 7*E\"");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("^1", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("z", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(" ", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
      
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("XYld0", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.2244536394509102
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">E.;");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("E", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(".", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(";", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.691477450899438
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.mod();
      xPathLexer1.dots();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0646616945352338
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<U@rQ>iR@M9mRa=va");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.849289915694787
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("w", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.594697505359723
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2v_5{m`%Clu");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("2v", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("_5", token1.getTokenText());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.pipe();
      assertEquals("m", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("`", token3.getTokenText());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("%Clu", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("%", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("Cl", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("u", token7.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.859342663007268
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      xPathLexer1.dots();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P~wD0$pz$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("P", token0.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.693159536685813
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i#_N%V(FIvB=T8g}2");
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8qAot^pPWsCW:Ctnv?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("8", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.2838229612915466
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3 t5SB$^'ZCS(o7;");
      xPathLexer0.and();
      xPathLexer0.setXPath("3 t5SB$^'ZCS(o7;");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.222021242221692
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lT|l}s}");
      Token token0 = xPathLexer0.literal();
      assertNotNull(token0);
      
      String string0 = token0.toString();
      assertEquals("[ (27) (T|)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.mod();
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.div();
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y`vqOWVuz");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aL(oqaQI_&ES}QX98");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.3768543860541222
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lBDS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lBDS", token0.getTokenText());
      
      xPathLexer0.setXPath("Y(,");
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Y(", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(",", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3861776947018851
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=:SZf$\"&QI<9 p");
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.350172810045627
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^1z<XYld0 7*E\"");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">E.;");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("E.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.816805824348909
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W_}Ad>9ecpmS}w");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1409));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.7025838824983206
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3 t5SB$^'ZCS(o7;");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VpW#q{xICBu0N");
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.isIdentifierStartChar('U');
      xPathLexer0.minus();
      xPathLexer0.isIdentifierChar('a');
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.getXPath();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.289310610562228
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W_}Ad>9ecpmS}w");
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("W_}Ad>9ecpmS}w");
      xPathLexer1.not();
      xPathLexer1.setXPath("<:+P/rBi#2&T(F");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.205019898071907
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CP|m");
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      xPathLexer0.consume((-1292));
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A-'Xtl");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("A-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.339689098642354
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lBDS");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("lB", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("DS", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.and();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.getXPath();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":{$p trWCA");
      xPathLexer0.div();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.688970197622296
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":{$p trWCA");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.469993410275285
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+1L3C<rvZ%RYl%");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("+1", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("L3C", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.comma();
      assertEquals("<", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.6594707744207158
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3 t5SB$^'ZCS(oY;");
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.consume((-527));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fs$?HG%%,'");
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2335));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1683456993496524
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3 t5SB$^'ZCS(oY;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(4);
      assertEquals('B', char0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.527146266836195
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("< !__x_9|7");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("< ", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("_", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      char char0 = xPathLexer0.LA(1563);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.consume((-1160));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.409460120444122
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i#_N%V(FIvB=T8g}2");
      xPathLexer0.or();
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.consume(1567);
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5037358439213397
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yGlzHA)C^<wR]Az7JR`");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.isIdentifierStartChar('=');
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lT|l}s}");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume(1571);
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.0431864377658595
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<U@rQ>iR@M9mRa=va");
      xPathLexer0.consume((-2878));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.5441284479841146
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.4088781329568527
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lBDS");
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VpW#q{xICBu0N");
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.isIdentifierChar('+');
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.setXPath("VpW#q{xICBu0N");
      assertEquals("VpW#q{xICBu0N", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.7489716973052996
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^1z<XYld0 7*E\"");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.endPosition();
      xPathLexer0.getPreviousToken();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.36109381493445
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x&p!9lKdV6^kcs");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&p!9lKdV6^kcs", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(23, token4.getTokenType());
      assertEquals("!", token4.getTokenText());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1753679688472238
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">E.;");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("E", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(".", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('b');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0993598939043714
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R.J3\ni]A1");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("R", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("J3", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("\n", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.9790704059864788
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("!F", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.2594861414458824
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W_}Ad>9ecpmS}w");
      Token token0 = xPathLexer0.slashes();
      assertEquals("W", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("_}", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("A", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath(":+P/rBi#2^T(F");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(12, token5.getTokenType());
      assertEquals("P/", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("rBi", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals("#", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.1003833917081156
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R.J3\ni]A1");
      xPathLexer0.and();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("R", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("J3", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("i]A1", token3.getTokenText());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer0.comma();
      assertEquals("]", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.0236941667411839
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R.J3\ni]A1");
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("J3", token1.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.1350488464443198
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">E.;");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("E", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(".", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lT|l}s}");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.9403747953356474
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.number();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.0663032016582603
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.98061779476791
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.0258638046791582
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F");
      Token token0 = xPathLexer0.pipe();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("F", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.9820163961665116
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F");
      Token token0 = xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.9842141983643137
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!F");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.0993598939043714
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R.J3\ni]A1");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("J3", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("\n", token3.getTokenText());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.2455854032791782
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3 t5SB$^'ZCS(oY;");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("t5SB", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.8853811638533182
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^1z<XYld0 7*E\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^1z<XYld0 7*E\"", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }
}
