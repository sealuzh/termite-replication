/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 12:51:24 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.975635158878412
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("[");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("fc7{\"g>DuP*!4VZ]", stringWriter0);
      simpleNode0.toString();
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      StringWriter stringWriter0 = new StringWriter();
      SystemInUtil.addInputLine("<%");
      simpleNode0.setIdentifier("<%");
      StringWriter stringWriter1 = new StringWriter(63);
      simpleNode0.dump("\"implements\"", stringWriter1);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("z");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode((-3077));
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.dump("*rsft", stringWriter0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("w =8;OF6<2>C>bY_`?0", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>z</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>z</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 1;
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      String string0 = null;
      simpleNode0.identifiers = null;
      SystemInUtil.addInputLine((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0472941572128494
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 7;
      SimpleNode simpleNode0 = new SimpleNode(7);
      simpleNode0.toString();
      String string0 = "n";
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "n");
      nodeArray0[1] = (Node) simpleNode0;
      StringReader stringReader0 = new StringReader("ImplementsList");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      nodeArray0[2] = null;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("n");
      StringWriter stringWriter0 = new StringWriter(7);
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(7);
      simpleNode0.toString();
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter(7);
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<ImplementsList>\n  <identifier>*lshft</identifier>\n</ImplementsList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(41);
      simpleNode0.setIdentifier("{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SystemInUtil.addInputLine("<<");
      simpleNode0.setIdentifier("Io3>hfI0~3w7Z");
      StringWriter stringWriter0 = new StringWriter(41);
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<ConditionalOrExpression>\n  <identifier>Io3>hfI0~3w7Z</identifier>\n</ConditionalOrExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "<");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "<");
      simpleNode0.dump(">>", stringWriter2);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      simpleNode0.setIdentifier("CompilationUnit");
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      try { 
        MockFile.createTempFile("Ydsi?;qZ+U8~8P4D]", "&");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(">=", stringWriter1);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.setIdentifier("<");
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("b)");
      StringWriter stringWriter0 = new StringWriter(48);
      SystemInUtil.addInputLine("<=");
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter1 = new StringWriter(12);
      simpleNode0.dump("b)", stringWriter1);
      assertEquals("<RelationalExpression>\n  <identifier>b)</identifier>\n  <identifier>*le</identifier>\n</RelationalExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(48);
      StringWriter stringWriter1 = stringWriter0.append('q');
      char[] charArray0 = new char[0];
      stringWriter1.write(charArray0);
      simpleNode0.dump("b3", stringWriter0);
      assertEquals("q<RelationalExpression>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("] Q;Q", stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.id = 10;
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = null;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 1606);
      simpleNode0.jjtAddChild(nodeArray0[1], 0);
      assertEquals(1607, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0971445320329771
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "Dzy@iKE':Ee");
      simpleNode0.dump("Dzy@iKE':Ee", stringWriter1);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(980);
      // Undeclared exception!
      try { 
        simpleNode0.toString("b)A");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 980
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<Initializer>\n</Initializer>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(36);
      simpleNode0.setIdentifier("b)");
      StringWriter stringWriter0 = new StringWriter(1168);
      stringWriter0.write(1168);
      simpleNode0.dump("TypeArguments", stringWriter0);
      assertEquals("\u0490<Name>\n  <identifier>b)</identifier>\n</Name>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("] Q;Q", stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1518));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(61);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtSetParent(simpleNode1);
      String string0 = simpleNode1.toString();
      assertEquals("CompilationUnit", string0);
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-6254807));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1606);
      assertEquals(1607, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(39);
      stringWriter0.append('K');
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.dump("0K}R\"mX!<t^Q", stringWriter0);
      simpleNode1.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
      
      String string0 = simpleNode1.toString("");
      assertEquals("CompilationUnit", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.id = 1;
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.id = 61;
      SystemInUtil.addInputLine((String) null);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("02");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.append('G');
      simpleNode0.dump("z", stringWriter0);
      assertEquals("G<CompilationUnit>\n  <identifier>02</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : 02", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.id = 61;
      simpleNode0.jjtSetParent((Node) null);
      SystemInUtil.addInputLine((String) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 'p';
      charArray0[1] = 'L';
      charArray0[2] = 'W';
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter1 = new StringWriter(1);
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump("\"*\"", stringWriter1);
      assertEquals("<PrimaryPrefix>\n  <identifier>*gt</identifier>\n</PrimaryPrefix>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.8001573041913385
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("[");
      // Undeclared exception!
      try { 
        simpleNode0.dump(">=", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      simpleNode0.jjtClose();
      String string0 = "|";
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) stringBuffer0, 64, 64);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 64
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1621332413));
      String string0 = null;
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, (Writer) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1621332413
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9749540746744716
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.append('$');
      simpleNode0.dump(">=", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(919);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 919
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0115954179348847
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("2p$KXc!wVK");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      Node node0 = simpleNode0.parent;
      SystemInUtil.addInputLine("~2h40$");
      simpleNode0.setIdentifier("hTn@$");
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("<=", stringWriter0);
      simpleNode0.toString();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.id = 1;
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.id = 61;
      SystemInUtil.addInputLine((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9481178804418445
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "z";
      String string1 = "02";
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1448185318));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(18);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringWriter0.append('$');
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("$<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("p$6o");
      assertEquals("p$6oVariableDeclaratorId : >=", string0);
  }
}
