/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 01:58:46 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      classWriter0.index = (-599);
      classWriter0.visitOuterClass("Y<ez{ta$SCUo.xF#(X8", "Synthetic", "Y<ez{ta$SCUo.xF#(X8");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "The size must be non-negative", "The size must be non-negative", "The size must be non-negative", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777225);
      classWriter0.version = 758;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131050, "org.apache.commons.io.filefilter.NotFileFilter", "wYK?", (String) null, "org.apache.commons.io.filefilter.NotFileFilter");
      fieldWriter0.visitAnnotation("wYK?", false);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute((String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)37;
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)53;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4910));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1803), "sC4)S}p$PV$lq3a", ";Iye'dfF[at_;q/L", ";Iye'dfF[at_;q/L", ";Iye'dfF[at_;q/L");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 4736;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4910));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4910), "sC4)S}p$PV$lq3a", "sC4)S}p$PV$lq3a", (String) null, "sC4)S}p$PV$lq3a");
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4910));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4910), "sC4)S}p$PV$lq3a", "sC4)S}p$PV$lq3a", (String) null, "sC4)S}p$PV$lq3a");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "The size must be non-negative", "The size must be non-negative", "The size must be non-negative", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "The size must be non-negative", "The size must be non-negative", "The size must be non-negative", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4910));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4910), "s4~S}p$PV$l\"q3a", "s4~S}p$PV$l\"q3a", (String) null, "s4~S}p$PV$l\"q3a");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "uBKw#$]#l:8H:RY]c", "uBKw#$]#l:8H:RY]c", "uBKw#$]#l:8H:RY]c", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11((-1027), 2);
      Attribute attribute0 = new Attribute("uBKw#$]#l:8H:RY]c");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector2 = byteVector1.putInt(296);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "Thearray of pr}fixes must not be null", "Thearray of pr}fixes must not be null", "Thearray of pr}fixes must not be null", (Object) null);
      fieldWriter0.visitAnnotation("Thearray of pr}fixes must not be null", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4924));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4924), "J", "J", (String) null, "J");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "", "", "J", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552704);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552704, "c(Y1Jzy<Gw@BK5YlU", "c(Y1Jzy<Gw@BK5YlU", "c(Y1Jzy<Gw@BK5YlU", "c(Y1Jzy<Gw@BK5YlU");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552700);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552700, "c(Y1'JFy<Gk@B3lU", "c(Y1'JFy<Gk@B3lU", "c(Y1'JFy<Gk@B3lU", "c(Y1'JFy<Gk@B3lU");
      fieldWriter0.visitAnnotation("c(Y1'JFy<Gk@B3lU", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("Deprecated", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 99, "*+{", "*+{", "*+{", "*+{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552704);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552704, "c(Y1Jzy<Gw@BK5YlU", "c(Y1Jzy<Gw@BK5YlU", "c(Y1Jzy<Gw@BK5YlU", "c(Y1Jzy<Gw@BK5YlU");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "c(Y1'Jzy<Gk@B3lU", "c(Y1'Jzy<Gk@B3lU", "c(Y1'Jzy<Gk@B3lU", "c(Y1'Jzy<Gk@B3lU");
      Attribute attribute0 = new Attribute("c(Y1'Jzy<Gk@B3lU");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552704);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-829), "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 292552703, "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU", "c(Y1'Jzy<GC@B3lU");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-893));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", ";");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("", false);
      Attribute attribute0 = new Attribute("kA<H");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte) (-101);
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte)76;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-94);
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, (byte) (-53), (byte) (-1), 36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4910));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4910), "sC4)S}p$PV$lq3a", "sC4)S}p$PV$lq3a", "sC4)S}p$PV$lq3a", "sC4)S}p$PV$lq3a");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552703);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 292552703, "The size must be non-negative", "The size must be non-negative", "The size must be non-negative", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
