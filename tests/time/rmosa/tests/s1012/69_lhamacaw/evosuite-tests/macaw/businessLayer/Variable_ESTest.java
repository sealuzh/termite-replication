/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 01:33:25 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.8948682677381035
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("v&!Q!Q");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setLabel((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList0.retainAll(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getValueLabels();
      rawVariable0.getCleaningStatus();
      System.setCurrentTimeMillis(1505L);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList2);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.825537843508537
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      System.setCurrentTimeMillis(4636L);
      User user0 = new User("wH/cN;K_5=+=,;c|,v", "wH/cN;K_5=+=,;c|,v");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setIdentifier((-1642));
      ontologyTerm0.getDisplayName();
      rawVariable0.setIdentifier((-2569));
      user0.setFirstName("wH/cN;K_5=+=,;c|,v");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      ontologyTerm0.setNewRecord(false);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getColumnEnd();
      assertEquals("-2569", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4356137091936643
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "UNABLE_TO_CREATE_ONTOLOGY_TERM";
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("UNABLE_TO_CREATE_ONTOLOGY_TERM", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=4.280833929220279
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      assertEquals("Unknown", rawVariable0.getCategory());
      
      rawVariable0.setCategory("");
      User user0 = new User();
      user0.clone();
      user0.setAddressLine1("");
      user0.setPassword((String) null);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      derivedVariable0.removeSourceVariable(rawVariable1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setQuestionNumber("");
      rawVariable0.clone();
      rawVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable0.getCategory();
      rawVariable0.getOntologyTerms();
      derivedVariable0.getValueLabels();
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.130860608303783
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.saveChanges.valueChanged");
      User user0 = new User("UNABLE_TO_GET_COMPLETE_VARIABLE_DATA", "UNABLE_TO_GET_COMPLETE_VARIABLE_DATA");
      ontologyTerm0.clone();
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(530);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.columnStart = "variable.saveChanges.valueChanged";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getFilePath();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getFilePath();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      variable0.setCategory("{Y2.2qM~x7,BX");
      variable0.setFilePath("DUPLICATE_DOCUMENT_ASSOCIATION");
      variable0.setYear("+");
      derivedVariable0.getNotes();
      derivedVariable0.getDisplayName();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      derivedVariable0.getColumnEnd();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1887519655));
      arrayList0.add(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.486578983357393
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("'{T)m~$QCSY");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("'{T)m~$QCSY", rawVariable1.getYear());
      
      Variable.validateFields(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8277797314141417
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription((String) null);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.clone();
      derivedVariable0.getCategory();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5880121503280114
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setDescription("hH0{;t87-uL5RH'=%h");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      supportingDocument0.setDescription("hH0{;t87-uL5RH'=%h");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.setAlias("CRT(ywV?kLZ:y%I<");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("CRT(ywV?kLZ:y%I<", rawVariable0.getAlias());
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.columnStart = "zC<Klx*F_P^|t@Xb\"";
      supportingDocument1.setIdentifier((-1054));
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=4.2098126682080705
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable1.setCoded(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("TD8BAJ~d[9");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals(1, arrayList1.size());
      
      derivedVariable0.getDisplayItemIdentifier();
      String string0 = rawVariable1.getCleaningStatus();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("user.postCode.label");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertTrue(derivedVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = "*3~0nHM+0)E~Xqw'";
      rawVariable1.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      user0.setIdentifier((-760));
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("*3~0nHM+0)E~Xqw'", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-3173));
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("oU[u99*)");
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      User user0 = new User();
      String string0 = "variable.cleaningStatus.label";
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      try { 
        User.checkValidUserIDField("JK2=}s~aKh?OmxMn");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"JK2=}s~aKh?OmxMn\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setAlias("UNABLE_TO_GET_AVAILABILITY_STATES");
      derivedVariable0.setCleaned(true);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals("UNABLE_TO_GET_AVAILABILITY_STATES", derivedVariable0.getAlias());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.notes = "uo6-j(ZU0n";
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("uo6-j(ZU0n", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setIdentifier(246);
      assertEquals(246, rawVariable0.getIdentifier());
      
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getNotes();
      derivedVariable0.getLabel();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.8612717336009297
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Unknown");
      derivedVariable0.getValueLabels();
      derivedVariable0.setCleaningDescription("Unknown");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("Unknown", "^q6U\"e3T[~<haL:9w)r");
      user0.setCounty("Ky`i(e+XYHJ%XO7E");
      user0.setFirstName("UViK@$k\"!}~");
      user0.setLastName("w(GJ;g6");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getValueLabels();
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable0.getLabel());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "macaw.businessLayer.SupportingDocument";
      rawVariable0.getYear();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      System.setCurrentTimeMillis(4310L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAvailability();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getAlternativeVariable();
      rawVariable1.getName();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-345));
      derivedVariable0.setAlternativeVariable(rawVariable0);
      assertEquals("-345", rawVariable0.getDisplayItemIdentifier());
      
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-345));
      derivedVariable0.notes = "QB^$W8W5WULCg*W<<Lt";
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setIdentifier(2901);
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("2901", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      derivedVariable0.setName("}WCUy5c");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.825537843508537
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "Unknown";
      rawVariable0.setName("Unknown");
      rawVariable0.setColumnStart(":4h%!4l';");
      rawVariable0.setQuestionNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      supportingDocument0.setDescription("{Y2.2qM~x7,BX");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.listIterator();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      arrayList0.add(supportingDocument0);
      supportingDocument1.setFileName("");
      arrayList0.add(supportingDocument1);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals(":4h%!4l';", rawVariable0.getColumnStart());
      
      rawVariable0.setColumnStart((String) null);
      rawVariable0.getNotes();
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.clone();
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "general.fieldValue.blank";
      derivedVariable0.setName("general.fieldValue.blank");
      derivedVariable0.setAlias("general.fieldValue.blank");
      derivedVariable0.getCleaningStatus();
      Variable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("q~c]@*k4g@.%");
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel[] valueLabelArray0 = new ValueLabel[9];
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabelArray0[0] = valueLabel0;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabelArray0[1] = valueLabel1;
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabelArray0[2] = valueLabel2;
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabelArray0[3] = valueLabel3;
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabelArray0[4] = valueLabel4;
      ValueLabel valueLabel5 = new ValueLabel();
      valueLabelArray0[5] = valueLabel5;
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabelArray0[6] = valueLabel6;
      ValueLabel valueLabel7 = new ValueLabel();
      valueLabelArray0[7] = valueLabel7;
      ValueLabel valueLabel8 = new ValueLabel();
      valueLabelArray0[8] = valueLabel8;
      arrayList0.toArray(valueLabelArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setColumnEnd("j<odh1jg[M[DR~c-6FE");
      rawVariable0.getAlias();
      assertEquals("j<odh1jg[M[DR~c-6FE", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0547452758288847
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      derivedVariable0.setColumnEnd((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "$IDWlOCOP4J[O";
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertEquals("$IDWlOCOP4J[O", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      User user0 = new User("l!#L.6.[UC+e[>m/$h", "l!#L.6.[UC+e[>m/$h");
      user0.setUserID("Unknown");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("{Y2.2qM~x7,BX");
      ontologyTerm0.setNameSpace("l!#L.6.[UC+e[>m/$h");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.columnEnd = "macaw.businessLayer.Variable";
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getAlias();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("macaw.businessLayer.Variable", rawVariable0.getColumnEnd());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.995412454458509
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("user.postCode.label");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.588118476750127
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      user0.setPhone("{Y2.2qM~x7,BX");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setCleaningStatus("{Y2.2qM~x7,BX");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.getDisplayName();
      valueLabel0.setValue("variable.form.label");
      derivedVariable0.removeValueLabel(valueLabel0);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getCategory();
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnStart();
      System.setCurrentTimeMillis(0L);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.8598331434193076
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      arrayList0.add(ontologyTerm0);
      arrayList0.remove(1);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.questionNumber = "otO{7=EQ";
      rawVariable0.setAlternativeVariable((Variable) null);
      rawVariable0.clone();
      rawVariable0.isNewRecord();
      rawVariable0.getQuestionNumber();
      rawVariable0.getCleaningDescription();
      assertEquals("otO{7=EQ", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("macaw.businessLayer.Variable");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setColumnStart("variable.form.label");
      ontologyTerm0.setTerm("variable.alternativeVariable.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace(",");
      ontologyTerm1.setIdentifier((-345));
      ontologyTerm1.setNameSpace("AEmid*0R@]IET");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getNotes();
      derivedVariable0.getAlias();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "variable.label.label";
      Variable.validateFields(rawVariable0);
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("UNABLE_TO_GET_VALUE_LABELS");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getColumnEnd();
      derivedVariable0.getValueLabels();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.710401248597012
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable2);
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("variable.cleaningStatus.label");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeSourceVariable(derivedVariable0);
      derivedVariable0.getCleaningDescription();
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setColumnStart("h'{B39");
      rawVariable0.form = "UNABLE_TO_GET_ANTOLOGY_TERMS";
      User user0 = new User();
      rawVariable0.getFilePath();
      assertEquals("h'{B39", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument1);
      // Undeclared exception!
      try { 
        arrayList0.add(19, supportingDocument0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 19, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setIdentifier(4266);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm((String) null);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setCleaningStatus("S(pKBLQV'zG7D%");
      derivedVariable0.setName("variable.notes.label");
      derivedVariable0.getDisplayName();
      assertEquals("variable.notes.label", derivedVariable0.getName());
      
      DerivedVariable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.3814049855503763
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("F7s\u0006", "F7s\u0006");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("tZ'vraze]5\"3BO");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getLabel();
      assertEquals("tZ'vraze]5\"3BO", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("W_ir]O!NOL[l6)");
      rawVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        arrayList0.add((-4531), supportingDocument0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -4531, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "$T";
      derivedVariable0.setQuestionNumber("8L&q`h,(E&Cu]#Ib0zi");
      derivedVariable0.clone();
      derivedVariable0.getDisplayName();
      assertEquals("8L&q`h,(E&Cu]#Ib0zi", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.6732919255860415
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "I::A6";
      rawVariable0.columnStart = ",GICfC|-g:11Y%#I";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.codeBookNumber = "QnOP/M";
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("I::A6", rawVariable1.getNotes());
      assertEquals(",GICfC|-g:11Y%#I", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getYear());
      assertEquals("QnOP/M", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getFilePath());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      
      derivedVariable0.getName();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel(")$%`U6,N");
      rawVariable0.notes = "*O}ar";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.clone();
      assertEquals(")$%`U6,N", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable1.getDisplayName());
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      User user0 = new User();
      ontologyTerm0.clone();
      ontologyTerm0.setTerm("a/ND$Up$-qq@");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.isCleaned();
      assertTrue(rawVariable0.isNewRecord());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      derivedVariable1.getYear();
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCodeBookNumber("?");
      rawVariable0.getAvailability();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.add(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setValueLabels(arrayList1);
      rawVariable0.getCodeBookNumber();
      assertEquals("?", rawVariable0.getCodeBookNumber());
      
      derivedVariable1.removeSourceVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      derivedVariable1.getSupportingDocuments();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = null;
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.setValueLabels(arrayList1);
      String string0 = rawVariable0.getCodeBookNumber();
      assertNull(string0);
      
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
      
      derivedVariable0.containsSourceVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList2);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User((String) null, (String) null);
      derivedVariable0.setCodeBookNumber((String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.notes = "D`d`u";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.codeBookNumber.label");
      derivedVariable0.createVariableSummary();
      assertEquals("variable.codeBookNumber.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.326171090535089
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("macaw.businessLayer.SupportingDocument", "macaw.businessLayer.SupportingDocument");
      User user1 = new User();
      User user2 = new User("macaw.businessLayer.SupportingDocument", "S}vQ|");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = null;
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user2, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd(".G]6");
      derivedVariable0.getYear();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals(".G]6", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      User user0 = new User("variable.label.label", "variable.form.label");
      ontologyTerm1.getDisplayName();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "supportingDocument.fileName.label";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getFilePath();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart((String) null);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.setCategory("=eEf");
      assertEquals("=eEf", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setYear("D8BAJ~d[9");
      ontologyTerm0.setDescription("D8BAJ~d[9");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.getDisplayName();
      assertEquals("D8BAJ~d[9", rawVariable0.getYear());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setLabel("UNABLE_TO_GET_SOURCE_VARIABLES");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getIdentifier();
      derivedVariable0.setColumnStart("{Y2.2qM~x7,BX");
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("rr;W)b21ew}i\"#6w");
      rawVariable0.columnStart = "{Y2.2qM~x7,BX";
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("QB^$W8W5WULCg*W<<Lt");
      rawVariable0.getNotes();
      rawVariable0.getLabel();
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "sN";
      rawVariable0.notes = "sN";
      rawVariable0.getNotes();
      int int0 = rawVariable0.getIdentifier();
      assertEquals("sN", rawVariable0.getNotes());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      rawVariable0.questionNumber = null;
      rawVariable0.getQuestionNumber();
      rawVariable0.setName((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string1 = "= %Mp*FSFV";
      User user0 = new User("= %Mp*FSFV", (String) null);
      user0.setPhone("= %Mp*FSFV");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "{Y2.2qM~x7,BX";
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "`~>|l<O>z]Q'E\"J8#c";
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getForm();
      assertEquals("`~>|l<O>z]Q'E\"J8#c", rawVariable0.getForm());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("C*/d%\u0002zsD");
      derivedVariable0.getAlias();
      assertEquals("C*/d%\u0002zsD", derivedVariable0.getForm());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "user.affiliation.label";
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.notes = "{Y2.2qM~x7,BX";
      rawVariable0.getColumnEnd();
      rawVariable0.getCleaningStatus();
      assertEquals("user.affiliation.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.codeBookNumber = "=U#[M";
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.listIterator();
      supportingDocument0.clone();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setLabel((String) null);
      supportingDocument0.setDescription("QB^$W8W5WULCg*W<<Lt");
      supportingDocument0.setTitle((String) null);
      derivedVariable0.setCleaningStatus("QB^$W8W5WULCg*W<<Lt");
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.form = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getIdentifier();
      derivedVariable0.isNewRecord();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getOntologyTerms();
      assertTrue(derivedVariable0.isNewRecord());
      assertEquals("QB^$W8W5WULCg*W<<Lt", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("{Y2.2qM~x7,BX", "TD8BAJ~d[9");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDocumentCode("Unknown");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.form = "variable.questionNumber.label";
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      String string0 = derivedVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.setColumnEnd((String) null);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      String string1 = derivedVariable0.getYear();
      assertEquals("", string1);
      assertNotNull(string1);
      
      String string2 = derivedVariable0.getCleaningStatus();
      assertNotNull(string2);
      assertEquals("Unknown", string2);
      
      derivedVariable0.getSupportingDocuments();
      String string3 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string3);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertNotNull(string3);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("}");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("3T_B\u0005HjP!h,=D:i{m");
      rawVariable0.getName();
      assertEquals("3T_B\u0005HjP!h,=D:i{m", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.3787438509194208
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setNotes("UNABLE_TO_CREATE_CLEANING_STATE");
      derivedVariable0.setAvailability("macaw.businessLayer.DerivedVariable");
      supportingDocument0.setFilePath("macaw.businessLayer.DerivedVariable");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.columnStart = "variable.availability.label";
      rawVariable0.getColumnStart();
      assertEquals("variable.availability.label", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable variable0 = null;
      User user0 = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier(11);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable1, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.codeBookNumber = "j*lI>";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getQuestionNumber();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getForm();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setFilePath("EDIT");
      ontologyTerm0.setOntologyName("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getFilePath();
      assertEquals("EDIT", rawVariable0.getFilePath());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
