/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 23:56:43 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = null;
      SystemInUtil.addInputLine((String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = 68;
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("7Hjf&Ar_;joHLrHu*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      SimpleNode simpleNode1 = new SimpleNode(97);
      simpleNode1.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("i", stringWriter0);
      assertEquals("<MarkerAnnotation>\n  <identifier>*lshft</identifier>\n</MarkerAnnotation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(66);
      StringReader stringReader0 = new StringReader("{");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.ready();
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 2068);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      simpleNode0.dump("<=", stringWriter1);
      assertEquals(2069, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump(";", stringWriter0);
      assertEquals("<VariableInitializer>\n</VariableInitializer>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringReader stringReader0 = new StringReader("*amp");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.ReInit((Reader) stringReader0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">=");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaParser javaParser0 = new JavaParser(dataInputStream0);
      simpleNode0.parser = javaParser0;
      StringWriter stringWriter0 = new StringWriter(75);
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<EnumConstant>\n  <identifier>*ge</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(91);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      stringWriter0.write("<=");
      simpleNode0.dump("|nBL", stringWriter0);
      assertEquals("<=<SynchronizedStatement>\n  <identifier>*le</identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      Node node0 = simpleNode0.parent;
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      StringWriter stringWriter0 = new StringWriter(97);
      simpleNode0.jjtGetChild(1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter(63);
      simpleNode0.dump("xyH^l&wm4", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier("&&");
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      charArray0[1] = ';';
      charArray0[2] = '?';
      charArray0[3] = 'x';
      charArray0[4] = '(';
      charArray0[5] = 'B';
      stringWriter0.write(charArray0);
      simpleNode0.dump("AeX!", stringWriter0);
      assertEquals("H;?x(B<MarkerAnnotation>\n  <identifier>*amp</identifier>\n  <identifier>*amp</identifier>\n</MarkerAnnotation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*le");
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("i", stringWriter0);
      String string0 = "BLOn?0HWNSy;BE]-v|";
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "BLOn?0HWNSy;BE]-v|", 97, 446);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(97);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<MarkerAnnotation>\n  <identifier>*rshft</identifier>\n</MarkerAnnotation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(1);
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0218020909681602
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(93);
      SimpleNode simpleNode1 = new SimpleNode(93);
      JavaParser javaParser0 = new JavaParser("B}>");
      simpleNode1.parser = javaParser0;
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode0.jjtAddChild(simpleNode1, 93);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode2 = new SimpleNode(93);
      simpleNode2.setIdentifier("}");
      simpleNode2.setIdentifier("&");
      simpleNode2.id = 93;
      StringWriter stringWriter0 = new StringWriter(23);
      stringWriter0.append((CharSequence) "&");
      simpleNode2.dump("=&", stringWriter0);
      simpleNode1.jjtAddChild(simpleNode2, 23);
      Node node0 = simpleNode1.parser.currNode;
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild((Node) null, (-2235));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2235
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      Node node0 = simpleNode0.parent;
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      simpleNode0.jjtAddChild((Node) null, 2);
      StringWriter stringWriter0 = new StringWriter(1313);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.jjtAddChild(simpleNode0, 97);
      StringWriter stringWriter0 = new StringWriter(97);
      simpleNode0.jjtGetChild(97);
      assertEquals(98, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(simpleNode0, 97);
      StringWriter stringWriter0 = new StringWriter(97);
      simpleNode0.jjtGetChild(10);
      simpleNode0.jjtGetParent();
      assertEquals(98, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(93);
      SimpleNode simpleNode1 = new SimpleNode(93);
      simpleNode1.parent = (Node) simpleNode0;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte) (-120);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-90);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.jjtAddChild(simpleNode1, 93);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode2 = new SimpleNode(93);
      simpleNode2.setIdentifier(" K^8>V-#qgtM2 R}_@*");
      simpleNode2.id = 93;
      StringWriter stringWriter0 = new StringWriter(37);
      stringWriter0.append((CharSequence) "&");
      simpleNode2.dump("=&", stringWriter0);
      simpleNode1.jjtGetParent();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(94, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(90);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 93);
      simpleNode0.jjtAddChild((Node) null, 117);
      assertEquals(118, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess");
      simpleNode0.toString();
      SystemInUtil.addInputLine("");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter0.write(68);
      stringWriter0.append((CharSequence) "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess", stringWriter1);
      assertEquals("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccessD<AllocationExpression>\n  <identifier>com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess</identifier>\n</AllocationExpression>\n", stringWriter1.toString());
      assertEquals("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccessD<AllocationExpression>\n  <identifier>com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess</identifier>\n</AllocationExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4971428571428571
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(10);
      int int0 = 120;
      simpleNode0.jjtAddChild(simpleNode1, 120);
      simpleNode1.jjtAddChild(simpleNode0, 120);
      StringWriter stringWriter0 = new StringWriter(10);
      // Undeclared exception!
      simpleNode1.dump("XYMI`VP^dAy", stringWriter0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(80);
      SimpleNode simpleNode1 = new SimpleNode(80);
      simpleNode0.jjtAddChild(simpleNode1, 80);
      StringWriter stringWriter0 = new StringWriter(80);
      simpleNode0.dump("}", stringWriter0);
      assertEquals(81, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 66);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<Arguments></Arguments>\n", stringWriter0.toString());
      assertEquals(67, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(1);
      StringWriter stringWriter2 = new StringWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = 's';
      charArray0[1] = 's';
      simpleNode0.identifiers = null;
      charArray0[2] = '<';
      charArray0[3] = 'n';
      stringWriter2.write(charArray0, 1, 1);
      // Undeclared exception!
      try { 
        simpleNode0.dump("Kt", stringWriter2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 3068;
      SimpleNode simpleNode0 = new SimpleNode(3068);
      StringWriter stringWriter0 = new StringWriter(3068);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      char[] charArray0 = new char[4];
      charArray0[0] = 'H';
      charArray0[1] = ' ';
      charArray0[2] = 'j';
      charArray0[3] = '+';
      stringWriter0.write(charArray0);
      stringWriter0.append((CharSequence) "*_k#3kND<bs");
      simpleNode0.identifiers = arrayList0;
      SystemInUtil.addInputLine("zV;byG]+/(l,lmow");
      simpleNode0.identifiers.add("*_k#3kND<bs");
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("*_k#3kND<bs", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 279;
      SimpleNode simpleNode0 = new SimpleNode(279);
      SimpleNode simpleNode1 = new SimpleNode(279);
      String string0 = null;
      Node node0 = simpleNode0.parent;
      Node node1 = simpleNode0.parent;
      simpleNode0.jjtSetParent(simpleNode1);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-2235));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.jjtClose();
      Node node0 = simpleNode0.jjtGetParent();
      assertFalse(node0.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write((-2486));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5T KwB8:C.[");
      simpleNode0.dump("5T KwB8:C.[", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(86);
      simpleNode0.setIdentifier("\"-=\"");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.dump("Kt", stringWriter1);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1063));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1063
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess");
      SystemInUtil.addInputLine("");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter0.write(68);
      stringWriter0.append((CharSequence) "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(788);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1794);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1794
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1103981311));
      // Undeclared exception!
      try { 
        simpleNode0.toString("<");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1103981311
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(91);
      Node node0 = simpleNode0.parent;
      String string0 = "<=";
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<=");
      simpleNode0.toString("g;\u0007bO");
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) stringBuffer0, 91, (-1873));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1964
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 75;
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(">=");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(">=");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-2110480313));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1121);
      SimpleNode simpleNode0 = new SimpleNode(1121);
      Node[] nodeArray0 = new Node[0];
      stringWriter0.flush();
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("Invalid escape character at line ", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1901);
      String string0 = "*qF}rvx{~#";
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("*qF}rvx{~#", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1901);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("n", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(119);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 119);
      simpleNode0.jjtAddChild((Node) null, 119);
      assertEquals(120, simpleNode0.jjtGetNumChildren());
  }
}
