/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 23:50:53 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player((-21372));
      byte[] byteArray0 = player0.pack();
      player1.unpack(byteArray0);
      player0.setJoinOK(player1, true);
      float float0 = Player.MOVE_DISTANCE;
      player0.getStrength();
      player1.getTimeOfDeath();
      player1.toString();
      player0.isJoinOK(player1, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (-21372));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(1392409296320L);
      player0.setX((-203.7652F));
      Player player2 = new Player(23212, "Player1", "`>#n#|Ry", 3);
      player0.setConnected(false);
      player0.setDead();
      player0.setDead((long) 1, true);
      player1.pack();
      Player player3 = new Player((short)4919, " Z*,)W6mS'&z)v|<=", "`>#n#|Ry", (-21372));
      player3.getX();
      player0.isJoinOK(player1, true);
      player0.pack();
      player3.pack();
      player2.type();
      float float1 = player0.getX();
      assertFalse(player0.isDead());
      assertEquals((-203.7652F), float1, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.383329504375038
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player((-21372));
      byte[] byteArray0 = player0.pack();
      player1.unpack(byteArray0);
      player0.setJoinOK(player1, true);
      float float0 = Player.TOLERANCE;
      player0.getStrength();
      player1.getTimeOfDeath();
      player1.toString();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1392409296354L);
      Player player2 = new Player(1, "`>#n#|Ry", "rEpoWb*u}^t", 1);
      player2.setConnected(true);
      player1.setDead();
      player2.setDead(1392409296354L, false);
      player0.pack();
      Player player3 = new Player(0, "`>#n#|Ry", "Player1", 1);
      player2.getX();
      player0.isJoinOK(player1, false);
      player0.pack();
      player3.getMoney();
      player1.getMoney();
      player3.isJoinOK(player2, true);
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertEquals(1392409296354L, player2.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(95, "", "", 1214, 1214);
      player0.setZ(2805.7532F);
      boolean boolean0 = false;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-189), (byte)56);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player((-21372));
      player0.setJoinOK(player1, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      float float0 = Player.MOVE_DISTANCE;
      player1.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1392409296320L);
      player0.setDead();
      player0.isJoinOK(player1, true);
      assertEquals(1392409296320L, player0.getTimeOfDeath());
      
      Player player2 = new Player((short)4919, "", 1);
      assertEquals(0L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      Player player0 = new Player((-1443), "state.Party", (String) null, (-3307));
      player0.id = (-3307);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte) (-78);
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte) (-56);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte) (-17);
      byteArray0[8] = (byte) (-8);
      player0.unpack(byteArray0);
      player0.setY(2908.768F);
      player0.type();
      player0.getY();
      float float0 = player0.getX();
      assertEquals(2908.768F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(0, "", " :7I9", (-694), 0);
      int int0 = player0.getStrength();
      assertEquals(0, int0);
      
      float float0 = player0.getMoney();
      assertEquals((-694), player0.getPictureId());
      assertEquals("", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1), "", "", (-1));
      player0.setZ((-1));
      player0.getZ();
      System.setCurrentTimeMillis((-1));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(true);
      player0.setZ(0.2F);
      player0.setDead();
      player0.setY((-793.8596F));
      player0.getY();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      player0.next = (Party) player0;
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 3;
      Player player0 = new Player(3, "0.0.0.0", (-1112));
      Party party0 = player0.gangBoss();
      player0.next = party0;
      player0.setMoney((-1112));
      party0.add((Party) null);
      player0.gangStrength();
      player0.prev = party0;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = " ";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      player0.getX();
      int int1 = 517;
      String string1 = "\"3lbS<Twu|'Az";
      String string2 = "ha4E&:xmCM`>t)Q>R";
      int int2 = (-21349);
      int int3 = 3046;
      Player player1 = new Player(int1, string1, string2, int2, int3);
      Party party1 = player1.next;
      player0.next.boss = party1;
      System.setCurrentTimeMillis(int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(360);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.pack();
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-28672), "", 25260);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)77;
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte) (-49);
      byteArray0[5] = (byte) (-16);
      byteArray0[6] = (byte)76;
      player0.unpack(byteArray0);
      player0.setDead(2418L);
      player0.getTimeOfDeath();
      int int0 = player0.getStrength();
      assertEquals(2418L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-1024));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(player0.isDead());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1024", player0.getName());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(3336);
      player0.setMoney(0.0F);
      player0.setDead();
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(3316);
      int int0 = Packable.TEXT_MESSAGE;
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      String string0 = player0.toString();
      assertEquals("Player3316", string0);
      
      Player player1 = new Player((short)4919, "", 1264);
      boolean boolean0 = player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1264);
      boolean boolean1 = player1.isDead();
      assertTrue(boolean1 == boolean0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
      
      player1.toString();
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1264, player1.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-4307), "it;ud~goJ'Ua<", (String) null, (-4307));
      player0.toString();
      Player player1 = new Player((-49), (String) null, (short)4919);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis((short)4919);
      Player player2 = new Player(4919, "it;ud~goJ'Ua<", "", 6260);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-2117), (String) null, (-2117));
      player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-2117), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      System.setCurrentTimeMillis(299L);
      Player player0 = new Player(219, (String) null, ")#wt;xrR~qkV", 219, 219);
      player0.getIP();
      player0.getSubparty();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-28), "", "", (-28));
      int int0 = Packable.TEXT_MESSAGE;
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals((-28), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-28672), "", (-28672));
      player0.setZ(1213.33F);
      float float0 = player0.getZ();
      assertEquals(1213.33F, float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(5);
      Player player1 = new Player(22235);
      player1.id = 22235;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-84);
      player0.setDead((-182L), false);
      byteArray0[1] = (byte)104;
      player1.unpack(byteArray0);
      player0.setJoinOK(player1, false);
      player0.getZ();
      player1.getStrength();
      player0.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1209L);
      player1.isBoss();
      int int0 = player0.gangStrength();
      assertEquals((-182L), player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(3336);
      player0.gangStrength();
      player0.reset(false);
      byte[] byteArray0 = player0.pack();
      Party party0 = player0.prev;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream1.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(3336);
      player0.reset(false);
      player0.pack();
      Party party0 = new Party();
      party0.next = (Party) player0;
      player0.reset(false);
      player0.boss = party0;
      player0.type();
      player0.setMoney(5);
      player0.head = party0.next;
      player0.setDead(0L);
      player0.getMoney();
      player0.getY();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(4919, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "$i'[4t*1d", 0, (-990));
      assertEquals("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", player0.getIP());
      assertEquals((-990), player0.getStrength());
      
      Player player1 = new Player(4, "module.ModuleBrowserDialog$ModuleFilter", (-2373));
      Party party0 = player0.boss;
      player1.getSubparty();
      player1.reset(true);
      int int0 = player1.getPictureId();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getMoney(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals((-2373), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-1), "", "", (-1), (-1));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      player0.prev = null;
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      float float1 = player0.getY();
      assertEquals(0.0F, float1, 0.01F);
      
      int int0 = player0.getStrength();
      assertEquals((-1), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P5xck3y8e>4");
      Player player0 = new Player((-825), (String) null, "!@!qb\"r7L.e'M", (-825), 11709);
      int int0 = player0.getStrength();
      assertEquals((-825), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(11709, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(787);
      byte[] byteArray0 = new byte[7];
      player0.setDead(1332L, true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      player0.setConnected(false);
      player0.gangStrength();
      boolean boolean0 = player0.isConnected();
      assertEquals(1332L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 12670;
      Player player0 = new Player(12670);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(16347);
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player16347", player0.toString());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-448), "", "kf*JmLZVkB_tVr'3", 3, (-1331));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-127);
      byteArray0[3] = (byte) (-107);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte)55;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      bufferedInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream1.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(4919, "u", "u", (-3101), (-3101));
      int int0 = player0.gangStrength();
      assertEquals((-3101), player0.getPictureId());
      assertEquals((-3101), int0);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(42, "module.ModuleBrowserDialog$ModuleFilter", 42);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(42, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(472, "", "", 472, 472);
      player0.pack();
      assertEquals(472, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(472, player0.getPictureId());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1024));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) player0;
      objectArray0[1] = (Object) "*F'tx-~;V`Jwj:,9";
      objectArray0[2] = (Object) byteArrayOutputStream0;
      PrintStream printStream0 = mockPrintStream0.printf("*F'tx-~;V`Jwj:,9", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      assertEquals(48, byteArrayOutputStream0.size());
      
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-1045));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(5185, "state.Party", "state.Party", 2399, 0);
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals(2399, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(4919, "state.Party", "state.Party", 4919, 4919);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(4919, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(4919, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(3);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-5207));
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-28));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-124);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte) (-124);
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = Packable.TEXT_MESSAGE;
      String string0 = player0.getIP();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-28", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(1667);
      player0.setY(0.0F);
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      player0.setMoney(0.0F);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player1667", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      
      int int1 = Packable.GAME_EVENT;
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 4919;
      Player player0 = new Player(4919, "Player", 1985);
      player0.reset(false);
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1985);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(16347);
      boolean boolean0 = player0.isDead();
      assertEquals(16347.0F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-12), "", (-12));
      player0.setConnected(true);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-22));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      boolean boolean0 = player0.isDead();
      assertFalse(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player(1);
      player0.setZ(0.1F);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.1F, player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(31488);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte) (-84);
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player31488", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(5);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(5);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte) (-84);
      player0.unpack(byteArray0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player5", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = (-1045);
      Player player0 = new Player((-1045));
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(3962, "", "", (-19428));
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-19428), player0.getPictureId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(150, "E<pMm-8|0As||a2", (-1));
      player0.setX((-1));
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(3);
      String string0 = player0.getName();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("Player3", string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      System.setCurrentTimeMillis(4919L);
      Player player0 = new Player((-21364));
      player0.setDead(1392409281320L);
      float float0 = player0.getX();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(3336);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player3336", player0.getName());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player((-22));
      player0.setY((-22));
      boolean boolean0 = player0.isDead();
      assertEquals((-22.0F), player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player(219);
      player0.reset(true);
      player0.isBoss();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("Player219", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
