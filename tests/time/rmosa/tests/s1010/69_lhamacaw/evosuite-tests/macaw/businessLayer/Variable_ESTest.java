/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 00:16:43 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = null;
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=4.21042741261626
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setName((String) null);
      derivedVariable0.getName();
      derivedVariable0.form = "variable.year.label";
      User user0 = new User((String) null, "X6A=8!?|dwY/}Zb");
      RawVariable rawVariable0 = new RawVariable();
      user0.setPostCode((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.clone();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      Variable.validateFields(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getForm();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "j2:P<\\cnZ$\\";
      rawVariable0.setCodeBookNumber("user.firstName.saveChanges");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("UNABLE_TO_VALIDATE_ADMINISTRATOR");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("blank");
      rawVariable0.questionNumber = "";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.getForm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      derivedVariable0.setAlias("blank");
      rawVariable0.getIdentifier();
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getValueLabels();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.710679103556723
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("Zy!");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.setQuestionNumber("_%xL,*|`aV]JH-J\"O");
      derivedVariable0.setName("`K5B#&i+8G-) ;`>%Y?");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCategory();
      derivedVariable0.getCodeBookNumber();
      assertEquals("Zy!", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.673199461415907
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User("variable.columnStart.label", "RfP<m(cA@xv)?/>u6");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user2 = new User("RfP<m(cA@xv)?/>u6", "variable.columnStart.label");
      User.detectFieldChanges(user0, user1, user2);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("variable.columnStart.label");
      derivedVariable1.getAlias();
      derivedVariable0.getValueLabels();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCodeBookNumber(",1,)?>e6s");
      derivedVariable2.createVariableSummary();
      derivedVariable1.getQuestionNumber();
      assertEquals("variable.columnStart.label", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.setName("iUNg1iW_RB");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setAlias((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory("iUNg1iW_RB");
      derivedVariable0.setCleaningDescription("nJ(D");
      derivedVariable0.removeSourceVariable(rawVariable0);
      ontologyTerm0.setOntologyName("YMvP5^");
      ontologyTerm0.setNewRecord(false);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getValueLabels();
      rawVariable0.getCleaningDescription();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User("'xY)X", (String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("user.addressLine2.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.clear();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setYear("i~)D2YjE'");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getYear();
      assertEquals("user.addressLine2.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.863358822112456
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-556));
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.setForm("UNABLE_TO_GET_CLEANING_STATE_NAME");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      User user0 = new User("#)0'<", "macaw.businessLayer.Variable");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.setIsNewRecord(true);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getOntologyTerms();
      derivedVariable1.getFilePath();
      derivedVariable1.getCategory();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getYear();
      derivedVariable0.getCategory();
      derivedVariable1.createVariableSummary();
      derivedVariable1.isCoded();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCategory("");
      derivedVariable0.setLabel("=.,@7?@Cl");
      derivedVariable0.setName("UNABLE_TO_GET_ONTOLOGY_TERMS");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("=.,@7?@Cl", derivedVariable0.getLabel());
      
      rawVariable1.getYear();
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setCategory((String) null);
      derivedVariable0.setLabel("variable.year.label");
      User user0 = new User();
      User user1 = new User("8|H", "variable.isCleaned.saveChanges.changedToNotClean");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setCategory("f<8n4 ;(?`WYf");
      derivedVariable2.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      rawVariable0.setCleaningStatus("NR2 9Ipvd");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("NR2 9Ipvd", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      derivedVariable1.getAlias();
      User user2 = new User("NB&nG03n*H/", "ontologyTerm.description.saveChanges");
      user2.setCounty("NB&nG03n*H/");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable1, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertEquals("", variable0.getAlias());
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.isCleaned();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("macaw.businessLayer.RawVariable");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("@T\"XW6V((fW2pYB1(d|");
      user0.setPhone("t2i(<aD)~*o1;;:-@fR");
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("macaw.businessLayer.RawVariable", rawVariable0.getYear());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setStatus("'\".5FK");
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getCleaningDescription();
      User user2 = new User("variable.alternativeVariable.label", (String) null);
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user1, user2, user1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.900285164574433
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      derivedVariable0.setColumnEnd("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      User user0 = new User("variable.availability.label", "variable.availability.label");
      user0.setCity("variable.availability.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Z_Wfa[?");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Z_Wfa[?", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1);
      derivedVariable0.getValueLabels();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("DUPLICATE_AVAILABILITY_STATE");
      derivedVariable0.getCleaningDescription();
      User user0 = new User("a>?-sWiX1g4", "UNABLE_TO_GET_CHANGES_FOR_USER");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCoded(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(rawVariable0.isCoded());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = " type=";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("vp^<CRy>[pL");
      ontologyTerm0.setIdentifier((-1146514449));
      int int0 = (-2076045271);
      User user0 = new User();
      derivedVariable0.setIdentifier((-1));
      int int1 = (-1431655763);
      user0.setIdentifier((-1431655763));
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ontologyTerm0.clone();
      try { 
        User.checkValidEmail(" type=");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \" type=\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.626722286104588
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setName("");
      arrayList0.add((Variable) derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = null;
      arrayList1.add((SupportingDocument) null);
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertFalse(rawVariable1.isCleaned());
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = "NR2 9Ipvd";
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("NR2 9Ipvd", rawVariable1.getColumnStart());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      rawVariable0.getColumnEnd();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-3606));
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.623977427054582
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.questionNumber = "variable.isCleaned.saveChanges.changedToNotClean";
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.isCleaned.saveChanges.changedToNotClean";
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("]6^E6oYJu_Gec{o5");
      rawVariable0.getLabel();
      assertEquals("]6^E6oYJu_Gec{o5", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=4.020984180530142
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.columnStart = "variable.category.label";
      derivedVariable0.setAlias("variable.category.label");
      derivedVariable0.setAlias("variable.cleaningStatus.label");
      derivedVariable0.setQuestionNumber("variable.category.label");
      derivedVariable0.getAlias();
      derivedVariable0.getFilePath();
      User user0 = new User("", "");
      User.detectFieldChanges(user0, user0, user0);
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.isNewRecord();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("variable.category.label");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getCleaningDescription();
      derivedVariable0.getColumnStart();
      derivedVariable0.clone();
      derivedVariable1.setAvailability("variable.category.label");
      derivedVariable0.getValueLabels();
      derivedVariable1.getAlias();
      derivedVariable0.getCleaningStatus();
      assertEquals("variable.category.label", derivedVariable0.getQuestionNumber());
      
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.668619868083795
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("UNABLE_TO_CH<CK_DATABASE_EXISTS");
      derivedVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getAlias();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.getDisplayName();
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("");
      derivedVariable0.getCleaningDescription();
      rawVariable0.columnStart = "Shz22o S";
      RawVariable rawVariable1 = new RawVariable();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6878286039611448
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      rawVariable0.setName("j2:P<cnZ$");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals(1, arrayList0.size());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(1, arrayList1.size());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.659484317201989
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      
      rawVariable0.getYear();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Unknown", "Unknown");
      User user1 = new User("yT", "mJoIL>2a;,pYjY*;x!");
      User user2 = new User("Q+_", "mJoIL>2a;,pYjY*;x!");
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      User user3 = new User("]Gtr)-l", "yT");
      User user4 = new User();
      User.detectFieldChanges(user4, user3, user3);
      Variable.detectFieldChanges(user1, derivedVariable1, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("variable.alternativeVariable.label");
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("variable.alternativeVariable.label", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      user0.setCounty("variable.saveChanges.valueChanged");
      rawVariable0.setAlias("variable.columnStart.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      System.setCurrentTimeMillis(1140L);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "fd=QB\"]";
      derivedVariable0.setCleaningDescription("fd=QB\"]");
      derivedVariable0.getNotes();
      assertEquals("fd=QB\"]", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("variable.year.label");
      rawVariable0.getYear();
      assertEquals("variable.year.label", rawVariable0.getNotes());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.8438127965129296
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.setName("");
      User.checkValidUserIDField("variable.cleaningDescription.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add((ValueLabel) null);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getColumnEnd();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSourceVariables();
      derivedVariable0.setNotes("=dN7S");
      arrayList1.stream();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setFilePath("=dN7S");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      rawVariable0.questionNumber = "=dN7S";
      derivedVariable3.getFilePath();
      derivedVariable4.removeSourceVariable(rawVariable0);
      derivedVariable1.containsSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("=dN7S", derivedVariable0.getNotes());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.78511629983462
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      assertEquals("Unknown", rawVariable0.getCategory());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory("");
      derivedVariable0.setLabel("");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getYear();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1);
      derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("DUPLICATE_AVAILABILITY_STATE");
      derivedVariable1.getCleaningDescription();
      User user0 = new User("a>?-sWiX1g4", "UNABLE_TO_GET_CHANGES_FOR_USER");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.setCoded(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setIdentifier((-2226));
      User user0 = new User();
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user2 = new User("variable.alternativeVariable.label", (String) null);
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user1, user2, user1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.columnEnd = "/Ua0kOp%[";
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      
      User user2 = new User("variable.alternativeVariable.label", (String) null);
      derivedVariable1.getName();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-2075900857));
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      derivedVariable0.getYear();
      String string0 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("1$G");
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.getAlias();
      derivedVariable0.getCodeBookNumber();
      assertEquals("1$G", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("i{WwG5a+6z\tl3]po[");
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("i{WwG5a+6z\tl3]po[", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.getAvailability();
      String string0 = rawVariable0.getFilePath();
      assertNotNull(string0);
      
      String string1 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertNotNull(string1);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.670807453536352
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.clone();
      derivedVariable0.setIdentifier((-125));
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.createVariableSummary();
      supportingDocument0.setFileName("-");
      supportingDocument0.setIsNewRecord(false);
      User user0 = new User("dI~za`F+K{1?-}3NX", "-");
      user0.setCity((String) null);
      derivedVariable0.setName("dI~za`F+K{1?-}3NX");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      System.setCurrentTimeMillis(4613L);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("-125", derivedVariable0.getDisplayItemIdentifier());
      assertEquals((-125), int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("8");
      rawVariable0.setLabel("k1Z%vUtE0");
      rawVariable0.createVariableSummary();
      assertEquals("k1Z%vUtE0", rawVariable0.getLabel());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("");
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      boolean boolean0 = true;
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("");
      derivedVariable1.getCleaningDescription();
      User user0 = new User(" type=", "2/pGj.b2OnmRz6");
      User user1 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<MacawChangeEvent> arrayList1 = ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      arrayList1.add(macawChangeEvent0);
      arrayList0.retainAll(arrayList1);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setColumnStart("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getForm();
      assertEquals("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("UNABLE_TO_GET_STUDY_YEARS");
      rawVariable0.getYear();
      rawVariable0.getColumnEnd();
      assertEquals("UNABLE_TO_GET_STUDY_YEARS", rawVariable0.getForm());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("NR2 9Ipvd");
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("NR2 9Ipvd");
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("NR2 9Ipvd", rawVariable1.getForm());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "MISSING_DISPLAY_LIST_ADDER";
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string1);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setForm((String) null);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("`Y,?/Hu=hM*");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      User user0 = new User();
      user0.setCity((String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.isCleaned();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertFalse(derivedVariable2.isNewRecord());
      
      derivedVariable2.setIsNewRecord(true);
      assertTrue(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes((String) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      String string0 = derivedVariable0.getCleaningDescription();
      assertNotNull(string0);
      
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnEnd();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      String string0 = derivedVariable0.getNotes();
      assertNotNull(string0);
      
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      
      String string1 = derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNotNull(string1);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("y-!");
      derivedVariable0.setQuestionNumber("Unknown");
      derivedVariable0.getDisplayItemIdentifier();
      System.setCurrentTimeMillis(1L);
      derivedVariable0.getNotes();
      assertEquals("Unknown", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = null;
      rawVariable0.codeBookNumber = "xRj}Ore";
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string1);
      assertEquals("", string1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.6211158458265547
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      user0.setAddressLine1("NR2 9Ipvd");
      User user1 = new User();
      rawVariable0.notes = "^aly0Fap@u1wX/?xuj/";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("^aly0Fap@u1wX/?xuj/", rawVariable0.getNotes());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("MISSING_DISPLAY_LIST_ADDER");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getNotes();
      assertEquals("MISSING_DISPLAY_LIST_ADDER", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getQuestionNumber();
      User user2 = new User("variable.alternativeVariable.label", (String) null);
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user1, user2, user1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.questionNumber = null;
      derivedVariable0.setColumnEnd("Vi?l\"+/h");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getLabel();
      derivedVariable0.isCleaned();
      derivedVariable0.getForm();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals("Vi?l\"+/h", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlias("v_2{'D@6oy+?DdBlF");
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("variable.questionNumber.label", "UNABLE_TO_UPDATE_CLEANING_STATE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber((String) null);
      String string0 = derivedVariable0.getColumnEnd();
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setCoded(false);
      derivedVariable0.questionNumber = null;
      String string0 = derivedVariable0.getColumnStart();
      assertNotNull(string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("general.fieldValue.unknown");
      rawVariable0.getCodeBookNumber();
      rawVariable0.setLabel("");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        arrayList0.remove((-850));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setQuestionNumber("j3Rz");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningDescription();
      assertEquals("j3Rz", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("~?Idr~hBL");
      rawVariable0.setForm("~?Idr~hBL");
      rawVariable0.getYear();
      assertEquals("~?Idr~hBL", rawVariable0.getForm());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UjO[");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      String string0 = null;
      rawVariable0.setColumnStart((String) null);
      rawVariable0.getLabel();
      System.setCurrentTimeMillis((-598L));
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        valueLabel0.hasSameDisplayName((ValueLabel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("");
      derivedVariable0.setNotes("i_");
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.getLabel();
      derivedVariable0.getAvailability();
      assertEquals("i_", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "Zh.\"";
      rawVariable0.notes = "Zh.\"";
      rawVariable0.getFilePath();
      rawVariable0.getValueLabels();
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setCategory("i}y`>L-B\"kx");
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("");
      derivedVariable0.setName("");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.form = "";
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = ".|0";
      rawVariable0.setColumnStart(".|0");
      String string1 = "variable.saveChanges.valueChanged";
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      rawVariable0.notes = ".|0";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.createVariableSummary();
      rawVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.getNotes();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("SRV.NK");
      assertEquals("SRV.NK", rawVariable0.getName());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.6272974946176744
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("n;zo2X%sQ8P7L`");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("n;zo2X%sQ8P7L`");
      ontologyTerm0.setTerm("");
      ontologyTerm0.setNameSpace("/t@qv,N!s'=#");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      derivedVariable0.setName("/t@qv,N!s'=#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory("");
      derivedVariable0.setLabel("");
      rawVariable0.getYear();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getSourceVariables();
      derivedVariable0.clone();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2067947214));
      rawVariable0.form = "NR2 9Ipvd";
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      assertEquals("-2067947214", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "DELETE";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("DELETE", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getForm());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("38<:r['/2");
      rawVariable0.clone();
      assertEquals("38<:r['/2", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("~jpwVySZ%#)Vd<U]ES");
      derivedVariable0.cloneAttributes(derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("ybc7O");
      derivedVariable0.columnEnd = "j2:P<cnZ$";
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = "UNABLE_TO_UPDATE_SUPPORTING_DOCUMENT";
      derivedVariable1.setCodeBookNumber("Gc9lj>Ac}B~M2}NkK$o");
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("Gc9lj>Ac}B~M2}NkK$o", derivedVariable1.getCodeBookNumber());
      assertEquals("ybc7O", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCodeBookNumber("NR2 9Ipvd");
      rawVariable0.setAlias("NR2 9Ipvd");
      User.checkValidUserIDField("NR2 9Ipvd");
      rawVariable0.getYear();
      assertEquals("NR2 9Ipvd", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.557969937643789
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      User user0 = new User("NR2 9Ipvd", "NR2 9Ipvd");
      user0.setCounty("NR2 9Ipvd");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("NR2 9Ipvd");
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(arrayList0.isEmpty());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getYear();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.6304437108786445
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.stream();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add((SupportingDocument) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "Okz?N.\"LGdCfLG{";
      supportingDocument0.setTitle("Okz?N.\"LGdCfLG{");
      supportingDocument0.setFilePath("Okz?N.\"LGdCfLG{");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument1.setTitle("?");
      supportingDocument0.setTitle("");
      arrayList1.add(supportingDocument1);
      arrayList1.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = null;
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setNotes((String) null);
      arrayList0.add((Variable) derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList1.containsAll(arrayList0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User("variable.columnStart.label", "_%xL,*|`aV]JH-J\"O");
      rawVariable0.columnEnd = "variable.columnStart.label";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user2 = new User("variable.alternativeVariable.label", (String) null);
      User user3 = new User("'W&G-E.H$r w3", "=.,@7?@Cl");
      User user4 = new User("variable.alternativeVariable.label", "macaw.businessLayer.RawVariable");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user4, derivedVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.spliterator();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      valueLabel0.setMissingValue(false);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAlias("-b15b2bG5zxr<th7A");
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.setCleaningDescription("-b15b2bG5zxr<th7A");
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setAvailability("p64(DAT&");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setIsNewRecord(false);
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = null;
      int int0 = 99;
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        arrayList0.addAll(99, (Collection<? extends SupportingDocument>) arrayList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 99, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      ontologyTerm0.setTerm("gf$C*tFV");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.isNewRecord();
      derivedVariable0.getIdentifier();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList2.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.setValueLabels(arrayList2);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getSourceVariables();
      derivedVariable0.setNotes("gf$C*tFV");
      arrayList1.stream();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setFilePath("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getFilePath();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      assertEquals("gf$C*tFV", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCategory((String) null);
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.clone();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getOntologyTerms();
      rawVariable0.getValueLabels();
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaningDescription("~HvpaKJg}e;U");
      derivedVariable0.setColumnEnd("variable.columnStart.label");
      derivedVariable0.getFilePath();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable0 = new RawVariable();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add((Variable) rawVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getLabel();
      derivedVariable0.getAlias();
      assertEquals("~HvpaKJg}e;U", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("WtDL");
      rawVariable0.getName();
      assertEquals("WtDL", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.5350884754592706
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
      
      derivedVariable0.setCoded(true);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(derivedVariable0.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("PCU<zo*uX0=x", "PCU<zo*uX0=x");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAvailability("PCU<zo*uX0=x");
      User.checkValidUserIDField("cJX ymKj");
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      User user0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("W$L5/]kR;mHs`(wEhfs");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory(")_Mc,u7G6");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      assertEquals(")_Mc,u7G6", derivedVariable0.getCategory());
  }
}
