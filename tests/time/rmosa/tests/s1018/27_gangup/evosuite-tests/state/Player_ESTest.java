/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 05:55:02 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.SyncFailedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(969, "q=[~tf|2C 4Z%h", "q=[~tf|2C 4Z%h", 969, 969);
      Player player1 = new Player((short)4919, ".*[.]class$", ".*[.]class$", (short)4919);
      player1.prev = (Party) player0;
      player0.next = (Party) player1;
      boolean boolean0 = true;
      player1.setX(0.0F);
      player1.setJoinOK(player0, true);
      player1.setZ(0.2F);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q=[~tf|2C 4Z%h");
      player0.setDead((long) 969);
      player0.pack();
      player0.pack();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.type();
      MockFile mockFile0 = new MockFile(".*[.]class$", "");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.isConnected();
      Player player2 = new Player(19, "", 14);
      player2.setX((short)4919);
      player2.setJoinOK(player0, false);
      player1.isDead();
      int int0 = Packable.GAME_EVENT;
      player2.pack();
      System.setCurrentTimeMillis(1392409296338L);
      player1.type();
      boolean boolean0 = player2.isJoinOK(player0, true);
      assertEquals(4919.0F, player2.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0, (String) null, 0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte)0;
      int int0 = 1154;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-76), 1154);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-520));
      player0.isConnected();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      Player player1 = new Player(449, "@j<P3krq<x:YxQ!`,", 0);
      player0.setX(0.0F);
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      player0.pack();
      System.setCurrentTimeMillis(15000L);
      player0.getX();
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(Integer.MAX_VALUE, (String) null, (String) null, 1079, Integer.MAX_VALUE);
      player0.getIP();
      player0.type();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-520));
      player0.isConnected();
      player0.setX((short)4919);
      player0.setJoinOK(player0, false);
      System.setCurrentTimeMillis(1392409296320L);
      int int0 = Packable.GAME_EVENT;
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(4919.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(4, "0bxHRMZL", (-1));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setMoney((-467.17752F));
      player0.getMoney();
      player0.getMoney();
      Player player1 = new Player(4, "0bxHRMZL", "0bxHRMZL", 1358, 4);
      player0.isJoinOK(player1, true);
      player1.getX();
      player0.getMoney();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-467.17752F), player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(20480);
      player0.setJoinOK(player0, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte)1;
      player0.isJoinOK(player0, true);
      int int0 = Packable.TEXT_MESSAGE;
      Player player1 = new Player((byte)1);
      player1.setMoney(10.0F);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1);
      float float0 = player1.getMoney();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1483, (String) null, 1483);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(20480);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(2565);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream1.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(20480);
      player0.setY(4919);
      player0.getIP();
      player0.getY();
      Player player1 = new Player((byte) (-97), "0.0.0.0", (byte) (-77));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(4919.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(4294);
      player0.isJoinOK(player1, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-46);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-135));
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(1);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark(2798);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      assertEquals(28, byteArrayInputStream0.available());
      
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2983);
      player0.setDead((long) 2983);
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals(2983L, long0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)87;
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte) (-37);
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-168), "0 LuA~93V[*.,s", "0 LuA~93V[*.,s", 1028);
      Player player1 = new Player(1028, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (short)4919);
      player0.remove(player1);
      player1.setZ((short)4919);
      player0.reset(false);
      player0.isJoinOK(player1, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.pack();
      player0.getMoney();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(2017L);
      player0.type();
      player1.getY();
      player0.getIP();
      player1.getZ();
      player1.type();
      float float0 = player1.getMoney();
      assertEquals(4919.0F, player1.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2983);
      Party party0 = new Party();
      player0.boss = party0;
      player0.setDead((long) (byte) (-20));
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-20);
      byteArray0[1] = (byte) (-20);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-20);
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)4;
      player0.unpack(byteArray0);
      player0.unpack(byteArray0);
      player0.getTimeOfDeath();
      int int0 = Packable.PLAYER;
      System.setCurrentTimeMillis((byte) (-20));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-1611));
      Player player1 = new Player((-1611));
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      player0.gangStrength();
      player0.isJoinOK(player1, false);
      float float0 = Player.TOLERANCE;
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(2983);
      player0.setZ((byte) (-89));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-89);
      player0.unpack(byteArray0);
      float float0 = player0.getZ();
      assertEquals((-89.0F), float0, 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-1), "", "", (-1), (-1));
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte)73;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)3;
      byteArray0[8] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setY((-1));
      player0.prev = null;
      player0.getX();
      player0.getY();
      player0.getZ();
      player0.gangStrength();
      player0.getZ();
      player0.pack();
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(0, "dg{l%", "", 0);
      boolean boolean0 = player0.isConnected();
      Player player1 = new Player((-520), "gYeYtPP|#i__cnx:", "", (-65), 0);
      player0.setJoinOK(player1, true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-89);
      byteArray0[0] = (byte) (-89);
      byteArray0[5] = (byte) (-89);
      byteArray0[6] = (byte) (-89);
      player1.pack();
      boolean boolean1 = player1.isJoinOK(player0, true);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean1 == boolean0);
      
      int int0 = player1.getStrength();
      assertEquals(0, int0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("gYeYtPP|#i__cnx:", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals((-65), player1.getPictureId());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(0, "dg{l%", "", 0);
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      
      Player player1 = new Player((-520), "gYeYtPP|#i__cnx:", "", (-65), 0);
      player0.setJoinOK(player1, true);
      assertEquals(1, player0.getStrength());
      
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte)0;
      int int0 = player1.getPictureId();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player1.getStrength());
      assertEquals("gYeYtPP|#i__cnx:", player1.getIP());
      assertEquals((-65), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      Player player1 = new Player((-2703));
      player1.setDead();
      player0.add(player1);
      player0.setConnected(false);
      player0.reset(true);
      player1.setConnected(true);
      player0.setDead();
      player1.setDead();
      player0.setZ(0.0F);
      player0.add(player1);
      player0.isConnected();
      player1.getSubparty();
      Party party0 = player1.head;
      player0.remove((Party) null);
      player1.getStrength();
      player1.setDead((long) 0);
      player0.setMoney((-1200.1757F));
      player1.type();
      System.setCurrentTimeMillis((short)4919);
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 1);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      try { 
        dataInputStream0.readLong();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(20507);
      Player player1 = new Player((-1543));
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      Player player2 = new Player(2587);
      boolean boolean1 = player1.isJoinOK(player2, false);
      assertEquals(0, player2.getPictureId());
      assertTrue(player2.isConnected());
      assertFalse(player2.isDead());
      assertEquals(1, player2.getStrength());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertFalse(boolean1 == boolean0);
      assertEquals("Player2587", player2.toString());
      assertEquals("0.0.0.0", player2.getIP());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(0, "", "mlU^/5yE", (-234));
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-234), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("", string0);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(2983);
      float float0 = player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player2983", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      player0.setDead();
      player0.add(player0);
      player0.reset(true);
      player0.setConnected(true);
      player0.setDead();
      player0.setDead();
      player0.isJoinOK(player0, false);
      player0.gangStrength();
      player0.setDead();
      player0.getZ();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(20507);
      boolean boolean0 = player0.isDead();
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player20507", player0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(1544);
      Player player1 = new Player((-3846), "Player", "Player", (-3846), (-2224));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("Player1544", player0.getName());
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      
      int int0 = player1.gangStrength();
      assertEquals((-2224), int0);
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals((-3846), player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-520), "gYeYtPP|#i__cnx:", "gYeYtPP|#i__cnx:", 0, 0);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      player0.gangStrength();
      System.setCurrentTimeMillis(15000L);
      System.setCurrentTimeMillis((-2081L));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(2459);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte)0;
      player0.unpack(byteArray0);
      Player player1 = new Player((byte)89);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals("Player89", player1.getName());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-129), "gui.ModuleBrowserDiaog$ModuleFilter", (-129));
      MockPrintStream mockPrintStream0 = new MockPrintStream("gui.ModuleBrowserDiaog$ModuleFilter");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(bufferedOutputStream0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream1);
      player0.pack(dataOutputStream0);
      System.setCurrentTimeMillis(15000L);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(3, "y3!{JJN<`]0?WZ&fo", " aL/}:", (-723), (-723));
      player0.getStrength();
      Party party0 = player0.gangBoss();
      party0.id = (int) (short)4919;
      player0.add(party0);
      player0.id = 3150;
      player0.pack();
      player0.setZ((-723));
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      int int0 = 1;
      Player player0 = new Player(1);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-5216));
      Player player1 = new Player(5);
      boolean boolean0 = player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte) (-113);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 796, (-1672));
      byteArrayInputStream0.markSupported();
      player1.boss = (Party) player0;
      assertEquals("Player-5216", player1.boss.toString());
      
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean1 = player1.unpack(dataInputStream0);
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertTrue(boolean1 == boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(666, "xqr527n\"MQ6^ ;", 666);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(666, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(2983);
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2983);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      player0.unpack(byteArray0);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player2983", player0.getName());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(2);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals("Player2", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-234), (String) null, 449);
      player0.toString();
      boolean boolean0 = false;
      player0.reset(false);
      player0.setZ((-3358));
      player0.getName();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(977, "[[craoTFMN ", "[[craoTFMN ", 977, 0);
      player0.setMoney(1617.264F);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.setX(977);
      int int0 = player0.getPictureId();
      assertEquals(1617.264F, player0.getMoney(), 0.01F);
      assertEquals(977, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(1193);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      int int1 = player0.getPictureId();
      assertTrue(player0.isConnected());
      assertEquals(0, int1);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player1193", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(2983);
      player0.setDead((long) 2983, true);
      assertEquals(2983L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-3358), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 10);
      player0.toString();
      player0.reset(true);
      player0.setZ(0.2F);
      player0.getName();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-16));
      player0.setX((-16));
      player0.getX();
      float float0 = player0.getMoney();
      assertEquals((-16.0F), player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", string0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(20480);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(20480);
      Player player1 = new Player((short)4919);
      player1.setZ(0.2F);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(0.2F, player1.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(1097);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(1.0F);
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-1), "", (-3590));
      player0.toString();
      player0.reset(false);
      player0.setZ(0.0F);
      player0.getName();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-3590), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      player0.getStrength();
      Player player1 = (Player)player0.gangBoss();
      player1.id = (int) (short)4919;
      player0.add(player1);
      player0.id = 3150;
      player0.setZ((-723));
      System.setCurrentTimeMillis((short)4919);
      int int0 = player1.type();
      assertEquals((-723.0F), player1.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(2983);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-34);
      byteArray0[7] = (byte)4;
      player0.unpack(byteArray0);
      byteArray0[8] = (byte) (-87);
      player0.unpack(byteArray0);
      long long0 = player0.getTimeOfDeath();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, long0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player2983", player0.getName());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(2);
      Player player1 = null;
      player0.reset(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-80);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte) (-78);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.gangStrength();
      player0.id = 0;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
