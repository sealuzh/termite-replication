/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 06:23:03 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-3104));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.575737837976132
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";Bs;\"y  tZ*zLjl,p-");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-689));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8943491735075906
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1746));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.79709058749954
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(3, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer1.consume();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[w{");
      Token token0 = xPathLexer0.number();
      Token token1 = xPathLexer0.dots();
      assertEquals("[", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("w", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("{", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("{", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.endPosition();
      xPathLexer0.consume((-1380));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1017));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.331433984625611
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.colon();
      xPathLexer0.consume((-4637));
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8936217685248664
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("m");
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer1.mod();
      xPathLexer0.div();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.576796039034333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bVPsto} W%O>9I");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.89591898821339
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F{*n&R!mB_u]S!?");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("F{*n&R!mB_u]S!?");
      xPathLexer1.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("&R!mB_u]S!?", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("R", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.797321935099309
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%,9k)SQ)vIXJ2H#U-");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(",", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7955428394729185
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.div();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.consume((-1198));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R#xOKN*-z?Qf}");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("R", token0.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6939987708846065
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LnsNDz:Nw_j");
      Token token0 = xPathLexer0.dots();
      assertEquals("L", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("n", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("sNDz", token2.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0921965331237558
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.consume((-432));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.695263793022494
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QI<<nKBUO.bA");
      XPathLexer xPathLexer1 = new XPathLexer("STuL';42s)'M");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("STuL", token1.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4I{52/J`D[adx");
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("4I{52/J`D[adx");
      xPathLexer1.nextToken();
      xPathLexer1.operatorName();
      xPathLexer1.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4!.-r*0;X+Pjld4");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      assertEquals("4!.-r*0;X+Pjld4", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("65V8Bp<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("65", token0.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.694431281246834
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"C( ^");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("(", token3.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8268994042612063
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QI<<nKBUO.bA");
      Token token0 = xPathLexer0.dots();
      assertEquals("Q", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("nKBUO.bA", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7108808227003576
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Z:F!)PaI3]");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("%", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dots();
      assertEquals("Z", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("!", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$+s[+~QXROTI`");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("+", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8120032774766583
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Y9Y@.w6gi\u0005");
      Token token0 = xPathLexer0.dots();
      assertEquals("'", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("@", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("w6gi\u0005", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("6", token6.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5757919066433397
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HG91}}mFSr{Cr_T@");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("HG91", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.692637421372917
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.442461873193244
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L\"t)5`.");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5773839285111113
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("etljQpm.!Ew");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g:#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("g", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("o", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(14, token3.getTokenType());
      assertEquals("m.", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.693287569462204
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$!Ci#QcpD)(d|");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("$", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("i#QcpD)(d|", token3.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z3+&FFB-a&v_b");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("z3", token0.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k#fMWL&/'k:%q&JNO");
      XPathLexer xPathLexer1 = new XPathLexer("k#fMWL&/'k:%q&JNO");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C$|>");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("me7a");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6552077771092193
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Z:F!)PaI3]");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("!", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.57613028340169
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YA9[ijnm");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9822328529965576
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Z:F!)PaI3]");
      Token token0 = xPathLexer0.dots();
      assertEquals("%", token0.getTokenText());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(2, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("PaI3]", token5.getTokenText());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("P", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8956121677755395
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.literal();
      xPathLexer0.LA(1137);
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("/i6[6^y;tv'Jpj;t");
      xPathLexer0.nextToken();
      xPathLexer0.LA(110);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.getXPath();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.consume();
      assertFalse(xPathLexer0.equals((Object)xPathLexer2));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7F{i");
      Token token0 = xPathLexer0.number();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}7[c");
      Token token0 = xPathLexer0.dots();
      assertEquals("}", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("7", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(3, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",yQ>>]$KU .xKz9W7");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`Pf^");
      XPathLexer xPathLexer1 = new XPathLexer("`Pf^");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("`Pf^", token0.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9001115788823315
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".pN%tO;-0(5`\"@8<");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("%", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.colon();
      assertEquals("t", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wy.}1=R+i'LlJcxg");
      xPathLexer0.minus();
      xPathLexer0.consume((-1017));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.440292171527223
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B{&\"%g");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8CM##%rN|*ef");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1LK");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7097670400725786
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".pN%tO;-0(5`\"@8<");
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.pipe();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer1.star();
      xPathLexer1.rightParen();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("me");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("me", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9542884480034057
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".pN%tO;-0(5`\"@8<");
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals("N", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2864335667410534
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.identifier();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4405338049692915
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^L)>MGO_E3_s9C2:");
      XPathLexer xPathLexer1 = new XPathLexer("^L)>MGO_E3_s9C2:");
      xPathLexer0.dots();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f9\r)IxuT");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("f9", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.577137394214398
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("d_CYts5N", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.2051600276918055
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      int int0 = (-1);
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1));
      XPathLexer xPathLexer2 = new XPathLexer("]CQhDsk(sv;%");
      xPathLexer2.nextToken();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("]CQhDsk(sv;%");
      xPathLexer4.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer("]CQhDsk(sv;%");
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.2816060761117773
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^L)>MGO_E3_s9C2:");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("^", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(")>", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("M", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("G", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.784655555570523
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Y9Y@.w6gi\u0005");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("'", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("Y", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Y@.w6gi\u0005", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("Y", token4.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D$]c\"]|cyx}%\"ZYa");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4407555098800553
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y28qe&GYj\"Eo.t");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5903960257959586
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]av7n%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      assertEquals("a", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("v7n%", token2.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Y9Y@.w6gi\u0005");
      xPathLexer0.consume((-395));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.6217193566477197
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U+Qyu");
      xPathLexer0.getPreviousToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("U", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Qyu", token3.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("- b]tQ%?9U&");
      Token token0 = xPathLexer0.dots();
      assertEquals("-", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("b", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "HL.:";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c|{h");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X|j* ${#F]Yfa_-#1E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.6784909905158156
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(g]ET]?C3po");
      xPathLexer0.equals();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.dollar();
      assertEquals("]", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("E", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("T", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('a');
      assertTrue(boolean0);
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(4, token3.getTokenType());
      assertEquals("]", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W=F@]%H`7|AFD'6");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.339259508471377
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vw");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("vw", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3184911584627153
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^L)>MGO_E3_s9C2:");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("^", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("L", token1.getTokenText());
      
      xPathLexer0.equals();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("M", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(":", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.894789682736259
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{!r8KlB%lc)h");
      xPathLexer0.setXPath("O>'}1}D\"cW%");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("}1}D\"cW%", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("}", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.setXPath(") (");
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token6 = xPathLexer0.dots();
      assertEquals("(", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.endPosition();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("??Gj");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("??Gj", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1T+qb]3@aEU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zhp%E_]y<ypXkEm\"/=X");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("zhp%E_]y<ypXkEm\"/=X");
      assertEquals("zhp%E_]y<ypXkEm\"/=X", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.576767744888392
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rRe@Kn3if0");
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("rRe", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer0.consume();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.785364891522943
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Y9Y@.w6gi\u0005");
      Token token0 = xPathLexer0.dots();
      assertEquals("'", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("Y", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("9", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(16, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = "HL.:";
      XPathLexer xPathLexer0 = new XPathLexer("HL.:");
      xPathLexer0.number();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.620062339551367
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":jy(5P)}z9s6");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifier();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) ()");
      xPathLexer0.setXPath(":jy(5P)}z9s6");
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer1.or();
      assertNull(token1);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*Bv1OebTPl~E)");
      xPathLexer0.dots();
      xPathLexer0.consume((-1120));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.3145681235825613
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("[", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.3124810350710348
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume();
      assertEquals("[ (", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Z:F!)PaI3]");
      Token token0 = xPathLexer0.dots();
      assertEquals("%", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Z", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[x*ObuF-UgkC{Ch4H");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("[", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("x", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lt");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("lt", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/KV&gb#N~SqM.");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.6947615231490274
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k#fMWL&/'k:%q&JNO");
      Token token0 = xPathLexer0.dots();
      assertEquals("k", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("#", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("&/'k:%q&JNO", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(12, token4.getTokenType());
      assertEquals("&/", token4.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*%}K+)JF?f");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|| =L7Un}>}\"");
      xPathLexer0.consume((-1943));
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-496));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.4421507505590725
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l'QL");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      assertEquals("l'QL", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.576040181135618
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":jy(5P)}z9s6");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.identifier();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) ()");
      Token token1 = xPathLexer0.dots();
      assertEquals(":", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("jy", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.283562747916579
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&9Lx");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&9Lx", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&9Lx", token1.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.7378898185269085
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Z:F!)PaI3]");
      Token token0 = xPathLexer0.star();
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("Z", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("!", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(")", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.6812862175167904
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".pN%tO;-0(5`\"@8<");
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("pN%tO;-0(5`\"@8<", token3.getTokenText());
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.3154343936746702
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5/voscqzol2++E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals("v", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.0632544422073003
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Peg>_:;d52");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-776));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.7314124176823344
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Z:F!)PaI3]");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("!", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(")", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("PaI3]", token6.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.3709865170726916
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u:6~`i");
      Token token0 = xPathLexer0.identifier();
      assertEquals("u", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.setXPath("]a07n%");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("]", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("a", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.43973730954914
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0>U<~bU}W<,09I");
      Token token0 = xPathLexer0.dots();
      assertEquals("0", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.equals();
      boolean boolean0 = xPathLexer0.isIdentifierChar('n');
      assertTrue(boolean0);
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals("<", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.4318142572860468
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QI<<nKBUO.bA");
      Token token0 = xPathLexer0.dots();
      assertEquals("Q", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer0.getXPath();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.6940398639604233
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ELR6");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u?jO1A{$>nW");
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-678));
      xPathLexer0.endPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
      
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s#D\">6_k");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2970));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3641704324122648
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-2380));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.792781171425418
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      XPathLexer xPathLexer1 = new XPathLexer("#mA]'VAD,");
      xPathLexer1.comma();
      xPathLexer0.consume((-138));
      xPathLexer0.leftParen();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.576850868104706
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wu-_0/GYA;=:I-$_");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.9005909047987268
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".pN%tO;-0(5`\"@8<");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("p", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("%", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("tO", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(";-0(5`\"@8<", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(";", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.2422546654130802
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^L)>MGO_E3_s9C2:");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("^", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(">", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("MGO_E3_s9C2", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA((-1));
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Js");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Js", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.6956472902699735
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^L)>MGO_E3_s9C2:");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("^", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("L", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('2', char0);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("^L)>MGO_E3_s9C2:");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("^L)>MGO_E3_s9C2:", token3.getTokenText());
      
      char char1 = xPathLexer0.LA(31);
      assertEquals('\uFFFF', char1);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.consume((-776));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.3185897964366913
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^L)>MGO_E3_s9C2:");
      xPathLexer0.setXPath("^L)>MGO_E3_s9C2:");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("^", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.equals();
      assertEquals(")", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("M", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("GO_E3_s9C2", token6.getTokenText());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.3985006590904958
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QI<<nKBUO.bA");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      xPathLexer0.or();
      char char0 = xPathLexer0.LA(2646);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.6882177178594409
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/=C(OYKX%f!On[");
      Token token0 = xPathLexer0.dots();
      assertEquals("/", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("C", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.equals();
      assertEquals("Y", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.getXPath();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("X", token4.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Os2~9y");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Os2", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F*y");
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.hasMoreChars();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("Og@#[!T[$2E");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.739771149259254
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$!Ci#QcpD)(d|");
      xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.7110090047749642
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$!Ci#QcpD)(d|");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.7153558229675774
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0>U<~bU}W<,09I");
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.2904607679293534
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      assertEquals("m.werken.saxpath.T", token1.getTokenText());
      assertNotNull(token1);
      
      XPathLexer xPathLexer1 = new XPathLexer("6IG+Qy~h");
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-284));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^L)>MGO_E3_s9C2:");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer1.consume((-381));
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-862));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('I');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s#D\">6_k");
      xPathLexer0.LA(116);
      XPathLexer xPathLexer1 = new XPathLexer("");
      char char0 = xPathLexer1.LA(1);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.setXPath("");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\uFFFF');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.not();
      assertEquals(23, token0.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("Og@#[!T[$2E");
      boolean boolean0 = xPathLexer2.isIdentifierChar('=');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.3007774667081662
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u:6~`i");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0625730626843437
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(".", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#Lod/*BvZOebTPl~E)", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("Lod", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.0598602245769473
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.star();
      assertEquals("#", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("L", token2.getTokenText());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.9812341275876326
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;`pb[>sPorQ<s{o5");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(";`", token1.getTokenText());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0598602245769473
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.star();
      assertEquals("#", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("L", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.6446327103592484
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("om.werken.saxpath.Token", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('1');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.8965277918330019
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;`pb[>sPorQ<s{o5");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";`pb[>sPorQ<s{o5", token1.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.9403747953356474
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;`pb[>sPorQ<s{o5");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.9840638494221433
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">DAV");
      XPathLexer xPathLexer1 = new XPathLexer("l7(SMz*Pl");
      Token token0 = xPathLexer1.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("l", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.9817721959223112
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;`pb[>sPorQ<s{o5");
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.9826664503376924
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;`pb[>sPorQ<s{o5");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(";", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.1636629577661153
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k#fMWL&/'k:%q&JNO");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token1);
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("f", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.560071396486522
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.6467824734178502
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]a07n%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("a07n%", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("0", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("7", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.4434692101048057
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|| =L78Un}>}\"");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals("|", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer1.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("|| =L78Un}>}\"");
      xPathLexer1.mod();
      xPathLexer1.operatorName();
      xPathLexer2.div();
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.0282085311454154
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">DAV");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("DAV", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.0592176542958227
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.consume(11);
      xPathLexer0.and();
      Token token1 = xPathLexer0.star();
      assertEquals("b", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.060507976876468
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("L", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.6462304277820776
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]av7n%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("av7n%", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("a", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("v", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals("7", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.0613798164579848
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#Lod/*BvZOebTPl~E)", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("L", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.1370468574407508
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=0.9820163961665116
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;`pb[>sPorQ<s{o5");
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.299578494398717
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u:6~`i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("u", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("6", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.0611224162005848
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("#L", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.9804369480107322
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".#Lod/*BvZOebTPl~E)");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(".", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#Lod/*BvZOebTPl~E)", token1.getTokenText());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.9424289503309788
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":;`pb[>sPorQ<s{o5");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";`pb[>sPorQ<s{o5", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.0583529470813207
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F*y");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("y", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }
}
