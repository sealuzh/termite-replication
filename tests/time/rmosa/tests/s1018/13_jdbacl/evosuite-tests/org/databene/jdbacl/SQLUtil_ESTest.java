/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 06:06:22 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBIndex;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.tools.Csv;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.rowio.RowOutputTextQuoted;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("}YRdh7ybvGv");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "}YRdh7ybvGv";
      stringArray0[1] = "=Th]GJ#nuxs";
      stringArray0[2] = "{v";
      stringArray0[3] = "{v";
      stringArray0[4] = "}YRdh7ybvGv";
      stringArray0[5] = "E@j";
      stringArray0[6] = "//";
      stringArray0[7] = "=Th]GJ#nuxs";
      stringArray0[8] = "{v";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "=Th]GJ#nuxs", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("}YRdh7ybvGv", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance(36, "sdl[pbt/");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("{v", dBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.parseColumnTypeAndSize("=Th]GJ#nuxs");
      SQLUtil.normalize("alter index", false);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(36);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals("table", dBTable0.getObjectType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7437009261328056
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter tableupdteconstraint k unique (, , , , , , )");
      SQLUtil.normalize("alter tableupdteconstraint k unique (, , , , , , )", true);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("alter tableupdteconstraint k unique (,,,,,,)");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`&l3y)N}");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.nval = (double) (-4);
      SQLUtil.renderNumber(streamTokenizer0);
      char[] charArray0 = new char[4];
      charArray0[0] = '\u001E';
      charArray0[1] = 'W';
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "Lwt?";
      DBDataType.getInstance((-545), "Lwt?");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      String string1 = "/*";
      Integer.getInteger("/*");
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType.getInstance((-545), "Lwt?");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("/*");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("/*");
      String string0 = SQLUtil.normalize("/*", false);
      assertEquals("/*", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`&l3y)N}");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.nval = (-2756.65294200499);
      SQLUtil.renderNumber(streamTokenizer0);
      char[] charArray0 = new char[4];
      charArray0[0] = '1';
      charArray0[1] = 'W';
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("UNDEPLOY");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "deletek4&kl0h>";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "deletek4&kl0h>", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("UNDEPLOY", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String[] stringArray1 = new String[8];
      stringArray1[0] = "deletek4&kl0h>";
      stringArray1[1] = "UNDEPLOY";
      stringArray1[2] = "deletek4&kl0h>";
      stringArray1[3] = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray1[4] = ", ";
      stringArray1[5] = "deletek4&kl0h>";
      stringArray1[6] = "deletek4&kl0h>";
      stringArray1[7] = "execute- 0";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, (String) null, false, stringArray1);
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      String string0 = SQLUtil.normalize("deletek4&kl0h>", true);
      assertEquals("deletek4 & kl0h >", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(1118, "BLOB");
      Integer integer0 = RawTransaction.COMMIT;
      Integer.getInteger("/*");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("4?ToY)Y92N/^&P");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("4?ToY)Y92N/^&P", defaultDBTable0, dBDataType0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder(1118);
      StringBuilder stringBuilder1 = stringBuilder0.append(1118);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      StringBuilder stringBuilder2 = new StringBuilder("BLOB");
      assertEquals("BLOB", stringBuilder2.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "Ux~Et nN^\\!]*+";
      SQLUtil.normalize("Ux~Et nN^!]*+", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Ux ~ Et nN ^  ! ] * +");
      // Undeclared exception!
      SQLUtil.isDDL("vW/*3BZ");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("A0pqcv-Ew", defaultDBTable0, 2759, "call");
      defaultDBColumn0.setTable(defaultDBTable0);
      defaultDBColumn0.setNullable(true);
      DBDataType dBDataType0 = DBDataType.getInstance(487, "n~sb7");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("PRIMARY KEY ", defaultDBTable0, dBDataType0, integer0, integer1);
      String string0 = defaultDBColumn1.toString();
      assertEquals("PRIMARY KEY  : N~SB7(0,0)", string0);
      
      Boolean boolean0 = new Boolean("call");
      SQLUtil.removeComments("drop index");
      SQLUtil.parseColumnTypeAndSize("drop index");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("z4Ws");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      String string1 = SQLUtil.substituteMarkers(".", "A0pqcv-Ew", (Object) null);
      assertEquals(".", string1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[9];
      DBSchema dBSchema0 = new DBSchema(" 38*@> e/R7");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("}\"h+TO7~}aj3AO7sb\"", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "}\"h+TO7~}aj3AO7sb\"", false, stringArray0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'p';
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" 38*@> e/R7");
      PrintWriter printWriter0 = mockPrintWriter0.append('p');
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      assertEquals("}\"h+TO7~}aj3AO7sb\"", defaultDBTable0.getName());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType dBDataType0 = DBDataType.getInstance((-545), "Lwt?");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("/*");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("/*");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Lwt?", defaultDBTable0, dBDataType0, integer1);
      defaultDBColumn0.setVersionColumn(false);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      StringBuilder stringBuilder1 = new StringBuilder();
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint(" NOT", true, " AND ", "insertreferences");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.482718264517516
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[9];
      SQLUtil.join("#M/=M[hdmLl(^", "create", stringArray0, (String) null, (String) null, stringArray0);
      SQLUtil.mutatesStructure("QU0-~HbGwCn.^4'}1n[");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "QU0-~HbGwCn.^4'}1n[", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      String string1 = SQLUtil.removeComments("SeP^6::[\"RRliGIn<S_");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Character.valueOf('H');
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "Hwi";
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Object object0 = new Object();
      columnDescriptorList0.add(object0);
      columnDescriptorList0.iterator();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(97, "call");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", defaultDBTable0, dBDataType0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("call");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", defaultDBTable0, (DBDataType) null);
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("call", defaultDBTable0, (DBDataType) null, integer0);
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn1;
      SQLUtil.renderColumnNames(dBColumnArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[8];
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = ">}vO[";
      stringArray0[3] = ">}vO[";
      stringArray0[4] = ">}vO[";
      stringArray0[5] = "getDDLResultSet";
      stringArray0[7] = ">}vO[";
      stringArray0[8] = ">}vO[";
      String string0 = SQLUtil.innerJoin(">}vO[", stringArray0, "updatecons", ">}vO[", stringArray0);
      assertEquals("updatecons as >}vO[ on >}vO[.>}vO[ = >}vO[.>}vO[ and >}vO[.null = >}vO[.null and >}vO[.null = >}vO[.null and >}vO[.>}vO[ = >}vO[.>}vO[ and >}vO[.>}vO[ = >}vO[.>}vO[ and >}vO[.getDDLResultSet = >}vO[.getDDLResultSet and >}vO[.null = >}vO[.null and >}vO[.>}vO[ = >}vO[.>}vO[ and >}vO[.>}vO[ = >}vO[.>}vO[", string0);
      
      boolean boolean0 = SQLUtil.isQuery(">}vO[");
      SQLUtil.normalize("updatecons", false);
      SQLUtil.parseColumnTypeAndSize("Illegal column type format: ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Illegal column type format: ");
      String string1 = SQLUtil.normalize("updatecons", false);
      assertEquals("updatecons", string1);
      
      DBSchema dBSchema0 = new DBSchema("");
      dBSchema0.equals(defaultDBTable0);
      String string2 = SQLUtil.renderValue(dBSchema0);
      assertEquals("", string2);
      
      boolean boolean1 = SQLUtil.isProcedureCall(">}vO[");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = ">}vO[";
      stringArray0[1] = "select";
      stringArray0[2] = "select";
      stringArray0[3] = "select";
      stringArray0[5] = "select";
      stringArray0[6] = ">}vO[";
      stringArray0[7] = ">}vO[";
      SQLUtil.isQuery("execute^eq9o < nwn^w73ui");
      SQLUtil.normalize("drop ta", false);
      SQLUtil.parseColumnTypeAndSize(">}vO[");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("create table^eq9o < nwn^w73ui");
      SQLUtil.normalize("select", true);
      DBSchema dBSchema0 = new DBSchema(">}vO[");
      SQLUtil.renderValue(defaultDBTable0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      assertEquals("table", defaultDBTable1.getObjectType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      Integer integer0 = RawTransaction.COMMIT;
      String string0 = "/*";
      // Undeclared exception!
      SQLUtil.isDML("/*");
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.48000000000000004
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "select into";
      stringArray0[1] = "drop indexillegal syntax";
      stringArray0[2] = "select into";
      stringArray0[3] = "select into";
      String string0 = "w%{.i3r";
      SQLUtil.join("drop indexillegal syntax", "select into", stringArray0, "drop indexillegal syntax", "w%{.i3r", stringArray0);
      SQLUtil.mutatesDataOrStructure("select into");
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        constantActionActivation0.getCurrentConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("l", defaultDBTable0, (DBDataType) null);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("l, l", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBTrigger dBTrigger0 = new DBTrigger("1D2cP]*pn!", dBSchema0);
      dBSchema0.addTrigger(dBTrigger0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 10, "");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      defaultDBColumn0.toString();
      defaultDBColumn0.setOwner(compositeDBObject0);
      vector0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      SQLUtil.isDML("");
      String[] stringArray0 = new String[7];
      SQLUtil.parseColumnTypeAndSize("");
      SQLUtil.removeComments("");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", true, stringArray0);
      Object object0 = new Object();
      dBUniqueConstraint0.equals((Object) null);
      dBUniqueConstraint0.equals((Object) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("[ : ]", vector0.toString());
      
      Random.setNextRandom(10);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("  NULL", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Character character0 = new Character('L');
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
      
      ErrorMessages errorMessages0 = new ErrorMessages();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("null = null", false, defaultDBTable0, "null = null");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK null = null", string1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "h.H";
      stringArray0[1] = "h.H";
      stringArray0[2] = "h.H";
      stringArray0[3] = "h.H";
      stringArray0[4] = "h.H";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "h.H", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      Object object0 = new Object();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "execute";
      stringArray0[1] = "execute";
      stringArray0[2] = "execute";
      stringArray0[3] = "execute";
      stringArray0[4] = "execute";
      stringArray0[5] = "execute";
      stringArray0[6] = ">}vO[";
      SQLUtil.parseColumnTypeAndSize("w");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "w";
      boolean boolean0 = SQLUtil.isProcedureCall("into");
      assertFalse(boolean0);
      
      PipedReader pipedReader0 = new PipedReader(479);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = (double) 479;
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("479", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = "";
      StringBuilder stringBuilder0 = new StringBuilder("");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("getFloat(String)", true, "getFloat(String)", "insertreferences");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT getFloat(String) ", stringBuilder0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(tI4}W)k");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"tI4}W\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = SQLUtil.normalize("btUB<M7\"@ 8", true);
      assertEquals("btUB < M7 \"@ 8\"", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.870165328861826
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SQLUtil.isDML("x~viqX`31x3IAvlLz");
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.ownerDotComponent(defaultDBTable0);
      SQLUtil.normalize("", false);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "truncate", false, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append((CharSequence) "truncate");
      stringBuilder1.append("5:>C1PA6B1Z-xE`3");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1, nameSpec0);
      SQLUtil.addRequiredCondition("JAVA_METHOD", stringBuilder0);
      Object object0 = new Object();
      SQLUtil.isProcedureCall("create unique index");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "5:>C1PA6B1Z-xE`3";
      stringArray0[1] = "JAVA_METHOD";
      stringArray0[2] = "JAVA_METHOD";
      stringArray0[3] = "5:>C1PA6B1Z-xE`3";
      stringArray0[4] = "";
      stringArray0[5] = "JAVA_METHOD";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("5:>C1PA6B1Z-xE`3", false, defaultDBTable0, (String[]) null, defaultDBTable0, stringArray0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      RowOutputTextQuoted rowOutputTextQuoted0 = new RowOutputTextQuoted("JAVA_METHOD", "create unique index", "CiuODg?X&#j\"[YA", true, "truncate");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputTextQuoted0, false);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec1, mockPrintWriter0);
      assertEquals("5:>C1PA6B1Z-xE`3", dBForeignKeyConstraint0.getName());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("getFloat(Str,ng)", true, "getFloat(Str,ng)", "insertreferences");
      boolean boolean0 = SQLUtil.isDML("insertreferences");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("insert");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType.getInstance((-545), "Lwt?");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("/*");
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("> JD/*m");
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Integer.valueOf((-139478388));
      Character character0 = new Character('S');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'S'", string0);
      
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Character.isIdeographic(869);
      boolean boolean0 = SQLUtil.isProcedureCall("k!*ZeG5Cb&8{|3");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBCatalog dBCatalog0 = new DBCatalog("insert");
      DBSchema dBSchema0 = new DBSchema("f", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("insert", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance((-1527), "IpMioH");
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("f", defaultDBTable0, dBDataType0, integer1);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0);
      Locale locale0 = Locale.FRENCH;
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) compositeDBObject0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("IpMioH");
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter tableupdteconstraint k unique (, , , , , , )");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(",T/f v>){(m0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: ,T/f v>){(m0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "execute";
      stringArray0[1] = "execute";
      stringArray0[2] = "execute";
      stringArray0[4] = "execute";
      stringArray0[6] = ">}vO[";
      boolean boolean0 = SQLUtil.isQuery("execute");
      String string0 = SQLUtil.innerJoin("execute", stringArray0, ">}vO[", "(u5*]2EDRnU", stringArray0);
      assertEquals(">}vO[ as (u5*]2EDRnU on execute.execute = (u5*]2EDRnU.execute and execute.execute = (u5*]2EDRnU.execute and execute.execute = (u5*]2EDRnU.execute and execute.null = (u5*]2EDRnU.null and execute.execute = (u5*]2EDRnU.execute and execute.null = (u5*]2EDRnU.null and execute.>}vO[ = (u5*]2EDRnU.>}vO[", string0);
      
      SQLUtil.parseColumnTypeAndSize("w");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(execute, execute, execute, , execute, , >}vO[)", string1);
      
      String string2 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string2);
      
      boolean boolean1 = SQLUtil.isProcedureCall("]vHa");
      assertTrue(boolean1 == boolean0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("B!UR+;2?");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string3 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("", string3);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.ownerDotComponent(defaultDBTable0);
      SQLUtil.normalize("null", true);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, (String[]) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append((CharSequence) "&6c^*y>&M+3WHJ4gvd'");
      stringBuilder0.append("null");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.addRequiredCondition("null", stringBuilder0);
      assertEquals("&6c^*y>&M+3WHJ4gvd'null and null", stringBuilder0.toString());
      
      Object object0 = new Object();
      SQLUtil.isProcedureCall("\"Wi;BMa)R/Uv");
      DBSchema dBSchema0 = new DBSchema("rename");
      DBPackage dBPackage0 = new DBPackage("drop tablereferences", dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure("K", dBPackage0);
      String string0 = SQLUtil.typeAndName(dBProcedure0);
      assertEquals("procedure K", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = SQLUtil.normalize("#M/=M[hdmLl(^", true);
      assertEquals("# M / = M [ hdmLl (^", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("BCk[P#SmkT,(");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "BCk[P#SmkT,(";
      stringArray0[1] = "BCk[P#SmkT,(";
      stringArray0[2] = "BCk[P#SmkT,(";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "BCk[P#SmkT,(";
      stringArray0[7] = "BCk[P#SmkT,(";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (BCk[P#SmkT,(, BCk[P#SmkT,(, BCk[P#SmkT,(, , , , BCk[P#SmkT,(, BCk[P#SmkT,() REFERENCES BCk[P#SmkT,((BCk[P#SmkT,(, BCk[P#SmkT,(, BCk[P#SmkT,(, , , , BCk[P#SmkT,(, BCk[P#SmkT,()", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("#M/=M[hdmLl(^", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", defaultDBTable0, (DBDataType) null);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      String string0 = SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("call", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("call");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("^T`->TcDY]].M`{", stringBuilder0);
      assertEquals("^T`->TcDY]].M`{", stringBuilder0.toString());
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "^T`->TcDY]].M`{", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT ^T`->TcDY]].M`{ ", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("x~viqX`31x3IAvlLz");
      assertFalse(boolean0);
      
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.setName("");
      defaultDBTable0.getIndex("JAVA_METHOD");
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("", string0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "}x$_UP";
      stringArray0[1] = "";
      stringArray0[2] = "create unique index";
      stringArray0[3] = "&6c^*y>&M+3WHJ4gvd'";
      stringArray0[4] = "create unique index";
      String string1 = SQLUtil.normalize("create table,", false);
      assertEquals("create table,", string1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("\"` aP$@/^V\"s<_", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("`&l3y)N}", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Random.setNextRandom(1);
      Random.setNextRandom(1393);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("renamesdl[pbt/vmeqo:ur+`", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("", dBSchema0);
      DBProcedure dBProcedure0 = new DBProcedure("", dBPackage0);
      String string0 = SQLUtil.ownerDotComponent(dBProcedure0);
      assertEquals(".", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[10];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Class ", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      stringArray0[0] = "alter tableupdteconstraint k unique (, , , , , , )";
      stringArray0[1] = "' on bean ";
      stringArray0[2] = "alter tableupdteconstraint k unique (, , , , , , )";
      String[] stringArray1 = new String[9];
      stringArray1[0] = ") %S;gU773$n%";
      stringArray1[1] = "' on bean ";
      stringArray1[2] = "alter tableupdteconstraint k unique (, , , , , , )";
      stringArray1[3] = "alter tableupdteconstraint k unique (, , , , , , )";
      stringArray1[4] = "' on bean ";
      stringArray1[5] = ") %S;gU773$n%";
      stringArray1[6] = "alter tableupdteconstraint k unique (, , , , , , )";
      stringArray1[7] = ") %S;gU773$n%";
      stringArray1[8] = "alter tableupdteconstraint k unique (, , , , , , )";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("' on bean ", stringArray0, ") %S;gU773$n%", "alter tableupdteconstraint k unique (, , , , , , )", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "STRUCT";
      String string1 = "oQE4c%KEQT@1";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "=rVCvqC";
      stringArray0[1] = "oQE4c%KEQT@1";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      int int0 = 489;
      // Undeclared exception!
      try { 
        stringBuilder0.replace(489, (-1139635621), "=rVCvqC");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = SQLUtil.normalize("1*2cP]P*pn!", false);
      assertEquals("1 * 2cP ] P * pn !", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = SQLUtil.normalize("tXB/'|Oc", true);
      assertEquals("tXB / '|Oc'", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = SQLUtil.normalize("A7Sv9FS48~31/[8kW", false);
      assertEquals("A7Sv9FS48 ~ 31 / [ 8kW", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType dBDataType0 = DBDataType.getInstance((-545), "Lwt?");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("/*");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.sql.execute.CardinalityCounter");
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("/*", defaultDBTable0, dBDataType0, integer2);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("lg?[L1eFVFgB2BpO)", defaultDBTable0, dBDataType0, integer0, integer2);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn1, stringBuilder0);
      StringBuilder stringBuilder1 = new StringBuilder();
      assertFalse(stringBuilder1.equals((Object)stringBuilder0));
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4642567260559776
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("call", defaultDBTable0, (DBDataType) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "BTREE";
      stringArray0[1] = "call";
      stringArray0[2] = "BTREE";
      stringArray0[3] = "call";
      String string0 = SQLUtil.join("BTREE", "BTREE", stringArray0, "call", "call", stringArray0);
      assertEquals("BTREE join call as call on BTREE.BTREE = call.BTREE and BTREE.call = call.call and BTREE.BTREE = call.BTREE and BTREE.call = call.call", string0);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "BTREE", false, stringArray0);
      defaultDBTable0.getIndexes();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT BTREE PRIMARY KEY (BTREE, call, BTREE, call)", string1);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("exec");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = SQLUtil.normalize("j@yC,;^_0w%n9.", false);
      assertEquals("j @ yC, ; ^ _0w % n9.", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = "k";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("3`bF:7[M=\"7A<XR:^6", (String[]) null, "k", "]1t)7>P2{9", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("]rNb[", "]rNb[", (String[]) null, "]rNb[", "]rNb[", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = SQLUtil.normalize("`&l3y)N}", true);
      assertEquals("` & l3y) N }", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "*;3?v";
      stringArray0[1] = "*;3?v";
      stringArray0[2] = "*;3?v";
      stringArray0[3] = "*;3?v";
      SQLUtil.renderColumnListWithTableName("*;3?v", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("*;3?v.*;3?v, *;3?v.*;3?v, *;3?v.*;3?v, *;3?v.*;3?v");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("]%n>k`z.{[*nHH+G8j", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("*;3?v");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder2 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder1, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder2.insert(1230, 1230);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1230
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      String string0 = "gtFlot(StriP)";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("unicodeStream", false, defaultDBTable0, "unicodeStream");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      int int0 = (-1324);
      StringBuilder stringBuilder2 = stringBuilder1.append((-1324));
      // Undeclared exception!
      try { 
        stringBuilder2.appendCodePoint((-1884484762));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("- ", true, "insertreferences", "insertreferences");
      SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0);
      assertEquals("CONSTRAINT \"- \" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(" RE*ERECE9yS ");
      SQLUtil.addOptionalCondition(" RE*ERECE9yS ", stringBuilder0);
      assertEquals(" RE*ERECE9yS  or  RE*ERECE9yS ", stringBuilder0.toString());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("exec");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("exec");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "exec";
      stringArray0[1] = "exec";
      stringArray0[2] = "exec";
      stringArray0[3] = "s3I";
      stringArray0[4] = "s3I";
      stringArray0[5] = "s3I";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "s3I", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("s3I", true, dBPrimaryKeyConstraint0);
      dBPrimaryKeyConstraint0.setOwner(defaultDBTable0);
      dBPrimaryKeyConstraint0.setDoc("#`_$,w");
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(dBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType dBDataType0 = DBDataType.getInstance((-545), "Lwt?");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("/*");
      boolean boolean0 = new Boolean("/*");
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("/*");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Lwt?", defaultDBTable0, dBDataType0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      StringBuilder stringBuilder1 = new StringBuilder();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter session";
      stringArray0[1] = "Lwt?";
      stringArray0[2] = "Lwt?";
      stringArray0[3] = "/*";
      stringArray0[4] = null;
      stringArray0[5] = null;
      String[] stringArray1 = new String[1];
      stringArray1[0] = "/*";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin((String) null, stringArray0, stringArray0[5], "9", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[9];
      DBSchema dBSchema0 = new DBSchema(" 38*@> e/R7");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("}\"h+TO7~}aj3AO7sb\"", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "}\"h+TO7~}aj3AO7sb\"", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'p';
      stringBuilder0.append(charArray0);
      assertEquals("CONSTRAINT }\"h+TO7~}aj3AO7sb\" p", stringBuilder0.toString());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("truncate", false, "truncate", "truncate");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "btree";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "btree";
      stringArray0[1] = "btree";
      stringArray0[2] = "btree";
      stringArray0[3] = "btree";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "btree", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "btree");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) stringBuilder0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        stringBuilder2.insert(3, charArray0, 2321, 2321);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // offset 2321, len 2321, str.length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Character character0 = new Character('%');
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Character.isIdeographic((-1765));
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      String[] stringArray0 = new String[9];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      Object object0 = new Object();
      Character.valueOf('%');
      defaultDBTable0.countProviders();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      JMXPrincipal jMXPrincipal0 = null;
      try {
        jMXPrincipal0 = new JMXPrincipal((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // illegal null input
         //
         verifyException("javax.management.remote.JMXPrincipal", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("select intoreferences", (String[]) null, "]rNb[", "select intoreferences", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String[] stringArray0 = new String[0];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("SELECT * FROM null WHERE ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'SELECT * FROM null WHERE ' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "!%HAR%ax=aX[I0_>";
      stringArray0[1] = "!%HAR%ax=aX[I0_>";
      stringArray0[2] = "!%HAR%ax=aX[I0_>";
      stringArray0[3] = "!%HAR%ax=aX[I0_>";
      stringArray0[4] = "!%HAR%ax=aX[I0_>";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "!%HAR%ax=aX[I0_>";
      stringArray1[1] = "!%HAR%ax=aX[I0_>";
      stringArray1[2] = "!%HAR%ax=aX[I0_>";
      stringArray1[3] = "LIKE ";
      stringArray1[4] = "!%HAR%ax=aX[I0_>";
      stringArray1[5] = "!%HAR%ax=aX[I0_>";
      stringArray1[6] = "!%HAR%ax=aX[I0_>";
      String string0 = SQLUtil.leftJoin("!%HAR%ax=aX[I0_>", stringArray0, "!%HAR%ax=aX[I0_>", "!%HAR%ax=aX[I0_>", stringArray1);
      assertEquals("left join !%HAR%ax=aX[I0_> as !%HAR%ax=aX[I0_> on !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_> = !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_> and !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_> = !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_> and !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_> = !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_> and !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_> = !%HAR%ax=aX[I0_>.LIKE  and !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_> = !%HAR%ax=aX[I0_>.!%HAR%ax=aX[I0_>", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(1118, "BLOB");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select into");
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer1);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("BLOB BLOB NULL", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("]1T^[");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("]1T^[", defaultDBTable0, (DBDataType) null, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin((String) null, stringArray0, (String) null, "*feA#,K", stringArray0);
      assertEquals("left join null as *feA#,K on ", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("updateconstraint k unique (, , , , , , )");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("create table ");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("`&l3y)N}");
      assertNull(boolean0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("SELECT * FROM ");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      boolean boolean0 = SQLUtil.isDML("cree");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("alter session");
      assertNotNull(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("XSDB6.D");
      DBDataType dBDataType0 = DBDataType.getInstance(662, "XSDB6.D");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("XSDB6.D", defaultDBTable0, dBDataType0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      StringBuilder stringBuilder1 = new StringBuilder();
      assertFalse(stringBuilder1.equals((Object)stringBuilder0));
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "@_H0";
      stringArray0[1] = ")[6B`";
      stringArray0[2] = ")[6B`";
      stringArray0[3] = "A2{5x-";
      stringArray0[4] = "@_H0";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "A2{5x-";
      // Undeclared exception!
      try { 
        SQLUtil.join("@_H0", ")[6B`", stringArray0, (String) null, "@_H0", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String[] stringArray0 = new String[9];
      String[] stringArray1 = new String[2];
      stringArray1[0] = "#M/=M[hdmLl(^";
      stringArray1[1] = "4{T9^/";
      String string0 = SQLUtil.join("#M/=M[hdmLl(^", "4{T9^/", stringArray1, "4{T9^/", "|,", stringArray0);
      assertEquals("#M/=M[hdmLl(^ join 4{T9^/ as |, on 4{T9^/.#M/=M[hdmLl(^ = |,.null and 4{T9^/.4{T9^/ = |,.null", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = SQLUtil.normalize("^T`->TcDY]].M`{", false);
      assertEquals("^ T ` - > TcDY ] ].M ` {", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v|0Hfse}[,O!/T}s";
      stringArray0[1] = "v|0Hfse}[,O!/T}s";
      stringArray0[2] = "v|0Hfse}[,O!/T}s";
      stringArray0[3] = "v|0Hfse}[,O!/T}s";
      stringArray0[4] = "getCurrentSchemaName";
      stringArray0[5] = "v|0Hfse}[,O!/T}s";
      stringArray0[6] = "v|0Hfse}[,O!/T}s";
      stringArray0[7] = "v|0Hfse}[,O!/T}s";
      stringArray0[8] = "v|0Hfse}[,O!/T}s";
      SQLUtil sQLUtil0 = new SQLUtil();
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("~E9zCW+8+", "create", stringArray0, "~E9zCW+8+", "7|", stringArray0);
      assertEquals("~E9zCW+8+ join ~E9zCW+8+ as 7| on create.null = 7|.null", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join("0W2ERE ", "crea", stringArray0, "4{T9^/", "4{T9^/", stringArray0);
      assertEquals("0W2ERE  join 4{T9^/ as 4{T9^/ on crea.null = 4{T9^/.null and crea.null = 4{T9^/.null", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("inner", "inner", stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("null as null on ", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("alter materialized viewupdate");
      DBTable dBTable0 = null;
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("#M/=M[hdmLl(^", "3c\tmU)`qe", (String[]) null, "3c\tmU)`qe", "#M/=M[hdmLl(^", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("", "", stringArray0, "", "}+L7!g[,=%hGk58au", stringArray0);
      assertEquals(" as }+L7!g[,=%hGk58au on ", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("delete");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Character character0 = new Character('0');
      String string0 = SQLUtil.substituteMarkers("delete", "o7ycncYC", character0);
      assertEquals("delete", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Object[] objectArray0 = new Object[2];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      String string0 = SQLUtil.renderValue(object0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = "5IX4|";
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("renpame");
      SQLUtil.addRequiredCondition("renpame", stringBuilder0);
      assertEquals("renpame and renpame", stringBuilder0.toString());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("!>^Ufn_{l1DrzQ", stringBuilder0);
      assertEquals("!>^Ufn_{l1DrzQ", stringBuilder0.toString());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("?%1r9*1#d7n5N");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = "2";
      SQLUtil.substituteMarkers("", "2", "");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      String string1 = "*=qj)V:BEA _V.";
      String string2 = "m1(gMn$%5h";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("m1(gMn$%5h");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("2");
      defaultDBTable1.getIndex("m1(gMn$%5h");
      // Undeclared exception!
      try { 
        defaultDBTable0.removeIndex((DBIndex) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = SQLUtil.renderValue(")*{u.6Txw>d$R*");
      assertEquals("')*{u.6Txw>d$R*'", string0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("v>_Y%", "kN/Oo'$xe`Aj`", "kN/Oo'$xe`Aj`");
      assertEquals("v>_Y%", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("alter tableupdteconstraint k unique (, , , , , , )");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, (Object) defaultDBTable0);
      StringBuffer stringBuffer0 = new StringBuffer(stringBuilder1);
      StringBuilder stringBuilder2 = stringBuilder1.append(stringBuffer0);
      StringBuilder stringBuilder3 = stringBuilder2.append(true);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("#0^7UyH", true, (String) null, "SYSCS_BULK_INSERT");
      StringBuilder stringBuilder4 = stringBuilder3.append((Object) dBCheckConstraint0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder4, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("mHL_L/kiqM}b4^p");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
