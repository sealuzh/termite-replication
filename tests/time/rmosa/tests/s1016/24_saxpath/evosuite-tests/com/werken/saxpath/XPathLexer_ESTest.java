/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 04:24:59 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.896022613622341
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      String string0 = token0.toString();
      assertEquals("[ (15) ()", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("|JE5pfjmz");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("JE5pfjmz", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.minus();
      assertEquals(6, token3.getTokenType());
      
      int int0 = xPathLexer2.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3307743196659723
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.consume((-498));
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) ()");
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      xPathLexer2.leftBracket();
      xPathLexer1.rightBracket();
      xPathLexer1.colon();
      xPathLexer2.not();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9822611471424985
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!&S`,G{");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("!&", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("`", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("`,G{", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("{", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8958872406698566
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-zxtkGjz|IJ/|G");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-zxtkGjz|IJ/|G");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("z", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer1.star();
      assertEquals("-", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("Lc/z{-L");
      Token token4 = xPathLexer1.nextToken();
      assertEquals("xtkGjz", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.894584014520225
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D.3O@!]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.equals();
      assertEquals("@", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0634830818017136
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("=", token0.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("-", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("Y ", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals("4", token5.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("Y|?b&Bq7tC8U");
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer1.and();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("&");
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer2.identifier();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6899782005246253
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".>F_3kciC");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals("F", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ayLYTA^4D.mT(q[A");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("t", token0.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V%=dj*l");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.dots();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.consume((-1622));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7205105261597833
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">fqS4,l!`i8wS{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(",", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.283562747916579
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eny_%6'3{/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("eny_", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%6'3{/", token1.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.576903470613846
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("'Ox>AEO$R");
      Token token0 = xPathLexer2.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ts\"d['");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<<7qp~$ISJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5753765010294294
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b<y;]-9n^AlnU[kSpe");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("b", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8938952727983707
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!&S`,G{");
      Token token0 = xPathLexer0.colon();
      assertEquals("!", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("g");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("g", token4.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.895870981300395
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">fqS4,l!`i8wS{");
      Token token0 = xPathLexer0.colon();
      assertEquals(">", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(",", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("F", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.796702740052869
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-195));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2064628995149085
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+9#A%b.%#DX+B Fz[");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      String string0 = token1.toString();
      assertEquals("[ (26) (9)", string0);
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      String string1 = token4.toString();
      assertEquals("[ (20) (b)", string1);
      
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.at();
      xPathLexer0.dollar();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("D", token6.getTokenText());
      
      xPathLexer0.setPreviousToken(token5);
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.leftParen();
      assertEquals("+", token8.getTokenText());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("B ", token9.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      char char0 = xPathLexer1.LA(3068);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.dollar();
      xPathLexer1.number();
      xPathLexer1.or();
      Token token10 = xPathLexer0.number();
      assertEquals("", token10.getTokenText());
      assertEquals(30, token10.getTokenType());
      
      xPathLexer0.and();
      Token token11 = xPathLexer1.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer1.identifier();
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      int int0 = 0;
      xPathLexer0.consume((-74));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7777498192337609
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.or();
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.136493227051156
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.)QI_B7K(.n{eLV7`}");
      Token token0 = xPathLexer0.at();
      String string0 = token0.toString();
      assertEquals("[ (16) (:)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(")", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (16) (:)");
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (16) (:)");
      Token token3 = xPathLexer2.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer1.colon();
      assertEquals(" ", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals("16", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer2.operatorName();
      char char0 = xPathLexer1.LA(0);
      assertEquals('6', char0);
      
      xPathLexer1.mod();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer2.div();
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals(" ", token8.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.setXPath("E6he/ze");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("");
      assertEquals("", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.270970599262435
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uG8b\"BNLVje6[!7%");
      Token token0 = xPathLexer0.not();
      assertEquals("u", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      String string0 = token1.toString();
      assertEquals("[ (15) (G8b)", string0);
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.star();
      assertEquals("L", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      String string1 = token4.toString();
      assertEquals("[ (19) (Vj)", string1);
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals("6", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("[", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.setPreviousToken(token4);
      xPathLexer0.getPreviousToken();
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      assertEquals("7", token9.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer0.getPreviousToken();
      Token token10 = xPathLexer1.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token11 = xPathLexer2.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("UT<U=Yy rP*gMUVrd^P");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("UT", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("<", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.694462146396993
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ayLYTA^4D.mT(q[A");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("LYTA", token3.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.7996265131123885
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4386637722437188
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.setXPath("E6he/ze");
      xPathLexer0.setXPath("^)_WDC+zk]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^)_WDC+zk]", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#?.c\f&9=.V-#6G");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#?.c\f&9=.V-#6G", token0.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.578017040255334
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MR>5d/FFhX@n(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("MR", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals("5", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("/", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("FFhX", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0052951308578226
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.)QI_B7K(.n{eLV7`}");
      xPathLexer0.setXPath(":.)QI_B7K(.n{eLV7`}");
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(".", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      xPathLexer0.or();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.2782677265167133
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rw\"ScBT");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("rw", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7997279501369023
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+4d;*<6+t{?#*GmR~");
      XPathLexer xPathLexer1 = new XPathLexer("+4d;*<6+t{?#*GmR~");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.slashes();
      xPathLexer1.LA(19);
      xPathLexer0.mod();
      xPathLexer1.plus();
      xPathLexer1.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D!-r;:K*yhKL");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!&S`,G{");
      XPathLexer xPathLexer1 = new XPathLexer("8@2&Z@N{mIZ,t");
      xPathLexer1.consume();
      Token token0 = xPathLexer1.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifier();
      assertEquals("2", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y!N_/q");
      XPathLexer xPathLexer1 = new XPathLexer("Y!N_/q");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("Y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("Y", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.2383741050488317
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u+!n^5W!xx");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("u", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.8940193038061226
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.consume((-30));
      xPathLexer0.consume((-30));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0|{4.R4HEIJ.Vuy");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(17, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hwN WY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("hwN", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G\"Y^-");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.getXPath();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      int int0 = xPathLexer0.endPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1r8");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.576709301242677
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ayLYTA^4D.mT(q[A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ayLYTA", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("^", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.796837966557264
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*$9@fy");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("=L^^B(9@");
      xPathLexer1.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7996611163858582
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*HYy");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("*HYy");
      xPathLexer2.operatorName();
      xPathLexer2.LA(88);
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5778234187024895
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-zxtkGjz|IJ/|G");
      XPathLexer xPathLexer1 = new XPathLexer("-zxtkGjz|IJ/|G");
      Token token0 = xPathLexer1.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("Lc/z{-L");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("zxtkGjz", token1.getTokenText());
      
      Token token2 = xPathLexer1.literal();
      assertEquals("IJ/", token2.getTokenText());
      assertNotNull(token2);
      assertEquals(27, token2.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.798452861589087
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y!N_/q");
      XPathLexer xPathLexer1 = new XPathLexer("Y!N_/q");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer1.plus();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%q.,%|!4?c.2");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.dots();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.)QI_B7K(.n{eLV7`}");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("=Y{uIQ/Um9<$|YJ3<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("W'H%\"<\"T3yDhx}etH9");
      Token token1 = xPathLexer2.nextToken();
      assertEquals("W", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.691477450899438
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("*");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E6he/ze");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6#nXZug`a#4zR");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.798987970691887
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4_jCYEPa2");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u+!n^5W!xx");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("u", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.694462146396993
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hJ7Ers$VWC^_Vp");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("J7Ers", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J3] pBO");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("3", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8937695649475694
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MHxj4f\"");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kZ7\"|5(Wo");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p#)g(l");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("p", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E6he/ze");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("E6he", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dd~^]].N5|");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("d", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("~^]].N5|", token2.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6649521714858442
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">fqS4,l!`i8wS{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("fqS4", token1.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("POB3(O&+3)b^e>~v~S");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("POB3", token0.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6940799232481694
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q](li:eE5");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("MR>5d/FFhX@n(");
      Token token1 = xPathLexer1.identifier();
      assertEquals("MR", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.2842967826608906
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%H*5)zK\"r");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%H*5)zK\"r", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.4411482442934083
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.LA(18);
      int int0 = xPathLexer0.endPosition();
      assertEquals(29, int0);
      
      xPathLexer0.LA(18);
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.dots();
      assertEquals(14, token2.getTokenType());
      assertEquals("m.", token2.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n1)(1VvX`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("n1", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(2, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MR>5d/FFhX@n(");
      Token token0 = xPathLexer0.minus();
      assertEquals("M", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("R>5d/FFhX@n(", token2.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.814273215740311
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("vZ", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(4, token3.getTokenType());
      assertEquals("]", token3.getTokenText());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("?", token5.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wN:0^XSk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("wN", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.440859644004808
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<<7qp~$ISJ");
      Token token0 = xPathLexer0.dots();
      assertEquals("<", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-zxtkGjz|IJ/|G");
      xPathLexer0.setXPath("~R2Q}PqlfW{Ma");
      xPathLexer0.setXPath("-zxtkGjz|IJ/|G");
      XPathLexer xPathLexer1 = new XPathLexer("XGO/I!1j=ymDWk$f");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.7969671154659554
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";W");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.576877439115733
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b<y;]-9n^AlnU[kSpe");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("15D_E\"p4x4_K}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("15", token0.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5723992881587088
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("5Q2MTv^pH-sU*MeZ");
      xPathLexer2.nextToken();
      xPathLexer1.consume();
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.8908530192772437
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("AUX0k-C8AOGr>rnqf");
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.3742003278289154
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MR>5d/FFhX@n(");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("5d", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("MR>5d/FFhX@n(");
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("M", token2.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-S>b8+U3x^\"7xs");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.6929927848725668
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2i0]IbfPj ~1~*QOd");
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("4l}9");
      assertEquals("4l}9", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("rw\"ScBT");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("rw", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.setXPath("?jYmMsFCL@DcR");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?jYmMsFCL@DcR", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.and();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">fqS4,l!`i8wS{");
      xPathLexer0.setXPath("{qPBr;|*UJ>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{qPBr;|*UJ>", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.2832264370837652
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.7994404389059953
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z0TlQu");
      Token token0 = xPathLexer0.dots();
      assertEquals("Z", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("TlQu", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Z0TlQu");
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.setXPath("B6'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("B6", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("'", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6943006007280323
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Z", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals("8", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<K");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("K", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MR>5d/FFhXn(");
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-746));
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.4374355727841266
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9%=eDp:kgM'");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%=eDp:kgM'", token1.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.691342224395043
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("9%=eDp:kgM'");
      Token token0 = xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.minus();
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.892012919857194
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.dollar();
      Token token1 = xPathLexer1.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".ICVWR=INf");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ICVWR=INf", token1.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.7609208268970549
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("]", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("8", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("vZ", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.7969671154659554
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.consume((-239));
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        xPathLexer1.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      int int0 = xPathLexer0.endPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.43570606742266
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("2i0]IbfPj ~1~*QOd");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("2", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("O", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}V`8GS`C|;p#19;A7x");
      Token token0 = xPathLexer0.dots();
      assertEquals("}", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("V", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.955773143652999
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("vZ", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("]", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("-", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("Y", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals("8", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals("?", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = "7?c`$qAt.E!ZTY#~=";
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-774));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.6931895529756336
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-4401));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.6931916729677392
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">fqS4,l!`i8wS{");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("fqS4", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("l!`i8wS{", token3.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = (-644);
      xPathLexer0.consume((-644));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-2387));
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8W( 9RD7%uK=e6~yE");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-795));
      token0.toString();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('=');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.89413587430213
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierStartChar('B');
      xPathLexer0.relationalOperator();
      xPathLexer0.consume(0);
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.2815553875954016
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NNuc");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      xPathLexer0.getPreviousToken();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5629882660282466
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MR>5d/FFhX@n(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("MR", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("5", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.endPosition();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.5709669654086493
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      boolean boolean0 = xPathLexer0.isIdentifierChar('|');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.617849961542679
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MeC$ym:F{X'3G");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("M", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("eC", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("ym", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(":", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("F", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("{", token6.getTokenText());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.3457918953273762
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.7987682991009155
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cmsf?#)>QVw5}i4m>");
      Token token0 = xPathLexer0.plus();
      assertEquals("C", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("msf", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("?#", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.3179532293074472
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-zxtkGjz|IJ/|G");
      xPathLexer0.setXPath("f$kwV/&@M48Yh@=K~");
      xPathLexer0.setXPath("Ay-ls6e=?/S?odne");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ay-ls6e", token0.getTokenText());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(1);
      assertEquals('=', char0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0244042546138663
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<<7qp~$ISJ");
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1995128198380676
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8[]?J*\"+");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(3, token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.5388087555890484
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!&S`,G{");
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.0646616945352338
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NeC");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.2647183518216225
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wN:0^XSk");
      Token token0 = xPathLexer0.dots();
      assertEquals("w", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.1632317355873327
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!&S`,G{");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.106692918506765
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NeC");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.3813599532900276
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.847111573229366
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fe!S0)eA}!%");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      assertEquals("fe", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.consume(1);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("S0)eA}!%", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("0)", token3.getTokenText());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.5498488778081225
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y!N_/q");
      XPathLexer xPathLexer1 = new XPathLexer("Y!N_/q");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2111));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s4");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1543116000747342
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.setXPath(")");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.2742442165406938
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8[]?J*\"+");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("8", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("]?", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.3447856046584215
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u+!n^5W!xx");
      Token token0 = xPathLexer0.pipe();
      assertEquals("u", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("+", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.2202641043259714
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<<7qp~$ISJ");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.1704931614283398
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".<1S!]");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.currentPosition();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.6931153970013586
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2i0]IbfPj ~1~*QOd");
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("4l}9");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.618469101222639
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-53));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.068781408578612
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NeC");
      xPathLexer0.and();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("NeC", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.1100409208071684
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer(">fqS4,l!`i8wS{");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer1.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.0272902574998692
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<NeC");
      xPathLexer0.literal();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.3857962923796348
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.)QI_B7K(.n{eLV7`}");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.9382508241881515
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.)QI_B7K(.n{eLV7`}");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.8994823983331363
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":.)QI_B7K(.n{eLV7`}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
  }
}
