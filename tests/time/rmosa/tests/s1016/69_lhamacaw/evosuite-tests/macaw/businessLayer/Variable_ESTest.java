/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 04:35:59 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.Locale;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User((String) null, "r4KhJau3=s*w;");
      rawVariable0.getName();
      user0.setIdentifier((-1));
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("^z/");
      arrayList0.add(ontologyTerm1);
      ontologyTerm1.setTerm("+~D1.4,T_tRpu/Q {7");
      ontologyTerm1.setIdentifier((-1101));
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      derivedVariable0.createVariableSummary();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=4.303436683318704
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_GET_SOURCE_VARIABLES");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setAvailability("");
      User user0 = new User("", "UNABLE_TO_GET_SOURCE_VARIABLES");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      user0.clone();
      rawVariable0.setCleaningStatus("UNABLE_TO_GET_SOURCE_VARIABLES");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.notes = "UNABLE_TO_GET_SOURCE_VARIABLES";
      rawVariable1.updateOntologyTerm(ontologyTerm2);
      rawVariable1.getOntologyTerms();
      User user1 = new User("", "");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      assertEquals("UNABLE_TO_GET_SOURCE_VARIABLES", rawVariable0.getNotes());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getSourceVariables();
      rawVariable1.clone();
      derivedVariable0.getName();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=4.257798755149348
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      rawVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isCleaned());
      
      String string0 = derivedVariable0.getCodeBookNumber();
      assertNotNull(string0);
      
      supportingDocument0.setDocumentCode("UNABLE_TO_DELETE_CLEANING_STATE");
      String string1 = derivedVariable0.getLabel();
      assertNotNull(string1);
      
      rawVariable1.getDisplayItemIdentifier();
      derivedVariable0.isNewRecord();
      derivedVariable0.setColumnEnd((String) null);
      User user1 = new User("SUPPORTING_DOCUMENT", "");
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      derivedVariable0.isCoded();
      String string2 = derivedVariable0.getNotes();
      assertNull(string2);
      
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      User user2 = new User("variable.isCleaned.saveChanges.changedToNotClean", "variable.isCleaned.saveChanges.changedToNotClean");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      rawVariable1.getCleaningDescription();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.7541595301474677
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCleaningStatus("6,9P#=\"a-fgb0(%k%8a");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setColumnStart("|X,2*X");
      rawVariable0.setLabel((String) null);
      derivedVariable0.setForm("F'xA{bg&+}+/0L");
      rawVariable0.setCodeBookNumber("F'xA{bg&+}+/0L");
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getColumnEnd();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList1);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList2);
      rawVariable0.clone();
      derivedVariable0.getColumnEnd();
      derivedVariable0.clone();
      User user0 = new User((String) null, "O/Gi0>D\b0.6/\u0002}s2");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "Unknown";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.getOntologyTerms();
      derivedVariable0.getLabel();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.questionNumber = "";
      derivedVariable0.addSourceVariable(rawVariable0);
      User user0 = new User((String) null, "Unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        User.checkValidEmail("CK;1*Tjq");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"CK;1*Tjq\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.791946795121705
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable1.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setAvailability("");
      User user0 = new User("", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      user0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable1.removeSourceVariables(arrayList3);
      User user1 = new User("", ")$E>wb?}HA");
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      assertNotNull(macawChangeEvent1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      
      Variable variable0 = derivedVariable1.getAlternativeVariable();
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2889));
      Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setIsNewRecord(true);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User();
      String string0 = ")$E\\>wb?}HA";
      rawVariable0.notes = "UNABLE_TO_CHECK_VARIABLE_DUPLICATES";
      User user1 = new User();
      user0.clone();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      try { 
        User.validateFields(user1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.441371494503864
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(1L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      rawVariable0.setName("*");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setLastName("Unknown");
      User user1 = new User();
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      derivedVariable0.isCoded();
      derivedVariable0.getNotes();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getName();
      User user2 = new User("*", "qE]4(yD2.l=35");
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      assertEquals("*", rawVariable0.getName());
      
      derivedVariable0.getAlias();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setColumnStart("blank");
      rawVariable0.setFilePath("i6R^]]?:w5BW!(");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.getFilePath();
      assertEquals("blank", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.632388625867038
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("2", "2");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(1370L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      rawVariable0.setName("*");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4410832744684536
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("QFv]BsG|r$", "QFv]BsG|r$");
      user0.setIdentifier((-3992));
      User user1 = new User();
      user1.setCounty("QFv]BsG|r$");
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      rawVariable0.getCleaningDescription();
      assertTrue(rawVariable0.isCleaned());
      
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.719050137453823
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_GET_SOURCE_VARIABLES");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      derivedVariable0.createVariableSummary();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      User user0 = new User("", "UNABLE_TO_GET_SOURCE_VARIABLES");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = (User)user0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable0);
      assertEquals(2, arrayList2.size());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1776));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(1490);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("FYwp,>Lt;7ac<");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("UNABLE_TO_DELETE_CLEANING_STATE");
      derivedVariable0.getSupportingDocuments();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", derivedVariable0.getYear());
      
      derivedVariable0.setYear((String) null);
      derivedVariable0.isCleaned();
      derivedVariable0.getYear();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.6325702393209625
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(1L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      rawVariable0.setName("*");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setAvailability("[JH(g]r}TfJGL");
      rawVariable0.getOntologyTerms();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setPassword("UNABLE_TO_ASSOCIATE_DOCUMENT");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_GET_SOURCE_VARIABLES");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setAvailability("INVALID_CATEGORY");
      User user0 = new User("UNABLE_TO_GET_SOURCE_VARIABLES", "m!eP\"j");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      user0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      assertEquals("", macawChangeEvent0.getUserID());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "variable.saveChanges.valueChanged";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getCategory();
      String string0 = "kF";
      User user0 = new User("kF", "variable.saveChanges.valueChanged");
      user0.setPostCode("variable.saveChanges.valueChanged");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("UNABLE_TO_CREATE_VARIABLE");
      derivedVariable0.setForm((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.588118476750127
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAvailability();
      rawVariable0.setName("*");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.columnEnd = "ERROR #";
      rawVariable1.notes = "*";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("*", rawVariable1.getNotes());
      assertEquals("", rawVariable0.getYear());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "variabled.year.label";
      rawVariable0.setCleaned(true);
      rawVariable0.setCleaningStatus("/hL+8");
      rawVariable0.isCleaned();
      rawVariable0.setCoded(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCleaned());
      assertTrue(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setQuestionNumber("yE\"");
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      User user0 = new User((String) null, "yE\"");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("yE\"", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getValueLabels();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.626722286104588
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "g4CImHGApQNsq;%<9";
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("g4CImHGApQNsq;%<9");
      derivedVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      derivedVariable0.setColumnStart("g4CImHGApQNsq;%<9");
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = ")d4]>'puF";
      String string0 = rawVariable0.getAlias();
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      arrayList0.add((OntologyTerm) null);
      ontologyTerm1.clone();
      User user0 = new User();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.587897799270264
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("blank", "2VVe%WANZgn8`hAsn");
      user0.setUserID("blank");
      RawVariable rawVariable1 = new RawVariable();
      user0.clone();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      rawVariable1.setForm("P8h6#h2QIY!t%");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.getCleaningDescription();
      rawVariable1.getValueLabels();
      assertEquals("P8h6#h2QIY!t%", rawVariable1.getForm());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.143652409619771
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("USER");
      Variable.validateFields(rawVariable0);
      Variable.validateFields(rawVariable0);
      assertEquals("USER", rawVariable0.getName());
      assertEquals("USER", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.630989711424645
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      ontologyTerm0.setNewRecord(false);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable1.clone();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "variable.year.label";
      derivedVariable0.setCategory("E4!u]u0(PdmruTL@479");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.getYear();
      derivedVariable0.removeSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5880121503280114
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setYear("$aY");
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable1.removeSupportingDocuments(arrayList0);
      User user0 = new User("user.addressLine2.saveChanges", "X'VRTs:/4gz{c3");
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("$aY", rawVariable0.getYear());
      
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      rawVariable0.setColumnEnd("UNABLE_TO_DELETE_CLEANING_STATE");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("");
      rawVariable0.setIdentifier((-22));
      rawVariable0.getYear();
      rawVariable0.createVariableSummary();
      assertEquals((-22), rawVariable0.getIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getQuestionNumber();
      assertEquals("Unknown", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "cG/I";
      String string0 = rawVariable0.getAlias();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("QTNWqLsQ>5.", (String) null);
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(1, arrayList1.size());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User();
      String string0 = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "VH";
      String string0 = rawVariable0.getAlias();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setName("blank");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.isCoded();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getYear();
      rawVariable0.getAlternativeVariable();
      rawVariable0.setQuestionNumber("f");
      rawVariable0.createVariableSummary();
      rawVariable0.getSupportingDocuments();
      assertEquals("f", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      String string0 = rawVariable0.getCleaningDescription();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.585547947863809
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("P8h6#h2QIY!t%");
      derivedVariable0.codeBookNumber = "P8h6#h2QIY!t%";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("P8h6#h2QIY!t%");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("P8h6#h2QIY!t%", ")b!PAos?'T1*k~BwEh");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("P8h6#h2QIY!t%", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("hvU{K`Q9A}s|qd");
      rawVariable0.getAlias();
      assertEquals("hvU{K`Q9A}s|qd", rawVariable0.getForm());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("4_f)q2;.JEq");
      rawVariable0.setQuestionNumber("m!eP\"j");
      rawVariable0.getCleaningDescription();
      rawVariable0.getAlias();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        arrayList0.subList((-2080374788), (-2080374788));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -2080374788
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_GET_SOURCE_VARIABLES");
      derivedVariable0.setForm("UNABLE_TO_GET_SOURCE_VARIABLES");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      derivedVariable0.createVariableSummary();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        arrayList0.retainAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.year.label";
      rawVariable0.setCoded(true);
      rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(rawVariable0);
      assertTrue(rawVariable0.isCoded());
      
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User("+t(!QR9YvROT@", "variable.year.label");
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable3, derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-2080374781));
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.687787510885328
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      User user1 = (User)user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
      
      derivedVariable0.getQuestionNumber();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.questionNumber = "DUPLICATE_CLEANING_STATE";
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCategory();
      assertEquals("DUPLICATE_CLEANING_STATE", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.setColumnStart("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      rawVariable0.getColumnEnd();
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine1("UNABLE_TO_DELETE_CLEANING_STATE");
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setColumnStart("KNo3Cj@$qnw\";c%1.!");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("KNo3Cj@$qnw\";c%1.!", rawVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable0);
      derivedVariable0.notes = "variable.codeBookNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setForm("variable.codeBookNumber.label");
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setColumnEnd("variable.codeBookNumber.label");
      derivedVariable0.getFilePath();
      derivedVariable0.getColumnEnd();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getColumnStart();
      assertEquals("variable.codeBookNumber.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "5";
      rawVariable0.getAlias();
      String string0 = rawVariable0.getYear();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.7184338046341003
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("Unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_GET_SOURCE_VARIABLES");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setAvailability("");
      User user0 = new User("", "UNABLE_TO_GET_SOURCE_VARIABLES");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = (User)user0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("", derivedVariable0.getAvailability());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("UNABLE_TO_DELETE_CLEANING_STATE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      arrayList2.retainAll(linkedList0);
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User((String) null, "QTNWqLsQ>5.");
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals(1, arrayList1.size());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.7907863609538244
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCategory("z");
      derivedVariable0.setColumnStart("+t(!QR9YvROT@");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.isNewRecord();
      assertEquals("z", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("=message==");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6238873247885097
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      User user1 = (User)user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getNotes();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", rawVariable0.getNotes());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("MHAhaWzk<");
      derivedVariable0.getCodeBookNumber();
      assertEquals("MHAhaWzk<", derivedVariable0.getForm());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("0GLxSs:H ab");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.createVariableSummary();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCodeBookNumber();
      assertEquals("0GLxSs:H ab", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("vk");
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.getCodeBookNumber();
      assertEquals("vk", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeValueLabel(valueLabel0);
      rawVariable1.setCleaningDescription(")Xnk=);,4gs6j");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      rawVariable1.getCleaningDescription();
      assertEquals(")Xnk=);,4gs6j", rawVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("FYwp,>Lt;7ac<");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("UNABLE_TO_DELETE_CLEANING_STATE");
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.isCleaned();
      derivedVariable0.getYear();
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", derivedVariable0.getYear());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("vz)7\u0014");
      rawVariable0.getColumnStart();
      rawVariable0.getName();
      rawVariable0.getLabel();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.710679103556723
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(supportingDocument0);
      arrayList0.remove((Object) derivedVariable0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setIdentifier(1538);
      derivedVariable0.getSourceVariables();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.clone();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("}:@$by'WSuj");
      derivedVariable0.getCodeBookNumber();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("}:@$by'WSuj", derivedVariable0.getColumnEnd());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.689067872995674
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNull(macawChangeEvent0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      Comparator<OntologyTerm> comparator0 = (Comparator<OntologyTerm>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any(macaw.businessLayer.OntologyTerm.class) , any(macaw.businessLayer.OntologyTerm.class));
      arrayList0.sort(comparator0);
      OntologyTerm ontologyTerm2 = null;
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.addOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setColumnEnd(")Tng%h`$qYs?;QeP");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningStatus("^%P\"ACl#:=k|");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("^%P\"ACl#:=k|");
      derivedVariable0.getIdentifier();
      derivedVariable0.setForm(")Tng%h`$qYs?;QeP");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable0.setCleaningDescription("");
      User user0 = new User("", "");
      try { 
        User.checkValidEmail("ontologyTerm.ontologyName.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"ontologyTerm.ontologyName.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      user0.setUserID((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.setCoded(true);
      ontologyTerm1.clone();
      derivedVariable0.setIdentifier((-1543));
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setQuestionNumber("NVpJ$@D0");
      derivedVariable0.getFilePath();
      derivedVariable0.setCodeBookNumber("Yg\"0n8*EE3C");
      int int0 = derivedVariable0.getIdentifier();
      assertTrue(derivedVariable0.isCoded());
      assertEquals((-1543), int0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setFilePath((String) null);
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.582567877087128
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("NON_EXISTENT_VARIABLE_ASSOCIATION");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.clone();
      assertEquals("NON_EXISTENT_VARIABLE_ASSOCIATION", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = null;
      derivedVariable0.setCleaningDescription("sAS-d:[a;bYlwa4h8 ");
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      derivedVariable0.removeSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.582567877087128
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setQuestionNumber("iO-~@Jv&1FBd_-N;0A");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      assertEquals("iO-~@Jv&1FBd_-N;0A", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("}~$`z@dY/r8Qp'");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("}~$`z@dY/r8Qp'");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.5831059454218064
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setNotes("(WoK6dhj`}dF]P");
      derivedVariable0.setColumnEnd("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList0.retainAll(arrayList1);
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.4850939756816506
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = null;
      rawVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        rawVariable1.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("+br@4sA");
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("CFi(,Yx9gd~6Gb%k{A");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = null;
      try {
        arrayList1 = new ArrayList<Variable>((-2157));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2157
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("G2tv7\"|/p1X29z2");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("G2tv7\"|/p1X29z2", rawVariable0.getColumnEnd());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("P8h6#h2QIY!t%");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("4Q:2yGnhBL1N-#@2i");
      rawVariable0.setYear("4Q:2yGnhBL1N-#@2i");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<OntologyTerm>((-1842221031));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1842221031
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = null;
      rawVariable0.setIdentifier((-2049870752));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("variable.alternativeVariable.label");
      supportingDocument0.setFileName((String) null);
      rawVariable0.notes = "NN?C&>k^rQ+53*zTS#b";
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setForm("g^LF2U/)MI`n.2nso");
      rawVariable0.setCoded(true);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getForm();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      User user0 = new User();
      user0.setCounty(",jn");
      user0.setAddressLine1("g^LF2U/)MI`n.2nso");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getFilePath();
      rawVariable0.setFilePath("macaw.system.MacawMessages");
      rawVariable0.setNotes("macaw.system.MacawMessages");
      rawVariable0.getColumnEnd();
      assertEquals("macaw.system.MacawMessages", rawVariable0.getNotes());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "macaw.system.MacawException";
      rawVariable0.getName();
      rawVariable0.getColumnEnd();
      rawVariable0.getForm();
      rawVariable0.getQuestionNumber();
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setCodeBookNumber((String) null);
      String string0 = derivedVariable0.getForm();
      assertNotNull(string0);
      
      String string1 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string1);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("UNABLE_TO_DELETE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "UNABLE_TO_DELETE_CLEANING_STATE";
      user0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.form = "c:dV0PKkt_";
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("c:dV0PKkt_", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "variable.category.label";
      String string0 = derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "blank";
      ArrayList<OntologyTerm> arrayList0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.codeBookNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setColumnEnd("variable.codeBookNumber.label");
      derivedVariable0.getFilePath();
      derivedVariable0.getColumnEnd();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("variable.codeBookNumber.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber(")^|q");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("8i|:1T Bk");
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getColumnStart();
      assertEquals(")^|q", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes((String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "";
      derivedVariable0.setQuestionNumber("");
      SupportingDocument supportingDocument0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "Ce`K&";
      rawVariable0.setIsNewRecord(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(293);
      ontologyTerm0.setDescription("UNABLE_TO_ASSOCIATE_DOCUMENT");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("&");
      boolean boolean0 = true;
      String string0 = "";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.clone();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }
}
