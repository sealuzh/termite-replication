/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 04:35:42 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(2, ">Da[<", ">Da[<", 2);
      player0.setMoney(2);
      player0.getMoney();
      System.setCurrentTimeMillis(1392409281320L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-264), "bKeQij`6,K$He?Th3", "9D0$.<;", (-1170), 1);
      player0.setConnected(true);
      Player player1 = new Player();
      player1.setX((-1170));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte) (-84);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player2 = new Player();
      player0.setJoinOK(player2, true);
      Player player3 = new Player();
      player2.isJoinOK(player1, true);
      player1.pack();
      player1.isJoinOK(player2, false);
      player0.pack();
      int int0 = Packable.GAME_STATE;
      player1.getX();
      System.setCurrentTimeMillis((-629L));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-650.9F));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      player0.unpack(byteArray0);
      player0.type();
      player0.getY();
      player0.getX();
      player0.getX();
      player0.setDead(4919L, false);
      System.setCurrentTimeMillis(5);
      player0.reset(false);
      player0.type();
      player0.getY();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.getX();
      Player player1 = new Player((byte)0);
      player1.head = (Party) player0;
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1170), (short)4919);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.788299378708331
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(1380);
      player0.setDead((long) 1380, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7uxBAa!");
      player0.getZ();
      player0.getY();
      player0.getZ();
      player0.id = 1380;
      player0.setConnected(true);
      System.setCurrentTimeMillis((short)4919);
      player0.setZ(765L);
      System.setCurrentTimeMillis(765L);
      player0.getX();
      System.setCurrentTimeMillis(1392409281320L);
      System.setCurrentTimeMillis(1392409281320L);
      player0.getSubparty();
      player0.pack();
      player0.pack();
      player0.getZ();
      player0.getX();
      Player player1 = new Player(1380, "Gd)tc9", (-2333));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1380L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((byte)2);
      Player player1 = new Player(3, "Player.unpack(): *** WARNING *** data is not of proper type!", " ", 375);
      boolean boolean0 = false;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(11167, "0.0.0.0", (String) null, 11167, 11167);
      Party party0 = new Party();
      player0.next = party0;
      party0.head = (Party) player0;
      player0.getName();
      party0.remove((Party) null);
      player0.getX();
      player0.gangStrength();
      party0.boss = player0.next;
      player0.toString();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.setMoney((-443.0331F));
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals((-443.0331F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-2865));
      Player player1 = new Player((-2865));
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("Player-2865", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-353));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-353", player0.toString());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-353));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-353", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(827);
      player0.setConnected(false);
      player0.reset(false);
      player0.setDead(2280L, false);
      player0.setConnected(false);
      player0.isConnected();
      player0.getY();
      player0.isConnected();
      player0.getMoney();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1356090537531895
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-1825), "\"P/pXD;Q", "h'+sa+i:`%oQ8K<5C+", 2723);
      Player player1 = new Player(3, "state.Party", ">0?Or#|)1L;1\"", 3);
      Player player2 = new Player((-1528), "state.Party", ">0?Or#|)1L;1\"", 2241);
      Player player3 = new Player(3, "h'+sa+i:`%oQ8K<{5C+", "h'+sa+i:`%oQ8K<{5C+", 3);
      Party party0 = new Party();
      Party party1 = new Party();
      Party party2 = new Party();
      Party party3 = new Party();
      player2.add(player1);
      party1.add(player2);
      player2.add(party2);
      player3.add(party1);
      player0.setConnected(false);
      player1.setConnected(false);
      player3.setConnected(true);
      player2.setConnected(false);
      player0.setX(0.2F);
      player3.setX(2241);
      player2.setX((-1.0F));
      player3.setX(0.2F);
      player2.setDead();
      player1.setDead();
      Player player4 = new Player(2381);
      player4.setDead();
      player0.setDead();
      player3.setDead(0L, true);
      player0.setDead((long) (-1), false);
      player3.setDead(0L, false);
      player2.setDead((long) (-1528), false);
      Player player5 = new Player((short)4919, "VP/tpXV;Q", "h'+sa+i:`%oQ8K<{5C+", 1, 0);
      Player player6 = new Player((-3245), "", "state.Party", 1415, (-2055));
      player2.isJoinOK(player0, true);
      Player player7 = new Player((-23611));
      player7.isJoinOK(player4, false);
      player2.setDead();
      player3.setDead();
      player1.getIP();
      player0.getIP();
      player7.getMoney();
      player6.getMoney();
      player5.getStrength();
      Player player8 = new Player((short)4919, "n/$s", "P\"y7jE0xPjk'H?|JLax", (-208));
      player8.getStrength();
      player2.pack();
      player0.pack();
      player7.isJoinOK(player8, false);
      player5.isJoinOK(player3, false);
      Player player9 = new Player((short)4919);
      player1.isJoinOK(player0, true);
      assertEquals(0.2F, player0.getX(), 0.01F);
      
      player1.setDead(0L, false);
      assertEquals(3, player1.getPictureId());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(732, "", 732);
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(732, player0.getPictureId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-2546));
      Player player1 = new Player((short)4919, "", "", (-2546));
      player1.boss = (Party) player0;
      player0.setX((short)4919);
      player1.head = (Party) player0;
      player1.gangStrength();
      Player player2 = new Player(175, "Player", 1);
      player2.setDead((long) 175);
      long long0 = player2.getTimeOfDeath();
      assertEquals(175L, long0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8899587648618628
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(242, "h'+sa+i:`%oQ8K<5C+", "gui.ModuleBrowserDialog$ModuleFilter", (-1528));
      Player player1 = new Player(3, (String) null, "", (-1528));
      Party party0 = new Party((short)4919);
      party0.add(player0);
      player0.add(player1);
      player0.setConnected(false);
      player1.setConnected(true);
      player0.setX((-1306.9742F));
      Player player2 = new Player();
      player2.setDead();
      player2.setDead();
      player1.setDead((long) 242, true);
      Player player3 = new Player((short)4919, "7T1", "h'+sa+i:`%oQ8K<5C+", (-451));
      player3.setDead((long) (short)4919, false);
      Player player4 = new Player(3, "7T1", "h'+sa+i:`%oQ8K<5C+", 3, 3);
      player1.isJoinOK(player0, true);
      player1.setDead();
      player1.getIP();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead((-2058L));
      player0.getTimeOfDeath();
      float float0 = player0.getY();
      assertEquals((-2058L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1056.5138F);
      float float0 = player0.getY();
      assertEquals(1056.5138F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.130582753344072
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(440);
      Player player1 = new Player();
      player0.add(player1);
      player0.setY(440);
      player1.setDead((-270L));
      player1.remove(player0);
      player0.setX(440);
      player0.setDead();
      player1.isJoinOK(player0, false);
      player0.setDead();
      player1.getIP();
      player0.getMoney();
      player0.getStrength();
      byte[] byteArray0 = player1.pack();
      player0.isJoinOK(player1, false);
      Player player2 = new Player(1);
      player1.isJoinOK(player2, false);
      player2.setDead((long) 1, false);
      player1.toString();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player2.unpack(dataInputStream0);
      player1.getName();
      player2.toString();
      assertEquals(1L, player2.getTimeOfDeath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(732, "", 732);
      Party party0 = player0.next;
      player0.head = null;
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals(732, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(289, (String) null, (String) null, (-338), (-3841));
      Player player1 = new Player();
      Party party0 = player1.boss;
      player0.getStrength();
      player0.getPictureId();
      player1.setY(0.2F);
      player1.setDead((long) (short)4919);
      Party party1 = player1.prev;
      assertNull(party1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1654), "r{%ABY}pqq{", "IS*W?0.eKd", (-1654), (-1654));
      player0.add((Party) null);
      player0.setZ(576.2938F);
      int int0 = player0.getStrength();
      assertEquals(576.2938F, player0.getZ(), 0.01F);
      assertEquals((-1654), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.setZ((-676.81506F));
      player0.setZ((-676.81506F));
      player0.getZ();
      int int0 = player0.type();
      assertEquals((-676.81506F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(615);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(103, player0.getId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(732, "", 526);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)89;
      player0.unpack(byteArray0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(526, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(767);
      Player player1 = new Player((short)4919);
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(767);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "", (short)4919);
      Player player2 = new Player();
      player2.isJoinOK(player0, true);
      Player player3 = new Player(10, "?AyWCiTlB\"JG!<", "", 4919);
      Player player4 = new Player((short)4919, "0.0.0.0", "M,UXO>T~_`sn/5U o", 4919);
      boolean boolean0 = player3.isJoinOK(player4, true);
      assertFalse(boolean0);
      assertEquals(4919, player3.getPictureId());
      assertEquals("0.0.0.0", player4.getIP());
      
      Player player5 = new Player();
      int int0 = player5.type();
      assertEquals(0, player5.getPictureId());
      assertEquals("0.0.0.0", player5.getIP());
      assertEquals("Player-1", player5.getName());
      assertEquals(5, int0);
      
      player1.getIP();
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-356));
      player0.setDead();
      player0.isDead();
      System.setCurrentTimeMillis(15000L);
      int int0 = player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0);
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player0", player0.getName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.3821750365846897
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.setX((-1));
      player0.setConnected(true);
      player0.setMoney(1.0F);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.reset(true);
      player0.setZ(893.348F);
      player0.gangStrength();
      player0.type();
      player0.setDead();
      player0.setDead((-1L));
      player0.add((Party) null);
      player0.setX(0.0F);
      player0.getIP();
      player0.pack();
      player0.prev = null;
      player0.setY(0.0F);
      player1.setZ(1830.892F);
      player0.getTimeOfDeath();
      player0.getX();
      player0.setMoney((-4401.1753F));
      player0.gangStrength();
      player0.setConnected(true);
      player1.setJoinOK(player0, true);
      assertTrue(player0.isDead());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(31234);
      Player player1 = new Player(31234);
      boolean boolean0 = player1.isConnected();
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player31234", player1.getName());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(0, "Player.unpack(): *** WARNING *** data is not of proper type!", "", 3598, 0);
      player0.gangStrength();
      player0.pack();
      player0.setY(3598);
      assertEquals(3598.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(163, (String) null, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 163, (-1));
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(163, player0.getPictureId());
      assertEquals((-1), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(236, (String) null, 236);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-343));
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(732, "", 732);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.add(player0);
      int int0 = player1.gangStrength();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(2, int0);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2245);
      player0.setX(4916.158F);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(14081);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(10, (String) null, (String) null, 10, 1539);
      Player player1 = new Player();
      assertEquals(0.0F, player1.getY(), 0.01F);
      
      Party party0 = player1.boss;
      player0.getStrength();
      player0.getPictureId();
      player1.setY((-1.0F));
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(10, "GoMG%@B>:]:", "", 10, (-455));
      assertEquals(10, player0.getPictureId());
      assertEquals("GoMG%@B>:]:", player0.getIP());
      assertEquals((-455), player0.getStrength());
      
      Player player1 = new Player();
      Party party0 = player0.boss;
      int int0 = player1.getPictureId();
      assertEquals(0, int0);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("Player-1", player1.getName());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(163, "module.ModuleBrowserDialog$ModuleFilter", 2172);
      player0.getStrength();
      System.setCurrentTimeMillis(2073L);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-1));
      Player player1 = new Player((-1));
      player0.isJoinOK(player1, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player1.setDead(0L, true);
      player1.gangStrength();
      MockFile mockFile0 = new MockFile("Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // Player.unpack(): *** WARNING *** [IO] failed to unpack data: 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-218), "eTm~jD", 1409);
      player0.getSubparty();
      player0.getTimeOfDeath();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(1697, "uQH]9X", 1697);
      player0.pack();
      assertEquals(1697, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 4919, 4919);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(4919, player0.getPictureId());
      assertEquals(4919, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 4;
      Player player0 = new Player(4);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(5);
      String string0 = player0.getName();
      assertEquals("Player5", string0);
      
      player0.reset(false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-334));
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
  }
}
