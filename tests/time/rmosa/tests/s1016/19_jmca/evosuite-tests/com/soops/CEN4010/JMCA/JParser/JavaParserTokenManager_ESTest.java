/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 04:21:34 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1884742833636837
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~!YU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 456, (-567));
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("03EDGdP8XcPvmO33W");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals(17, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("'IC9SjP[t");
      StringReader stringReader1 = new StringReader("C)47i6e_31&$`r9");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[2] = 'U';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-6956), 7, 7);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 105, (-1));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
      assertFalse(javaParserTokenManager1.equals((Object)javaParserTokenManager0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.930845206426346
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("switch");
      char[] charArray0 = new char[9];
      charArray0[0] = 'x';
      charArray0[1] = '&';
      charArray0[2] = '&';
      charArray0[3] = 'x';
      charArray0[4] = '&';
      charArray0[5] = '&';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[6] = 'x';
      charArray0[7] = 'x';
      charArray0[8] = 'x';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 16, 38);
      StringReader stringReader1 = new StringReader("Og5 /7n[");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream1.ReadByte();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream1.getBeginColumn());
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1833432589913178
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("swilch");
      StringReader stringReader1 = new StringReader(".Il2b@~$cv{Bl n?e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 116, 866);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 92, (-407));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = Token.newToken(74);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(871, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5895213795772005
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      StringReader stringReader1 = new StringReader("void");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      charArray0[1] = 'z';
      charArray0[2] = 'u';
      charArray0[3] = ' ';
      charArray0[4] = 'E';
      charArray0[5] = 'a';
      charArray0[6] = '\"';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 84, 56);
      StringReader stringReader2 = new StringReader("~}3/)");
      StringReader stringReader3 = new StringReader("6wKd<gX*ZIe3qZMH");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&:=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, 122);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 89, 3, 89);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), 122);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream2.bufpos);
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("swilch");
      char[] charArray0 = new char[1];
      charArray0[0] = 'c';
      stringReader0.read(charArray0);
      char[] charArray1 = new char[3];
      charArray1[0] = 'c';
      charArray1[1] = 'c';
      charArray1[2] = 'c';
      stringReader0.read(charArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3402), (-535));
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 1815, (-1));
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2, 74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 74. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1840562714690361
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XtrAsQ+^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 120, (byte)15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(107, token0.kind);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("szb4Wv%HQ4* Jyf'");
      char[] charArray0 = new char[6];
      charArray0[0] = '{';
      charArray0[2] = '{';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-683), (-683));
      StringReader stringReader1 = new StringReader(">>>=");
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-678), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.587973990795769
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0GAM*yn f EJ");
      char[] charArray0 = new char[5];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte) (-69);
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte)44;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      byteArrayInputStream1.close();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      DataInputStream dataInputStream2 = new DataInputStream(byteArrayInputStream1);
      dataInputStream2.close();
      DataInputStream dataInputStream3 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader1 = new StringReader("avLQnvRH{rAZ6[");
      StringReader stringReader2 = new StringReader("0GAM*yn f EJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)106, 1241);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(1249);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1249. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".D^iia=(# :L2=");
      StringReader stringReader1 = new StringReader("w%}ytHN7}Ty-n)IY.80");
      char[] charArray0 = new char[6];
      charArray0[0] = 'h';
      charArray0[1] = ',';
      charArray0[2] = 'h';
      charArray0[3] = 'T';
      charArray0[4] = 'T';
      charArray0[5] = 'T';
      stringReader1.read(charArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte) (-115);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1843752507353837
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<OCTAL_LITERAL>");
      StringReader stringReader1 = new StringReader("\"if\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 88, 123);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 47, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken((-1));
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(124, javaCharStream0.getBeginColumn());
      assertEquals(136, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5911496021009452
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("&4<,Q!q&B4(q8D");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, (byte)15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 15, column 29.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5813709093577648
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e|D'f=sxhbk31CN]O&");
      StringReader stringReader1 = new StringReader("p,\"i^=Sh>");
      char[] charArray0 = new char[6];
      charArray0[0] = 'f';
      charArray0[3] = 'x';
      charArray0[3] = 'C';
      charArray0[5] = '=';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken(54);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 22);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 34);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 34. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BdVgxec_-Y");
      StringReader stringReader1 = new StringReader("BdVgxec_-Y");
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = '0';
      charArray0[2] = 'Z';
      charArray0[3] = '(';
      charArray0[4] = 'B';
      int int0 = JavaParserConstants.PROTECTED;
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 120, (-1132));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(7, javaCharStream1.bufpos);
      assertEquals("BdVgxec_", token1.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&xY]R*vSfOEs}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, (-1585));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1585), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BdVgx[ec_-Y");
      StringReader stringReader1 = new StringReader("super");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("BdVgx[ec_-Y");
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      stringReader2.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-567), (-567));
      StringReader stringReader3 = new StringReader("super");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(5, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pY&i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("else");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 0, 2285);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(2285, javaCharStream1.getBeginColumn());
      assertEquals(27, token0.kind);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w%}ytHN7}Ty-n)IY.80");
      StringReader stringReader1 = new StringReader("w%}ytHN7}Ty-n)IY.80");
      char[] charArray0 = new char[7];
      charArray0[1] = '5';
      charArray0[2] = 'h';
      charArray0[3] = ',';
      charArray0[4] = 'h';
      charArray0[5] = '5';
      charArray0[6] = 'T';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 19, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = 123;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 19, column 41.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^*RRt@F]3Kq");
      StringReader stringReader1 = new StringReader("J n#/l8");
      char[] charArray0 = new char[6];
      charArray0[1] = 'f';
      charArray0[2] = '&';
      charArray0[3] = 'f';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 6, 48);
      StringReader stringReader2 = new StringReader("^*RRt@F]3Kq");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("8", token0.toString());
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("eO!nm");
      char[] charArray0 = new char[3];
      charArray0[0] = 'G';
      charArray0[1] = 'g';
      charArray0[2] = 'y';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".D^iia=(# :L2=");
      StringReader stringReader1 = new StringReader("w%}ytHN7}Ty-n)IY.80");
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      charArray0[2] = 'T';
      charArray0[3] = 'T';
      charArray0[4] = ',';
      charArray0[5] = ',';
      charArray0[6] = 'h';
      charArray0[7] = 'b';
      charArray0[8] = 'T';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1132), 9);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("Ty", token0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^*RRt@F]3Kq");
      StringReader stringReader1 = new StringReader("T$bWD^Q#H0,l-*xDE]$");
      StringReader stringReader2 = new StringReader("T$bWD^Q#H0,l-*xDE]$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 441, 441);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1), 23, 122);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(446, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("F0A ");
      StringReader stringReader2 = new StringReader("F0A ");
      char[] charArray0 = new char[0];
      stringReader2.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1419), 1924);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals("F0A", token0.toString());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5813709093577648
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)125;
      StringReader stringReader0 = new StringReader(",<|pLvQK Kwy)uI}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1342);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1343, javaCharStream0.getBeginColumn());
      assertEquals(88, token0.kind);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, 122);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 89, 3, 89);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1, 3);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 89, column 5.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("6");
      StringReader stringReader2 = new StringReader("6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      assertEquals(0, token0.endLine);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.585098775154596
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0GAM*yn f EJ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)18;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      byteArrayInputStream1.close();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      dataInputStream0.close();
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      StringReader stringReader1 = new StringReader("avLQnvRH{rAZ6[");
      StringReader stringReader2 = new StringReader("avLQnvRH{rAZ6[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 33, 102);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'T';
      charArray0[1] = 'T';
      charArray0[2] = 'T';
      charArray0[3] = '&';
      charArray0[4] = 'T';
      charArray0[5] = 'T';
      charArray0[6] = 'T';
      charArray0[7] = 'T';
      charArray0[8] = 'T';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader2.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(2022);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2022. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-67);
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("PLpt('Iug=~Z;=cBv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, (byte)0);
      StringReader stringReader1 = new StringReader("=");
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 358, (byte)116);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("Lpt", token0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.182508882687605
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Rg27oNTe_>+s^*/PH");
      StringReader stringReader1 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, Integer.MIN_VALUE, 1553);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(1562, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^*RRt@F]3Kq");
      char[] charArray0 = new char[8];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = '~';
      charArray0[5] = '~';
      charArray0[6] = '~';
      charArray0[7] = '~';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("if");
      StringReader stringReader2 = new StringReader("++:W%ZR-wT5_w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 8, 39, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(40, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("Q!g3x(`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, (byte)15, (byte)15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(16, javaCharStream0.getBeginColumn());
      assertEquals(18, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Sw0<]_@_NY *:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 332);
      char[] charArray0 = new char[9];
      charArray0[0] = 'p';
      charArray0[1] = 'D';
      charArray0[2] = 'q';
      charArray0[3] = ')';
      charArray0[4] = 'R';
      charArray0[5] = 'r';
      charArray0[6] = 'W';
      charArray0[7] = 'k';
      charArray0[8] = '%';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 88);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("Y", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eFD'f=xhbk31CN)]O&");
      StringReader stringReader1 = new StringReader("p,\"i^=Sh>");
      char[] charArray0 = new char[6];
      charArray0[0] = 'f';
      charArray0[3] = 'x';
      charArray0[3] = 'C';
      charArray0[5] = '=';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1132), 48);
      StringReader stringReader2 = new StringReader("eFD'f=xhbk31CN)]O&");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(87, token0.kind);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".D^iia=(# :L2=");
      StringReader stringReader1 = new StringReader("~GQ} M)/Jb>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 18, 2926);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 18, 18);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(18, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",g sX.ct$3?Hx D");
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      charArray0[1] = 'a';
      charArray0[2] = 'O';
      charArray0[3] = 'a';
      charArray0[4] = '5';
      charArray0[5] = '5';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(35, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("$bc=~0ZXVXyop");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2018), 1983);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(1985, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1833432589913178
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".63/& ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1585), (-1585));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-1582), javaCharStream0.getBeginColumn());
      assertEquals(3, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("switch");
      char[] charArray0 = new char[9];
      charArray0[0] = 'x';
      charArray0[1] = '&';
      charArray0[2] = '&';
      charArray0[3] = 'x';
      charArray0[4] = '&';
      charArray0[5] = '&';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[6] = 'x';
      charArray0[7] = 'x';
      charArray0[8] = 'x';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 16, 38);
      StringReader stringReader1 = new StringReader("Og5 /7n[");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      StringReader stringReader1 = new StringReader("a&'F~$F]c(24~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 47, 47);
      StringReader stringReader2 = new StringReader("a&'F~$F]c(24~");
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 47, 1840);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("a", token0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(104, token0.kind);
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*_w//z65");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("*_w//z65");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 30, 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      Token.newToken(0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token1.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("PLpt('Iug=~Z;=cBv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, (byte)15);
      StringReader stringReader1 = new StringReader("PLpt('Iug=~Z;=cBv");
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)15, 3567);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals("PLpt", token0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      StringReader stringReader1 = new StringReader("void");
      StringReader stringReader2 = new StringReader("void");
      StringReader stringReader3 = new StringReader("-Lyz<@{95U%zhw,9fl");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      assertEquals(0, token0.endLine);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".D^iia=(# :L2=");
      StringReader stringReader1 = new StringReader("w%}ytHN7}Ty-n)IY.80");
      char[] charArray0 = new char[6];
      charArray0[0] = 'h';
      charArray0[1] = ',';
      charArray0[2] = 'h';
      charArray0[3] = 'T';
      charArray0[4] = 'T';
      charArray0[5] = 'T';
      stringReader1.read(charArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte) (-69);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-274), 'H');
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(80, token0.kind);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("fu:>[Yp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, 41);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("u", token0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("Q!g3x(`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, (byte)15, (byte)15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken(84);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("Q", token0.toString());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e|D'f=sxhbk31CN]O&");
      char[] charArray0 = new char[8];
      charArray0[0] = '{';
      charArray0[1] = '~';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = '{';
      charArray0[5] = '~';
      charArray0[6] = '{';
      charArray0[7] = '{';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(14, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, (-992));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("&=", token0.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5884082070354566
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("vlc*~");
      StringReader stringReader1 = new StringReader("vlc*~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 123, 93);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = new Token();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 103);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 103. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S[YwGdlQ@jxZU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.beginColumn = 13;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("S", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wLtq}6u (6`");
      StringReader stringReader1 = new StringReader("pk[n}!d&F}8^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 20, (-62));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader0, 20, 20, (-1045));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[E/c3IyZ5!H5h;+6");
      StringReader stringReader1 = new StringReader("=<-Q,y`uKH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, Integer.MIN_VALUE, (-2506));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(Integer.MIN_VALUE, javaCharStream0.getLine());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&=");
      char[] charArray0 = new char[1];
      charArray0[0] = 'O';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\r");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2045, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(87, token0.kind);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z{2");
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = 'h';
      charArray0[2] = '~';
      charArray0[3] = 'z';
      charArray0[4] = '+';
      charArray0[5] = 'A';
      charArray0[6] = 'V';
      charArray0[7] = '{';
      charArray0[8] = 'W';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("k-T4qWjn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-2018), (-1550));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("k", token0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aq");
      StringReader stringReader1 = new StringReader("aq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 441, 441);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 44, 91, 2926);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("aq", token0.toString());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4p)8n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 60, (-681), 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 60, column -676.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)26;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3035), 49, (byte)26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager0.jjimageLen = 49;
      javaParserTokenManager0.getNextToken();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("@", "@");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // @
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".D^iia=(# :L2=");
      StringReader stringReader1 = new StringReader("bUO`L$'DFN_");
      char[] charArray0 = new char[7];
      charArray0[0] = ',';
      charArray0[1] = 'T';
      charArray0[2] = 'V';
      charArray0[3] = 'h';
      charArray0[4] = ',';
      charArray0[5] = 'T';
      charArray0[6] = ',';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-905), (-905));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-902), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.587973990795769
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".D^iia=(# :L2=");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte) (-6);
      byteArray0[4] = (byte)18;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)18;
      byteArray0[7] = (byte)121;
      byteArray0[8] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte) (-6), (byte) (-6));
      byteArrayInputStream2.close();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      dataInputStream1.close();
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      StringReader stringReader1 = new StringReader("2:> C_C(>}G");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)121, (byte)18);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 121, column 29.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e|D'f=sxhbk31CN]O&");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("e|D'f=sxhbk31CN]O&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2691), (-1093), 111);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 92, (byte)106, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("AM?ynUf EJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3064, 3064, 3064);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("AM?ynUf EJ", "AM");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("\"import\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, (byte)15);
      StringReader stringReader1 = new StringReader("\"import\"");
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)15, (byte)15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("import", token0.toString());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      StringReader stringReader1 = new StringReader("private");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 84);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*_w//z65");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("transient");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 14, 14);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals("transient", token0.toString());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1878840226652085
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0F56%D_vMG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 441, 122);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3, 441, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals(108, token0.kind);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)49;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 456, 19, (byte)49);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream1, 457, 456, 42);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = Token.newToken(15);
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaCharStream javaCharStream2 = new JavaCharStream(dataInputStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("1", token1.toString());
      assertEquals(66, token1.kind);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      StringReader stringReader1 = new StringReader("|M");
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, Integer.MIN_VALUE, 441);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 46, 407);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1603, (-852));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("<<=", token0.toString());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      StringReader stringReader1 = new StringReader("for");
      StringReader stringReader2 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-852), (-1423));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(88, token0.kind);
      assertEquals("<", token0.toString());
      
      javaParserTokenManager0.getNextToken();
      Token token1 = Token.newToken((-852));
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager1.MoreLexicalActions();
      Token token2 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, token2.kind);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fop");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(46, javaCharStream0.getBeginColumn());
      assertEquals(48, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, (byte)15);
      StringReader stringReader1 = new StringReader("enum");
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("num", token0.toString());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("en+um");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, Integer.MAX_VALUE, (byte)15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("en", token0.toString());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("null");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("null", token0.toString());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("swilch");
      char[] charArray0 = new char[1];
      charArray0[0] = 'c';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-535), 339);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream1.bufpos);
      assertEquals(5, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pY&i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 31, 31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken(34);
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token1.kind);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      StringReader stringReader1 = new StringReader("m(b/yPB33&");
      char[] charArray0 = new char[9];
      charArray0[1] = 'Q';
      charArray0[2] = '8';
      charArray0[3] = ']';
      charArray0[4] = '(';
      charArray0[5] = 'E';
      charArray0[6] = '9';
      charArray0[7] = ':';
      charArray0[8] = '!';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1497, (-3453));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(105, token0.kind);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rp#qsq8*(Dwe4oz{j");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, 19, 90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 90, column 21.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      stringReader0.markSupported();
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 2147475456);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2147475457, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5875011775569985
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Sw0<]_@_NY *:");
      StringReader stringReader1 = new StringReader("&4<,Q!q&B4(q8D");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, (-4349));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-4345), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mR\"oqC(rm0u#OZ");
      StringReader stringReader1 = new StringReader("mR\"oqC(rm0u#OZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1105, (-2513));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-2512), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("swilch");
      StringReader stringReader1 = new StringReader(".Il2@~$cv{Bl n?e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 866, 866);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(866, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c'L9q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken(0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(29, javaCharStream0.getBeginColumn());
      assertEquals(29, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      byteArrayInputStream1.close();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      StringReader stringReader0 = new StringReader("c'L9q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 29, column 32.  Encountered: \"9\" (57), after : \"\\'L\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte) (-58);
      byteArray0[3] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-81);
      StringReader stringReader0 = new StringReader("c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)74, (-422));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curChar = 'f';
      Token token0 = new Token();
      Token.newToken(99);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token1.kind);
      assertEquals("c", token1.toString());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("iW!WHW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1979), (byte)101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, token0.beginColumn);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e|D'f=sxhbk31CN]O&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 593, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("e", token0.toString());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      StringReader stringReader1 = new StringReader("|M");
      StringReader stringReader2 = new StringReader("|M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      assertEquals(0, token0.endLine);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e|D'f=sxhbk31CN]O&");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 593, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("|", token0.toString());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#U@f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, 19, 90);
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("U", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1829430989272922
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<DECIMAL_LITERAL>");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("5HG \\KhF/d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2168), 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -2168, column 7.  Encountered: \"\\\\\" (92), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("+.y^s1*yZN7dQ*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-485), (-485));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.debugStream = null;
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^*RRt@F]3Kq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, (-1867));
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token0.toString());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("void");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, Integer.MIN_VALUE, 124);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(127, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("const");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(104, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("class");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 52, (-2226));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-2222), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("enum", token0.toString());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      StringReader stringReader1 = new StringReader("break");
      StringReader stringReader2 = new StringReader("break");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 46, 67, 441);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(71, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K[|EAxN.CBahD5@]_x7");
      StringReader stringReader1 = new StringReader("\"");
      char[] charArray0 = new char[0];
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 120, 84);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("K", token0.toString());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte) (-117);
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader(")5$eW#v78{G$#P] ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 113, 89);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(89, javaCharStream0.getBeginColumn());
      assertEquals(113, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      StringReader stringReader1 = new StringReader("(*5");
      StringReader stringReader2 = new StringReader("|M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 27, 27);
      StringReader stringReader3 = new StringReader("(*5");
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 18, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(77, token0.kind);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(46, javaCharStream0.getBeginColumn());
      assertEquals(34, token0.kind);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, 1380, 1380);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PJ3kbu9XD<%");
      char[] charArray0 = new char[2];
      charArray0[0] = '~';
      charArray0[1] = '~';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1867), (-1867), 3818);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals((-1865), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0\":DJq0`cCXh9T0Cl");
      char[] charArray0 = new char[9];
      charArray0[0] = '=';
      charArray0[1] = 'f';
      charArray0[2] = '=';
      charArray0[3] = 'C';
      charArray0[4] = '*';
      charArray0[5] = '=';
      charArray0[6] = 'f';
      charArray0[7] = 'f';
      charArray0[8] = 'C';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, 61);
      StringReader stringReader1 = new StringReader("YY*8OK!+B");
      StringReader stringReader2 = new StringReader("0\":DJq0`cCXh9T0Cl");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 19.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1833432589913178
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("5 Qg]q KH<u)nrZeC");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1966, 76, 5);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("");
      stringReader1.read();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1966, column 93.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, Integer.MIN_VALUE, 768);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -2147483648, column 770.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?8c~I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("?", token0.toString());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      int int0 = JavaParserConstants.DIGIT;
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4094, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4915254237288135
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"wY;h?");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2784), (byte)15);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.debugStream = null;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\\\"wY;h?\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e|D'f=sxhbk31CN]O&");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("e|D'f=sxhbk31CN]O&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2691), (-1093), 111);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 92, (byte)0, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 92, column 1.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("czO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2793, 2793);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(2795, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("szb4Wv%HQ4* Jyf'");
      char[] charArray0 = new char[6];
      charArray0[0] = '{';
      charArray0[2] = '{';
      charArray0[2] = '{';
      charArray0[3] = '{';
      charArray0[2] = '{';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("switch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-917), (-1585));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1585), javaCharStream0.getBeginColumn());
      assertEquals("switch", token0.toString());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%~1:K +&eDb4*-9NA");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2147483642), (-2147483642));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-2147483642), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mR\"oqC(rm0u#OZ");
      StringReader stringReader1 = new StringReader("mR\"oqC(rm0u#OZ");
      char[] charArray0 = new char[4];
      charArray0[0] = 'g';
      charArray0[1] = 'K';
      charArray0[2] = '\"';
      charArray0[3] = '~';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1105, (-2513));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-2512), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      StringReader stringReader1 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 441, 441);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token1);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(">>", token1.toString());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.49056603773584906
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0GAM*yn f EJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 576, 576);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(4, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(580, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("I\"|dc9S^b.%0[");
      StringReader stringReader2 = new StringReader(";=_hcb7;|}|b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2754, 2350);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("I", token0.toString());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`6lBd>6`?]y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2584, 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2584, column 27.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"^=\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.48484848484848486
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"\n\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 86);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1), 86, 86);
      char[] charArray0 = new char[12];
      charArray0[0] = 'O';
      charArray0[1] = 'O';
      charArray0[2] = 'O';
      charArray0[3] = 'O';
      charArray0[4] = '6';
      charArray0[5] = 'O';
      int int0 = JavaParserConstants.LT;
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-2729), 25);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 86, column 87.  Encountered: \"\\n\" (10), after : \"\\\"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4827586206896552
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("\">\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("\">\"", token0.toString());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte) (-58);
      byteArray0[3] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-81);
      byteArray1[1] = (byte)117;
      byteArray1[2] = (byte)123;
      byteArray1[4] = (byte)58;
      byteArray1[5] = (byte)58;
      byteArray1[6] = (byte)31;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 516, 23, (byte)0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, (byte)123, 34, (byte)74);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = Token.newToken((byte)117);
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(123, javaCharStream1.getEndLine());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("iW!WHW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1979), (byte)101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.jjimageLen = 0;
      Token.newToken((byte)58);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(102, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, (-1867), 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1867), javaCharStream0.getBeginColumn());
      assertEquals("if", token0.toString());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&sg=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, (-992));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals((-992), javaCharStream0.getBeginColumn());
      assertEquals(13, javaCharStream0.getLine());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("catch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2753, 38, 2753);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("catch", token0.toString());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0575674168114237
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1867), 76);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1667, 89);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(89, javaCharStream1.getColumn());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^*RRt@F]3Kq");
      StringReader stringReader1 = new StringReader("J n#/l8");
      char[] charArray0 = new char[6];
      charArray0[0] = 'x';
      charArray0[1] = 'f';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 34, (-917));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("J", token0.toString());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte) (-117);
      StringReader stringReader0 = new StringReader("V1^E@;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-117), (-1559));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-1558), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0GAM*yn f EJ");
      char[] charArray0 = new char[5];
      charArray0[0] = 'T';
      charArray0[1] = 'T';
      charArray0[2] = 'a';
      charArray0[3] = ',';
      charArray0[4] = 'O';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 576, 576);
      int[] intArray0 = new int[2];
      intArray0[0] = 576;
      intArray0[1] = (int) 'a';
      javaCharStream0.bufline = intArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y1=;v;/E[Ped^cq]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("'IC9SjP[t");
      StringReader stringReader1 = new StringReader("C)47i6e_31&$`r9");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[2] = 'U';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 553, 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 553, column 38.  Encountered: \"C\" (67), after : \"\\'I\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(22, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.0575674168114237
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-69), (-69), 90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(83, token0.kind);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("szb4Wv%HQ4* Jyf'");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)23;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader("Q!g3x(`");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 105, 116, (byte)23);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)23, (byte)23, 3454);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 23, column 23.  Encountered: \"\\u0010\" (16), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1795), (-1795));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1795, column -1794.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CCYfQus)");
      StringReader stringReader1 = new StringReader("T$bWD^Q#H0,l-*xDE]$");
      StringReader stringReader2 = new StringReader("tr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 192, (-445));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 441, (-1), 86);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z{2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 79, 79);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("Z", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 90, 90, 90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 90;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x!Lz3X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1585), 1924);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("x", token0.toString());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)15, (byte)15);
      javaCharStream0.bufsize = (int) (byte)15;
      int[] intArray0 = new int[1];
      intArray0[0] = 82;
      javaCharStream0.bufcolumn = intArray0;
      StringReader stringReader1 = new StringReader("enum");
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w(S\u0003!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-881), (-881), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("w", token0.toString());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^*RRt@F]3Kq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1867), (-1867));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1867), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2667, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("a", token0.toString());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false);
      javaParserTokenManager0.SwitchTo(0);
      StringReader stringReader0 = new StringReader(">aWCT(p");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SwitchTo(2);
      assertFalse(javaParserTokenManager0.equals((Object)javaParserTokenManager1));
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      stringReader0.read();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(124, token0.kind);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream1, 2);
      assertEquals(0, javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0GAM*yn f EJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w(S\u0003!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-881), (-881), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-678));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -678. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2466);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2466, 2466, 2466);
      int int0 = 0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      // Undeclared exception!
      try { 
        pipedInputStream0.read((byte[]) null, (-1), 2466);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(65);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 65. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.4164036246028113
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("Q!g3x(`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 111, 92);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 3454, 111, 3454);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-158));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -158. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-881), (-881), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertFalse(JavaCharStream.staticFlag);
  }
}
