/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 04:54:12 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2530), (HomeTexture) null, (-2530), (HomeTexture) null, (-2530), (-2530));
      homeEnvironment0.setPhotoQuality((-2530));
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setSubpartSizeUnderLight((-1935.85F));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals((-1935.85F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-14), (HomeTexture) null, (-14), (HomeTexture) null, (-14), (-14));
      homeEnvironment0.setPhotoQuality((-14));
      homeEnvironment0.setVideoQuality((-14));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-14), int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("LIGHT_COLOR", "", (Content) null, 20, 699.939F, "LIGHT_COLOR");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(20, homeTexture0, 20, (-311), 20);
      homeEnvironment0.setGroundColor(757);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setGroundColor(1047);
      homeEnvironment0.setPhotoWidth((-311));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      System.setCurrentTimeMillis((-2491L));
      homeEnvironment0.getPhotoQuality();
      Random.setNextRandom(20);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1979), (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.getPhotoHeight();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, (HomeTexture) null, 2, (HomeTexture) null, 2, 2);
      homeEnvironment0.setSubpartSizeUnderLight(2);
      homeEnvironment0.clone();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(2.0F, float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-14), (HomeTexture) null, (-14), (HomeTexture) null, (-14), (-14));
      homeEnvironment0.setSubpartSizeUnderLight((-1215.6041F));
      homeEnvironment0.setSkyColor((-1176));
      homeEnvironment0.setVideoWidth((-14));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-1215.6041F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals((-10), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoHeight(400);
      homeEnvironment0.setCeillingLightColor((-514));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setVideoWidth((-514));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getSkyTexture();
      assertEquals((-514), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Kc3)OV3*A", "SUBPART_SIZE_UNDER_LIGHT", uRLContent0, (-2260), 0, "SUBPART_SIZE_UNDER_LIGHT", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2260), homeTexture0, (-2145875285), homeTexture0, 13684944, 1.0F);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals((-2260), homeEnvironment0.getGroundColor());
      assertEquals((-2145875285), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("#CxjGL& i8HByE.\"", (String) null, (Content) null, (-920.075F), 54, "#CxjGL& i8HByE.\"");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(54, homeTexture0, 54, homeTexture0, 54, (-920.075F));
      homeEnvironment0.getGroundTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(54, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(54, homeEnvironment0.getSkyColor());
      assertEquals((-920.075F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(54, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("v9&r=`", "*w]~'J0", (Content) null, (-1.0F), (-4), "l'q\"l'", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4), homeTexture0, 2239, homeTexture0, (-4), 2239);
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-4), homeEnvironment0.getLightColor());
      assertEquals((-4), homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(2239.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2239, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2530), (HomeTexture) null, (-2530), (HomeTexture) null, (-2530), (-2530));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-46);
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.clone();
      assertEquals((-2530), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setPhotoQuality(4795);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoQuality();
      assertEquals(4795, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_CAMERA_PATH", "VIDEO_CAMERA_PATH", (Content) null, (-1.0F), (-3699.0F), "temporarySubFolder", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-257), homeTexture0, 3593, homeTexture0, 6, 1.0F);
      homeEnvironment0.getGroundTexture();
      assertEquals(3593, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-257), homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(6, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_WIDTH", (Content) null, 7, 3089.5F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, homeTexture0, 46, homeTexture0, 7, 46);
      homeEnvironment0.getGroundTexture();
      assertEquals(7, homeEnvironment0.getLightColor());
      assertEquals(7, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(46.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(46, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(19, (HomeTexture) null, 19, (HomeTexture) null, 19, 19);
      homeEnvironment0.setVideoQuality(19);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C*+{5");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-8), (HomeTexture) null, (-8), (HomeTexture) null, (-8), (-8));
      homeEnvironment0.setPhotoHeight((-8));
      homeEnvironment0.setPhotoHeight((-8));
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("da_tDh4(es@52Eg|1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.da_tDh4(es@52Eg|1
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-19), (HomeTexture) null, (-19), (HomeTexture) null, (-19), (-19));
      homeEnvironment0.setPhotoHeight((-19));
      homeEnvironment0.clone();
      assertEquals((-19), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, (-1979), (-2322.4028F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>(list0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.getLightColor();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5768731582333269
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(21, (HomeTexture) null, 21, (HomeTexture) null, 21, 21);
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(21, homeEnvironment1.getLightColor());
      assertEquals(21, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(21.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(21, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(36, (HomeTexture) null, 36, (HomeTexture) null, 36, 36);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ldQvYTmC0", resourceURLContent0, 36, 1660.0599F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setVideoWidth(36);
      homeEnvironment0.clone();
      assertEquals(27, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-14), (HomeTexture) null, (-14), (HomeTexture) null, (-14), (-14));
      homeEnvironment0.setVideoWidth((-14));
      homeEnvironment0.clone();
      assertEquals((-14), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8910459577298777
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment2.getVideoQuality();
      homeEnvironment2.getVideoQuality();
      homeEnvironment1.setGroundColor(400);
      homeEnvironment0.setGroundColor((-275));
      homeEnvironment1.setPhotoQuality((-1630));
      homeEnvironment0.setPhotoQuality((-2119));
      homeEnvironment1.setGroundColor(2976);
      homeEnvironment1.setGroundColor((-275));
      homeEnvironment0.setVideoWidth((-3291));
      homeEnvironment2.setVideoWidth(1295);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment0.getWallsAlpha();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment2.setVideoAspectRatio(aspectRatio1);
      homeEnvironment2.setVideoAspectRatio(aspectRatio1);
      homeEnvironment2.getVideoQuality();
      homeEnvironment2.getVideoQuality();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment2.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getSkyColor();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-275), (-1.0F), (-2119), 1.0F, (-2265.0F), 400, 181, camera_Lens0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "4GRXwr#", object0, (Object) null);
      Object object1 = new Object();
      Camera camera1 = new Camera(1.0F, 0.0F, (-1.0F), (-1.0F), 0, (-1353.7537F), 0L, camera_Lens0);
      homeEnvironment0.getGroundColor();
      homeEnvironment1.setVideoQuality(1);
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      List<Camera> list0 = homeEnvironment3.getVideoCameraPath();
      homeEnvironment2.setVideoCameraPath(list0);
      homeEnvironment2.setPhotoHeight(400);
      assertEquals((-2119), homeEnvironment0.getPhotoQuality());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor(1746);
      homeEnvironment0.setPhotoQuality(19);
      String string0 = "";
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 1497.7062F, 400);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(400, homeTexture0, 400, 0, 1497.7062F);
      homeEnvironment1.setGroundColor(400);
      homeEnvironment0.setVideoWidth(1746);
      homeEnvironment1.getWallsAlpha();
      // Undeclared exception!
      try { 
        uRLContent0.getJAREntryName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Content isn't a JAR entry
         //
         verifyException("com.eteks.sweethome3d.tools.URLContent", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setGroundColor((-275));
      homeEnvironment0.setPhotoQuality(130);
      homeEnvironment0.setPhotoQuality(130);
      homeEnvironment1.setGroundColor((-275));
      homeEnvironment1.setGroundColor(4);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(130, (HomeTexture) null, (-1660), 1, (-275));
      homeEnvironment2.setVideoWidth(4);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(130, (HomeTexture) null, 4, 0, 0);
      homeEnvironment3.setVideoWidth(400);
      homeEnvironment2.getWallsAlpha();
      homeEnvironment2.getWallsAlpha();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoQuality();
      homeEnvironment2.getVideoQuality();
      homeEnvironment2.isObserverCameraElevationAdjusted();
      homeEnvironment2.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyColor();
      homeEnvironment3.getSkyColor();
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setLightColor(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoWidth(839);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 25, 25);
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(25, homeEnvironment1.getGroundColor());
      assertEquals(25.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 0.0F, 0.0F, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2075), homeTexture0, (-2075), homeTexture0, (-2075), 1702.9694F);
      homeEnvironment0.getSkyTexture();
      assertEquals((-2075), homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2075), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1702.9694F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2075), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("rb)Eds,,n", "rb)Eds,,n", (Content) null, 21, 2.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(21, homeTexture0, 21, homeTexture0, 21, 21);
      homeEnvironment0.getSkyTexture();
      assertEquals(21, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(21, homeEnvironment0.getLightColor());
      assertEquals(21, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(21.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8662943611198906
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1123), (HomeTexture) null, 0, 0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setPhotoQuality((-1123));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoHeight((-1123));
      homeEnvironment0.setSubpartSizeUnderLight(3089.5F);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.setPhotoHeight(1328);
      homeEnvironment0.setVideoFrameRate(303);
      assertEquals(3089.5F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment.Property.values();
      System.setCurrentTimeMillis(0L);
      HomeEnvironment.Property.values();
      int int0 = (-394);
      String string0 = "q4I]R~Bxu^6@emo6";
      CatalogTexture catalogTexture0 = new CatalogTexture("q4I]R~Bxu^6@emo6", "q4I]R~Bxu^6@emo6", (Content) null, 0L, (-518.3152F), "q4I]R~Bxu^6@emo6");
      TexturesCategory texturesCategory0 = new TexturesCategory("SPHERICAL");
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      String string1 = "F*4*vIOMiw:h8sVU";
      CatalogTexture catalogTexture1 = new CatalogTexture("os.name", "q4I]R~Bxu^6@emo6", (Content) null, (-1.0F), (-394), "F*4*vIOMiw:h8sVU");
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture1.getCategory();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-394), homeTexture0, (-394), (-394), (-518.3152F));
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getVideoCameraPath();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("F*4*vIOMiw:h8sVU");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.F*4*vIOMiw:h8sVU
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1897));
      homeEnvironment0.setLightColor((-1561));
      homeEnvironment0.setVideoQuality((-1897));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals((-1897), homeEnvironment0.getVideoQuality());
      assertEquals((-1897), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setLightColor((-1979));
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      assertEquals((-1979), homeEnvironment0.getLightColor());
      
      homeEnvironment0.setLightColor(0);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoCameraPath(list0);
      homeEnvironment0.setCeillingLightColor(13684944);
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("y", propertyChangeListener0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setPhotoWidth(25);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoWidth();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyTexture();
      Random.setNextRandom(13);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8711428459683754
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1979), (HomeTexture) null, 13684944, (HomeTexture) null, (-2126), (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight(3126);
      homeEnvironment0.setLightColor((-2115));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(13, (HomeTexture) null, 13684944, (HomeTexture) null, (-3231), (-1494.7368F));
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment2.setCeillingLightColor(13);
      HomeEnvironment homeEnvironment4 = homeEnvironment3.clone();
      homeEnvironment0.setPhotoHeight((-1844));
      homeEnvironment1.setLightColor(33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment4.setPhotoWidth((-412));
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-1844), int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2698), (HomeTexture) null, (-489), (HomeTexture) null, 2143377560, 1.0F);
      homeEnvironment0.setCeillingLightColor(2143377560);
      assertEquals(2143377560, homeEnvironment0.getCeillingLightColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-769), (HomeTexture) null, 2785, (-765), (-1232.6F));
      homeEnvironment1.clone();
      assertEquals((-1232.6F), homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4), (HomeTexture) null, (-4), (HomeTexture) null, (-4), (-4));
      homeEnvironment0.setPhotoQuality((-4));
      homeEnvironment0.clone();
      assertEquals((-4), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-14), (HomeTexture) null, (-14), (HomeTexture) null, (-14), (-14));
      homeEnvironment0.setPhotoWidth((-14));
      homeEnvironment0.clone();
      assertEquals((-14), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-14), (HomeTexture) null, (-14), (HomeTexture) null, (-14), (-14));
      homeEnvironment0.setSubpartSizeUnderLight((-14));
      homeEnvironment0.clone();
      assertEquals((-14.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4), (HomeTexture) null, (-4), (HomeTexture) null, (-4), (-4));
      homeEnvironment0.setCeillingLightColor((-4));
      homeEnvironment0.clone();
      assertEquals((-4), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8720086468341763
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, (HomeTexture) null, 33, (HomeTexture) null, (-412), 33);
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight(10);
      homeEnvironment0.setLightColor((-1886));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setCeillingLightColor((-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setLightColor(33);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(7);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyColor((-412));
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5786122886681095
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, (HomeTexture) null, 13684944, (HomeTexture) null, (-412), 13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor((-1844));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment2.setGroundTexture((HomeTexture) null);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment2.setPhotoHeight((-1844));
      assertEquals((-1844), homeEnvironment0.getLightColor());
      assertEquals((-1844), homeEnvironment2.getPhotoHeight());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("7x;5;D", "7x;5;D", (Content) null, 145, 145, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(145, homeTexture0, 145, homeTexture0, 320, (-458.81284F));
      homeEnvironment0.setVideoFrameRate(145);
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(93, (HomeTexture) null, 93, (HomeTexture) null, 93, 93);
      homeEnvironment0.setWallsAlpha(549.0F);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setWallsAlpha((-1.0F));
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.095924398920587
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight(10);
      homeEnvironment0.setLightColor((-1844));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoWidth(5);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyColor(2229);
      assertEquals(2229, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2767, (HomeTexture) null, 0, 0, 0.0F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoWidth((-2739));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoHeight(1744);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment.DrawingMode.values();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setGroundColor(975);
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property.values();
      homeEnvironment0.setSubpartSizeUnderLight(1857.8059F);
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-2739), homeEnvironment0.getVideoWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setPhotoQuality(0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(0, homeEnvironment0.getPhotoQuality());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2619, (HomeTexture) null, 2619, (HomeTexture) null, 2619, 2619);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(2619, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, int0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2619, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2619.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(2619, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2478), (HomeTexture) null, (-2478), (HomeTexture) null, (-2478), (-2478));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2478.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-2478), homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, int0);
      assertEquals((-2478), homeEnvironment0.getLightColor());
      assertEquals((-2478), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-5), (HomeTexture) null, (-5), (HomeTexture) null, (-5), (-5));
      homeEnvironment0.setVideoFrameRate((-5));
      homeEnvironment0.clone();
      assertEquals((-5), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-6), (HomeTexture) null, (-6), (HomeTexture) null, (-6), (-6));
      homeEnvironment0.setVideoQuality((-6));
      homeEnvironment0.clone();
      assertEquals((-6), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1752, (HomeTexture) null, 1752, (HomeTexture) null, 1752, 1752);
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = (-1979);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1979), (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.isAllLevelsVisible();
      int int1 = 1;
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setSubpartSizeUnderLight((-260.49976F));
      homeEnvironment0.setPhotoQuality(472);
      homeEnvironment0.setSkyColor(0);
      assertEquals((-260.49976F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3639, (HomeTexture) null, (-2790), (HomeTexture) null, 12, 4514.1F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(3639, (HomeTexture) null, 12, (-2790), 4514.1F);
      homeEnvironment1.setVideoQuality(5);
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(5, homeEnvironment1.getVideoQuality());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 2740.0308F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-14), (HomeTexture) null, (-14), (HomeTexture) null, (-14), (-14));
      homeEnvironment0.getSkyTexture();
      assertEquals((-14), homeEnvironment0.getSkyColor());
      assertEquals((-14.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-14), homeEnvironment0.getGroundColor());
      assertEquals((-14), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-652), (HomeTexture) null, (-652), (HomeTexture) null, (-652), (-652));
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-652), homeEnvironment0.getGroundColor());
      assertEquals((-652.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-652), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-652), homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, (HomeTexture) null, 17, (HomeTexture) null, 17, 17);
      homeEnvironment0.setVideoWidth(11053224);
      homeEnvironment0.clone();
      assertEquals(8289918, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(21, (HomeTexture) null, 13, (HomeTexture) null, 21, 872.6F);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(4, (HomeTexture) null, 21, (HomeTexture) null, 4, (-2256.9045F));
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(4, homeEnvironment1.getGroundColor());
      assertEquals((-2256.9045F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(4, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(21, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(19, (HomeTexture) null, 19, (HomeTexture) null, 19, 19);
      homeEnvironment0.setPhotoQuality(19);
      homeEnvironment0.clone();
      assertEquals(19, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor((-275));
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setVideoWidth(1);
      homeEnvironment0.getWallsAlpha();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoQuality();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "Gy!=tK_/\"KZq", (Object) null, aspectRatio0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment0.setVideoQuality(400);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoHeight(481);
      assertEquals(481, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11, (HomeTexture) null, 11, (HomeTexture) null, 11, 11);
      homeEnvironment0.setPhotoHeight(1346);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setGroundColor(1985);
      homeEnvironment0.clone();
      assertEquals(1985, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-14), (HomeTexture) null, (-14), (HomeTexture) null, 4811, (-14));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-14), homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-14.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(4811, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-14), homeEnvironment0.getSkyColor());
      assertEquals(400, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor((-275));
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setGroundColor((-3169));
      homeEnvironment0.setVideoWidth(400);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(400, homeEnvironment0.getPhotoQuality());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-14), (HomeTexture) null, (-14), (HomeTexture) null, (-14), (-14));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("G<S ~Nrv&O", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("7x;5;D", "7x;5;D", (Content) null, 145, 145, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(145, homeTexture0, 145, homeTexture0, 320, (-458.81284F));
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 25, 25);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, (HomeTexture) null, 2, (HomeTexture) null, 2, 2);
      homeEnvironment0.getDrawingMode();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2, homeEnvironment0.getSkyColor());
      assertEquals(2, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, (HomeTexture) null, 17, (HomeTexture) null, 17, 17);
      homeEnvironment0.setCeillingLightColor(17);
      assertEquals(17, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(33);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(33, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-16), (HomeTexture) null, (-16), (HomeTexture) null, (-16), (-16));
      homeEnvironment0.setGroundColor((-733));
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4), (HomeTexture) null, (-4), (HomeTexture) null, (-4), (-4));
      homeEnvironment0.setGroundColor((-4));
      assertEquals((-4.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-4), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-4), homeEnvironment0.getLightColor());
      assertEquals((-4), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1898);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FDrN+B20&BN;C*\"", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "FDrN+B20&BN;C*\"", "FDrN+B20&BN;C*\"", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1.5F, (-897.0F), (-1133.0F), (-1758), (-1133.0F), (-83.9805F), 3719L, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment0, "FDrN+B20&BN;C*\"", camera0, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.setCeillingLightColor((-1758));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setLightColor((-1758));
      assertEquals(1898, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("=Ve I{?lku", "=Ve I{?lku", (Content) null, 0.0F, 145, "PXfS)@&Es3ZhQ\".X", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(145);
      homeEnvironment0.setVideoFrameRate(11053224);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoWidth(1916);
      assertEquals(1916, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2089443548), (HomeTexture) null, (-2089443548), (HomeTexture) null, (-2089443548), (-2089443548));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals((-2.08944358E9F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals((-2089443548), homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-2089443548), homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals((-2089443548), homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment0.getVideoQuality());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(320, int0);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(13684944, int0);
      
      homeEnvironment0.setSkyColor(0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1972), (HomeTexture) null, (-1972), (-1972));
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setGroundColor((-1972));
      homeEnvironment0.setVideoQuality(400);
      homeEnvironment0.setPhotoWidth(2146409530);
      homeEnvironment0.getSkyColor();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-18), (HomeTexture) null, (-18), (HomeTexture) null, (-18), (-18));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("j9\"", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoWidth(1713);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
