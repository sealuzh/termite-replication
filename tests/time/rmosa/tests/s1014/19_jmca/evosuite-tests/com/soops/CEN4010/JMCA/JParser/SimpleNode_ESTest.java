/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 02:58:03 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(441);
      simpleNode0.jjtAddChild((Node) null, 441);
      simpleNode0.jjtAddChild((Node) null, 441);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 442);
      assertEquals(443, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter(255);
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = '|';
      stringWriter0.write(charArray0);
      simpleNode0.dump("}", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        pipedOutputStream0.write((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.OutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<SynchronizedStatement>\n  <identifier>*ge</identifier>\n</SynchronizedStatement>\n<SynchronizedStatement>\n  <identifier>*ge</identifier>\n</SynchronizedStatement>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append('m');
      simpleNode0.dump("ExplicitConstructorInvoc>ti\"n", stringWriter1);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2462));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.499330655957162
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.jjtAddChild(simpleNode0, 26);
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte) (-95);
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte) (-29);
      byteArray0[7] = (byte) (-79);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringWriter0.write(37);
      // Undeclared exception!
      simpleNode0.dump("C~$F=~*&l*JZ0", stringWriter0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = ">@=";
      int int0 = 30;
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">@=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-");
      SimpleNode simpleNode0 = new SimpleNode(91);
      SimpleNode simpleNode1 = new SimpleNode((-1779));
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(91);
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode0.dump("=", stringWriter0);
      assertEquals("[", stringWriter0.toString());
      
      simpleNode1.jjtGetParent();
      simpleNode1.dump("-", stringWriter0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier("<=");
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(97);
      StringWriter stringWriter1 = new StringWriter(97);
      simpleNode0.dump(";", stringWriter1);
      assertEquals("<MarkerAnnotation>\n  <identifier>*le</identifier>\n</MarkerAnnotation>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(91);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("PackageDeclaration", stringWriter1);
      assertEquals("<SynchronizedStatement>\n  <identifier>*rshft</identifier>\n</SynchronizedStatement>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier(": ");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(97);
      StringWriter stringWriter1 = new StringWriter(97);
      simpleNode0.dump(": ", stringWriter1);
      char[] charArray0 = new char[9];
      stringWriter0.append('r');
      charArray0[0] = 'r';
      charArray0[1] = 'H';
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter2 = new StringWriter(97);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("r<MarkerAnnotation>\n  <identifier>: </identifier>\n  <identifier>*amp</identifier>\n</MarkerAnnotation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(91);
      simpleNode0.setIdentifier("&");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(4042);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write(1);
      simpleNode0.dump("SynchronizedStatement : &", stringWriter1);
      assertEquals("<SynchronizedStatement>\n  <identifier>*amp</identifier>\n</SynchronizedStatement>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(12);
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<TypeParameter>\n</TypeParameter>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8350516730230504
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("<");
      SimpleNode simpleNode1 = new SimpleNode(48);
      simpleNode1.jjtAddChild(simpleNode0, 47);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(48);
      simpleNode0.dump("<", stringWriter0);
      assertEquals("0<InstanceOfExpression>\n  <identifier>*lt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter(56);
      simpleNode0.dump((String) null, stringWriter0);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("w'$");
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(63);
      SimpleNode simpleNode2 = new SimpleNode(61);
      simpleNode1.setIdentifier("YW{};u^^=8B9");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('0');
      simpleNode1.dump("WV'lfnf*h~'", stringWriter1);
      assertEquals("0<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
      assertEquals("0<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(56);
      char[] charArray0 = new char[1];
      charArray0[0] = 'C';
      stringWriter0.write(charArray0);
      simpleNode0.dump((String) null, stringWriter0);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(117);
      StringWriter stringWriter0 = new StringWriter(117);
      SimpleNode simpleNode1 = new SimpleNode(117);
      simpleNode0.jjtAddChild(simpleNode1, 117);
      simpleNode0.jjtGetChild(117);
      assertEquals(118, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(3590);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.dump("EnF'K@v#", stringWriter0);
      assertEquals("<MarkerAnnotation>\n</MarkerAnnotation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(102);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild(simpleNode0, 102);
      simpleNode0.jjtGetChild(102);
      assertEquals(103, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(441);
      simpleNode0.jjtAddChild((Node) null, 441);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(0);
      assertEquals(442, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(86);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("nH]GkSc", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      SimpleNode simpleNode1 = new SimpleNode(101);
      Writer writer0 = null;
      simpleNode0.dump("&?.mDc", (Writer) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VariableDeclarator : |");
      simpleNode0.jjtAddChild(simpleNode1, 68);
      simpleNode0.toString();
      simpleNode0.id = 97;
      simpleNode1.toString("AllocationExpression");
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1505));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1505
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      SimpleNode simpleNode1 = new SimpleNode(48);
      simpleNode1.jjtAddChild(simpleNode0, 47);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("<", stringWriter0);
      assertEquals(48, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleNode simpleNode0 = new SimpleNode((-1954564117));
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      nodeArray0[8] = (Node) simpleNode0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("+3&VRe)'(", (Writer) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1954564117
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?A(N;>H|d");
      SimpleNode simpleNode0 = new SimpleNode((-239));
      simpleNode0.jjtSetParent(simpleNode0);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1866));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9766893090132731
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = ">@=";
      int int0 = 30;
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier(">@=");
      StringWriter stringWriter0 = new StringWriter(30);
      stringWriter0.append((CharSequence) ">@=");
      StringWriter stringWriter1 = new StringWriter(30);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(4760);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2565);
      simpleNode0.jjtAddChild(simpleNode0, 13);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1512);
      assertEquals(1513, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier("<=");
      simpleNode0.setIdentifier("L|4 3G9N#'],!U$+B<w");
      StringWriter stringWriter0 = new StringWriter(97);
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<MarkerAnnotation>\n  <identifier>*le</identifier>\n  <identifier>L|4 3G9N#'],!U$+B<w</identifier>\n</MarkerAnnotation>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("MarkerAnnotation : <= : L|4 3G9N#'],!U$+B<w", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1149);
      // Undeclared exception!
      try { 
        simpleNode0.toString("Tt5");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1149
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier("<=");
      simpleNode0.setIdentifier("L|4 3G9N#'],!U$+B<w");
      StringWriter stringWriter0 = new StringWriter(97);
      stringWriter0.write("<=");
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<=<MarkerAnnotation>\n  <identifier>*le</identifier>\n  <identifier>L|4 3G9N#'],!U$+B<w</identifier>\n</MarkerAnnotation>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString((String) null);
      assertEquals("nullMarkerAnnotation : <= : L|4 3G9N#'],!U$+B<w", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3153));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3153
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      String string0 = "com.soops.CEN4010.JMCA.JParser.SimpleNode";
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(25);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(441);
      simpleNode0.jjtAddChild(simpleNode0, 26);
      simpleNode0.jjtAddChild(simpleNode0, 26);
      assertEquals(27, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("</");
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.flush();
      simpleNode0.dump((String) null, stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "";
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode0 = new SimpleNode((-3157));
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-3157));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.014784547108511
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(35);
      simpleNode0.setIdentifier("don6L0c{&m");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(35);
      stringWriter1.append((CharSequence) "don6L0c{&m");
      simpleNode0.dump("don6L0c{&m", stringWriter1);
      simpleNode0.dump("{", stringWriter0);
      StringReader stringReader0 = new StringReader("don6L0c{&m");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1238);
      simpleNode0.jjtAddChild(simpleNode1, 35);
      assertEquals(36, simpleNode0.jjtGetNumChildren());
  }
}
