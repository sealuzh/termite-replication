/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 02:49:34 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(1, "0.0.0.0", 1);
      Player player1 = new Player((-1));
      player0.setJoinOK(player1, true);
      System.setCurrentTimeMillis(1392409296326L);
      player0.pack();
      player0.pack();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(1, "0.0.0.0", 1);
      Player player1 = new Player(1);
      player0.setJoinOK(player1, true);
      System.setCurrentTimeMillis(1392409296320L);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(3, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 5);
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY((-1.0F));
      float float0 = player0.getY();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-4351));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-125);
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)114;
      byteArray0[4] = (byte)2;
      Party party0 = player0.boss;
      player0.boss = null;
      byteArray0[5] = (byte) (-72);
      byteArray0[6] = (byte) (-47);
      byteArray0[7] = (byte)99;
      player0.setX((byte) (-72));
      byteArray0[8] = (byte) (-80);
      player0.pack();
      player0.getX();
      player0.getName();
      assertEquals((-72.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-4376));
      Player player1 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      player1.getSubparty();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(3796);
      Player player1 = new Player(3796);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player3796", player1.toString());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(8448);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player8448", player0.toString());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(5, "XjBZk;tU]0g?3p5", 5);
      player0.head = null;
      player0.setDead((-1L), true);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.gangStrength();
      player0.gangStrength();
      System.setCurrentTimeMillis((short)4919);
      player0.boss = null;
      int int0 = Packable.TEXT_MESSAGE;
      player0.getX();
      System.setCurrentTimeMillis((-1L));
      player0.type();
      player0.type();
      Player player1 = new Player(1285);
      player0.isJoinOK(player1, false);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(2585.679F);
      float float0 = player0.getY();
      assertEquals(2585.679F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0547452758288847
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-813), " ", (String) null, (-813));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setZ((-813));
      player0.setMoney((-311.99152F));
      player0.gangStrength();
      player0.getName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.reset(false);
      player0.toString();
      Player player1 = new Player((-6940));
      player0.setDead((-1L), false);
      player0.isJoinOK(player1, false);
      player1.setDead((long) 1);
      player0.getName();
      player0.gangStrength();
      player1.type();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getName();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte) (-83);
      player0.unpack(byteArray0);
      player1.setConnected(false);
      player0.isJoinOK(player1, true);
      assertEquals((-311.99152F), player0.getMoney(), 0.01F);
      
      player1.getY();
      String string0 = player1.getName();
      assertEquals("Player-6940", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-4351));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-125);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)114;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-72);
      byteArray0[6] = (byte) (-47);
      byteArray0[7] = (byte)99;
      byteArray0[8] = (byte) (-80);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-14335), (byte)114);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (byte)2);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX((-1.0F));
      player0.setZ(0);
      int int0 = 41;
      String string0 = "w1bN@V1A_$'";
      Player player1 = new Player(41, (String) null, "w1bN@V1A_$'", 0);
      player1.setX(2144.994F);
      player1.pack();
      player1.getIP();
      player1.prev = (Party) player0;
      player0.pack();
      int int1 = 2;
      String string1 = "7G?B7\\((KYA>p)tJzVJ";
      Player player2 = new Player(2, "7G?B7((KYA>p)tJzVJ", "Player.unpack(): *** WARNING *** data is not of proper type!", 1826);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream(enumeration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(532, "b1v{Ci0t+RQ:`;", "", 532, 10499);
      player0.toString();
      assertEquals("b1v{Ci0t+RQ:`;", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(10499, player0.getStrength());
      assertEquals(532, player0.getPictureId());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", "", 1974, (-2398));
      player0.setDead(1399L);
      player0.getZ();
      player0.setZ((-2398));
      player0.setDead();
      player0.reset(false);
      player0.isConnected();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)80;
      byteArray0[5] = (byte) (-88);
      byteArray0[6] = (byte)50;
      byteArray0[7] = (byte)50;
      byteArray0[8] = (byte)0;
      player0.unpack(byteArray0);
      player0.reset(false);
      player0.getTimeOfDeath();
      player0.getPictureId();
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-2398.0F), float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      EvoSuiteFile evoSuiteFile0 = null;
      Party party0 = new Party();
      player0.add(party0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(1, (String) null, 1);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-19968), (String) null, (String) null, (-19968), (-313));
      player0.remove((Party) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)0;
      player0.unpack(byteArray0);
      player0.head = null;
      player0.setDead(516L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getTimeOfDeath();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-4848));
      Player player1 = new Player((-4376));
      player1.getSubparty();
      player1.pack();
      player1.setDead((long) (-4376), false);
      boolean boolean0 = player1.isDead();
      assertEquals((-4376L), player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      Player player0 = new Player();
      player0.unpack(dataInputStream1);
      Player player1 = new Player((byte)64, "module.ModuleBrowserDialog$ModuleFilter", 95);
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      player0.next = party0;
      party0.prev = player0.next;
      player0.setMoney((-3713.4397F));
      player0.setConnected(false);
      player0.id = (-1531);
      player0.getStrength();
      player0.setMoney(0.0F);
      party0.boss = player0.next;
      Player player1 = new Player((-734), "", "hr&$.Igq", (-1), 1);
      player1.setDead((long) (-734), true);
      player0.setJoinOK(player1, false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-104);
      player0.unpack(byteArray0);
      player0.isConnected();
      player0.setDead((long) 1);
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = (-103);
      Player player0 = new Player((-103), "b@ubfSuX", (-103));
      player0.setDead();
      player0.getPictureId();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte) (-99);
      // Undeclared exception!
      try { 
        dataInputStream0.readFully(byteArray0, (int) (byte) (-49), (-1152));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-6940));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-74);
      byteArray0[5] = (byte)44;
      byteArray0[6] = (byte)113;
      byteArray0[7] = (byte)1;
      player0.unpack(byteArray0);
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-6940", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2356, "", "", 2356, (-554));
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-78);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 3732);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.setY(4175.0F);
      player0.getStrength();
      player0.setDead((long) (-554), false);
      player0.getTimeOfDeath();
      player0.setConnected(false);
      assertEquals((-554L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.getIP();
      player0.remove(player0);
      player0.isJoinOK(player0, false);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      player0.getStrength();
      Player player1 = new Player((byte)0, "", "", (short)4919, 1532);
      int int0 = player1.gangStrength();
      assertEquals(1532, int0);
      
      Player player2 = new Player((-19967), "", "", 1416, 773);
      assertEquals(1416, player2.getPictureId());
      assertEquals(773, player2.getStrength());
      
      player0.setJoinOK(player0, false);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)69;
      byteArray0[3] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      Player player0 = new Player(10);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player10", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(1150);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, int0);
      assertFalse(player0.isDead());
      assertEquals("Player1150", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-3313), "state.Party", "", (-3313), (-3313));
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getName();
      player0.getName();
      assertTrue(player0.isConnected());
      assertEquals((-3313), player0.getStrength());
      assertEquals((-3313), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("state.Party", player0.getIP());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-5343), "R", "", 2294, (-5343));
      player0.setDead((long) 2294);
      player0.isConnected();
      player0.setY((-5343));
      player0.setMoney(1.0F);
      player0.getName();
      player0.id = (-5343);
      player0.gangStrength();
      player0.getMoney();
      player0.setY(1.0F);
      player0.setMoney(2294);
      player0.isConnected();
      player0.setDead((-1702L));
      player0.head = null;
      player0.type();
      player0.getName();
      InputStream inputStream0 = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-5343));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-2772), "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", (-2101), (-2101));
      int int0 = player0.gangStrength();
      assertEquals((-2101), int0);
      assertEquals((-2101), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-805), "N", "N", (-805), 2841);
      MockFile mockFile0 = new MockFile("%:)I7Ot^K!q5(?|");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals((-805), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2841, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(10);
      player0.setY(10);
      assertEquals(10.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(0);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 0;
      String string0 = "{%Bv{-]*r";
      Player player0 = new Player(0, "{%Bv{-]*r", "{%Bv{-]*r", (-1846), 0);
      player0.gangStrength();
      String string1 = "";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", "{%Bv{-]*r");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(813, "{%Bv{-]*r", "\"Sj(5nh", (-1846), 4919);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(4919, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-1846), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("{%Bv{-]*r", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("jAKB!#+D+{K$e,7");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(2841);
      player0.isBoss();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.getName();
      assertEquals(25, player0.getId());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-2629));
      String string0 = player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-2629", string0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-4351));
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      assertEquals(1, player0.getId());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.pack();
      player0.getIP();
      Player player1 = new Player((short)4919);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player4919", player1.getName());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(200, "HsLSQtr7:cfX", "HsLSQtr7:cfX", 2);
      Party party0 = player0.gangBoss();
      Player player1 = new Player();
      party0.next = (Party) player0;
      party0.remove(player1);
      player0.remove(party0);
      player0.setConnected(true);
      player0.setZ(200);
      player0.reset(true);
      player0.getMoney();
      player0.isDead();
      player0.isDead();
      player0.gangStrength();
      player1.setZ(1196.2908F);
      long long0 = player0.getTimeOfDeath();
      assertEquals(200.0F, player0.getZ(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(2552);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-4848));
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-4848", player0.getName());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 10;
      Player player0 = new Player((-946), "", 10);
      player0.setMoney((-946));
      player0.setY(1152.2F);
      player0.getMoney();
      player0.pack();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-19967));
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-19967", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(4061, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 0, 1);
      player0.setDead((long) 0);
      player0.setZ(1);
      player0.setDead();
      player0.reset(false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)80;
      player0.unpack(byteArray0);
      player0.reset(false);
      player0.getTimeOfDeath();
      player0.getPictureId();
      player0.getZ();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(4, "eyY!fS(AZ~O+,G/pmP$", (-2254));
      player0.isConnected();
      player0.gangStrength();
      player0.pack();
      player0.setDead((long) 4);
      player0.setDead(0L);
      player0.getIP();
      player0.type();
      player0.getPictureId();
      int int0 = player0.getStrength();
      assertTrue(player0.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-4848));
      player0.reset(false);
      float float0 = player0.getX();
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-4848", player0.toString());
      assertEquals(10.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-4848));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-4351));
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-4848));
      player0.setZ((-4848));
      boolean boolean0 = player0.isDead();
      assertEquals((-4848.0F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(335, "", 335);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-99);
      byteArray0[4] = (byte)1;
      player0.unpack(byteArray0);
      int int0 = player0.getPictureId();
      assertEquals(335, int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(0, "^d;GKzICF", "^d;GKzICF", 0);
      player0.getTimeOfDeath();
      player0.id = 0;
      Player player1 = new Player(0, "", 1);
      player1.remove(player0);
      player0.isJoinOK(player1, false);
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-11));
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(500);
      Player player1 = new Player((-4376));
      player1.reset(true);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getMoney(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals("Player-4376", player1.getName());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }
}
