/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 02:52:59 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.index = (-1138);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(1, 2285);
      byteVector1.putInt((-1025));
      byteVector0.putUTF8("");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1930));
      classWriter0.version = (-1930);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1136), "@$\"M,C'", "@$\"M,C'", "@$\"M,C'", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, Integer.MAX_VALUE, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, Integer.MAX_VALUE, "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-341);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.index = (-1138);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "/4D)?qfzdc?", "", "/4D)?qfzdc?", "/4D)?qfzdc?");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(1, 0);
      fieldWriter0.put(byteVector1);
      ByteVector byteVector2 = byteVector0.putUTF8("/4D)?qfzdc?");
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "haj4K; jr", "haj4K; jr", "haj4K; jr", "haj4K; jr");
      Attribute attribute0 = new Attribute("K $6]w3r~v.J`OTL.!");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 43, "'1cMwzzuPR{WNw/t1`", "'1cMwzzuPR{WNw/t1`", "'1cMwzzuPR{WNw/t1`", "'1cMwzzuPR{WNw/t1`");
      fieldWriter0.visitAnnotation("'1cMwzzuPR{WNw/t1`", true);
      ByteVector byteVector0 = new ByteVector(32);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      classWriter0.index = 131072;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "Qi)vsa/O4Y~vMVm_V", ",*O%Q}Z4tivKR", "wheel.asm.Label", "Qi)vsa/O4Y~vMVm_V");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "haj4K; jr", "haj4K; jr", "haj4K; jr", "haj4K; jr");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("haj4K; jr", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "", "", (String) null, "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "haj4K; jr", "haj4K; jr", "haj4K; jr", "haj4K; jr");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`");
      Attribute attribute0 = new Attribute("'1cMezuPR{Nw/1`");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      int int0 = 43;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 43, "'1cMwzzuPR{WNw/t1`", "'1cMwzzuPR{WNw/t1`", "'1cMwzzuPR{WNw/t1`", "'1cMwzzuPR{WNw/t1`");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-606));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "#", "", "", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      classWriter0.invalidFrames = true;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "j", "/4D)?qfzdc?", "/4D)?qfzdc?", (Object) null);
      fieldWriter0.visitAnnotation("j", true);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("/4D)?qfzdc?");
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, (byte)0, (byte)0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "#Lt!*1", "#Lt!*1", "#Lt!*1", "#Lt!*1");
      fieldWriter0.visitAnnotation("#Lt!*1", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`");
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 47, "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`", "'1cMezuPR{Nw/1`", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@76f41929
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1930));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1930), "0$|MSsu]", "0$|MSsu]", "Signature", "Signature");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1930));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1136), "@$\"M,C'", "@$\"M,C'", "@$\"M,C'", (Object) null);
      fieldWriter0.visitAnnotation("@$\"M,C'", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "haj4K; jr", "haj4K; jr", "haj4K; jr", "haj4K; jr");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 4096, "Deprecated", "Deprecated", "Deprecated", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
