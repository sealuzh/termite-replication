/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 02:49:58 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.575624747786706
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("oo>LX?L=w@Bl", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('4', char0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.consume((-789));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3487759217547226
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("o", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      String string0 = token2.toString();
      assertEquals("[ (14) (m.)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.consume();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.693868872638233
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QaR&RkhBm0c%Ga\"{;");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("aR", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("&RkhBm0c%Ga\"{;", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("&", token3.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("[ ", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.895132841859144
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-866));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5758444193776775
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OE0");
      XPathLexer xPathLexer1 = new XPathLexer("wW=X4V^Pxw+j;");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token0 = xPathLexer2.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("OE0", token1.getTokenText());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'p9@tkUmP*M[");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("p9", token1.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8007669111758635
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P_Ve$@Ju;<z:p9}cPM)");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("$", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.nextToken();
      assertEquals("@", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Ju", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(";", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.consume((-789));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("TuMn^PmvK$AJ=2Pf");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("TuMn", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      char char0 = xPathLexer0.LA(28);
      assertEquals('e', char0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.694118987274108
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DyB[\"J&5{el");
      XPathLexer xPathLexer1 = new XPathLexer("DyB[\"J&5{el");
      XPathLexer xPathLexer2 = new XPathLexer("DyB[\"J&5{el");
      Token token0 = xPathLexer2.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer2.doubleColon();
      assertEquals("yB", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("DyB", token2.getTokenText());
      
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7959184263273786
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals("<", token0.getTokenText());
      assertNotNull(token0);
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      String string0 = token1.toString();
      assertEquals("[ (6) (4)", string0);
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token1);
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-75));
      // Undeclared exception!
      try { 
        xPathLexer1.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      XPathLexer xPathLexer1 = new XPathLexer("qN7");
      Token token0 = xPathLexer1.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("N7", token1.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      XPathLexer xPathLexer1 = new XPathLexer("<4oo>LX?L=w@Bl");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E8f\"2`}oJm){bjEw");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("M");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("M", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.690895463412169
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.dots();
      String string0 = token1.toString();
      assertEquals("[ (13) ( )", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("[", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tG&lHkE|6:26Cg");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("tG", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.setXPath(",kOSG");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(32, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("W(<U");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("(", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("U", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("dmq)/f]+^EkC");
      xPathLexer1.setXPath("dmq)/f]+^EkC");
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6936274550340613
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dmq)/f]+^EkC");
      Token token0 = xPathLexer0.whitespace();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("m", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("q)/f]+^EkC", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("q", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.056752283980286
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertEquals("", token2.getTokenText());
      assertEquals(27, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(9, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("LX", token4.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6937763014741507
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("W>[1\"$Q(jA");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("W", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("W>[1\"$Q(jA");
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer1.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer1.mod();
      Token token3 = xPathLexer0.dots();
      assertEquals(">", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.consume((-1769));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5709669654086493
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath("-9 QwE^B!wO^{'-1)");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8>5k60`T[&s'Qx");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l%rzW+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("l", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QaR&RkhBm0c%Ga\"{;");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9784131432944947
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.consume((-321));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2815553875954016
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#NX&a@");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#NX&a@", token1.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*(\"Y])/hjj_T]");
      xPathLexer0.setXPath("*(\"Y])/hjj_T]");
      xPathLexer0.consume((-3173));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";sE%cqwI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";sE%cqwI", token0.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".At7");
      Token token0 = xPathLexer0.pipe();
      String string0 = token0.toString();
      assertEquals("[ (17) (.)", string0);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("At7", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5754415416798357
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dmq)/f]+^EkC");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("dmq", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yo*Zgl<+~B");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.113480139069739
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I?;;ley~OzQf|IBw^b");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (26) (I)", string0);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+azVS=N");
      xPathLexer0.consume((-88));
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v2e,kbOHm*O");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("v2e", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.695783655146018
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RX'I'q7m.W3#yO4qbN");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5753843709862476
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.setXPath(";U");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(";", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("U", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8000470219280555
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":TU}u8u(Z3J^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("}", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("u8u", token3.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.575624747786706
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("`D7Aeaa^c =g;q])SW");
      xPathLexer1.nextToken();
      xPathLexer0.mod();
      xPathLexer1.slashes();
      xPathLexer0.setXPath("5]K7Dd`SNekJj<_e|l");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.operatorName();
      xPathLexer2.number();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.slashes();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j,DfN^@L}dyXR");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("%$GVDx@Ngla=XPd}@");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("%$GVDx@Ngla=XPd}@", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.consume((-710));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":nm%'TG\"m");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("nm", token1.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^Z[{* vYC2B:u:KK");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^Z[{* vYC2B:u:KK", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer0.comma();
      assertEquals("^", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@0]!");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("st");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("st", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*e0%hX");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6939566034800104
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P_Ve$@Juz:p9}cPM)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("P_Ve", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2&RPIC>7 e.6ay,v");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".At7");
      XPathLexer xPathLexer1 = new XPathLexer("k9");
      Token token0 = xPathLexer0.dots();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("k9", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5465216689565833
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*(\"Y])/hjj_T]");
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{UF+~usA");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{UF+~usA", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5779666154261482
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[G'-g~qbryZVl8oj");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6950219341644135
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("+XL6Y_'o,yvad[");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("XL6Y_", token3.getTokenText());
      
      xPathLexer1.mod();
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.443782489480845
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(">[1\"$Q(jA%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("1", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6940398639604233
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?bgvkA!");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("gvkA", token2.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m,{{z?9h&q{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5364945581275782
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+azVS=N");
      xPathLexer0.consume(1);
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("z", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("1q!'J7S4SLuBiX8=C");
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("VS", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("1q", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("!'", token4.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("|Q^*FZ8:W");
      xPathLexer1.setPreviousToken(token1);
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("Q", token3.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0c=+89]Z=j`bi`Kp+0");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YF-k6$W");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("YF-k6", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.576709301242677
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("~R!");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.isIdentifierStartChar('C');
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.441910149055313
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer1.setXPath("5]K7Dd`SNekJj<_e|l");
      xPathLexer1.operatorName();
      xPathLexer0.number();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("5", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("]", token2.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bYa");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("bYa", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?jzNEzeErD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?jzNEzeErD", token0.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b&e)lwR,~%z:bzm");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&e)lwR,~%z:bzm", token1.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0649801618304822
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.dots();
      assertEquals("o", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.694492336899061
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&R+(P,TH:[");
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.setXPath("IzYR`r`O~@,oYU#lPLf");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      xPathLexer0.hasMoreChars();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("zYR", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")en@\"Ey{G24k8B/tU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")Z{ck{kuaMh,V");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.577199389213468
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P_Ve$@Ju;<z:p9}cPM)");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("P_Ve", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("6]1VS6aP");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Ju;<z:p9}cPM)", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("J", token3.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hC~]:e");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("hC", token0.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1-Z8CBLSM5\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("6+Q59zh(X)Z>[");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v/~3&4]:");
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.consume((-459));
      xPathLexer0.endPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.385039158518092
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" =_|Kkm&lE*");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("_", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.4367584316420765
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A3:?aSt9");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("?a", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("St9", token4.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hC~]:e");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.799911296202602
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("So2irA!K?$cv");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.576551368269431
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("i71q=");
      Token token1 = xPathLexer0.dots();
      assertEquals("4", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("i71q", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(197);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5759450381833324
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FbQ[AH}kS");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (15) (FbQ)", string0);
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.7982372669070887
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (13) (o)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("C<!Q@cF7{");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("C", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("m", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8477651094619174
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(">[1\"$Q(jA%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.mod();
      Token token3 = xPathLexer0.dots();
      assertEquals("[", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7189867287718907
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.comma();
      assertEquals("4", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      char char0 = xPathLexer1.LA(2094);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.7816406522992287
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(14, token2.getTokenType());
      assertEquals("m.", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token4);
      assertEquals(2, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token5.getTokenText());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals("r", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6938232167920018
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("?/ARwiAdDWcr8dxF@AN");
      xPathLexer1.mod();
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals(12, token1.getTokenType());
      assertEquals("?/", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("");
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertNotSame(token3, token0);
      
      Token token4 = xPathLexer2.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.43570606742266
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = (-383);
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-383));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.2691873616955633
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.notEquals();
      xPathLexer1.colon();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.consume((-802));
      xPathLexer0.setXPath("");
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer1.plus();
      xPathLexer2.rightParen();
      xPathLexer1.or();
      // Undeclared exception!
      try { 
        xPathLexer2.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L7K~8\"7CT*~j4 * ");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/O0");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      Token token0 = xPathLexer0.doubleColon();
      String string0 = token0.toString();
      assertEquals("[ (19) (<4)", string0);
      
      Token token1 = xPathLexer0.dots();
      token1.toString();
      token1.toString();
      String string1 = token1.toString();
      assertEquals("[ (13) (o)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.881371113648493
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("oo>LX?L=w@Bl", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("o", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.7995547899637425
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" =_|Kkm&lE*");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(" ", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("*Tmb\u0013I?tW}*6");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("Tmb\u0013I", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5696376201112083
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*(\"Y])/hjj_T]");
      XPathLexer xPathLexer1 = new XPathLexer("*(\"Y])/hjj_T]");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r.,\tgx2PYZ");
      Token token0 = xPathLexer0.dots();
      assertEquals("r.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(",", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x=P1eW7OMTV,HD");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7051494025913678
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("o", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token3);
      assertEquals(2, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EHL");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("HL", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.104141762924444
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      String string0 = token1.toString();
      assertEquals("[ (13) (o)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.consume();
      Token token2 = xPathLexer0.number();
      assertEquals(".", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KKI]H,3}j4RIj@kIx");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.891228606131704
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.plus();
      xPathLexer0.consume((-1747));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.9246632656282379
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("5]K7Dd`SNekJj<_e|l");
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getPreviousToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1813));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" Qq{tKH|4]<o,BM|x");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("");
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.consume((-3095));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3820090741085975
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" =_|Kkm&lE*");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(21, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.598146910361878
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("E7", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("[", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      token2.toString();
      xPathLexer0.setPreviousToken(token2);
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (3) (P)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.mod();
      xPathLexer0.at();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("*", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.minus();
      assertEquals("`", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals("G", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.hasMoreChars();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("'", token8.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c+kh|/%^");
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.4444692268651114
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.setXPath("EkJRjDTOO/|?nw");
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.isIdentifierStartChar('l');
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.575624747786706
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.setXPath("crfb/D2oNOqQ!Kx");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token0);
      assertEquals("crfb/D2oNOqQ!Kx", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("c", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      String string0 = xPathLexer1.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.7938131631694842
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.currentPosition();
      xPathLexer0.rightBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.currentPosition();
      xPathLexer0.leftParen();
      xPathLexer0.plus();
      xPathLexer0.consume((-1358));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.isIdentifierChar('s');
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.796560996608503
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals("[", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.2401161135846737
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bBdX]|<H-WD{");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("BdX", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.3837596662206355
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" =_|Kkm&lE*");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("_", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('@');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.398801880953378
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P_Ve$@Ju;<z:p9}cPM)");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      String string0 = token0.toString();
      assertEquals("[ (15) (P_Ve)", string0);
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.596915256266001
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!w;<JFVP$~f&wAB-~");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.mod();
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.093308880176036
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('@');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.4112425020313708
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" =_|Kkm&lE*");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.consume(2550);
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.3662727395544934
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P_Ve$@Juz:p9}cPM)");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("P", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("_", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("V", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("$", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l&0dIrG:{");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-246));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.9068906294417918
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.4814723923873423
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath("-9 QwE^B!wO^{'-1)");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("-", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.2438437555867243
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*(\"Y])/hjj_T]");
      Token token0 = xPathLexer0.colon();
      assertEquals("*", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Y", token3.getTokenText());
      
      Token token4 = xPathLexer0.literal();
      assertNotNull(token4);
      assertEquals(")/hjj_T", token4.getTokenText());
      assertEquals(27, token4.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.4621514234221067
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.star();
      xPathLexer0.setXPath("EJ[7H*d`Gh");
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0792712974644696
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":TU}u8u(Z3J^");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.0244693104657494
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".At7");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals(".At7", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(2094);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.6001820599261871
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.leftParen();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.06497024418004
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(14, token2.getTokenType());
      assertEquals("m.", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.0246543489342435
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":ym'$)I#dj(yd:*s");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.4353234255079277
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bBdX]|<H-WD{");
      Token token0 = xPathLexer0.comma();
      assertEquals("b", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("BdX", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("]", token2.getTokenText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.0681899051156443
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w<b!%gxkE3{");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      Token token2 = xPathLexer0.rightBracket();
      token2.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.mod();
      token0.toString();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.0239172648299768
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".At7");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("At7", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=0.9438839183868181
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".At7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("A", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.9865152055768966
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".At7");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".At7", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.2885503171912354
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<4oo>LX?L=w@Bl");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.9830215952063901
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".At7");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("A", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("t", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.982246017291655
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":ym'$)I#dj(yd:*s");
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }
}
