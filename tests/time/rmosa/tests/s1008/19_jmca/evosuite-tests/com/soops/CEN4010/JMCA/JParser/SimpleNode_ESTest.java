/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 22:40:40 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.EmptyStackException;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ROhm");
      SimpleNode simpleNode0 = new SimpleNode(35);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ROhm");
      simpleNode0.setIdentifier("ROhm");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
      
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      StringReader stringReader0 = new StringReader("ROhm");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      nodeArray0[4] = null;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetChild(0);
      simpleNode0.toString();
      String string0 = simpleNode0.toString();
      assertEquals("ResultType : ROhm", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("K");
      stringWriter0.write(1650);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      stringWriter0.close();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "K");
      arrayList0.add("K");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.removeAll(linkedList0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) null);
      simpleNode0.toString("\n");
      arrayList0.add(";");
      simpleNode0.dump(";", stringWriter2);
      assertEquals("\u0672Knull<CompilationUnit>\n  <identifier>K</identifier>\n  <identifier>K</identifier>\n</CompilationUnit>\n", stringWriter2.toString());
      assertEquals("\u0672Knull<CompilationUnit>\n  <identifier>K</identifier>\n  <identifier>K</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("b9Z");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      stringWriter0.close();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "b9Z");
      arrayList0.add("<=");
      stringWriter0.append((CharSequence) "<=");
      simpleNode0.toString("b9Z");
      arrayList0.add((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump("b9Z", stringWriter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("@");
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte)117;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-64);
      byteArray0[5] = (byte) (-113);
      byteArray0[6] = (byte)0;
      simpleNode0.identifiers = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(58);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      CharBuffer.allocate(58);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<<");
      simpleNode0.dump("693Mr#cpg", stringWriter0);
      assertEquals("<CastExpression>\n  <identifier>*lshft</identifier>\n</CastExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      stringWriter0.close();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "&");
      arrayList0.add("&");
      simpleNode0.dump("\"||\"", stringWriter1);
      assertEquals("&<EnumConstant>\n  <identifier>*amp</identifier>\n</EnumConstant>\n", stringWriter1.toString());
      assertEquals("&<EnumConstant>\n  <identifier>*amp</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("@");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("}");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>@</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("@");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte) (-113);
      byteArray0[6] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("'jqq4kf}]woY_6F^h=");
      stringWriter0.write("'jqq4kf}]woY_6F^h=");
      simpleNode0.dump("'jqq4kf}]woY_6F^h=", stringWriter0);
      assertEquals("'jqq4kf}]woY_6F^h='jqq4kf}]woY_6F^h=<CompilationUnit>\n  <identifier>@</identifier>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("K");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write(99);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      stringWriter1.close();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "K");
      arrayList0.add("\n");
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) null);
      simpleNode0.toString("q]3:zw\"R6s}^Y{Ws");
      arrayList0.add("{");
      simpleNode0.dump("{", stringWriter3);
      assertEquals("cKnull<CompilationUnit>\n  <identifier>K</identifier>\n  <identifier>\n</identifier>\n</CompilationUnit>\n", stringWriter3.toString());
      assertEquals("cKnull<CompilationUnit>\n  <identifier>K</identifier>\n  <identifier>\n</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4970414201183432
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 122);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("\"T$ `4h_m76wbx9=", stringWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("K");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      stringWriter0.close();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "K");
      arrayList0.add("K");
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) null);
      simpleNode0.toString((String) null);
      arrayList0.add(">>");
      simpleNode0.dump("K", stringWriter3);
      assertEquals("Knull<CompilationUnit>\n  <identifier>K</identifier>\n  <identifier>K</identifier>\n  <identifier>*rshft</identifier>\n</CompilationUnit>\n", stringWriter3.toString());
      assertEquals("Knull<CompilationUnit>\n  <identifier>K</identifier>\n  <identifier>K</identifier>\n  <identifier>*rshft</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(58);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(58);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(">=", stringWriter1);
      assertEquals("<CastExpression>\n  <identifier>*ge</identifier>\n</CastExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("M");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("M", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>M</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      String string0 = "u(p*8hXP+Y#C!d7QjY:";
      StringWriter stringWriter0 = new StringWriter(51);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter1 = new StringWriter(51);
      stringWriter0.append('W');
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "u(p*8hXP+Y#C!d7QjY:", 1, (-231));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte)118;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("\"T$ `4h_m76wbx9=", stringWriter0);
      StringReader stringReader0 = new StringReader("\"T$ `4h_m76wbx9=");
      stringReader0.close();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.parser = javaParser0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 632);
      char[] charArray0 = new char[7];
      charArray0[0] = '/';
      charArray0[1] = '_';
      charArray0[2] = 'S';
      charArray0[3] = ']';
      charArray0[4] = '~';
      charArray0[5] = 'o';
      charArray0[6] = 'n';
      try { 
        stringReader0.read(charArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.jjtGetParent();
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.clone();
      arrayList0.add((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump("ybXlH4^E@8w", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(126);
      SimpleNode simpleNode1 = new SimpleNode(126);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.id = 126;
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 2026);
      assertEquals(2027, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2857);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 2046);
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtAddChild((Node) null, 2857);
      String string0 = ">>";
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[8];
      charArray0[0] = 'F';
      charArray0[1] = '^';
      charArray0[2] = 'h';
      charArray0[3] = '8';
      charArray0[4] = ',';
      charArray0[5] = '5';
      charArray0[6] = 'A';
      charArray0[7] = 't';
      stringWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) ">>", 2857, 2046);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-3935));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3935
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(126);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(126);
      // Undeclared exception!
      try { 
        simpleNode0.dump(" h~#.I?F", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 126
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(126);
      Node[] nodeArray0 = new Node[1];
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("MemberValuePairs");
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(126);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.dump("YdHc;e[A", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 126
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-14));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-14));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3208));
      // Undeclared exception!
      try { 
        simpleNode0.toString("lIVHI}#M!}");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3208
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.7786655906578275
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(19);
      simpleNode0.dump("-", stringWriter0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "-");
      stringWriter1.write((-639));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.clone();
      arrayList0.add("?");
      simpleNode0.dump("?", stringWriter1);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0787466051710823
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.jjtGetParent();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("\"T$ `4h_m76wbx9=", stringWriter0);
      simpleNode0.dump(">>", stringWriter0);
      stringWriter0.close();
      simpleNode0.setIdentifier("");
      StringReader stringReader0 = new StringReader(">>");
      stringReader0.read();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.setIdentifier("z+GE8vk");
      simpleNode0.dump("qn;=gI=P$_ ", stringWriter0);
      assertEquals("<ExclusiveOrExpression>\n  <identifier>z+GE8vk</identifier>\n</ExclusiveOrExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.id = 0;
      simpleNode0.jjtClose();
      simpleNode0.jjtClose();
      String string0 = "W";
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "W", 0, (-336760122));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode((-2705));
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      stringWriter0.close();
      stringWriter0.append((CharSequence) "&&");
      arrayList0.add("&&");
      simpleNode0.dump((String) null, stringWriter0);
      StringWriter stringWriter1 = new StringWriter(10);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 76);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2670));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2670
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.allocate(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("|");
      simpleNode0.dump("|", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1853));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) charBuffer0);
      stringWriter1.append('$');
      stringWriter0.append('$');
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) charBuffer0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("|");
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.dump("|", stringWriter2);
      assertEquals("$$<CompilationUnit>\n  <identifier>|</identifier>\n</CompilationUnit>\n", stringWriter2.toString());
      
      String string0 = simpleNode0.toString("|");
      assertEquals("|CompilationUnit : |", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1324));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1324
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.941488363211384
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(102);
      simpleNode0.setIdentifier("%@");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("'jqq4kf}]woY_6F^h=");
      simpleNode0.dump("B=Os(+'QyOkv8C#Uc4", stringWriter0);
      JavaParser javaParser0 = new JavaParser("t!~`%&+{YTw}c:%u");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 277);
      simpleNode1.dump("UbS=w", stringWriter0);
      assertEquals("'jqq4kf}]woY_6F^h=<MemberValueArrayInitializer>\n  <identifier>%@</identifier>\n  <identifier>*lt</identifier>\n</MemberValueArrayInitializer>\n", stringWriter0.toString());
      
      simpleNode1.jjtAddChild(simpleNode0, 0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      SimpleNode simpleNode1 = null;
      try {
        simpleNode1 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
