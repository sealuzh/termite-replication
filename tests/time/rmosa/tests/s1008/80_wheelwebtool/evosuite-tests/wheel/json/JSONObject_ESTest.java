/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 28 19:38:56 GMT 2020
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.835441733184989
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("pv}p?ovH5ZI(v3=", (Map) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject0.put("(:", (Collection) linkedList0);
      String string0 = jSONObject0.toString((-949), (-949));
      assertNotNull(string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("{HBuV>*k_UWW)Tkb5");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 17 of {HBuV>*k_UWW)Tkb5
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("0$");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of 0$
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.792953480427564
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      jSONObject0.toString(4, (-4199));
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put((Integer) null, "~C@/#WPCr");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString();
      assertNull(string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2995530335744938
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "kQJ");
      Boolean boolean0 = Boolean.valueOf(true);
      jSONObject0.putOpt("kQJ", boolean0);
      jSONObject0.remove("kQJ");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("Ebzn!A[3a", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0317592185692717
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", (double) (-1548));
      long long0 = jSONObject1.optLong(",:]}/\"[{;=#");
      assertEquals((-1548L), long0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0317592185692717
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put(",:]}/\"[{;=#", (double) (-1548));
      int int0 = jSONObject0.optInt(",:]}/\"[{;=#");
      assertEquals((-1548), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Byte byte0 = new Byte((byte)110);
      jSONObject0.put("Ebzn!A[3a", (Object) byte0);
      double double0 = jSONObject0.optDouble("Ebzn!A[3a");
      assertEquals(110.0, double0, 0.01);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.540305825226517
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float((-104.3943));
      jSONObject0.put("Ebzn!A[3a", (Object) float0);
      double double0 = jSONObject0.optDouble("Ebzn!A[3a");
      assertEquals((-104.39430236816406), double0, 0.01);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", (double) 55);
      Object object0 = jSONObject1.opt(",:]}/\"[{;=#");
      assertEquals(55.0, object0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.length();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Iterator iterator0 = jSONObject0.keys();
      assertNotNull(iterator0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6769877743224175
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("|hF!?>{55|.", (Object) jSONObject0);
      String string0 = jSONObject0.getString("|hF!?>{55|.");
      assertNotNull(string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Double double0 = new Double(0.0);
      JSONObject jSONObject1 = jSONObject0.put("l|**Q`rsDY{P!EK'#", (Object) double0);
      long long0 = jSONObject1.getLong("l|**Q`rsDY{P!EK'#");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6769877743224175
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Short short0 = new Short((short)8);
      jSONObject0.put("getjoin", (Object) short0);
      long long0 = jSONObject0.getLong("getjoin");
      assertEquals(8L, long0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("ybL56ART}I~w.|<I}h.", (-724.6));
      long long0 = jSONObject0.getLong("ybL56ART}I~w.|<I}h.");
      assertEquals((-724L), long0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.append("getiterator", object0);
      JSONArray jSONArray0 = jSONObject0.getJSONArray("getiterator");
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7326587201992076
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float(0.0);
      JSONObject jSONObject1 = jSONObject0.putOpt("7Vfvx<", float0);
      int int0 = jSONObject1.getInt("7Vfvx<");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put("\u0004\"o", 460L);
      int int0 = jSONObject1.getInt("\u0004\"o");
      assertEquals(460, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Double double0 = new Double((-1556.65130659));
      JSONObject jSONObject1 = jSONObject0.putOpt("do", double0);
      int int0 = jSONObject1.getInt("do");
      assertEquals((-1556), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8462202193216335
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(12);
      jSONObject0.accumulate("?I", integer0);
      double double0 = jSONObject0.getDouble("?I");
      assertEquals(12.0, double0, 0.01);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", (long) (byte) (-6));
      double double0 = jSONObject1.getDouble("] is not a JSONArray.");
      assertEquals((-6.0), double0, 0.01);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("Y&U_d7dMd/p", true);
      Object object0 = jSONObject0.get("Y&U_d7dMd/p");
      assertEquals(true, object0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.789277373461185
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = JSONObject.quote(" /.H7WS'7aO(jSVOnMH");
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(string0, stringArray0);
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0579054247036734
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Short short0 = new Short((short)2292);
      String string0 = JSONObject.valueToString(short0, 1888, 0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.666278442414676
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = JSONObject.valueToString("L@.'qiUPBX/]", 0, 2951);
      assertNotNull(string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.toString(0, 0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.toString(0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONObject.testValidity((Object) null);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = jSONObject0.remove("");
      assertNull(object0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = JSONObject.quote((String) null);
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.putOpt((String) null, (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("", true);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HashMap<Float, String> hashMap0 = new HashMap<Float, String>();
      Float float0 = new Float((-1.0F));
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.merge(float0, "ro", biFunction0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("|H(.", (Map) hashMap0);
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", (Object) "Ebzn!A[3a");
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("getlistIterator", 0L);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("", (-20));
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HashMap<Short, Integer> hashMap0 = new HashMap<Short, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("", 5147.0);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString((String) null, "wheel.json.JSONObject");
      assertEquals("wheel.json.JSONObject", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString("3W", (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HashMap<JSONArray, Integer> hashMap0 = new HashMap<JSONArray, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString("", "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString((String) null);
      assertEquals("", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      String string0 = jSONObject0.optString("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HashMap<JSONArray, Integer> hashMap0 = new HashMap<JSONArray, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      long long0 = jSONObject0.optLong("", (-2634L));
      assertEquals((-2634L), long0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong((String) null);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.optJSONArray((String) null);
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.optInt((String) null, (-5));
      assertEquals((-5), int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      int int0 = jSONObject0.optInt("", 2);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt((String) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      int int0 = jSONObject0.optInt("");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("!l2rdo6CX7", 1991.047855);
      assertEquals(1991.047855, double0, 0.01);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("Tc", (-1970.76949635536));
      assertEquals((-1970.76949635536), double0, 0.01);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("flo", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HashMap<JSONObject, Object> hashMap0 = new HashMap<JSONObject, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      double double0 = jSONObject0.optDouble("", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble((String) null);
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      double double0 = jSONObject0.optDouble("");
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean((String) null, true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean("", true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean((String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.optBoolean("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[6];
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      Object object1 = jSONObject0.opt((String) null);
      assertNull(object1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = jSONObject0.opt("");
      assertNull(object0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.isNull((String) null);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.isNull("");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.has((String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      boolean boolean0 = jSONObject0.has("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getString("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HashMap<JSONArray, Integer> hashMap0 = new HashMap<JSONArray, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getBoolean((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = JSONObject.doubleToString(2.826623005828237);
      assertEquals("2.826623005828237", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.append((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.2450431669074418
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("(:", (Object) jSONObject0);
      StringWriter stringWriter0 = new StringWriter(24);
      // Undeclared exception!
      jSONObject0.write(stringWriter0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.8891122655968182
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("[", (double) 110127361);
      jSONObject0.put("getcompare", 46);
      // Undeclared exception!
      JSONObject.valueToString(jSONObject0, (-217), 110127361);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.294545165844896
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put((Integer) null, "~C@/#WPCr");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        JSONObject.valueToString(jSONObject0, (-2005), (-214));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.9649629230074277
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Double double0 = new Double(Double.NaN);
      try { 
        JSONObject.valueToString(double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.084968408587477
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.accumulate("S_3'UU[e]7PhK", double0);
      Short short0 = new Short((short)1877);
      JSONObject jSONObject1 = jSONObject0.put("qu", (Object) short0);
      Long long0 = new Long((short)1877);
      jSONObject0.put("X!yNvb*Wg1%:_V}", (Object) long0);
      // Undeclared exception!
      jSONObject1.toString((-463), 2296);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put((Integer) null, "~C@/#WPCr");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        jSONObject0.toString(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put((Integer) null, "~C@/#WPCr");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        jSONObject0.toString((-1548));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      linkedList0.add((Byte) null);
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      try { 
        jSONObject0.toJSONArray(jSONArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[0] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Float float0 = new Float(Double.NaN);
      try { 
        JSONObject.testValidity(float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HashMap<JSONArray, Integer> hashMap0 = new HashMap<JSONArray, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, (Collection) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, (-4155L));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.put((String) null, 1162);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HashMap<Short, Integer> hashMap0 = new HashMap<Short, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, (-1781.0));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Integer integer0 = new Integer((-1548));
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put(integer0, "~C@/#WPCr");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      // Undeclared exception!
      try { 
        JSONObject.getNames(jSONObject0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.7261928332614538
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getLong(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.4216010062582942
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Float float0 = new Float(2255.6841);
      JSONObject jSONObject0 = new JSONObject(float0);
      try { 
        jSONObject0.getBoolean(" /.H7WS'7aO(jSVOnMH");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\" /.H7WS'7aO(jSVOnMH\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("ExpecteW a ',' or ']o", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3986496111888456
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject0.put("IS 5e ?b", (Collection) linkedList0);
      Writer writer0 = jSONObject0.write(stringWriter0);
      assertSame(stringWriter0, writer0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.784617558418788
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "");
      jSONObject0.toString(541, 541);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5661062742067247
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Set<Integer> set0 = hashMap0.keySet();
      Integer integer0 = new Integer((-3337));
      hashMap0.put(integer0, set0);
      String string0 = JSONObject.valueToString(hashMap0, 5, 120);
      assertNotNull(string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0, (-2005), (-2005));
      assertEquals("null", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null, 9, 2);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      String string0 = JSONObject.valueToString(linkedList0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      String string0 = JSONObject.valueToString(hashMap0);
      assertNotNull(string0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.586338210135213
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = jSONObject0.put("(:", (Collection) linkedList0);
      String string0 = jSONObject1.toString();
      assertFalse(linkedList0.contains(string0));
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = JSONObject.valueToString(jSONObject0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.8008293981022103
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "\"Ja}shKM2ul0|>-~}(7K\"");
      String string0 = jSONObject0.toString();
      assertNotNull(string0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = new JSONArray();
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      JSONArray jSONArray1 = jSONArray0.put((Collection) linkedList0);
      JSONArray jSONArray2 = jSONObject0.toJSONArray(jSONArray1);
      assertNotNull(jSONArray2);
      assertEquals(1, jSONArray2.length());
      assertNotSame(jSONArray2, jSONArray0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      assertNull(jSONArray1);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      String[] stringArray0 = new String[6];
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      JSONArray jSONArray0 = jSONObject0.toJSONArray((JSONArray) null);
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.4791328074296435
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject("gadd", stringArray0);
      Float float0 = new Float(Double.NaN);
      try { 
        jSONObject0.putOpt("gadd", float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.8562701281920884
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Double double0 = new Double(3435.4);
      String[] stringArray0 = JSONObject.getNames((Object) double0);
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      try { 
        jSONObject0.getInt((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = JSONObject.quote("\r");
      assertEquals("\"\\r\"", string0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5936174605927702
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      int int0 = jSONObject0.optInt((String) null, 0);
      assertEquals(1, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"ExpecteW a ',' or ']o\"";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.accumulate("4?]7:<p", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.accumulate((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.2706817223249798
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject(boolean0);
      JSONObject jSONObject1 = jSONObject0.put("gethashCode", true);
      jSONObject1.has("gethashCode");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("] is not a Boolean.", (-478));
      jSONObject0.optString("] is not a Boolean.");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.optJSONObject("\"ExpecteW a ',' or ']o\"");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6769877743224175
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONObject jSONObject1 = jSONObject0.put(":/qxex|", (Collection) linkedList0);
      JSONArray jSONArray0 = jSONObject1.optJSONArray(":/qxex|");
      assertEquals(0, jSONArray0.length());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.optJSONArray("");
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.5600040073151407
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.accumulate("S_3'UU[e]7PhK", double0);
      double double1 = jSONObject1.optDouble("S_3'UU[e]7PhK");
      assertEquals(4, jSONObject0.length());
      assertEquals(0.0, double1, 0.01);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.482733713259492
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "isremainderUnsigned");
      HashMap<Object, JSONArray> hashMap0 = new HashMap<Object, JSONArray>();
      Float float0 = new Float(0.0);
      jSONObject0.putOpt("istoHexString", hashMap0);
      String string0 = JSONObject.numberToString(float0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Integer integer0 = new Integer((-1553));
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put(integer0, "a4-");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = JSONObject.getNames(object0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.4562909245092568
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNotNull(stringArray0);
      assertEquals(3, stringArray0.length);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.0317592185692717
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("pu", 2021.0);
      long long0 = jSONObject0.optLong("pu");
      assertEquals(2021L, long0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.7624988333496463
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Double double0 = new Double(2032.12574406);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt("gtadd", "gtadd");
      jSONObject1.optLong("gtadd", 0L);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.6769877743224175
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("|hF!?>{55|.", (Object) jSONObject0);
      JSONObject jSONObject1 = jSONObject0.getJSONObject("|hF!?>{55|.");
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.276727835804178
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      jSONObject0.put(":/qxex|", (Collection) linkedList0);
      try { 
        jSONObject0.getJSONObject(":/qxex|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\":/qxex|\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject1 = jSONObject0.put("(:", (Collection) linkedList0);
      JSONArray jSONArray0 = jSONObject1.getJSONArray("(:");
      assertEquals(0, jSONArray0.length());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.257133793549772
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("EbznNA[3a", (Object) "EbznNA[3a");
      try { 
        jSONObject1.getJSONArray("EbznNA[3a");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"EbznNA[3a\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.094729047527649
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("g||/{5YzbRU;C}x#g", 323);
      int int0 = jSONObject0.optInt("g||/{5YzbRU;C}x#g");
      assertEquals(323, int0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("true", 0.0);
      double double0 = jSONObject0.getDouble("true");
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.6702992181413672
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      Boolean boolean0 = Boolean.valueOf((String) null);
      JSONObject jSONObject1 = jSONObject0.accumulate("4.", boolean0);
      try { 
        jSONObject1.getInt("4.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"4.\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.1006789212792607
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      Boolean boolean0 = Boolean.TRUE;
      jSONObject0.putOpt("aydd", boolean0);
      boolean boolean1 = jSONObject0.optBoolean("aydd", true);
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.7677281666160187
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Double double0 = new Double(2032.12574406);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt("gtadd", "gtadd");
      boolean boolean0 = jSONObject1.optBoolean("gtadd", true);
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("has", false);
      assertEquals(1, jSONObject0.length());
      
      boolean boolean0 = jSONObject1.getBoolean("has");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-1243.7781));
      assertEquals("-1243.7781", string0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-28746832));
      assertEquals("-2.8746832E7", string0);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      String string0 = JSONObject.doubleToString(Double.NaN);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      String string0 = JSONObject.doubleToString(0);
      assertEquals("0", string0);
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("|H(.", (Object) "|H(.");
      Boolean boolean0 = Boolean.FALSE;
      try { 
        jSONObject1.append("|H(.", boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[|H(.] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.5247073930301436
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject1 = jSONObject0.put("true", (Collection) linkedList0);
      Float float0 = new Float(0.0F);
      jSONObject1.append("true", float0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.append("", "(EQ&<G0}R-z");
      Byte byte0 = new Byte((byte)58);
      jSONObject0.accumulate("", byte0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.accumulate("", jSONArray0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=1.4780929304994466
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) " at character ");
      Integer integer0 = new Integer(64);
      jSONObject0.putOpt(" at character ", integer0);
      Object object0 = new Object();
      jSONObject0.accumulate(" at character ", object0);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=1.2033320406994705
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{x:1Ch^x1GllLqL");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ',' or '}' at character 15 of {x:1Ch^x1GllLqL
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.7356219397587946
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{K");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 2 of {K
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 168
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{}");
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 169
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("{");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 170
  /*Coverage entropy=0.9430456700020091
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("{\n\"java.lang.String@0000000004\": \"java.lang.Class@0000000005\",\n\"java.lang.String@0000000002\": java.lang.Boolean@0000000003\n}");
      JSONObject jSONObject0 = new JSONObject(jSONTokener0);
      assertFalse(jSONTokener0.more());
  }

  /**
  //Test case number: 171
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", (double) (-1548));
      boolean boolean0 = jSONObject1.isNull(",:]}/\"[{;=#");
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.8308939447177783
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      // Undeclared exception!
      jSONObject0.toString(3641);
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.3906826278129532
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      String[] stringArray0 = new String[6];
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      long long0 = jSONObject0.optLong("\"\"");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      int int0 = jSONObject0.length();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.5002692973717837
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      int int0 = jSONObject0.optInt("m*c/d/4uc84a_r*?i", 5);
      assertEquals(3, jSONObject0.length());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "-");
      jSONObject0.put("-", 0);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.6291821433649187
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "-");
      boolean boolean0 = jSONObject0.optBoolean("-");
      assertEquals(3, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 178
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("cG5&", 794L);
      assertEquals(794L, long0);
  }

  /**
  //Test case number: 179
  /*Coverage entropy=1.600996312869327
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      boolean boolean0 = jSONObject0.optBoolean("\b", false);
      assertEquals(3, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("\t");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of \t
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 181
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("pv}p?ovH5ZI(v3=", (Map) null);
      jSONObject0.optJSONObject("pv}p?ovH5ZI(v3=");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=1.7152863051349312
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      StringWriter stringWriter0 = new StringWriter(92);
      jSONObject0.write(stringWriter0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("", (long) 408);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 184
  /*Coverage entropy=1.785710773135528
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "-");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONObject jSONObject1 = jSONObject0.put("-", (Collection) linkedList0);
      boolean boolean0 = jSONObject1.optBoolean("-");
      assertEquals(4, jSONObject0.length());
      assertFalse(boolean0);
  }
}
