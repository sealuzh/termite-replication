/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 22:12:36 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-50));
      classWriter0.index = (-2793);
      classWriter0.version = 51;
      classWriter0.newLong(1L);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "J':Jd+NbJ=", "J':Jd+NbJ=", "J':Jd+NbJ=", "J':Jd+NbJ=");
      ByteVector byteVector0 = new ByteVector(51);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-92));
      classWriter0.index = (-92);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "O?]j R#:eMQLA'Mf", "p[RC-O:/o]aKy", "RuntimeVisibleAnnotations", "O?]j R#:eMQLA'Mf");
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte)66;
      byteArray0[3] = (byte)11;
      ClassWriter classWriter0 = new ClassWriter(65535);
      classWriter0.visitInnerClass((String) null, "?5_w]3\u0002n0R9>n}P", (String) null, 1530);
      classWriter0.newLong((-2L));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "Jb_r2>p5?rN?;V&j", "Jb_r2>p5?rN?;V&j", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put11(911, 131072);
      fieldWriter0.getSize();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putInt(1);
      byteVector2.putShort(1);
      ByteVector byteVector3 = new ByteVector(65535);
      byteVector3.putShort(2);
      byteVector1.length = (int) (byte) (-28);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 593, "vN*&c[~A+-;UR;", "ConstantValue", (String) null, (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-104));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-104), "O?]j R#:eMQLA'Mf", "O?]j R#:eMQLA'Mf", "O?]j R#:eMQLA'Mf", "O?]j R#:eMQLA'Mf");
      Attribute attribute0 = new Attribute("W .V0'");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(59);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 59, "p[RC:-O/o]aKy", "p[RC:-O/o]aKy", "p[RC:-O/o]aKy", "p[RC:-O/o]aKy");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-50));
      classWriter0.version = 51;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-50), "J':Jd+NbJ=", "J':Jd+NbJ=", "J':Jd+NbJ=", "J':Jd+NbJ=");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-50));
      classWriter0.version = 51;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-50), "J':Jd+NbJ=", "J':Jd+NbJ=", "J':Jd+NbJ=", "J':Jd+NbJ=");
      ByteVector byteVector0 = new ByteVector(51);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(76);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 76, "org.pache.commns.io.filefiler.EmptyFileFilter", "org.pache.commns.io.filefiler.EmptyFileFilter", "org.pache.commns.io.filefiler.EmptyFileFilter", "org.pache.commns.io.filefiler.EmptyFileFilter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-50));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, ">J':JONb>J1=", ">J':JONb>J1=", ">J':JONb>J1=", ">J':JONb>J1=");
      ByteVector byteVector0 = new ByteVector(51);
      byteVector0.length = (-50);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 47, "p[RC-O:/o]aKy", "p[RC-O:/o]aKy", "p[RC-O:/o]aKy", "p[RC-O:/o]aKy");
      fieldWriter0.visitAnnotation("p[RC-O:/o]aKy", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-104));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-104), "O?j R#:eMQLA'Mf", "O?j R#:eMQLA'Mf", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("O?j R#:eMQLA'Mf", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(76);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 76, "org.apache.commons.io.filefilter.EmptyFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.EmptyFileFilter", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-50));
      classWriter0.version = 51;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-50), "J':Jd+NbJ=", "J':Jd+NbJ=", "J':Jd+NbJ=", "J':Jd+NbJ=");
      fieldWriter0.visitAnnotation("J':Jd+NbJ=", false);
      ByteVector byteVector0 = new ByteVector(51);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-26), "m", "m", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 17, "p[RC-O:/o]aKy", "p[RC-O:/o]aKy", "p[RC-O:/o]aKy", "p[RC-O:/o]aKy");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-104));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-104), "O?]j R#:eMQLA'Mf", "O?]j R#:eMQLA'Mf", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("W .V0'");
      fieldWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(76);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 76, "(*", "(*", "(*", "(*");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      classWriter0.newLong(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "JSR/RET are not supported with computeFrames option", "org.apache.commons.io.filefilter.NameFileFilter", "e", "");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-26), "", "", "", "");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "", "(${qf,`|mg", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-26), "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 2165, "", "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(117);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 117, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-50));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-50), "m", "m", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-26), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }
}
