/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 22:36:45 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9809696419139855
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.consume((-2120));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7983834123217766
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(|=tK|h/we6");
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      xPathLexer0.consume((-363));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2063200972959818
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.leftParen();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.consume((-130));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.981410146291498
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.consume((-2740));
      // Undeclared exception!
      try { 
        xPathLexer1.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.576767744888392
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JFJ}IL<;X");
      Token token0 = xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals("[ (15) (JFJ)", string0);
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.endPosition();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("IL<;X", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(9);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7997279501369023
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iJlP_V>4=!{U");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("iJlP_V", token1.getTokenText());
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      char char0 = xPathLexer0.LA(3791);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6950411712226825
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tVJ[XNA,L*M;s?N");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("tVJ", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("[", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("XNA,L*M;s?N", token3.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]5(s}6_IyI)_a*");
      xPathLexer0.consume();
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4377134277438377
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~3S+>+UJO$");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer1.endPosition();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8948649697680677
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O9r-L_e#G_&uS");
      Token token0 = xPathLexer0.equals();
      assertEquals("O", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.comma();
      assertEquals("r", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(6, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("L_e", token3.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9211315951674597
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("& 1OZM/aC'we)");
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{Q(JK2^KVn!");
      xPathLexer0.consume();
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5758954423890557
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("ef^.!Oa`(");
      xPathLexer1.whitespace();
      xPathLexer0.endPosition();
      xPathLexer1.nextToken();
      xPathLexer0.slashes();
      xPathLexer1.currentPosition();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0>Oj(+");
      xPathLexer0.slashes();
      xPathLexer0.consume((-1364));
      xPathLexer0.endPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6945218746335167
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'RL&");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("'", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("RL", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.79979179690466
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#NdqBl*Jv!`v");
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(16, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("NdqBl", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5758954423890557
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("ef^.!Oa2(");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("ef", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("{.0eqlF");
      int int0 = xPathLexer2.endPosition();
      assertEquals(7, int0);
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("^.!Oa2(", token1.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.895407710609316
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pp$&FE%");
      Token token0 = xPathLexer0.slashes();
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("p$", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer0.dollar();
      assertEquals("&", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("FE", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.minus();
      assertEquals("%", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7998823902913426
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kk~AI}q5$8t=CEp7mw{");
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer1 = new XPathLexer("Kk~AI}q5$8t=CEp7mw{");
      xPathLexer1.dollar();
      xPathLexer1.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token0 = xPathLexer2.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n|YR\"HP91ivhFZ&PE");
      xPathLexer0.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7938131631694842
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.576551368269431
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AWZGyJW");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ZGyJW", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".]#&OW\"K<F4?NDh}[\"");
      XPathLexer xPathLexer1 = new XPathLexer("~J}");
      xPathLexer1.consume();
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
      
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O!gG<Dc6:+F}");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8006545910635436
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@M]uTzYPTIWj#kC@Y");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("M", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("uTzYPTIWj", token3.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4400277961141366
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N<3+Xm-b>\"/");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("N<3+Xm-b>\"/");
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("N<3+Xm-b>\"/");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      int int0 = xPathLexer2.endPosition();
      assertEquals(11, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8965619394650375
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'T6w2O_r-XM( 4Y>u<");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("T6", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer1 = new XPathLexer("1Y0*");
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("w2O_r-XM", token2.getTokenText());
      
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("(", token4.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("E]Gr:,S&fFA#wK=njf");
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("E", token1.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N<-3+pXumm`b>\"/");
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("TXOX|OfRP%THJ+/");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      char char0 = xPathLexer1.LA(32);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5709669654086493
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1T/6}#=6~");
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4404156435608075
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("59?qs`;q^!\"y;");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.endPosition();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("9", token1.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1171834271406627
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#Ndl*Jv!`v");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("#", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("Ndl", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?xE6v4g[@A\"");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CdGB3*");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.consume();
      assertEquals("CdGB3*", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("//}Z+9ei9u");
      XPathLexer xPathLexer1 = new XPathLexer("//}Z+9ei9u");
      Token token0 = xPathLexer1.slashes();
      assertEquals("//", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("//", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("P*D'DRV?@");
      int int0 = xPathLexer2.endPosition();
      assertEquals(10, int0);
      
      Token token1 = xPathLexer2.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("P", token1.getTokenText());
      
      Token token2 = xPathLexer2.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      xPathLexer1.consume();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\u0019');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5755655726875877
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1\"sO<M'4,m/^LgmTN");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("sO", token1.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.691342224395043
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@M]uTzYPTIWj#kC@Y");
      Token token0 = xPathLexer0.equals();
      assertEquals("@", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5112342562108394
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iJlP_V>4=!{U");
      Token token0 = xPathLexer0.slashes();
      assertEquals("i", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.div();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("_V", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(">", token4.getTokenText());
      assertEquals(9, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("4", token5.getTokenText());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6932245773362196
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0ta`wBv4]o)");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      XPathLexer xPathLexer1 = new XPathLexer("0ta`wBv4]o)");
      xPathLexer1.consume();
      xPathLexer1.div();
      Token token0 = xPathLexer1.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer1.endPosition();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("0", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.693868872638233
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Ls@j-W.jj!");
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      int int0 = xPathLexer1.endPosition();
      assertEquals(10, int0);
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Ls", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.consume();
      Token token2 = xPathLexer2.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0733820178041746
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.and();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5753765010294294
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0>Oj(+");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      char char0 = xPathLexer1.LA(55);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".zR");
      xPathLexer0.consume();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("zR", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":xD%2k(o");
      xPathLexer0.consume();
      int int0 = xPathLexer0.endPosition();
      assertEquals(8, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("xD", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("%", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6910517378300467
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer1.consume((-1061));
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("& 1OZM/aC'we)");
      XPathLexer xPathLexer1 = new XPathLexer("& 1OZM/aC'we)");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("& 1OZM/aC'we)");
      assertFalse(xPathLexer2.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.800020990429943
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Yyb8");
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6905579106695527
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("2,$I#2 ]>`H%^");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("2", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.57613028340169
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("dC seI`");
      xPathLexer1.setPreviousToken((Token) null);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume();
      xPathLexer1.div();
      Token token0 = xPathLexer2.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(7, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5767913220688015
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O!gG<Dc6:+F}");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.hasMoreChars();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("G<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Dc6", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(":", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("+", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7964122534878726
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      XPathLexer xPathLexer1 = new XPathLexer("Z7$+ljXf6\"@H#b+v");
      xPathLexer1.consume();
      xPathLexer1.div();
      xPathLexer1.whitespace();
      xPathLexer1.endPosition();
      xPathLexer1.nextToken();
      xPathLexer1.equals();
      xPathLexer1.consume();
      assertEquals("Z7$+ljXf6\"@H#b+v", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.577912489692068
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("r49P3n8rFAx~R0y");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("r49P3n8rFAx", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("knxF'1");
      Token token1 = xPathLexer1.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5108849594004707
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iJlP_V>4=!{U");
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("lP", token0.getTokenText());
      
      xPathLexer0.hasMoreChars();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("V", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(9, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("4", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("=", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.695541075652718
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("'Y%tU`\"(Ilj[");
      xPathLexer1.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(13, int0);
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("59?s`;q^!\"y;");
      XPathLexer xPathLexer1 = new XPathLexer("p@LuR\"");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("p", token0.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.893133368036466
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@M]uTzYPTIWj#kC@Y");
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("M", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("lNS]={/Mw:L!X4(");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.whitespace();
      assertEquals((-2), token4.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("ef^.!Oa2(");
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("{.0eqlF");
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.43570606742266
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">f?c S|DUKYd#<$+");
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cn");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer1.endPosition();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("n", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7997279501369023
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("59?sk;q^!\"y;");
      xPathLexer0.plus();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.8748777722974266
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1\"kC0sEc");
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.9348280153735744
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("59?s`;q^!\"y;");
      xPathLexer0.plus();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-338));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8661050490928919
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.setXPath("#dl*vv!`v");
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.isIdentifierStartChar('t');
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.7998275836859774
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("C!>/.OxQ?4");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.div();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer1.whitespace();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N<-3+pXumm`b>\"/");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("N", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N<-3+pXumm`b>\"/");
      Token token0 = xPathLexer0.identifier();
      assertEquals("N", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(6, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("3", token3.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7146034970723296
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")c:hz");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (2) ())", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.endPosition();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("hz", token3.getTokenText());
      
      char char0 = xPathLexer0.LA(14);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.438867895534186
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m-qAe40NgEdI, oCZ%");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      assertEquals("m-qAe40NgEdI", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.4398860526697708
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#Ndl*Jv!`v");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("6S~LTm-{)");
      xPathLexer0.endPosition();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(9, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.6905579106695527
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`Z=~wQ]C)$xN2");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("~", token2.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J%@ZQ-sy#f $s)XX`e");
      xPathLexer0.consume();
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.578397700343719
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("m.werken.saxpath.Token", token1.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.7964122534878726
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer(">Xn&[#PG]FN0d");
      xPathLexer1.consume((-329));
      xPathLexer1.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7738077956029605
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.whitespace();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.693287569462204
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("59?s`;q^!\"y;");
      Token token0 = xPathLexer0.plus();
      assertEquals("5", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("9", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("?s", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.endPosition();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(";q^!\"y;", token4.getTokenText());
      
      char char0 = xPathLexer0.LA(14);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.796091586500539
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o;|LBuD&apSV");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.consume();
      assertEquals("o;|LBuD&apSV", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.8936935921261018
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bp");
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("bp", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(")7`SH\" V_#(k");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.equals();
      Token token1 = xPathLexer1.equals();
      assertEquals(")", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.574679636917931
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("59?s`;q^!\"y;");
      xPathLexer0.equals();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("3RML4F[<xgv!Ttx2");
      xPathLexer1.consume();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-74));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".jmZ<BU6r*iV\"3?2BTt");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("jmZ<BU6r*iV\"3?2BTt", token1.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".jmZ<BU6r*iV\"3?2BTt");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("j", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.7957357779255525
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":89");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(":", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("9", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      char char0 = xPathLexer1.LA(32);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]]e7cQ,w:NZ7]!(K");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals(15, token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("]", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.269558419209478
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.isIdentifierChar('L');
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.div();
      xPathLexer1.plus();
      xPathLexer1.consume();
      xPathLexer0.operatorName();
      xPathLexer1.number();
      xPathLexer1.colon();
      xPathLexer1.relationalOperator();
      xPathLexer0.consume((-1388));
      xPathLexer0.leftParen();
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-1236));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kv+(-K\u0006CEWygG16>%");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1542));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-574));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.695183761009689
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.at();
      assertEquals("{", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(".0eqlF", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("{.0eqlF");
      Token token3 = xPathLexer1.dots();
      assertEquals(14, token3.getTokenType());
      assertEquals("{.", token3.getTokenText());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.2696985488293766
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.operatorName();
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.not();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.dollar();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer1.getXPath();
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.3683034977561925
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":89");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      xPathLexer0.mod();
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.6936784780454395
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(20, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.511602823754019
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iJlP_V>4=!{U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("iJlP_V", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("4=", token1.getTokenText());
      
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer0.dollar();
      assertEquals("!", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token3 = xPathLexer0.minus();
      assertEquals("{", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("U", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.799760234236983
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("ef^.!Oa`(");
      xPathLexer1.slashes();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("{.0eqlF");
      xPathLexer0.equals();
      xPathLexer2.plus();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer2.consume();
      assertEquals("{.0eqlF", xPathLexer2.getXPath());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.6947855529459757
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("dl", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",'0H=JtK2I4IN%");
      XPathLexer xPathLexer1 = new XPathLexer(",'0H=JtK2I4IN%");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vc%2*}l*");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8|");
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.982081791030939
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`WP2LW6]i6!6");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("WP", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("37F");
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertTrue(boolean0);
      
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      xPathLexer1.div();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("F", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.getPreviousToken();
      Token token4 = xPathLexer0.minus();
      assertEquals("2", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("L", token5.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.7982372669070887
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-623));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      xPathLexer0.consume((-3176));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.2124428963060594
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.2124428963060594
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1845));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.487073801249461
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("r49P3n8rFAx~R0y");
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer1.whitespace();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("49", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("#dl*vv!`v");
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer2.nextToken();
      Token token2 = xPathLexer2.getPreviousToken();
      assertEquals("#dl*vv!`v", token2.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.9209200655595362
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("& 1OZM/aC'we)");
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.796837966557264
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.pipe();
      xPathLexer1.and();
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      char char0 = xPathLexer0.LA(8);
      assertEquals('k', char0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.8000975308049907
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".jmZ<BU6r*iV\"3?2BTt");
      xPathLexer0.mod();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("jm", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token1 = xPathLexer0.colon();
      assertEquals("Z", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("BU6r", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-860));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.477158926540411
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("*", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierStartChar('t');
      Token token3 = xPathLexer0.literal();
      assertEquals("!`", token3.getTokenText());
      assertEquals(27, token3.getTokenType());
      assertNotNull(token3);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.6475168334243584
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      xPathLexer0.star();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(25, int0);
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.799229388296059
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-338));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      assertEquals("com.werken.saxpath.Token", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vc%2*}l*");
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierChar('r');
      xPathLexer0.plus();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('\'');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.299828907340658
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("{.0eqlF");
      xPathLexer1.consume(1804);
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.7942293800192302
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume(20);
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('/');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('F');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5100647576470974
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("*", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.isIdentifierStartChar('t');
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("v", token3.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.4196304892985574
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":x:W$!\"yjlQT&Rh}");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals("$", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(23, token6.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6235847875096225
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.398801880953378
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":x:W$!\"yjlQT&Rh}");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("x", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("W", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.44388147458787
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O!gG<Dc6:+F}");
      Token token0 = xPathLexer0.equals();
      assertEquals("", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.comma();
      assertEquals("!", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Dc6", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.endPosition();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.3990385827053426
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jH=");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("j", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("H", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("C");
      xPathLexer0.endPosition();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.8014513061459727
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpah.Token");
      xPathLexer0.div();
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertEquals("m.werken.saxpah.T", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      assertNotNull(token1);
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("k", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("e", token3.getTokenText());
      
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.623593830000286
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.9799561547384963
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.isIdentifierChar('&');
      xPathLexer0.endPosition();
      xPathLexer0.pipe();
      xPathLexer0.isIdentifierStartChar('$');
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.8252146846959003
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(") ", token2.getTokenText());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("x", token4.getTokenText());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.632867242240625
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      char char0 = xPathLexer1.LA(32);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.2127002965634597
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.4869260929568595
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@M]uTzYPTIWj#kC@Y");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("M", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("]", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("TzYPTIWj", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.2134454025717236
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.4034773743735793
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":89");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.LA(32);
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.7127185053258358
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`Z=~wQ]C)$xN2");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.7999420353196292
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O!gG<Dc6:+F}");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.at();
      assertEquals("!", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Dc6", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(":", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("+", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      char char0 = xPathLexer0.LA(583);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.248381010579112
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.6502709326994596
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.comma();
      assertEquals("w", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("erken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.2905367308802282
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".jmZ<BU6r*iV\"3?2BTt");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("jm", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("Z", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("<", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("B", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("U6r", token4.getTokenText());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.3082835364333503
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C!>/.OxQ?4");
      xPathLexer0.consume();
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token1 = xPathLexer0.plus();
      assertEquals(">", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
  }
}
