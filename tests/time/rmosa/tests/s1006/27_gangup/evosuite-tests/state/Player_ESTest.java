/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 20:37:33 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(30721, "&", 30721);
      player0.gangStrength();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      player0.setMoney((-269.39603F));
      player0.setZ(30721);
      player0.getMoney();
      System.setCurrentTimeMillis((short)4919);
      player0.setDead((long) 30721, false);
      Player player1 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.prev = (Party) null;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = (-2233);
      String string0 = "WWAM$jbIN{D[wJ%S&";
      Player player0 = new Player((-2233), "WWAM$jbIN{D[wJ%S&", 3798);
      boolean boolean0 = true;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      player0.setDead((long) (-2233), true);
      player0.setX((-2137.0F));
      player0.id = (-2233);
      player0.getX();
      DataOutputStream dataOutputStream0 = null;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0547452758288847
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis((-223L));
      Player player0 = new Player((-5884), "", "", 1007);
      player0.getX();
      Player player1 = new Player(1007, (String) null, 1007);
      player1.setZ(0.2F);
      player1.setDead((-1L), false);
      player1.setDead();
      player1.boss = (Party) player0;
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1007);
      player1.getMoney();
      System.setCurrentTimeMillis((-223L));
      player0.pack();
      player0.pack();
      player1.getMoney();
      player0.type();
      player1.toString();
      player0.getMoney();
      player0.getMoney();
      player0.type();
      player0.isJoinOK(player1, false);
      assertEquals((-223L), player1.getTimeOfDeath());
      assertEquals(1007, player0.getPictureId());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-126);
      byteArray0[0] = (byte) (-34);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-23);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Party party0 = player0.boss;
      player0.remove((Party) null);
      player0.setX((-1161.27F));
      player0.setConnected(true);
      player0.toString();
      player0.gangStrength();
      player0.setMoney(1);
      player0.setX(0.0F);
      player0.getX();
      player0.toString();
      player0.getMoney();
      player0.getX();
      player0.pack();
      assertEquals(1.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      Player player0 = new Player(1531, "Player", "Player", 1531, (-2689));
      Player player1 = new Player(1531, "tJ$b%M+Xxw.bV~x", "?sr7O#7nb%C.S", 1531);
      player0.add(player1);
      assertEquals(0.0F, player0.getZ(), 0.01F);
      
      player0.setZ(0.2F);
      player0.getX();
      float float0 = player0.getZ();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(1988, (String) null, "", 1988, 1988);
      player0.setConnected(false);
      player0.setY(1988);
      player0.gangStrength();
      player0.getIP();
      float float0 = player0.getZ();
      assertEquals(1988.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1399), "", (-1399));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Player player1 = new Player((-1141), "", "", 14080, 14080);
      player1.setJoinOK(player0, false);
      player0.setY((-1399));
      player0.pack();
      player1.isJoinOK(player0, true);
      player1.gangBoss();
      player0.isJoinOK(player1, false);
      float float0 = player0.getY();
      assertEquals((-1399.0F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(3456);
      Player player1 = new Player(3456, "", "", 3456, (-1316));
      player1.setDead((-1L), false);
      player0.setJoinOK(player1, false);
      player0.setY(487.8017F);
      byte[] byteArray0 = player1.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.write(byteArray0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-118);
      byteArray1[1] = (byte) (-46);
      byteArray1[2] = (byte)10;
      byteArray1[3] = (byte)10;
      byteArray1[4] = (byte)10;
      byteArray1[5] = (byte) (-1);
      byteArray1[6] = (byte)10;
      byteArray1[7] = (byte) (-46);
      byteArray1[8] = (byte)10;
      pipedOutputStream0.write(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      player1.reset(true);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-79), "3.*%WUWQ`+c W", 4919);
      player0.pack();
      Player player1 = new Player((short)4919, "3.*%WUWQ`+c W", (String) null, (-2314));
      player1.getSubparty();
      player1.isJoinOK(player0, false);
      float float0 = Player.TOLERANCE;
      player0.setDead((long) 4919);
      Player player2 = new Player(1117, (String) null, "3.*%WUWQ`+c W", (short)4919, (-2314));
      player0.getPictureId();
      player0.setDead((long) (-2314), true);
      player0.getX();
      player2.pack();
      player0.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      assertEquals((-2314L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-329), (String) null, 1426);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(3456);
      player0.setY(487.8017F);
      float float0 = player0.getY();
      assertEquals(487.8017F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(3450);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-103), "state.Player$JoinInfo", 4);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      Player player1 = new Player((-1072), "G`=z%dxaS", 873);
      player0.isJoinOK(player1, true);
      player1.getZ();
      player1.gangStrength();
      player0.getPictureId();
      player1.setDead((long) 873, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "(h.", "(h.", (short)4919, 0);
      player1.add(player0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      int int0 = player1.getStrength();
      assertTrue(player1.isConnected());
      assertEquals(0, int0);
      assertEquals(4919, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(3, "y5cNqSua%D$sh", (String) null, (-5878), (-5884));
      Party party0 = player0.next;
      player0.add((Party) null);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      int int0 = player0.getStrength();
      assertEquals((-5884), int0);
      
      int int1 = player0.type();
      assertTrue(player0.isConnected());
      assertEquals(5, int1);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-5878), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-4457), "G`=z%dxaS", "gui.ModuleBrowserDialog$ModuleFilter", (-4457));
      player0.setMoney(32.530434F);
      player0.getPictureId();
      player0.setX(3025.8606F);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      String string0 = "";
      int int0 = 197;
      // Undeclared exception!
      try { 
        dataOutputStream0.writeShort(197);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(1506);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player1506", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(4919, "*J2zp5w#8", 4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(197, "", 197);
      byte[] byteArray0 = player0.pack();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.unpack(byteArray0);
      assertEquals((-59), player0.getId());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-2177), "", "", (-1506), 166);
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(166, player0.getStrength());
      assertEquals((-1506), player0.getPictureId());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player0.isConnected();
      player0.id = (-1090);
      player0.setMoney(0);
      player0.getName();
      MockPrintStream mockPrintStream0 = new MockPrintStream("Player-1");
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.isConnected();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)0;
      Player player1 = new Player(1);
      player0.remove(player1);
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      player0.setZ((byte) (-125));
      player0.setDead((long) (byte)0, false);
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      player1.remove(player0);
      player0.setX(607.3529F);
      player0.pack();
      player0.gangStrength();
      player0.setJoinOK(player1, true);
      player1.setConnected(true);
      float float0 = player0.getZ();
      assertTrue(player0.isDead());
      assertEquals((-125.0F), float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "";
      String string1 = "";
      Player player0 = new Player((-253), "", "", (-253));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)115;
      byte byte0 = (byte) (-1);
      player0.unpack(byteArray0);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-1);
      byte byte1 = (byte)55;
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-477));
      player0.setX(3338.0F);
      float float0 = player0.getMoney();
      assertEquals(3338.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(1796, "0.0.0.0", 1796);
      player0.setMoney(1796);
      player0.setY(0.1F);
      player0.getMoney();
      player0.getMoney();
      player0.getMoney();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[0] = (byte)5;
      pipedOutputStream0.flush();
      byteArray0[1] = (byte)81;
      pipedOutputStream0.write(byteArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      int int0 = 5;
      // Undeclared exception!
      try { 
        dataOutputStream0.write(byteArray0, (int) (short)4919, 836);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, (InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(3456);
      Player player1 = new Player(2378, "", "", 3456, 0);
      player1.gangStrength();
      player0.setJoinOK(player1, false);
      player1.setY((-6308.0F));
      player1.pack();
      player0.isJoinOK(player1, false);
      player0.add(player1);
      float float0 = player1.getX();
      assertEquals((-6308.0F), player1.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-1285));
      player0.getPictureId();
      player0.setX((-1285));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        dataOutputStream0.writeLong(638L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-1360), "@\"}|y!`0F`m(_2", "@\"}|y!`0F`m(_2", 1, (-1360));
      int int0 = player0.gangStrength();
      assertEquals((-1360), int0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-1612), "EZxV%gZ}^Pd", (-1612));
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(5);
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player5", player0.toString());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(3450);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.id = 1523;
      System.setCurrentTimeMillis(1523);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player3450", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(3456);
      String string0 = "";
      Party party0 = new Party(1480);
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1572, "nsZ", "nsZ", 2, 2);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("nsZ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertTrue(player0.isConnected());
      assertEquals(2, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2, player0.getPictureId());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-362));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(3127, "", 3127);
      player0.setConnected(false);
      player0.setDead();
      player0.isConnected();
      player0.getName();
      player0.setConnected(false);
      player0.setConnected(false);
      player0.setDead();
      player0.setDead((-2092L), false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-41);
      player0.getZ();
      int int0 = player0.type();
      assertEquals((-2092L), player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-707));
      byte[] byteArray0 = new byte[7];
      player0.setDead((-3839L), false);
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte) (-35);
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-3839L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(3120);
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player3120", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(1028, "XJz^WP^7", 1028);
      MockPrintStream mockPrintStream0 = new MockPrintStream("2le#x~Q");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(1028, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(0, "", 2404);
      player0.getSubparty();
      Player player1 = new Player((short)4919);
      player0.boss = (Party) player1;
      player0.setMoney(0.2F);
      player1.setConnected(false);
      player0.getY();
      player0.toString();
      player0.gangStrength();
      player0.toString();
      player0.getName();
      player1.setJoinOK(player0, false);
      player1.gangStrength();
      player1.setConnected(true);
      int int0 = player1.getStrength();
      assertTrue(player1.isConnected());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-241), "", (-241));
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals((-241), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(1);
      String string0 = player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player1", string0);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(2896, (String) null, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      player0.id = (-1090);
      player0.setMoney(0);
      player0.getName();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-1399), "", (-1399));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)116;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-2);
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(1);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-1097));
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-1097", player0.getName());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      player0.id = 0;
      player0.setJoinOK(player0, false);
      long long0 = 1L;
      player0.setDead(1L, true);
      player0.gangStrength();
      player0.getSubparty();
      player0.getTimeOfDeath();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(1293);
      Player player1 = new Player(1293);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      float float0 = player1.getY();
      assertTrue(player1.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals("Player1293", player1.toString());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      boolean boolean0 = false;
      player0.setJoinOK(player0, false);
      player0.setDead((long) 0, false);
      player0.getSubparty();
      player0.getTimeOfDeath();
      DataOutputStream dataOutputStream0 = null;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-30372));
      player0.reset(true);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-30372", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(3425);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(0);
      int int0 = player0.type();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player0", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(5, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.next;
      player0.prev = null;
      player0.setDead((long) 0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        dataOutputStream0.writeBoolean(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(3425);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(1690);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("jZ.");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player1690", player0.getName());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(25334);
      Party party0 = player0.prev;
      player0.next = null;
      player0.setMoney(5585.6F);
      assertEquals(5585.6F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Player player0 = new Player(3456);
      player0.setConnected(false);
      player0.setY(487.8017F);
      assertEquals(487.8017F, player0.getY(), 0.01F);
  }
}
