/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 20:45:20 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("7rVh8%y~Hj01S");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.notes = "i_6!D9uproD15";
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      rawVariable1.getValueLabels();
      assertEquals("i_6!D9uproD15", rawVariable1.getNotes());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.getDisplayName();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("7rVh8%y~Hj01S");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      rawVariable0.setAlternativeVariable(rawVariable1);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.hasSameDisplayName(rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertNotSame(variable0, rawVariable0);
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=4.28184221607789
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.isNewRecord();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1431655763));
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setQuestionNumber("IA[,Ds{Q&t;(1'Di#");
      rawVariable0.setColumnEnd("IA[,Ds{Q&t;(1'Di#");
      rawVariable0.getColumnEnd();
      derivedVariable0.createVariableSummary();
      rawVariable0.setCleaningDescription("IA[,Ds{Q&t;(1'Di#");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("IA[,Ds{Q&t;(1'Di#", "IA[,Ds{Q&t;(1'Di#");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      derivedVariable0.clone();
      rawVariable0.getCategory();
      derivedVariable0.getCodeBookNumber();
      rawVariable0.getNotes();
      derivedVariable0.getYear();
      rawVariable0.getSupportingDocuments();
      rawVariable0.getName();
      derivedVariable0.getIdentifier();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("IA[,Ds{Q&t;(1'Di#", rawVariable0.getColumnEnd());
      assertEquals("IA[,Ds{Q&t;(1'Di#", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(1);
      supportingDocument1.setTitle("$[");
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.notes.label");
      ontologyTerm0.setNameSpace("_");
      ontologyTerm0.setNewRecord(false);
      rawVariable0.setIdentifier((-1157));
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaningDescription("U<(B#Exvp:'{T7Z");
      derivedVariable0.setYear("2X.Sr@?pZQA0)");
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getLabel();
      assertEquals("_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setName("INVALID_ALIAS_FILE_PATH");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayName();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("7rVh8%y~Hj01S");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      rawVariable0.setAlternativeVariable(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("V_=");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate0.and(predicate2);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate1.or(predicate3);
      predicate4.test(predicate2);
      predicate4.negate();
      predicate4.and(predicate3);
      predicate2.or(predicate3);
      predicate2.or(predicate4);
      derivedVariable0.setName("4\u0002@k%U:eq;_-n:");
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("V_=", derivedVariable0.getLabel());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_UPDATE_CATEGORY");
      derivedVariable0.setName("yGaRO<NS?qWvQ?'q!");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("UNABLE_TO_UPDATE_CATEGORY", derivedVariable0.getLabel());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.setCleaningDescription((String) null);
      String string0 = rawVariable0.getCleaningDescription();
      assertNull(string0);
      
      rawVariable0.getColumnStart();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.9935135494904315
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.clone();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.clone();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setAvailability("");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.clone();
      derivedVariable0.createVariableSummary();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.getIdentifier();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4390626350804188
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("?n64o");
      rawVariable0.setCleaningDescription("?n64o");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("?n64o");
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      user0.setCounty("$[");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("DUPLICATE_ONTOLOGY_TERM");
      derivedVariable0.setName("DUPLICATE_ONTOLOGY_TERM");
      derivedVariable0.getName();
      assertEquals("DUPLICATE_ONTOLOGY_TERM", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8624599234428953
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      User user0 = new User();
      user0.setAffiliation("4Wtg 8kQ`Pt!n");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable1.setValueLabels(arrayList0);
      derivedVariable0.setName("J");
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      rawVariable2.getSupportingDocuments();
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals(0, rawVariable2.getIdentifier());
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1499768031135122
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      User user0 = new User("}143U.S1:<_", "++ns*");
      user0.setAddressLine2("++ns*");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      user0.setCounty("}143U.S1:<_");
      derivedVariable1.setColumnStart("}143U.S1:<_");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      // Undeclared exception!
      try { 
        derivedVariable1.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("7rVh8%y~Hj01S");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1740046892));
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable2 = new RawVariable();
      arrayList0.add((Variable) rawVariable0);
      assertEquals((-1740046892), rawVariable0.getIdentifier());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("user.postCode.label");
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clone();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.columnStart = "q*f=H8(Ke|";
      rawVariable0.getCodeBookNumber();
      rawVariable0.getColumnStart();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6852661909001596
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "DUPLICATE_ONTOLOGY_TERM";
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("7rVh8%y~Hj01S");
      User user1 = new User();
      user0.setCity("dL)vK.~K{II");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAvailability("dL)vK.~K{II");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("dL)vK.~K{II", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("?n64o");
      derivedVariable0.setCleaningStatus("?n64o");
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      user0.setCounty("variable.cleaningDescription.label");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable2, derivedVariable0);
      assertEquals("?n64o", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCleaningDescription("?n64o");
      derivedVariable0.setName("$[");
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      user0.setCounty("$[");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("?n64o", rawVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      String string0 = "ontologyTerm.ontologyName.label";
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.760750468781551
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = null;
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.setIdentifier((-531));
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.clear();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      rawVariable0.getLabel();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setUserID("f&T:hS0G9iqCu");
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.785694393057566
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable0);
      derivedVariable0.setLabel("user.postCode.label");
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(derivedVariable0);
      predicate1.test(derivedVariable0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      predicate1.or(predicate0);
      arrayList0.removeIf(predicate3);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.490577634378733
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Object object0 = new Object();
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setColumnStart((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      derivedVariable0.setColumnStart("Unknown");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = null;
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("Unknown", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.alias.label");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getFilePath();
      assertEquals("variable.alias.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("dL)vK.~K{II");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      assertEquals("_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7468629062504872
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "_";
      rawVariable0.setCoded(true);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("hsjpiK<z@Uz*");
      ontologyTerm0.setNameSpace("hsjpiK<z@Uz*");
      User user0 = new User();
      user0.setIdentifier(759);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setLabel("hsjpiK<z@Uz*");
      derivedVariable0.setAvailability("hsjpiK<z@Uz*");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.setCleaned(true);
      System.setCurrentTimeMillis(5L);
      derivedVariable0.isCleaned();
      derivedVariable0.createVariableSummary();
      rawVariable0.getColumnEnd();
      derivedVariable0.getIdentifier();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("hsjpiK<z@Uz*", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-139));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("NEW", "NEW");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable2);
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(derivedVariable2.isCleaned());
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      rawVariable0.isCoded();
      rawVariable0.getCodeBookNumber();
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User(" type=", " type=");
      user0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-1982292595));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      User user0 = new User("", "(VtrqQkpGDN@rB-cH}u");
      user0.setPassword("variable.label.label");
      user0.setLastName("cCt>7(k9;l2Kh2/#UZ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1506));
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      RawVariable rawVariable0 = new RawVariable();
      Object object0 = new Object();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable1.removeSourceVariable(rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setCodeBookNumber("z9*=Q|G%");
      arrayList0.parallelStream();
      derivedVariable0.getLabel();
      User user0 = new User("", "TRjc!");
      user0.setPassword("");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.columnStart = "variable.availability.label";
      ontologyTerm0.setTerm((String) null);
      // Undeclared exception!
      try { 
        arrayList1.replaceAll((UnaryOperator<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("valueLabel.label.saveChanges");
      rawVariable0.getFilePath();
      assertEquals("valueLabel.label.saveChanges", rawVariable0.getColumnStart());
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      user0.setAffiliation("_");
      rawVariable0.setCodeBookNumber(":xp],\"X<!");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear(" type=");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(" type=", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setForm("(VtrqQkpGDN@rB-cH}u");
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("(VtrqQkpGDN@rB-cH}u", derivedVariable0.getForm());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "user.userID.saveChanges";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "-/O*";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setNameSpace("DUPLICATE_USER");
      String string0 = "%\\u~LRrv\"C ;{Z";
      derivedVariable0.setColumnEnd(string0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      assertEquals("%\\u~LRrv\"C ;{Z", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.8060799353500103
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setColumnEnd("_");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("_", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("-SPe 2[gg");
      rawVariable0.setIdentifier((-1994091956));
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5585375452786465
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      User user1 = (User)user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, arrayList1.size());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.6760295388499706
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.notes = "ERROR #";
      user0.setLastName("u/");
      user0.setPhone((String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.trimToSize();
      arrayList0.forEach(consumer0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getAlias();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("");
      supportingDocument0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      supportingDocument0.setIdentifier((-2073432485));
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.isNewRecord();
      derivedVariable0.getNotes();
      derivedVariable0.getForm();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getQuestionNumber();
      assertEquals("ERROR #", derivedVariable0.getNotes());
      
      rawVariable0.isNewRecord();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.630821318732888
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      User user0 = new User();
      user0.setAffiliation("4Wtg 8kQ`Pt!n");
      user0.setAddressLine2("4Wtg 8kQ`Pt!n");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(true);
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertTrue(rawVariable1.isCleaned());
      
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Predicate<SupportingDocument> predicate0 = Predicate.isEqual((Object) "");
      arrayList0.removeIf(predicate0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.removeIf(predicate0);
      arrayList0.spliterator();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.setCodeBookNumber("W$iKGa;'G>s(pb:P");
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.getFilePath();
      rawVariable0.getAlias();
      assertEquals("W$iKGa;'G>s(pb:P", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      derivedVariable1.addSourceVariable(derivedVariable0);
      arrayList1.stream();
      arrayList1.add((OntologyTerm) null);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("6#:&z%1y");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.alias.label");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.codeBookNumber = "byTl1$";
      rawVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      String string0 = rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("variable.cleaningStatus.label");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCleaningDescription();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setQuestionNumber("variable.alias.label");
      rawVariable0.setQuestionNumber("=z-(Ky$-=S q~");
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      assertEquals("=z-(Ky$-=S q~", rawVariable0.getQuestionNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("DJ0Hwe`0]03)%}_CS");
      derivedVariable0.questionNumber = "gk/\"<vyBzn*gisiA";
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSourceVariables();
      assertEquals("DJ0Hwe`0]03)%}_CS", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setCodeBookNumber("'7=cA,JER");
      derivedVariable0.createVariableSummary();
      rawVariable0.getName();
      derivedVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("'7=cA,JER", "'7=cA,JER");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      assertEquals("'7=cA,JER", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.setIdentifier(62);
      user0.setEmail(" type=");
      user0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber(" type=");
      rawVariable0.getFilePath();
      rawVariable0.getCodeBookNumber();
      assertEquals(" type=", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "hsjpiK<z@Uz*";
      rawVariable0.questionNumber = "";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getCodeBookNumber();
      assertEquals("", string1);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.getCleaningStatus();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "6RnOuC.Qo";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      
      derivedVariable0.addSourceVariable((Variable) null);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.remove((-989));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.600089918208053
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("J].5n");
      rawVariable0.clone();
      assertEquals("J].5n", rawVariable0.getCleaningDescription());
      
      derivedVariable0.getCleaningDescription();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.5999576868030942
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("general.fieldValue.blank");
      user0.setEmail((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.clear();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("general.fieldValue.blank", derivedVariable0.getYear());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber(" ype");
      rawVariable0.clone();
      assertEquals(" ype", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.5822705235337526
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setColumnStart("Ug;6\"lqt$0]wyC^W");
      derivedVariable0.setName((String) null);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("Ug;6\"lqt$0]wyC^W", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      
      User user0 = new User((String) null, "sOYTFRO)Q");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.5578332976219267
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList1.size());
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("_");
      User user0 = new User();
      user0.setCity("DUPLICATE_ONTOLOGY_TERM");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("DUPLICATE_ONTOLOGY_TERM");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertEquals("_", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "hsjpiK<z@Uz*";
      rawVariable0.questionNumber = "5";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "(VtrqQkpGDN@rB-cH}u";
      derivedVariable0.setYear(" type=");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      assertEquals(" type=", derivedVariable0.getYear());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setLabel("PJ");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.createVariableSummary();
      assertEquals("PJ", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setName("(VtrqQkpGDN@rB-cH}u");
      derivedVariable3.createVariableSummary();
      Object object0 = new Object();
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.setForm("variable.notes.label");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      user0.setAddressLine1("variable.notes.label");
      user0.setCounty("ontologyTerm.term.saveChanges");
      try { 
        User.checkValidEmail("ontologyTerm.term.saveChanges");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"ontologyTerm.term.saveChanges\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.setForm("OS},m9b[U5EXF=");
      derivedVariable0.getNotes();
      assertEquals("OS},m9b[U5EXF=", derivedVariable0.getForm());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setNotes("q*f=H8(Ke|");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("q*f=H8(Ke|", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "5[";
      derivedVariable0.setLabel("5[");
      derivedVariable0.setYear("5[");
      derivedVariable0.setAlias((String) null);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getQuestionNumber();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setCounty(" type=");
      derivedVariable0.setQuestionNumber("(VtrqQkpGDN@rB-cH}u");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("(VtrqQkpGDN@rB-cH}u", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setForm(" type=");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      assertEquals(" type=", derivedVariable0.getForm());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "=bPmF)P92I";
      derivedVariable0.codeBookNumber = "=bPmF)P92I";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      arrayList0.add((Variable) derivedVariable0);
      rawVariable0.form = "general.fieldValue.blank";
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getDisplayName();
      derivedVariable0.getAvailability();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getForm();
      assertEquals("=bPmF)P92I", derivedVariable0.getForm());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "ND";
      String string0 = derivedVariable0.getForm();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "macaw.bcsinessLayer.Variable";
      rawVariable0.setAlias("macaw.bcsinessLayer.Variable");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.setIdentifier((-1259));
      rawVariable0.getAlias();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = User.detectFieldChanges(user0, user0, user0);
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("hsjpio<z@U7ez*");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode((String) null);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getColumnStart();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("hsjpio<z@U7ez*", rawVariable0.getForm());
      
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaningDescription("?n64o");
      rawVariable0.getCleaningDescription();
      assertEquals("?n64o", rawVariable0.getCleaningDescription());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = null;
      rawVariable1.getColumnStart();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setIsNewRecord(false);
      boolean boolean1 = derivedVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      String string0 = derivedVariable0.getCodeBookNumber();
      assertNotNull(string0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("(GB05QO");
      rawVariable0.setCleaned(false);
      rawVariable0.getCodeBookNumber();
      assertEquals("(GB05QO", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setCleaningDescription("?n64o");
      rawVariable0.getCleaningDescription();
      rawVariable0.getColumnStart();
      assertEquals("?n64o", rawVariable0.getCleaningDescription());
      
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "mtC!m!_c`Ps";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      String string0 = derivedVariable0.getYear();
      assertEquals("", string0);
      
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "Z%,0JNqxJKG#F";
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = " type=";
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("macaw.system.MacawMessages");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      User user0 = new User("", "(VtrqQkpGDN@rB-cH}u");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setCodeBookNumber("}W1r");
      // Undeclared exception!
      try { 
        arrayList0.remove((-989));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      User user0 = new User();
      user0.setCity("DUPLICATE_VALUE_LABEL");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User("\"LdJne\"CR", "\"LdJne\"CR");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      User user0 = new User("}143U.S1:<_", "q*:=q8KB");
      user0.setAddressLine2("q*:=q8KB");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "6RnOuC.Qo";
      derivedVariable0.questionNumber = "6RnOuC.Qo";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setNotes("6RnOuC.Qo");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("*Q8W):nd|zT)O5");
      Variable.validateFields(rawVariable0);
      RawVariable.validateFields(rawVariable0);
      rawVariable0.notes = "ontologyTerm.ontologyName.label";
      User user0 = new User("ontologyTerm.ontologyName.label", "ontologyTerm.ontologyName.label");
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getDocumentCode());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User("\"LdJp(\"CR", "\"LdJp(\"CR");
      user0.setFirstName("variable.cleaningStatus.label");
      user0.setEmail("&");
      user0.setPassword("&");
      User.detectFieldChanges(user0, user0, user0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.895173285276612
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.setIdentifier((-1));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.setQuestionNumber("");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setCoded(false);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getColumnStart();
      Variable.validateFields(rawVariable0);
      derivedVariable1.clone();
      derivedVariable0.isCoded();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean1 = derivedVariable0.isCleaned();
      assertFalse(derivedVariable0.isCoded());
      assertTrue(boolean1 == boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("%<~%oZ=bI|R}");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.clone();
      assertEquals("%<~%oZ=bI|R}", rawVariable0.getLabel());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "k6Dzo:";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("k6Dzo:", rawVariable1.getNotes());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("general.fieldValue.unknown");
      derivedVariable0.form = "general.fieldValue.unknown";
      derivedVariable0.clone();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      User user0 = new User("", "");
      User user1 = (User)user0.clone();
      user0.setPassword("variable.label.label");
      user1.setPassword("variable.label.label");
      user0.setLastName("cCt>7(k9;l2Kh2/#UZ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("variable.label.label");
      derivedVariable0.getCleaningDescription();
      assertEquals("variable.label.label", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("AK_Lm4?<=vvj!");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("AK_Lm4?<=vvj!", rawVariable0.getForm());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      User user1 = new User();
      user1.setLastName("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
      
      derivedVariable0.setCoded(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-496));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(derivedVariable0.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("Urf");
      User user0 = new User(" type=", "r~).veY3`=gm!U'O");
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("$[");
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      User user0 = new User(" type=", "(VtrqQkpGDN@rB-cH}u");
      user0.clone();
      user0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.setSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User(";YjBAA%3Iq:Y|svA", "");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      supportingDocument0.setDocumentCode("DUPLICATE_VARIABLE_ASSOCIATION");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.questionNumber = "Qg>xj'rKF}qI";
      derivedVariable0.columnStart = "variable.alias.label";
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCategory("G!\"'y");
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.remove((-989));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setIdentifier(2985);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("2985", derivedVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
  }
}
