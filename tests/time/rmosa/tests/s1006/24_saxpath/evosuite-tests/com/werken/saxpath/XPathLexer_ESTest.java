/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 21:14:29 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("<):K.q(17&t");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5712448203683604
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.consume((-3342));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7938131631694842
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.consume((-4014));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9815953915098556
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.currentPosition();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-2299));
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7993592865424324
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RGTw<S#QZU+");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("GT", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("#", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.798311588720541
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l");
      Token token0 = xPathLexer0.number();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("l");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer2.setXPath("l");
      int int0 = xPathLexer1.currentPosition();
      assertEquals(1, int0);
      
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.slashes();
      assertEquals("l", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>K`SU-'dBA6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2053764043107664
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.setXPath("");
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer0.consume((-986));
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(p18Wd?M2,_&");
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.currentPosition();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.792781171425418
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M");
      Token token0 = xPathLexer0.not();
      assertEquals("M", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.setXPath("-79LUu0~MZtS1P#");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(6, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7969671154659554
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g2M7, dJ:");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      token1.toString();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("M", token2.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (5) (2)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("g", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.plus();
      assertEquals("c", token4.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.minus();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token1 = xPathLexer2.and();
      assertNull(token1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.800020990429943
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y!");
      Token token0 = xPathLexer0.plus();
      assertEquals("m", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      String string0 = token1.toString();
      assertEquals("[ (13) (e)", string0);
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("S", token2.getTokenText());
      
      xPathLexer0.setXPath("f-8<");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("f-8", token3.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UG.;p=i@&3Sf$aj");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("UG.", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.799911296202602
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q.6Y}fnqX\"I<^#x[M;:");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.slashes();
      token0.toString();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer("Q.6Y}fnqX\"I<^#x[M;:");
      xPathLexer1.nextToken();
      xPathLexer0.number();
      xPathLexer0.setXPath("[ (11) (6)");
      assertEquals("[ (11) (6)", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=G%=$4I");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ww");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) (Ww)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.setXPath("");
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+kjS\"ALBb9(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("kj", token1.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8;reI");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(";", token0.getTokenText());
      
      xPathLexer0.setXPath("@^HKo'9(I{I-01.");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NVRX[?aH");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.notEquals();
      String string0 = token1.toString();
      assertEquals("[ (22) (VR)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("N", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("X[?aH", token2.getTokenText());
      
      xPathLexer0.setXPath("");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.693159536685813
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      xPathLexer0.number();
      xPathLexer0.consume((-253));
      xPathLexer0.consume(19);
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NVRX[?aH");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("N", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("D");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("D", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("V", token3.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M");
      XPathLexer xPathLexer1 = new XPathLexer("M");
      xPathLexer1.leftParen();
      xPathLexer1.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8938302321479643
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      Token token2 = xPathLexer0.dots();
      String string0 = token0.toString();
      assertEquals("[ (32) (c)", string0);
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("w", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      String string1 = token1.toString();
      assertEquals("[ (5) (o)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.setXPath("iR'!");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tm\"hAvU0;]f6g{~\"|>t");
      XPathLexer xPathLexer1 = new XPathLexer("5|%? ");
      Token token0 = xPathLexer1.leftParen();
      assertEquals("5", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.575309310274877
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Y}WqCd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Y", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h2O!<~$2rB%xE6uJ");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J-%!/A.?ovJ!@");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("-", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%!/A.?ovJ!@", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.799229388296059
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(p18Wd?M2,_&");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(22, token2.getTokenType());
      assertEquals("18", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("Wd", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y!");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.363121372042874
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y!");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      String string0 = token1.toString();
      assertEquals("[ (13) (e)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (5) (m)", string1);
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.star();
      token2.toString();
      String string2 = token2.toString();
      assertEquals("[ (20) (S)", string2);
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S./i");
      Token token0 = xPathLexer0.dots();
      assertEquals("S.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      String string0 = token1.toString();
      assertEquals("[ (18) (/)", string0);
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("S./i");
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("akjS#\"ALBb9'(");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qL/2,sDr[$:hDG{T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("qL", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.8938952727983707
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yBk]1kX");
      Token token0 = xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.438867895534186
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Y");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setXPath("H{RF,H8;%%Gy");
      XPathLexer xPathLexer2 = new XPathLexer("H{RF,H8;%%Gy");
      Token token0 = xPathLexer2.slashes();
      assertEquals("H", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer2.nextToken();
      assertEquals("{RF,H8;%%Gy", token1.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.575309310274877
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Y");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("?Y");
      XPathLexer xPathLexer3 = new XPathLexer("?Y");
      Token token2 = xPathLexer3.nextToken();
      assertEquals("?Y", token2.getTokenText());
      
      xPathLexer3.setXPath("Ixh;\"Y");
      Token token3 = xPathLexer3.nextToken();
      assertEquals("Ixh;\"Y", token3.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tn9=r^tm-");
      Token token0 = xPathLexer0.dots();
      assertEquals("t", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = new Token(108, "tn9=r^tm-", 108, 108);
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertNotSame(token3, token1);
      assertEquals("n9=r^tm-", token3.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jHZ|C++|R4.HYX");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("jHZ", token0.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"*H!BQOrCni*X");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.695166964167495
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(p18Wd?M2,_&");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("(", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.setXPath("gbDBSrDhUh\"j%VD");
      XPathLexer xPathLexer1 = new XPathLexer("gbDBSrDhUh\"j%VD");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("gbDBSrDhUh", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5336384692295717
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NVRX[?aH");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("N", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.plus();
      assertEquals("V", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("RX", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7987091240017974
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9{0R>@d0ES:AN|Q_Z");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(13, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(",$0N:u");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("R>@d0ES:AN|Q_Z", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(",", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.472277175269368
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5}JT#TM[zn");
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bm`e<4xL@xJ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("bm", token0.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6e");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath(">jx*PK@z8tcm:Dog");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.576040181135618
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Y");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("v]jL7t_X-h-");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      xPathLexer1.setXPath("8;reI");
      XPathLexer xPathLexer2 = new XPathLexer("?Y");
      Token token3 = xPathLexer2.nextToken();
      assertEquals("?Y", token3.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6910517378300467
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals("[", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0617235510099245
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":_=&V'|>v15f4to");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.comma();
      assertEquals(":", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath(":_=&V'|>v15f4to");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("_", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("&", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      char char0 = xPathLexer0.LA(6);
      assertEquals('1', char0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.6932245773362196
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("E=:wwqk2");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4C)M@5JLC['%{00");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("C", token1.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.373090070094663
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@I:yT@]Sc/>n");
      xPathLexer0.setXPath(" 3]($S-@Kzh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7991368171319766
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("F`_KxW^^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("`", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("K", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("xW^^", token4.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(p18Wd?M2,_&");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("p18Wd?M2,_&", token1.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.692673074293336
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y!");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("eSmt", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Y}WqCd");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("G:l2");
      xPathLexer1.nextToken();
      xPathLexer1.setXPath(":=pG%=$4I");
      assertNotSame(xPathLexer1, xPathLexer0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y#Agq9");
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.690895463412169
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Au");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5696376201112083
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$M&D. z&X<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("$M&D. z&X<");
      Token token1 = xPathLexer1.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NVRX[?aH");
      Token token0 = xPathLexer0.number();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("N", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.setXPath("A/;");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("A/;", token2.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8;reI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("8", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5753765010294294
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("45hZm$g");
      xPathLexer0.identifier();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6877906150720685
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("akjS#\"ALBb9(");
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (2) (a)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      assertEquals("p", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.setXPath("^APEH{P9");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("^APEH{P9", token1.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.691342224395043
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.whitespace();
      String string0 = token0.toString();
      assertEquals("[ (-2) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kS'^w6;Hg{j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("kS", token0.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7655780197117648
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M");
      Token token0 = xPathLexer0.not();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("F`_KxW^^");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y!");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("m", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("eS", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals(9, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7279848763178152
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NVRX[?aH");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("V", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.plus();
      assertEquals("R", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("X", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(3, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ap");
      xPathLexer0.setXPath("w}K");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.800698300541215
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sNfY-1&Z)i{<ER;");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("sNfY-1&Z)i{<ER;");
      xPathLexer1.consume();
      xPathLexer1.setXPath("sNfY-1&Z)i{<ER;");
      Token token1 = xPathLexer0.nextToken();
      xPathLexer1.leftBracket();
      String string0 = token1.toString();
      assertEquals("[ (15) (Z)", string0);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer1.setPreviousToken(token0);
      assertEquals("&", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (15) (Z)");
      Token token2 = xPathLexer2.nextToken();
      assertEquals(3, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2'");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("2", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.771061076535117
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h2O!<~$2rB%xE6uJ");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("h", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("2", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("h2O!<~$2rB%xE6uJ");
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("h", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("O!<~$2rB%xE6uJ", token3.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]B!nb=g&@[c27");
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.consume((-2099));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.685730889190461
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y!");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("m", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("eS", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(":", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.694660474772117
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";EbM3M4s");
      Token token0 = xPathLexer0.colon();
      String string0 = token0.toString();
      assertEquals("[ (18) (;)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("EbM3M4s", token2.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.308626589606592
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4C)M@5JLC['%{00");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("C", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(2, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7786234147446027
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5}JT#TM[zn");
      XPathLexer xPathLexer1 = new XPathLexer("5}JT#TM[zn");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.at();
      token0.toString();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j]");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.1382026287605576
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer1.slashes();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer1.whitespace();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.consume((-2301));
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.endPosition();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.dots();
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.setXPath("d");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.3308209995586084
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.doubleColon();
      xPathLexer0.consume(26);
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.consume((-3492));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6940799232481694
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y!");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("me", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("Smt", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("akjS#\"ALBb9(");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.332410775837918
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer("HKwepXdx`_j<2u");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("com.werken.saxpath.Token", token1.getTokenText());
      assertNotNull(token1);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("H", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.getXPath();
      XPathLexer xPathLexer5 = new XPathLexer("HKwepXdx`_j<2u");
      xPathLexer5.endPosition();
      xPathLexer0.getXPath();
      xPathLexer5.operatorName();
      Token token3 = xPathLexer5.leftBracket();
      assertEquals("H", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer5.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      xPathLexer5.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer6.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer5.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("w", token6.getTokenText());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer2.consume(14);
      xPathLexer3.getPreviousToken();
      Token token8 = xPathLexer3.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer6.currentPosition();
      Token token9 = xPathLexer5.notEquals();
      assertEquals("ep", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tm\"hAvU0;]f6g{~\">t");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("H(xH]OQg");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("H", token1.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(p18Wd?M2,_&");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.minus();
      token0.toString();
      token0.toString();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.number();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1pO9T");
      xPathLexer0.setXPath("1pO9T");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer1.rightParen();
      xPathLexer0.setXPath("HKwepXdx`_j<2u");
      assertNotSame(xPathLexer0, xPathLexer1);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.7096701374567154
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NVRX[?aH");
      Token token0 = xPathLexer0.number();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.6871773362114688
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y!");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("eS", token1.getTokenText());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("@", token5.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.1418811781600087
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("=", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("pG", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.setXPath(":=pG%=$4I");
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.setXPath("a;'G>s(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("a", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.7993592865424324
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer1.dots();
      xPathLexer0.leftBracket();
      xPathLexer1.and();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.consume((-3147));
      xPathLexer1.consume();
      // Undeclared exception!
      try { 
        xPathLexer3.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.799852852556887
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.div();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      xPathLexer2.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer2.leftBracket();
      xPathLexer0.and();
      xPathLexer1.mod();
      xPathLexer2.slashes();
      xPathLexer2.consume((-3019));
      xPathLexer2.consume();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.endPosition();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer2.consume();
      // Undeclared exception!
      try { 
        xPathLexer2.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qL/2,sDr[$:hDG{T");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8286976360946576
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sNfY-1&Z)i{<ER;");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("&", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("sNfY-1&Z)i{<ER;");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("sNfY-1", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("&", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals("i", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9{0R>@d0ES:AN|Q_Z");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token2);
      XPathLexer xPathLexer1 = new XPathLexer("9{0R>@d0ES:AN|Q_Z");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("9", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("R", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("35b-G(*a$qXsG<sD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("35", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.2004225319128055
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.Perken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (5) (o)", string0);
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.number();
      assertEquals(31, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(29, int0);
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("P", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.1295894601523466
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.Perken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      token1.toString();
      Token token3 = xPathLexer0.slashes();
      String string0 = token1.toString();
      assertEquals("[ (32) (o)", string0);
      
      String string1 = token3.toString();
      assertEquals("[ (11) (.)", string1);
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Perken.saxpath.XPathLexer", token4.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E");
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.consume((-83));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.consume((-4186));
      Token token0 = null;
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.205193058245067
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.consume(0);
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.equals();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("}Lf/s[L}");
      char char0 = xPathLexer1.LA(1775);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_H>g]Q!~aY6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_H", token0.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.6870204957035666
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-346));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.8918711764128284
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = ")";
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.consume((-1341));
      xPathLexer0.comma();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HKwepXdx`_j<2u");
      xPathLexer0.setXPath("HKwepXdx`_j<2u");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.colon();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer1.operatorName();
      xPathLexer0.LA(1440);
      xPathLexer1.isIdentifierStartChar('\uFFFF');
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8,{O3Kh7s'NYlgM");
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.LA(47);
      xPathLexer0.isIdentifierStartChar('S');
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.getXPath();
      xPathLexer0.setXPath("[ (");
      assertEquals("[ (", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      boolean boolean0 = xPathLexer0.isIdentifierChar('+');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.693159536685813
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8;reI");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      assertEquals(";", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.setXPath("tqZ&EC4Xhy1(BY");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("tqZ", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.7056352175156029
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"bgyg5TS`#a*U");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      token1.toString();
      token1.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.and();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-293));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HKwepXdx`_j<2u");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.at();
      assertEquals("K", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.colon();
      assertEquals("w", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.648230618725046
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("meSmt>:cZp0SQ@|y>");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.number();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.5723992881587088
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.comma();
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("c", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer0.setXPath("N&G'$>5%Lc%[xc93X");
      assertEquals("N&G'$>5%Lc%[xc93X", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.825515171311615
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.setXPath("oxf>*p`<");
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      xPathLexer0.setXPath("oxf>*p`<");
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("oxf>*p`<", token4.getTokenText());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5922457070990699
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tm\"hAvU0;]f6g{~\"|>t");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (T)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("m\"hAvU0;]f6g{~\"|>t", token1.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.097624178767664
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      assertEquals("=", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("p", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.setXPath("!Spp>z^o!F;c");
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Spp", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("z^o!F;c", token4.getTokenText());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('\u001B');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5112719899178741
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NVRX[?aH");
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.9398367270009689
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Y}WqCd");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.setXPath(":=pG%=$4I");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.4062718327220074
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("[", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.endPosition();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.6852536104000664
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tm\"hAvU0;]f6g{~\"|>t");
      Token token0 = xPathLexer0.dots();
      assertEquals("T", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (21) (m)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(27, token3.getTokenType());
      assertEquals("hAvU0;]f6g{~", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.3100251910051934
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0CU>)G^1C@j^_");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      xPathLexer0.setXPath("0CU>)G^1C@j^_");
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("0", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.9680151930445028
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";EbM3M4s");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";EbM3M4s", token0.getTokenText());
      
      xPathLexer0.setXPath(";EbM3M4s");
      Token token1 = xPathLexer0.pipe();
      assertEquals(";", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume(1);
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.9815119825473437
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Y}WqCd");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(4, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dollar();
      assertEquals("}", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.setXPath(":=pG%=$4I");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.372799583529667
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.endPosition();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.374299525839578
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.9832151973653126
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=pG%=$4I");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("p", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.setXPath("!Spp>z^o!F;c");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.3718454386257863
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8;reI");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("reI", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.9812341275876326
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Y}WqCd");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      xPathLexer0.setXPath(":=pG%=$4I");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1660427449219766
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Y}WqCd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dollar();
      assertEquals("}", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setXPath(":=pG%=$4I");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("=p", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("G", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("%", token5.getTokenText());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.9894168313479573
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>K`SU-'dBA6");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.067743833539703
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>K`SU-'dBA6");
      Token token0 = xPathLexer0.at();
      assertEquals("<", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.2081897074533015
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Y");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("?", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Y", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.3000471212105036
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J-%!/A.?ovJ!@");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("J-", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      String string0 = token1.toString();
      assertEquals("[ (15) ()", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("J-%!/A.?ovJ!@");
      Token token3 = xPathLexer0.minus();
      assertEquals("/", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("A", token4.getTokenText());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.130014597324354
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0227426014162242
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.plus();
      String string0 = token1.toString();
      assertEquals("[ (5) (o)", string0);
      
      Token token2 = xPathLexer0.leftBracket();
      String string1 = token2.toString();
      assertEquals("[ (3) (m)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.plus();
      char char0 = xPathLexer0.LA(12);
      assertEquals('t', char0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.9452438186095787
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/Y}WqCd");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dollar();
      assertEquals("Y", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.setXPath(":=pG%=$4I");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertEquals("pG%", token3.getTokenText());
      assertEquals(27, token3.getTokenType());
      assertNotNull(token3);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.0244042546138663
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>K`SU-'dBA6");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.9733791777188323
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Y");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.9282135382301591
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }
}
