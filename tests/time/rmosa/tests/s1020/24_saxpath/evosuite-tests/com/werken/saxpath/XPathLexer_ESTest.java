/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 08:12:11 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.800669384181785
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J/Iw=Y&tDr.Us3P");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      assertEquals("J/", token1.getTokenText());
      assertEquals(12, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals("Y", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("&", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("t", token6.getTokenText());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      xPathLexer0.getPreviousToken();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.892632114903634
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("h", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("z", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6877906150720685
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (21) (~)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.consume();
      char char0 = xPathLexer0.LA(6);
      assertEquals('0', char0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6929510730627153
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals("8.", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7990389937032654
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ayg%_.-.ql#K");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Ay", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("g", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("'\"iqQ]");
      Token token2 = xPathLexer0.comma();
      assertEquals("%", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("_.-.ql#K", token3.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      int int0 = (-4582);
      xPathLexer0.consume((-4582));
      int int1 = (-1019);
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.797997937030743
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I+w#<MR7 ua");
      xPathLexer0.div();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("I", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("I+w#<MR7 ua");
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6903752622677266
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{V");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("{", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("V", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5766482455904502
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dW>ZW/A$PV$8o5");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals(">Z", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("/", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("A", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2063080408234645
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aZD.@Z?mzS@o");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("a", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("D", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("@", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("Z?", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals("", token7.getTokenText());
      assertEquals((-2), token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      Token token9 = xPathLexer0.comma();
      assertEquals("o", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("[ K");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("K", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7976345979445405
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k|Ws^");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("SU83#JY\">~8Q-M[");
      Token token0 = xPathLexer1.leftParen();
      assertEquals("S", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Ws", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8936217685248664
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UIv)");
      xPathLexer0.setXPath("hUu");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("h", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("):[E&,z/GmA");
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Uu", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.891722433292198
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4-5");
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.692230959294725
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dW>ZW/A$PV$8o5");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("W", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("/", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.800698300541215
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aZD.@Z?mzS@o");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ZD.", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("YhE/h?<T^");
      Token token2 = xPathLexer0.comma();
      assertEquals("@", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8936935921261018
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M`.Q'8*Ih}");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.consume((-696));
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.981982673179814
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.setXPath("Pj0h_@o%");
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2051));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.978882553402459
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.consume();
      xPathLexer0.consume((-91));
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer2.equals();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.268163943478719
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      xPathLexer0.setXPath("XD<-o]R#KUHFH5EhJ");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getPreviousToken();
      xPathLexer0.colon();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.consume((-316));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8947506187103205
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj2!?F3<P>8}Y9B s");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Kj", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("2", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("F3<P>8}Y9B s", token4.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\u0005LEE!]hi");
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token0 = xPathLexer1.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("\u0005LEE!]hi", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer2.comma();
      assertEquals(32, token2.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aQZD.@Z?mzS@w");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-340));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.796560996608503
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.consume((-428));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1355112303244783
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|=pT%z}7");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("=p", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("T", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.consume();
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertEquals("z", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("}", token7.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.799400379618249
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=:\"!NaDX}Z_Fo#`Y2w");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("ul#4xQl,w\"a~");
      xPathLexer1.nextToken();
      xPathLexer1.and();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7980805884895408
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/6lX#k]'");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("lX", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f2+y'&e5CsJk_1-U");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.896063770966869
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aZD.@Z?mzS@o");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.dots();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o>:w");
      Token token0 = xPathLexer0.pipe();
      assertEquals("o", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C>1;8}4Vf)J");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8918711764128284
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("::QG6D^`{6i}1rO");
      XPathLexer xPathLexer1 = new XPathLexer("::QG6D^`{6i}1rO");
      xPathLexer1.rightBracket();
      xPathLexer1.colon();
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.791946795121705
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ap-Lfo?'Y");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("p", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("-", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.minus();
      xPathLexer0.consume((-275));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oi[[M#yeB95-Qg{*h");
      Token token0 = xPathLexer0.star();
      assertEquals("o", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.690731070842713
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'3+#U]<d\"rB\",>");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("'", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("'3+#U]<d\"rB\",>");
      Token token2 = xPathLexer1.comma();
      assertEquals("'", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.798825694497805
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[H");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7475435100745442
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aQt.Z<zS@w");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals("[ (6) (a)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("z", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("@", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ry!\"s^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("ry", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("!", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jm%ei/-m6");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("jm", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%ei/-m6", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer1.div();
      xPathLexer1.consume((-917));
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.literal();
      xPathLexer0.not();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer1.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7995547899637425
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~OB>ss");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("OB", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("{VG+H5`");
      Token token2 = xPathLexer1.comma();
      assertEquals("{", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x8G!?2");
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("hVGQ~K");
      assertEquals("hVGQ~K", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6937763014741507
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=S\"!NnDX}Z_Fo#`Y2w");
      Token token0 = xPathLexer0.star();
      assertEquals("=", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(" o+u<=D3RCU");
      XPathLexer xPathLexer2 = new XPathLexer("TEW@u7D");
      Token token1 = xPathLexer2.nextToken();
      assertEquals("TEW", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".*gZ&vE|{Tr`~RN");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.LA(121);
      XPathLexer xPathLexer1 = new XPathLexer(".*gZ&vE|{Tr`~RN");
      assertEquals(".*gZ&vE|{Tr`~RN", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.893133368036466
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NUX;Jk]Z>n;OVJ");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("U", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals(";J", token3.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7742678458687706
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aQt.Z<zS@w");
      Token token0 = xPathLexer0.minus();
      assertEquals("a", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("z", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("S", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("@", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7983834123217766
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c1@Xa 5-,6/b|q");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("@", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("([]B`Ay89gU");
      xPathLexer1.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("Xa", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("q4\u0003p.M23");
      Token token0 = xPathLexer1.dollar();
      assertEquals("q", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6173117452570003
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nGd63^%3");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("nG", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("d", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("6", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("3", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("^%3", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aZD.@Z?mzS@o");
      XPathLexer xPathLexer1 = new XPathLexer("\"0BfI");
      Token token0 = xPathLexer1.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.getPreviousToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.063835771715435
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("@X4mpc_R?NX}Ro");
      xPathLexer1.leftParen();
      xPathLexer0.colon();
      XPathLexer xPathLexer2 = new XPathLexer("9^8");
      xPathLexer0.consume();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer0.equals();
      xPathLexer2.colon();
      XPathLexer xPathLexer4 = new XPathLexer("]#J/C2M~8.\u0000 SEw`hO");
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xA~.,w\"");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("xA", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1296460016476302
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aQZD.@Z?mzS@w");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("aQ", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("Z", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("D", token2.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Z", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("?mzS@w", token5.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.797321935099309
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o>:w");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.892012919857194
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.consume();
      Token token2 = xPathLexer1.equals();
      assertEquals("o", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer1.colon();
      assertEquals("m", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("`]$-*2@4@[b");
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6942659974545626
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M^$z:g4L6a");
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("1S.~Y~_:JCRD*0oQpr");
      xPathLexer1.consume();
      Token token3 = xPathLexer1.dots();
      assertEquals(14, token3.getTokenType());
      assertEquals("S.", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("~Y~_:JCRD*0oQpr", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("z", token5.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      char char0 = xPathLexer0.LA(81);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("~", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("76|k~V-");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("76", token1.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5778741435607135
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U'uFq*3|4J+1)Tu79W");
      Token token0 = xPathLexer0.at();
      assertEquals("U", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.6773346331318875
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("6", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("n~66RJv90%7jz:<");
      Token token2 = xPathLexer2.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("n", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("6", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("RJv90", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer2.leftParen();
      assertEquals("~", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.6783185269252698
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("n~66RJv90%7jz:<");
      Token token2 = xPathLexer2.equals();
      assertEquals("n", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("R", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Jv90", token4.getTokenText());
      
      Token token5 = xPathLexer2.leftParen();
      assertEquals("~", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.692551680139958
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AI+");
      XPathLexer xPathLexer1 = new XPathLexer("dW>ZW/A$PV$8o5");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.plus();
      assertEquals("d", token2.getTokenText());
      
      xPathLexer1.div();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer2.consume();
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/8#n2\u0004#{:");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("/", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6943006007280323
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P)3f*PvAvc[0");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("P)", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("P)3f*PvAvc[0");
      xPathLexer1.relationalOperator();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals("*", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.nextToken();
      Token token3 = xPathLexer1.identifier();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer1.getPreviousToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("P", token4.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5755655726875877
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q1J");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Q1J", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.894789682736259
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xZ-N~bu");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Z-N", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("~bu", token3.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.656690296066329
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dW>ZW/A$PV$8o5");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("W", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("ZW", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I+w#<MR7 ua");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("+w", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#<MR7 ua", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6939566034800104
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5 2xzY$l4nIJ");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4722230920662478
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(")", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("&", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.identifier();
      assertEquals("z", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals(32, token5.getTokenType());
      assertEquals(",", token5.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.568275916328246
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.consume();
      xPathLexer1.equals();
      xPathLexer1.colon();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2A>Iv|^)Mw3&V7");
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.3110508320308345
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nGd63^%3");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("nG", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("d", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("63", token2.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8754360891483217
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=:\"!NaDX}Z_Fo#`Y2w");
      Token token0 = xPathLexer0.star();
      assertEquals("=", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.minus();
      assertEquals("\"", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("!", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("NaDX", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("}", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Z_Fo#`Y2w", token5.getTokenText());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.6890278560247443
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (21) (~)");
      xPathLexer1.identifierOrOperatorName();
      boolean boolean0 = xPathLexer1.isIdentifierChar('$');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.at();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9591572360711464
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aZD.@Z?mzS@o");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("D.", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("@Z", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.799967291946925
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|p0kvhI-");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("p0kvhI-", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.6949414723133884
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("~", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("66", token1.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("_VVeZ<1)|7Oide");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("_VVeZ", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.435667598633758
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=S\"!NnDX}Z_Fo#`Y2w");
      Token token0 = xPathLexer0.star();
      assertEquals("=", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("\"", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("N", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.693520873632516
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("LpNt", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.602214867939637
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(" ", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(".", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals(";t", token4.getTokenText());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("IX&", token5.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5722744623115248
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.consume();
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer1.nextToken();
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("m", token6.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1831062121799873
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2A>Iv|^)Mw3&V7");
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.577674757227539
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aQZD.@Z?mzS@w");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("9M ;");
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("9", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.number();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7052655681895965
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("~6", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("R", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("n~66RJv90%7jz:<");
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("n", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("J", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("v90", token5.getTokenText());
      
      Token token6 = xPathLexer2.leftParen();
      assertEquals(1, token6.getTokenType());
      assertEquals("~", token6.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{E^gX");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("{", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("{E^gX");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("{E^gX", token1.getTokenText());
      
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.6935749422997235
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nGd63^%3");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Gd63", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5324271336736994
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v)");
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("):[E&,z/GmA");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertNull(token3);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.694737015147165
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer1.or();
      xPathLexer1.and();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("@X4mpc_R?NX}Ro");
      xPathLexer1.number();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.6575831133512715
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dW>ZW/A$PV$8o5");
      Token token0 = xPathLexer0.identifier();
      assertEquals("dW", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("W", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dW>ZW/A$PV$8o5");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("dW", token0.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8310053802788566
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.690731070842713
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~[nG8##oPE{81[HdJ");
      xPathLexer0.operatorName();
      xPathLexer0.consume((-4167));
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("~[nG8##oPE{81[HdJ");
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.consume((-1759));
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.386376214412067
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LpNt\"2'");
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.setXPath("Pj0h_@o%");
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2051));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5712448203683604
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-4872));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bXO");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1335));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.7398174425742172
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q1J");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Q1J");
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals("J", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o>:w");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.692637421372917
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KkUd");
      Token token0 = xPathLexer0.star();
      assertEquals("K", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("kUd", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.4480644631099708
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aQZD.@Z?mzS@w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("D.", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(16, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("?", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.8014614974884275
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.rightParen();
      assertEquals("m", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertEquals("werken", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("saxpath.Token", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.2153129211065368
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w/u,jA");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("/", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2798));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2A>Iv|^)Mw3&V7");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("2", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      char char0 = xPathLexer0.LA(1);
      assertEquals('A', char0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5-");
      xPathLexer0.and();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifier();
      assertEquals("5-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume(100);
      xPathLexer0.mod();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.442034180063065
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aZD.@Z?mzS@o");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("aZD.@Z?mzS@o");
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer1.literal();
      assertNotNull(token1);
      assertEquals("D.@", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=:\"!NaDX}Z_Fo#`Y2w");
      Token token0 = xPathLexer0.dollar();
      assertEquals("=", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.7982372669070887
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("h", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(26, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3049193446382612
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Kj2!?F3<P>8}Y9B s");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Kj", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("2", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Kj2!?F3<P>8}Y9B s");
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("j2", token4.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.8496747263384103
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=:\"!NaDX}Z_Fo#`Y2w");
      Token token0 = xPathLexer0.star();
      assertEquals("=", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.at();
      assertEquals("\"", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.setXPath("=:\"!NaDX}Z_Fo#`Y2w");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("=", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(":", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.literal();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals("", token7.getTokenText());
      assertEquals((-2), token7.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.6929510730627153
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(")", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q1J");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.minus();
      xPathLexer0.consume((-917));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "aZD.@Z?mzS@o";
      XPathLexer xPathLexer0 = new XPathLexer("aZD.@Z?mzS@o");
      xPathLexer0.consume((-2521));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5218197260937136
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aQt.Z<zS@w");
      XPathLexer xPathLexer1 = new XPathLexer("=B");
      xPathLexer1.plus();
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("=B");
      assertFalse(xPathLexer2.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-3709));
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.and();
      xPathLexer0.setXPath("=8_");
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("8_", token2.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.4337150271040935
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      XPathLexer xPathLexer1 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      xPathLexer1.or();
      boolean boolean0 = xPathLexer0.isIdentifierChar('k');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dW>ZW/A$PV$8o5");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.7002764307050695
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=:\"!NaDX}Z_Fo#`Y2w");
      Token token0 = xPathLexer0.star();
      assertEquals("=", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("N", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("aDX}Z_Fo#`Y2w", token4.getTokenText());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.6935749422997235
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6ygB5&A~\"#");
      Token token0 = xPathLexer0.dollar();
      assertEquals("6", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ygB5", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dyh$z^{");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.283562747916579
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.893958264924355
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.consume(737);
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.pipe();
      xPathLexer0.consume((-2558));
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.isIdentifierStartChar('*');
      xPathLexer0.leftParen();
      xPathLexer0.consume(737);
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.1854755685048524
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I+w#<MR7 ua");
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.436397607917589
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("):[E&,z/GmA");
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("&,z/GmA", token4.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('L');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n~66RJv90%7jz:<");
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\"');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.0590350058939964
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      Token token0 = xPathLexer0.star();
      assertEquals("q", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(" ", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("8", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(";tIX&", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.3309091965907784
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.hasMoreChars();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-871));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.1876359028870438
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I+w#<MR7 ua");
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.204969062770967
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("F*p[>SY");
      String string0 = xPathLexer1.getXPath();
      assertEquals("F*p[>SY", string0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0979135299027643
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(" ", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(";", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(".", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.2244197515457194
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I+w#<MR7 ua");
      Token token0 = xPathLexer0.star();
      assertEquals("I", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      xPathLexer0.setXPath("I+w#<MR7 ua");
      Token token3 = xPathLexer0.notEquals();
      assertEquals("I+", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("#", token5.getTokenText());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0994172893012606
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("8", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(";", token3.getTokenText());
      
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("t", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals(";tIX&", token5.getTokenText());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.1466361641378604
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I+w#<MR7 ua");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("+", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("w#", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("MR", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.1683227443535809
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1206));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
      
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.101012185632999
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("&", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("tIX", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aZD.@Z?mzS@o");
      char char0 = xPathLexer0.LA(19);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.3456359515663672
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.242631979932887
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.dollar();
      assertEquals("[", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.1358037566501387
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.0555234152527142
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aQZD.@Z?mzS@w");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("QZ", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(".@", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("?mzS@w", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("?mzS@w", token5.getTokenText());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.9799778170175928
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("[ ", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.2397424030495021
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(" ", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.203881869902952
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.940525302766293
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=S\"!NnDX}Z_Fo#`Y2w");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("S", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=1.0990444563925426
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.0702846419339038
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=S\"!NnDX}Z_Fo#`Y2w");
      Token token0 = xPathLexer0.star();
      assertEquals("=", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("\"", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.0254451487108018
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q 8.;tIX&");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=0.9001669615929306
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }
}
