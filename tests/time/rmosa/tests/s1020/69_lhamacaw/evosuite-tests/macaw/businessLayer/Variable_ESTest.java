/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 07:49:31 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("8|146kyNSWH/v/F");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(4113);
      derivedVariable0.isCleaned();
      derivedVariable0.createVariableSummary();
      assertEquals(4113, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setName("B/ ");
      rawVariable1.setYear("j#je`E/c");
      rawVariable3.setName("x");
      User user0 = new User();
      User user1 = new User();
      user1.setFirstName("O");
      derivedVariable0.setCoded(true);
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add((-1840700267), (Variable) rawVariable2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1840700267, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.7885904891927353
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.parallelStream();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add((SupportingDocument) null);
      arrayList1.add((SupportingDocument) null);
      arrayList1.stream();
      rawVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.isNewRecord();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("O");
      User user0 = new User();
      user0.setFirstName("");
      derivedVariable0.setCoded(true);
      rawVariable0.notes = "O";
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(1, (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.6734666743846436
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("P:!5jV-wI");
      derivedVariable0.clone();
      derivedVariable0.setCleaningDescription("P:!5jV-wI");
      derivedVariable0.setName("P:!5jV-wI");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setNotes((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.getNotes();
      derivedVariable0.clone();
      assertEquals("P:!5jV-wI", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("$@0j");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ontologyTerm0.getDisplayName();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("$@0j");
      derivedVariable0.setFilePath("variable.isCoded.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getFilePath();
      assertEquals("variable.isCoded.label", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9620321990960212
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.form = "variable.label.label";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.notes = "(SioW#ZgqKgyb]n@k[";
      Variable.validateFields(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.clone();
      derivedVariable0.addSupportingDocuments(arrayList1);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.clone();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      arrayList0.add((Variable) derivedVariable0);
      valueLabel0.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isNewRecord();
      derivedVariable0.clone();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getYear();
      rawVariable0.getCleaningStatus();
      derivedVariable0.getForm();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User();
      user0.setPostCode("");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("G'2QQ!oy\"Oq$lZiXU");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.hasSameDisplayName(derivedVariable0);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.760750468781551
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("a+D:9oGHGHS4X3cKy$");
      rawVariable1.getName();
      RawVariable rawVariable2 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("variable.year.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("p", "p");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.getNotes();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList1.add(2051, (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2051, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-26));
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCleaningDescription();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getNotes();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList1.add((Variable) derivedVariable1);
      // Undeclared exception!
      try { 
        arrayList1.add(2051, (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2051, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.5413777836353715
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setColumnStart("p");
      User user0 = new User("p", "p");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      User user1 = new User("p", (String) null);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList1.add(1, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("DT:z]s&[bp=DUKZ<J");
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("DT:z]s&[bp=DUKZ<J", (String) null);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList1.add(1, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.539367798548164
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "yj<(UK-.&2H4#N{N");
      user0.setEmail("yj<(UK-.&2H4#N{N");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("STs9*p4y =[6yTXd");
      rawVariable0.setLabel("STs9*p4y =[6yTXd");
      User user1 = new User("variable.availability.label", "vaiable.codeBooNumber.label");
      user0.setFirstName("variable.availability.label");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      rawVariable0.getNotes();
      assertEquals("STs9*p4y =[6yTXd", rawVariable0.getLabel());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("");
      User user0 = new User();
      user0.setFirstName("");
      derivedVariable0.setCoded(true);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.isCoded();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("K{>j_*@8$ArEc");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList1.add(122, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 122, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName((String) null);
      User user0 = new User();
      rawVariable0.setAlternativeVariable(rawVariable1);
      user0.setUserID("`lQm*^3xNL_ee~PMl1");
      user0.setFirstName("Yd");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      String string0 = "gSCro-j|]BNH5YudVl";
      supportingDocument0.setDescription("gSCro-j|]BNH5YudVl");
      rawVariable0.setFilePath("variable.availability.label");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setIdentifier((-2351));
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getIdentifier();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getLabel();
      rawVariable0.setName("O");
      User user0 = new User();
      derivedVariable0.columnEnd = "^AS?";
      user0.setFirstName("");
      ontologyTerm0.setNewRecord(true);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.getNotes();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>(arrayList1);
      derivedVariable0.addSourceVariables(arrayList2);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getQuestionNumber();
      assertEquals("^AS?", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList0.add((-2594), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2594, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.codeBookNumber = "variable.year.label";
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.getIdentifier();
      derivedVariable0.getFilePath();
      derivedVariable0.setCoded(false);
      derivedVariable0.getForm();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      User user0 = new User("5b} T|{x`!hzXlX|\"r", "");
      User.checkValidUserIDField("variable.year.label");
      user0.setAddressLine2("W+");
      // Undeclared exception!
      try { 
        User.checkValidUserIDField((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.438414882780898
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("general.fieldValue.blank");
      rawVariable1.form = "O";
      User user0 = new User("O", (String) null);
      user0.setFirstName("vq}`_A");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add((-1006), (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1006, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "k:K2_DmUMwWJBW";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("UNABLE_TO_CREATE_CLEANING_STATE", "UNABLE_TO_CREATE_CLEANING_STATE");
      supportingDocument0.setIsNewRecord(false);
      user0.setIdentifier((-809));
      user0.setAddressLine1("PKc_[>C]48");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("");
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.8948682677381035
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("D]9P");
      rawVariable0.getLabel();
      rawVariable0.setAvailability("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      Variable.validateFields(rawVariable0);
      arrayList0.addAll((Collection<? extends Variable>) arrayList1);
      arrayList0.spliterator();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getNotes();
      rawVariable0.getYear();
      derivedVariable0.clone();
      derivedVariable0.getNotes();
      derivedVariable0.getIdentifier();
      derivedVariable0.getCodeBookNumber();
      rawVariable0.getAvailability();
      assertEquals("D]9P", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      derivedVariable0.getFilePath();
      assertEquals("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.709790421893567
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("O");
      User user0 = new User();
      user0.setFirstName("");
      derivedVariable0.setCoded(true);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(1, (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "H=7_";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "^k>;E!e?Ze:dlxV(";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.7122091582015315
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.form.label");
      rawVariable0.setCodeBookNumber("variable.form.label");
      rawVariable0.createVariableSummary();
      rawVariable0.setQuestionNumber((String) null);
      User user0 = new User();
      User user1 = new User();
      User.detectFieldChanges(user0, user0, user1);
      user0.setStatus("variable.codeBookNumber.label");
      rawVariable0.getDisplayName();
      rawVariable0.setYear("IWf'rg|*");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.setName((String) null);
      rawVariable0.getName();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      rawVariable0.setLabel("7bzq`)16");
      assertEquals("7bzq`)16", rawVariable0.getLabel());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("hNc-tb4!)0u#;ye2$qz");
      User user0 = new User("hNc-tb4!)0u#;ye2$qz", "hNc-tb4!)0u#;ye2$qz");
      user0.setFirstName((String) null);
      derivedVariable0.setCodeBookNumber("k:K2_DmUMwWJBW");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getYear();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getSourceVariables();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("hNc-tb4!)0u#;ye2$qz", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("f0GHLt>=*Y");
      derivedVariable0.questionNumber = "f0GHLt>=*Y";
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setYear((String) null);
      derivedVariable0.getNotes();
      derivedVariable0.getSourceVariables();
      derivedVariable0.isCleaned();
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("f0GHLt>=*Y", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear((String) null);
      String string0 = derivedVariable0.getYear();
      assertNull(string0);
      
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      boolean boolean0 = derivedVariable0.isCoded();
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean1 == boolean0);
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("Pc fQ TSHS");
      rawVariable0.setColumnEnd("");
      rawVariable0.createVariableSummary();
      rawVariable0.setForm("");
      rawVariable0.notes = "k9K;=E&xM8";
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.columnEnd = "_p>N%C8/Ka'saTb{S1";
      User user1 = new User("", "yj<(UK-.&2H4#N{N");
      user1.setIdentifier(98);
      user1.setEmail("yj<(UK-.&2H4#N{N");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(1, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setYear((String) null);
      rawVariable0.getQuestionNumber();
      rawVariable0.getNotes();
      rawVariable0.getAlias();
      User user0 = new User();
      user0.setPhone("");
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.questionNumber = "N";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "}";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getQuestionNumber();
      assertEquals("", string1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.clear();
      arrayList1.add(ontologyTerm0);
      ArrayList<MacawChangeEvent> arrayList2 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getDocumentCode());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.221751559072405
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1));
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1344));
      ontologyTerm1.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getDocumentCode());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      rawVariable0.setCleaningStatus("p");
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("p", "p");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList1.add(1, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "]v[J`Bf,7{ga+tKk:";
      String string0 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(1, (Variable) rawVariable1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCleaned());
      
      rawVariable0.setName("!");
      User user0 = new User();
      user0.setFirstName("variable.label.label");
      User user1 = new User("!", "!");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Variable.validateFields(derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("GBN_");
      rawVariable0.setName("GBN_");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("GBN_", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName((String) null);
      arrayList0.add(supportingDocument1);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription((String) null);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.notes = null;
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.questionNumber = null;
      supportingDocument0.setDocumentCode((String) null);
      supportingDocument0.setFilePath((String) null);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      Variable variable0 = null;
      derivedVariable0.removeSourceVariable((Variable) null);
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setColumnStart("\"3`8");
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("\"3`8", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      derivedVariable0.getLabel();
      derivedVariable0.setCategory("p");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("p", "p");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList1.add(1, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      derivedVariable0.questionNumber = "<r>r";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.questionNumber = "<r>r";
      derivedVariable0.getColumnStart();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getForm();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.isCoded.label");
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=4.234401644427157
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCodeBookNumber("");
      rawVariable1.questionNumber = "";
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getCleaningStatus();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.listIterator();
      arrayList1.clone();
      rawVariable1.setIdentifier(1);
      rawVariable1.setValueLabels(arrayList1);
      rawVariable0.setAvailability("Unknown");
      rawVariable0.getIdentifier();
      rawVariable1.getIdentifier();
      User user0 = new User("", "uBV7 lW|");
      rawVariable0.setColumnEnd("");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.setCoded(false);
      rawVariable1.setAvailability("");
      rawVariable1.setColumnEnd("");
      assertEquals("1", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.630732311167245
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode("3Vy5nj,Gmle");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clear();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.659037556219115
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("general.fieldValue.blank");
      User user0 = new User("O", (String) null);
      user0.setFirstName("vq}`_A");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add((-1006), (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1006, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.2828294558679243
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("Q9qnO~OS10M7f", "w\"~/x5+y{ZO%dZuPO");
      user0.setPassword("(F\"vs%ay%IT5/L/B");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setQuestionNumber("q_?dm!h>Aqih");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getYear();
      assertEquals("q_?dm!h>Aqih", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      rawVariable0.getForm();
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setDocumentCode("");
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("Tx<0ZqoJv");
      rawVariable0.createVariableSummary();
      rawVariable0.getAlternativeVariable();
      assertEquals("Tx<0ZqoJv", rawVariable0.getForm());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setColumnEnd("\"9d&aOXk5\"_5.V4i8$B");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      derivedVariable0.setCleaningStatus("-LHA");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm2, ontologyTerm2);
      ontologyTerm0.setDescription("");
      ontologyTerm0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      assertEquals("-LHA", derivedVariable0.getCleaningStatus());
      
      Variable.validateFields(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.year.label");
      derivedVariable0.clone();
      assertEquals("variable.year.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "supportingDocument.title.saveChanges";
      rawVariable0.cloneAttributes(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("3W}2m7E7");
      supportingDocument0.setDocumentCode((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("supportingDocument.title.saveChanges", derivedVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setYear("UNABLE_TO_CREATE_CLEANING_STATE");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("UNABLE_TO_CREATE_CLEANING_STATE", derivedVariable0.getYear());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.5347185161547943
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("");
      rawVariable0.setQuestionNumber("supportingDocument.filePath.saveChanges");
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "y5L[4l,mB";
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("DUPLICATE_ONTOLOGY_TERM");
      rawVariable0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "user.firstName.saveChanges";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      String string0 = "77I3jAjaY&Sq0=D,";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      supportingDocument0.setDocumentCode("77I3jAjaY&Sq0=D,");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.columnStart = "L]^-fGo[Z0v]?{yje";
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = derivedVariable0.getAlias();
      assertEquals("", string0);
      
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.addSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.getCleaningStatus();
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable1.isNewRecord();
      derivedVariable1.getAvailability();
      derivedVariable0.setNotes("~~quWNu02>+");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      derivedVariable0.getAlias();
      assertEquals("~~quWNu02>+", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.columnEnd = "variable.notes.label";
      derivedVariable0.setYear("E8F+'g[");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlias();
      assertEquals("E8F+'g[", derivedVariable0.getYear());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.questionNumber = null;
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setCategory("nY2Cz<EnV/5");
      derivedVariable0.setCleaningStatus("}cjsvDt_q?<.4Vv");
      derivedVariable0.questionNumber = "variable.year.label";
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getCleaningDescription();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.remove((-195));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCoded(false);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setColumnStart(")Pq");
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = null;
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm3);
      String string0 = "L/'$I(KL=Z";
      ontologyTerm3.setOntologyName("L/'$I(KL=Z");
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges(user0, (OntologyTerm) null, ontologyTerm3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("'*d=,+nS1_^^.><+Q ");
      rawVariable0.setIsNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      ontologyTerm0.setDescription("N|M9IWu");
      ontologyTerm0.setDescription("N|M9IWu");
      rawVariable0.setIdentifier(2888);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getForm();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.spliterator();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setColumnEnd("variable.category.label");
      rawVariable0.getCleaningDescription();
      System.setCurrentTimeMillis(1L);
      rawVariable0.getOntologyTerms();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("O");
      User user0 = new User();
      user0.setFirstName("");
      derivedVariable0.setAlias("O");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add((-1), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.getLabel();
      User user0 = new User("p", (String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCoded(true);
      User user0 = new User();
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("6B3");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("6B3");
      ontologyTerm0.setDescription("GBN_");
      ontologyTerm0.setDescription("iBU5kdLXM%");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.questionNumber = "variable.notes.label";
      derivedVariable0.notes = "iBU5kdLXM%";
      derivedVariable0.getNotes();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "xPd`x<wN{^`0";
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getQuestionNumber();
      assertEquals("xPd`x<wN{^`0", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList2);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.codeBookNumber = "supportingDocument.documentCode.saveChanges";
      ValueLabel valueLabel0 = new ValueLabel();
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode("-9 R[]Y6CVJ1{=W");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.197846119469557
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-886));
      rawVariable1.addValueLabel(valueLabel0);
      rawVariable0.setColumnStart((String) null);
      rawVariable1.setName("Y+Fs7 Gkgt7uG+!");
      rawVariable1.setAlias("variable.form.label");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.createVariableSummary();
      rawVariable1.getNotes();
      rawVariable1.getAlias();
      System.setCurrentTimeMillis((-4329L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      Variable.validateFields(rawVariable1);
      rawVariable1.getQuestionNumber();
      rawVariable1.getAlias();
      assertEquals("Y+Fs7 Gkgt7uG+!", rawVariable1.getDisplayName());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "k:K2_DmUMwWJBW";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getFilePath();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnStart();
      assertEquals("k:K2_DmUMwWJBW", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("DoxXpCl!.HPs");
      rawVariable0.setAvailability("variable.form.label");
      rawVariable0.form = "jt]&])R'HB[";
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "6^^XOC";
      derivedVariable0.setNotes("i");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getForm();
      derivedVariable0.setAvailability("");
      derivedVariable0.getYear();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      assertEquals("i", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("db'O");
      derivedVariable0.setCoded(true);
      assertEquals("db'O", derivedVariable0.getColumnEnd());
      
      derivedVariable0.columnEnd = null;
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCodeBookNumber();
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.setCodeBookNumber("8|146kyNSWH/v/F");
      rawVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getCleaningStatus();
      derivedVariable1.isNewRecord();
      derivedVariable1.getAvailability();
      derivedVariable0.setNotes("~~quWNu02>+");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      assertEquals("~~quWNu02>+", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.4902377680594854
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("p");
      rawVariable0.codeBookNumber = "p";
      derivedVariable0.getLabel();
      User user0 = new User("p", "?!yB'>zLXcZa");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getNotes();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add(79, (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 79, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setAddressLine1("general.error.blankField");
      derivedVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      user0.clone();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.3781766359449454
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setCleaningDescription("user.postCode.label");
      rawVariable0.codeBookNumber = "g<-c/u)n7QFs'}";
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) null);
      // Undeclared exception!
      try { 
        arrayList0.add((-2594), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2594, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("GBN_");
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("UNABLE_TO_UPDATE_ONTOLOGY_TERM");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.add((-1717986916), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1717986916, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("6B3");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      SupportingDocument supportingDocument0 = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "g7!#WvUvq(\"zC";
      rawVariable0.setAlias("jWkJGwbI:X]");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCategory("UNABLE_TO_CHECK_VALUE_LABEL_DUPLICATES");
      ontologyTerm0.setTerm("'");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("UNABLE_TO_CHECK_VALUE_LABEL_DUPLICATES", derivedVariable0.getCategory());
  }
}
