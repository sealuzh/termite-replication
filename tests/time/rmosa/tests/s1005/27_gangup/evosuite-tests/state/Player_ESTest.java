/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 19:50:22 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      player0.setY((-1196.0F));
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte) (-95);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-95), (byte)62);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1x");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Player player0 = new Player(3255, "state.Party", 3255);
      int int0 = 24575;
      Player player1 = new Player(24575, "state.Party", "E6@&'t>CTQ", (-2699), 3255);
      player0.prev = (Party) player1;
      player1.gangStrength();
      player0.setX((-517.712F));
      player0.getX();
      player0.getMoney();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("state.Party");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-127), "l#<}Q~';gx[ILyA ZOB", "wH6]#deZ", (-127));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("l#<}Q~';gx[ILyA ZOB", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals((-127), player0.getPictureId());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(4, "", 3854);
      Player player1 = new Player(400, (String) null, (String) null, 3854);
      player1.prev = (Party) player0;
      Player player2 = new Player(400, "", (short)4919);
      player0.setJoinOK(player2, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":d;AP`3KQ(Q9|y-{yi");
      float float0 = player1.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player2.getZ();
      assertEquals(float1, float0, 0.01F);
      
      int int0 = player2.getStrength();
      assertEquals(1, int0);
      
      boolean boolean0 = player2.isConnected();
      assertTrue(boolean0);
      
      player2.isJoinOK(player1, true);
      player0.pack();
      player1.getName();
      assertEquals(3854, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(12046);
      Player player1 = new Player(965, "module.ModuleBrowserDialog$ModuleFilter", ",IVB.1'n9SIb", 3661);
      player1.setJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(boolean0);
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(3661, player1.getPictureId());
      assertEquals("Player12046", player0.toString());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(1852, "{K\"TP", "Player", (-1), (-1));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)69;
      byteArray0[6] = (byte)47;
      byteArray0[7] = (byte)47;
      byteArray0[8] = (byte)55;
      player0.unpack(byteArray0);
      player0.getSubparty();
      player0.setZ((byte)47);
      player0.getZ();
      player0.getStrength();
      boolean boolean0 = player0.isConnected();
      assertEquals(47.0F, player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(1392, (String) null, " ", 0, (-1780));
      Player player1 = new Player(4919, "", (-1780));
      player0.reset(true);
      player1.remove(player0);
      player0.gangStrength();
      player0.pack();
      assertFalse(player0.isDead());
      
      Party party0 = player1.next;
      player1.setConnected(false);
      player0.setDead((-535L));
      player0.getIP();
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-2283), "xj_*ToSu", "gui.ModuleBrowserDialog$ModuleFilter", (-2283), (-2283));
      Player player1 = new Player((-2794), "77tY", 3);
      Player player2 = new Player();
      player2.reset(false);
      player1.remove(player2);
      player1.gangStrength();
      player0.pack();
      Party party0 = player0.next;
      player2.setConnected(false);
      player1.setDead((long) (-2283));
      player0.getIP();
      player2.isConnected();
      player1.setX(0.0F);
      assertEquals((-2283L), player1.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(12046);
      Player player1 = new Player(12046, ",IVB.1'n9SIb", ",IVB.1'n9SIb", (short)4919);
      player0.setJoinOK(player1, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",IVB.1'n9SIb");
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player1.isDead());
      assertTrue(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player12046", player0.getName());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, (-1));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)10;
      player0.unpack(byteArray0);
      player0.getSubparty();
      player0.setZ((byte)0);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, int0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)3;
      player0.isConnected();
      player0.getIP();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1124);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      dataOutputStream0.writeChars("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      player0.pack(dataOutputStream0);
      assertEquals("\u0000P\u0000l\u0000a\u0000y\u0000e\u0000r\u0000.\u0000p\u0000a\u0000c\u0000k\u0000(\u0000)\u0000:\u0000 \u0000*\u0000*\u0000*\u0000 \u0000E\u0000R\u0000R\u0000O\u0000R\u0000 \u0000*\u0000*\u0000*\u0000 \u0000[\u0000I\u0000O\u0000]\u0000 \u0000p\u0000a\u0000c\u0000k\u0000 \u0000f\u0000a\u0000i\u0000l\u0000e\u0000d\u0000!\u0000 \u0000c\u0000u\u0000r\u0000r\u0000e\u0000n\u0000t\u0000 \u0000s\u0000t\u0000a\u0000t\u0000e\u0000 \u0000i\u0000s\u0000 \u0000i\u0000n\u0000c\u0000o\u0000n\u0000s\u0000i\u0000s\u0000t\u0000e\u0000n\u0000t\u0000:\u0000 \u00137\u0000\u0000\u0000\u0000\u0000A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      
      player0.getName();
      player0.getName();
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0, "", "state.Player$JoinInfo", 3417, (-3125));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)10;
      player0.unpack(byteArray0);
      player0.getSubparty();
      player0.setZ((-838.2F));
      float float0 = player0.getZ();
      assertEquals((-838.2F), float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9747025681553483
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setMoney((short)4919);
      player0.setDead((long) (short)4919, true);
      player1.next = (Party) player0;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)4;
      player1.setConnected(false);
      player0.getIP();
      Player player2 = new Player((byte)0, "0.0.0.0", "", (byte)2, (byte)0);
      player2.setDead((long) (short)4919);
      player2.setDead();
      player0.setConnected(false);
      Player player3 = new Player(2242, "", "0.0.0.0", 3132, (byte)4);
      player2.isJoinOK(player3, true);
      long long0 = player2.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      player0.setMoney((short)4919);
      player0.getMoney();
      player0.isJoinOK(player1, true);
      player1.getTimeOfDeath();
      player0.setDead();
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.prev;
      player0.add((Party) null);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5642900265283206
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(316);
      Player player1 = new Player(967, "", "gui.ModuleBrowserDialog$ModuleFilter", 4025);
      player0.setZ(967);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte)78;
      byteArray0[5] = (byte)103;
      player1.unpack(byteArray0);
      byte[] byteArray1 = player0.pack();
      Player player2 = new Player(4919);
      Player player3 = new Player();
      player3.isJoinOK(player1, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(1418, "", (-1351));
      player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals((-1351), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.boss = (Party) player1;
      player0.setConnected(true);
      byte[] byteArray0 = new byte[0];
      player0.gangStrength();
      player0.setDead(0L, false);
      player0.setX((-2497.21F));
      player0.unpack(byteArray0);
      player0.setY(3445.0F);
      float float0 = player0.getY();
      assertEquals((-2497.21F), player0.getX(), 0.01F);
      assertEquals(3445.0F, float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, ".*[.]class$", ".*[.]class$", 0);
      player0.head = (Party) player1;
      byte[] byteArray0 = new byte[0];
      player0.gangStrength();
      player0.setDead(0L, true);
      player0.setX((-2497.21F));
      player0.unpack(byteArray0);
      player0.setY(3445.0F);
      float float0 = player0.getY();
      assertEquals((-2497.21F), player0.getX(), 0.01F);
      assertEquals(3445.0F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(29);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=r^B5rJM[H8a'B?2mj");
      player0.getZ();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "IsW=gCfO=>9m2#";
      String string1 = "I:__ Fy^+d";
      int int0 = 4919;
      Player player0 = new Player((-4069), "IsW=gCfO=>9m2#", "I:__ Fy^+d", 4919, 4919);
      player0.next = null;
      player0.getStrength();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-8);
      byte byte0 = (byte) (-82);
      String string2 = "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "I:__ Fy^+d");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // I:__ Fy^+d
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-1076), "kT[QaXF,", (-1076));
      int int0 = player0.type();
      assertEquals((-1076), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(5, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(3819);
      player0.setDead();
      float float0 = player0.getMoney();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-81), "state.Party", "", 0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u00137\uFFFD\u0000\u0001\u0000\u0000A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-1949), "9<{rcKBnq6Fz@V", "9<{rcKBnq6Fz@V", (-1949), (-1949));
      player0.gangStrength();
      player0.reset(true);
      player0.getIP();
      player0.getPictureId();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      Player player1 = new Player((byte)0, "9<{rcKBnq6Fz@V", 0);
      player0.setJoinOK(player1, true);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player0.setDead((long) (byte)0);
      float float0 = player0.getX();
      assertTrue(player0.isDead());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0, "", "", 1);
      int int0 = player0.getPictureId();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player1.setMoney((short)4919);
      player0.setDead((long) (short)4919, false);
      player1.next = (Party) player0;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      player1.setY(0.2F);
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte) (-122);
      byteArray0[4] = (byte)27;
      player1.setMoney((byte) (-122));
      player0.pack();
      player0.setZ((byte) (-122));
      boolean boolean0 = player0.isDead();
      assertEquals((-122.0F), player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(2476, "", 2476);
      Player player1 = new Player(400, (String) null, (String) null, 4);
      player1.setJoinOK(player0, true);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4, player1.getPictureId());
      assertEquals(2476, player0.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(332);
      player0.setDead((long) 332);
      player0.pack();
      assertEquals(332L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-2283), ">[mC", "", (-1002), (-2283));
      Player player1 = new Player((-2283));
      player1.reset(true);
      player0.remove(player1);
      player0.gangStrength();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1162), "oES9M", (-1162));
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals((-1162), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(29);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals("Player-1", string0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(false);
      player0.setX(0.0F);
      Player player1 = new Player();
      player1.gangStrength();
      player0.setJoinOK(player1, false);
      player0.getPictureId();
      player0.getX();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-1067), (String) null, (String) null, (-1067));
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(335);
      player0.setConnected(true);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("Player335", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(294, "state.Party", (String) null, 2, 0);
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(2, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 2440;
      Player player0 = new Player(2440, "c|_^NY", 2440);
      player0.gangStrength();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)49;
      player0.isDead();
      player0.reset(false);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(632);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)20;
      byteArray0[6] = (byte) (-47);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.getY();
      player0.unpack(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(632);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-122);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readInt();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player632", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(632);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player632", player0.getName());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(3819);
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player3819", player0.toString());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-663), "Player", 3);
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(3, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(10, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-4469));
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      player1.setY(0.0F);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("ezcW>iT @M{ta#$&)>", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)55;
      player0.unpack(byteArray0);
      player0.pack(dataOutputStream0);
      player1.reset(false);
      assertEquals("Player-1", player1.getName());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-4469), player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(596, (String) null, 596);
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(596, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(335);
      player0.setZ(335);
      byte byte0 = (byte) (-100);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(4312, "", "", 4312);
      Player player1 = new Player();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.getName());
      
      player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(4312, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      System.setCurrentTimeMillis(1365L);
      String string0 = "DgI6p%a730N";
      int int0 = 2743;
      Player player0 = new Player(2, "DgI6p%a730N", 2743);
      player0.setMoney((-72.884F));
      String string1 = "b1{dLWcyTX$Qn.8lhlC";
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(3);
      player0.setDead(486L, false);
      assertEquals(486L, player0.getTimeOfDeath());
  }
}
