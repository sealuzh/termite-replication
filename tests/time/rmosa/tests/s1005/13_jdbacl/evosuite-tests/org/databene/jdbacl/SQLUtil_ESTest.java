/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 20:25:38 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.hsqldb.rowio.RowOutputText;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string0);
      
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("null", defaultDBTable0, 3622, "null");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.normalize("*/", false);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      SQLUtil.removeComments("n)wLgPr/*!83uX={");
      // Undeclared exception!
      SQLUtil.isQuery("n)wLgPr/*!83uX={");
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = "";
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getSchema();
      DBTrigger dBTrigger0 = new DBTrigger("", (DBSchema) null);
      SQLUtil.ownerDotComponent(dBTrigger0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider((-102641449));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "04L5Z-tE;O+,6";
      stringArray0[1] = "04L5Z-tE;O+,6";
      stringArray0[2] = "04L5Z-tE;O+,6";
      stringArray0[3] = "04L5Z-tE;O+,6";
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "04L5Z-tE;O+,6";
      objectArray0[1] = (Object) "04L5Z-tE;O+,6";
      objectArray0[2] = (Object) "04L5Z-tE;O+,6";
      Object object0 = new Object();
      objectArray0[6] = object0;
      objectArray0[4] = (Object) "04L5Z-tE;O+,6";
      objectArray0[5] = (Object) stringBuilder0;
      objectArray0[6] = (Object) stringBuilder0;
      objectArray0[7] = (Object) "04L5Z-tE;O+,6";
      objectArray0[8] = (Object) "04L5Z-tE;O+,6";
      String string0 = SQLUtil.renderValue(objectArray0[6]);
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.isProcedureCall("n)wLgPr/*!83uX={");
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      SQLUtil.isDML("n)wLgPr/*!83uX={");
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5843265743823953
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("altZer tablrTferezes");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "0B";
      stringArray0[1] = "altZer tablrTferezes";
      stringArray0[2] = "altZer tablrTferezes";
      stringArray0[3] = "0B";
      stringArray0[4] = "0B";
      stringArray0[5] = "altZer tablrTferezes";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "0B", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("0B", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("alter materialized viewreferenc|les");
      SQLUtil.renderCreateTable(dBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(dBTable0.getDoc());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join("Bad connection string: '", "Bad connection string: '", stringArray0, "Bad connection string: '", "Bad connection string: '", stringArray0);
      assertEquals("Bad connection string: ' join Bad connection string: ' as Bad connection string: ' on Bad connection string: '.null = Bad connection string: '.null and Bad connection string: '.null = Bad connection string: '.null and Bad connection string: '.null = Bad connection string: '.null and Bad connection string: '.null = Bad connection string: '.null and Bad connection string: '.null = Bad connection string: '.null and Bad connection string: '.null = Bad connection string: '.null", string0);
      
      String string1 = SQLUtil.join("inner", "Bad connection string: '", stringArray0, "seweht i", "kZP>k%ym_%G`64", stringArray0);
      assertEquals("seweht i as kZP>k%ym_%G`64 on Bad connection string: '.null = kZP>k%ym_%G`64.null and Bad connection string: '.null = kZP>k%ym_%G`64.null and Bad connection string: '.null = kZP>k%ym_%G`64.null and Bad connection string: '.null = kZP>k%ym_%G`64.null and Bad connection string: '.null = kZP>k%ym_%G`64.null and Bad connection string: '.null = kZP>k%ym_%G`64.null", string1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$D";
      stringArray0[1] = "$D";
      stringArray0[2] = "execreferences";
      stringArray0[4] = "$D";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "executetabletypes";
      stringArray1[1] = "alter index";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("$D", stringArray0, "m6", "executetabletypes", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.setDoc("xp:[");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "xp:[", true, (String[]) null);
      dBPrimaryKeyConstraint0.isIdentical(defaultDBTable0);
      dBPrimaryKeyConstraint0.setTable(defaultDBTable0);
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("xp:[");
      PrintWriter printWriter0 = mockPrintWriter0.format("hR>o*.BJ35", (Object[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter1);
      assertNotSame(mockPrintWriter1, printWriter0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) null);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SQLUtil.normalize("}0=>\t-;Pf>}V#OS`6", false);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.add((Object) "}0=>\t-;Pf>}V#OS`6");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DBTable dBTable0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NO_ACTION");
      String string0 = "_LS5'x3,=@?";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("NO_ACTION", (DBTable) null, (-2), "_LS5'x3,=@?");
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcConnectionPool.create("NO_ACTION", "NO_ACTION, NO_ACTION", "NO_ACTION");
      // Undeclared exception!
      try { 
        jdbcDataSource0.getConnection();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid value  for parameter \"url\" [90008-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4809791340827334
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join("bad ", "bad ", stringArray0, "bad ", "bad ", stringArray0);
      assertEquals("bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("bad ");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, , , , , )", string1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("S(5", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("(", (CompositeDBObject<? extends DBObject>) null);
      tableContainer0.getTable("insertunicod");
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("alter tablerTferezces", (DBTable) null, (-741278374), "(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = null;
      stringArray1[3] = null;
      stringArray1[4] = "";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "boolean";
      stringArray0[1] = "boolean";
      stringArray0[2] = "boolean";
      stringArray0[3] = "boolean";
      stringArray0[4] = "boolean";
      stringArray0[5] = "WQa!8[";
      stringArray0[6] = "boolean";
      stringArray0[7] = "boolean";
      stringArray0[8] = "boolean";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("boolean", stringArray0, "boolean", "boolean", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("semectg a`");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "pj +@Y;XBeBeMx", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("BLOCKSIZE", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      int int0 = 19;
      DBDataType dBDataType0 = DBDataType.getInstance(19, "semectg a`");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("semectg a`", dBTable0, dBDataType0, integer0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("deletereferences");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      int int0 = (-5);
      DBDataType dBDataType0 = DBDataType.getInstance((-5), "9");
      String string0 = "y2:0e";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("y2:0e", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      boolean boolean0 = false;
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "Jfb";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(585);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.delete((-5), 45);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -5
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("zzygRL@", defaultDBTable0, (-1595), "");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Random.setNextRandom(65);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("renamecaloo", true, "renamecaloo", "renamecaloo");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CONSTRAINT renamecaloo CHECK renamecaloo", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String[] stringArray1 = new String[9];
      stringArray1[0] = null;
      stringArray1[1] = null;
      stringArray1[2] = null;
      stringArray1[3] = null;
      stringArray1[4] = null;
      stringArray1[5] = "alter indexsemectg a`";
      stringArray1[6] = null;
      stringArray1[7] = null;
      stringArray1[8] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, dBTable0, stringArray0, dBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , , , , ) REFERENCES null(, , , , , alter indexsemectg a`, , , )", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DBSchema dBSchema0 = new DBSchema("begin parameter #");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("begin parameter #", dBSchema0);
      DBDataType.getInstance((-241020728), "s0");
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("begin parameter #", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      SQLUtil.ownerDotComponent(defaultDBTable1);
      SQLUtil.ownerDotComponent(dBForeignKeyConstraint0);
      Integer integer0 = RawTransaction.ABORT;
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      MockFile mockFile0 = new MockFile("null");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec1, mockPrintWriter0);
      assertFalse(dBForeignKeyConstraint0.isNameDeterministic());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("jkqTqivjd%zyNuf");
      SQLUtil.addOptionalCondition("jkqTqivjd%zyNuf", stringBuilder0);
      assertEquals("jkqTqivjd%zyNuf or jkqTqivjd%zyNuf", stringBuilder0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.normalize("IG%2\"{<Z3In", false);
      assertEquals("IG % 2 \"{<Z3In\"", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.ownerDotComponent(defaultDBTable0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DBDataType dBDataType0 = DBDataType.getInstance("null");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(">", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("NULL(2,3)", stringBuilder0.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[9];
      // Undeclared exception!
      try { 
        SQLUtil.join("pB?h%:$", "truncatecreate", stringArray1, "pB?h%:$", "truncatecreate", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = SQLUtil.normalize("/'P$D>pm1Oi%", true);
      assertEquals("/ 'P$D>pm1Oi%'", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.codePoints();
      SQLUtil.addRequiredCondition("#J0A73#Sf-C>1^", stringBuilder0);
      DBDataType dBDataType0 = DBDataType.getInstance(203, "create materialized view");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("referenc|l", (DBTable) null, dBDataType0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      // Undeclared exception!
      try { 
        defaultDBColumn0.getForeignKeyConstraint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBColumn", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "cal");
      SQLUtil.addRequiredCondition("cal", stringBuilder0);
      assertEquals("cal and cal", stringBuilder0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.isDML("deletese");
      Random.setNextRandom((-4331));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[11];
      byteArray0[1] = (byte) (-57);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("callseweht intoreferences");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.compareUnsigned((-1), (-1));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (DBDataType) null, integer0, integer0);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      RowOutputText rowOutputText0 = new RowOutputText("0:0:0", "constraint \"scale i", "0:0:0", true, "");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(rowOutputText0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      Locale locale0 = Locale.JAPAN;
      Object[] objectArray0 = new Object[8];
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "", objectArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      Boolean boolean0 = Boolean.TRUE;
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      // Undeclared exception!
      SQLUtil.isDDL("n)wLgPr/*!83uX={");
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("Y/*WKg{JS`uY");
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("FL`+OOR", (String[]) null, "FL`+OOR", "FL`+OOR", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(2459, "CONSTRAINT ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("REFERENCE", (DBTable) null, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("CONSTRAINT ", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Random.setNextRandom((-618));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "inner";
      stringArray0[1] = "inner";
      stringArray0[2] = "inner";
      stringArray0[3] = "inner";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "inner", false, stringArray0);
      defaultDBTable0.removeUniqueConstraint(dBPrimaryKeyConstraint0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "inner", false, stringArray0);
      defaultDBTable0.getIndex("inner");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("Z'C2|-d$j", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[0];
      String string0 = SQLUtil.innerJoin("refere", stringArray0, "refere", "refere", stringArray1);
      assertEquals("refere as refere on ", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = SQLUtil.normalize("`3cS.0!-KZm7C6u", false);
      assertEquals("` 3cS.0 ! - KZm7C6u", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "execute";
      SQLUtil.substituteMarkers("execute", "execute", stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-1845546930), (CharSequence) "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1845546930
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("h");
      defaultDBTable0.setDoc((String) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, (String[]) null);
      dBPrimaryKeyConstraint0.isIdentical(defaultDBTable0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("seWeHt intoreferences");
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.setDoc("xp:[");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "xp:[", false, (String[]) null);
      dBPrimaryKeyConstraint0.isIdentical(defaultDBTable0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte) (-98);
      byteArray0[2] = (byte)84;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String string0 = "+=V*wg(eI<X5";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("+=V*wg(eI<X5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: +=V*wg(eI<X5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = SQLUtil.normalize("setBytes(String,byte)", false);
      assertEquals("setBytes (String, byte)", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String[] stringArray0 = new String[19];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("seWeHt intoreferences");
      DBDataType dBDataType0 = DBDataType.getInstance(613, "seWeHt intoreferences");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("seWeHt intoreferences", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("seWeHt intoreferences SEWEHT INTOREFERENCES NULL", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("semectg a`", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("OQ~", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(90133, "Qq[:");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("semectg a`", defaultDBTable0, dBDataType0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder(90133);
      char[] charArray0 = new char[0];
      StringBuilder stringBuilder1 = stringBuilder0.append(charArray0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("QQ[:(1)", stringBuilder1.toString());
      assertEquals("QQ[:(1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("call+\"m|sf; ks;p");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String[] stringArray0 = new String[19];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "XSeK4%$iuKvl4fL:", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , , , , , , , , , , , , , , , , , )", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.751273597885415
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.normalize("n)wLgPr/*!83uX={", false);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CHARACTER_OCTET_LENGTH INT");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "org.antlr.runtime.tree.BaseTreeAdaptor";
      stringArray0[1] = " (";
      stringArray0[2] = "ciA$q/I`";
      stringArray0[4] = " (";
      stringArray0[5] = "(Gt x=O=k";
      stringArray0[6] = "org.antlr.runtime.tree.BaseTreeAdaptor";
      stringArray0[7] = "CHARACTER_OCTET_LENGTH INT";
      stringArray0[8] = "CHARACTER_OCTET_LENGTH INT";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("CHARACTER_OCTET_LENGTH INT", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      Character character0 = new Character('i');
      Character.compare('c', 'c');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'i'", string0);
      
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("vpx)on\"MLUAB[/", defaultDBTable0, 90, "CHARACTER_OCTET_LENGTH INT");
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string1 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("vpx)on\"MLUAB[/", string1);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String[] stringArray0 = new String[19];
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = SQLUtil.leftJoin((String) null, stringArray0, "%D'j+q_zT7:u)v", "%D'j+q_zT7:u)v", (String[]) null);
      assertEquals("left join %D'j+q_zT7:u)v as %D'j+q_zT7:u)v on ", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("p-@", stringBuilder0);
      assertEquals("p-@", stringBuilder0.toString());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("S", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DBSequence dBSequence0 = new DBSequence("exec", "exec", "drop ma");
      String string0 = SQLUtil.typeAndName(dBSequence0);
      assertEquals("sequence exec", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-1853), " REFERENCES ");
      DBColumn[] dBColumnArray0 = new DBColumn[16];
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" REFERENCES ", defaultDBTable0, dBDataType0);
      defaultDBColumn0.setDoc(" REFERENCES ");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("seWeHt intoreferences");
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("%");
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals("seWeHt intoreferences", defaultDBTable0.getName());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DBSchema dBSchema0 = new DBSchema((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, dBSchema0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = SQLUtil.normalize("a/ter tablyreferezc:s", false);
      assertEquals("a / ter tablyreferezc : s", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SELECT * FROM null WHERE ");
      System.setCurrentTimeMillis(2867L);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = " (";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn(" (", defaultDBTable0, (-1034), " (");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format:  (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = "CHAR () FOR BIT DATA";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("CHAR () FOR BIT DATA");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0, true);
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("drop index", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SQLUtil.removeComments("");
      Random.setNextRandom((-342877546));
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("create tablesemectg a`");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("insertcve", (String[]) null, "insertcve", "rename", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("_!&o|,/?Lm", stringArray0, "[b'bz", "_!&o|,/?Lm", stringArray0);
      assertEquals("left join [b'bz as _!&o|,/?Lm on ", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, (String) null, (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("create materialized viewreferenc|les", "create materialized viewreferenc|les", defaultDBTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("WithEsc", "selectilter tablertferezces", "selectilter tablertferezces");
      assertEquals("WithEsc", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " (", false, (String[]) null);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("CONSTRAINT \" (\" ", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "SCALE INT", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("CONSTRAINT \"SCALE INT\" ", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4642567260559776
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String[] stringArray0 = new String[11];
      String string0 = SQLUtil.join("call", "o\"u.ate", stringArray0, stringArray0[0], "o\"u.ate", stringArray0);
      assertEquals("call join null as o\"u.ate on o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null", string0);
      
      DBSchema dBSchema0 = new DBSchema("h&");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("call", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("call join null as o\"u.ate on o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null and o\"u.ate.null = o\"u.ate.null", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , , , , , , , ) REFERENCES call(, , , , , , , , , , )", string1);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String[] stringArray0 = new String[3];
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        SQLUtil.join("+NuBXM3^JHD:&", "+NuBXM3^JHD:&", stringArray0, "+NuBXM3^JHD:&", "+NuBXM3^JHD:&", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[6];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure(" REFERENCES ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure(" REFERENCES ");
      assertNull(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("renamealter tablereferezces");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter session");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.renderColumnListWithTableName("}0=>\t-;Pf>}V#OS`6", stringArray0);
      assertEquals("}0=>\t-;Pf>}V#OS`6.null, }0=>\t-;Pf>}V#OS`6.null", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = "l";
      StringBuilder stringBuilder0 = new StringBuilder("l");
      StringBuffer stringBuffer0 = new StringBuffer("l");
      StringBuilder stringBuilder1 = stringBuilder0.append(stringBuffer0);
      int int0 = 937;
      // Undeclared exception!
      try { 
        stringBuilder1.insert(937, 'm');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "drop indexexecxsdf4.s";
      String string1 = "left";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("drop indexexecxsdf4.s", false, "drop indexexecxsdf4.s", "left");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "update", true, (String[]) null);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT update ", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-5), "d");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("yI0e", defaultDBTable0, dBDataType0);
      String string0 = null;
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "d:_X", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'PCTVERSION'");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("CompilerContext", false, "CompilerContext", "CompilerContext");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.4789087407079924
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join("bad ", "bad ", stringArray0, "bad ", "bad ", stringArray0);
      assertEquals("bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null", string0);
      
      DBSchema dBSchema0 = new DBSchema("+Dwc)}, `?=8;I*IJ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null", dBSchema0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "H:L?AOB";
      stringArray1[1] = "bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null";
      stringArray1[2] = "bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null";
      stringArray1[3] = "bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null";
      stringArray1[4] = "+Dwc)}, `?=8;I*IJ";
      stringArray1[5] = "qkj@kS1T";
      stringArray1[6] = "bad ";
      stringArray1[7] = "bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null";
      stringArray1[8] = "bad ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "+Dwc)}, `?=8;I*IJ", false, stringArray1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (H:L?AOB, bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null, bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null, bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null, +Dwc)}, `?=8;I*IJ, qkj@kS1T, bad , bad  join bad  as bad  on bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null and bad .null = bad .null, bad )", string1);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("qkj@kS1T");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.751273597885415
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      SQLUtil.normalize("n)wLgPr/*!83uX={", false);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("select");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter tablereferezces");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[17];
      String string0 = SQLUtil.join("exec", "create table ", stringArray0, "exec", "create table ", stringArray0);
      assertEquals("exec join exec as create table  on create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null and create table .null = create table .null", string0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = SQLUtil.join("Bad connection string: '", "Bad connection string: '", stringArray0, "/9*%- j/PVFa7t36", "/9*%- j/PVFa7t36", stringArray0);
      assertEquals("Bad connection string: ' join /9*%- j/PVFa7t36 as /9*%- j/PVFa7t36 on Bad connection string: '.null = /9*%- j/PVFa7t36.null and Bad connection string: '.null = /9*%- j/PVFa7t36.null and Bad connection string: '.null = /9*%- j/PVFa7t36.null and Bad connection string: '.null = /9*%- j/PVFa7t36.null and Bad connection string: '.null = /9*%- j/PVFa7t36.null and Bad connection string: '.null = /9*%- j/PVFa7t36.null", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("hr{m]Yl}#%)yr_", "hr{m]Yl}#%)yr_", stringArray0, "hr{m]Yl}#%)yr_", "o%", stringArray0);
      assertEquals("hr{m]Yl}#%)yr_ join hr{m]Yl}#%)yr_ as o% on ", string0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("FLOOR", "t}~eZO*MFTM<o)3IsJM", (String[]) null, "t}~eZO*MFTM<o)3IsJM", "FLOOR", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "rename";
      String string0 = SQLUtil.innerJoin("rename", stringArray0, "Un3i.J1t`(fJ ?*G]2", "tYfG~cMP,W8V", stringArray0);
      assertEquals("Un3i.J1t`(fJ ?*G]2 as tYfG~cMP,W8V on rename.rename = tYfG~cMP,W8V.rename", string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = SQLUtil.innerJoin("I", stringArray0, "I", "I", stringArray0);
      assertEquals("I as I on I.null = I.null and I.null = I.null and I.null = I.null", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = SQLUtil.normalize("/*", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = SQLUtil.normalize("}0=>\t-;Pf>}V#OS`6", true);
      assertEquals("} 0 = > - ; Pf > } V # OS ` 6", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL(":-UwB<0");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = SQLUtil.renderValue("inner");
      assertEquals("'inner'", string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize(", isNameQuoted=");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("altir sesion");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("elect");
      assertFalse(boolean0);
  }
}
