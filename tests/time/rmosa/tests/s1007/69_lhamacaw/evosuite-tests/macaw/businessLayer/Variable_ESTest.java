/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 22:03:05 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=4.210123790842242
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("bO!&Oq4B", "user.postCode.label");
      derivedVariable0.setColumnEnd("user.lastName.saveChanges");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-190));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.columnStart = "J1(IQu~O%j:P";
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable0.clone();
      derivedVariable0.getColumnEnd();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("user.lastName.saveChanges");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("user.lastName.saveChanges", rawVariable0.getQuestionNumber());
      
      derivedVariable1.getOntologyTerms();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("b");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("b");
      User user0 = new User();
      user0.setPostCode("b");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setIdentifier(13);
      rawVariable0.setLabel("variable.category.label");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getLabel();
      assertEquals("variable.category.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.6692819005233845
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      arrayList0.remove((Object) derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      derivedVariable0.setForm((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1073741822));
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(boolean0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      User user1 = new User();
      user1.setPostCode("l\"}Oo=V\"zZ");
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.673199461415907
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      User user0 = new User("D(+[_", "D(+[_");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setValueLabels(arrayList1);
      arrayList1.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.getDisplayName();
      derivedVariable0.isCoded();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-87));
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.getIdentifier();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setYear("b");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      user0.setPostCode("b");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("b", derivedVariable0.getYear());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.6735493258434415
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "macaw.businessLayer.Variable";
      derivedVariable0.setCleaningDescription("macaw.businessLayer.Variable");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.form = "macaw.businessLayer.Variable";
      derivedVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.clone();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setNotes((String) null);
      supportingDocument0.setDescription("ontologyTerm.term.label");
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.23609233121712
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      rawVariable0.setFilePath((String) null);
      rawVariable0.getIdentifier();
      rawVariable0.getYear();
      rawVariable0.getOntologyTerms();
      rawVariable0.isCoded();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      Variable.validateFields(rawVariable3);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable2.setCleaned(false);
      RawVariable.detectFieldChanges(user0, rawVariable4, rawVariable4);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable5 = new RawVariable();
      rawVariable5.getCodeBookNumber();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable2);
      assertTrue(arrayList0.isEmpty());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCodeBookNumber();
      rawVariable0.isCleaned();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.090919393915582
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable4, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("m ");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.490114296025901
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("b");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.validateFields(derivedVariable0);
      user0.setPostCode("b");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.805754096314494
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("kpu");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      derivedVariable0.setSupportingDocuments(arrayList0);
      user0.setPostCode("kpu");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals(1, arrayList1.size());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList0);
      String string0 = derivedVariable1.getCategory();
      assertEquals("Unknown", string0);
      
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("MPJw7WS}6pX");
      derivedVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "Z%";
      User user0 = new User();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      User user1 = new User();
      user1.setPostCode("NON_EXISTENT_DOCUMENT_ASSOCIATION");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0561774276369764
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setLabel("/Jb4>q|D'Y)-");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      rawVariable0.codeBookNumber = null;
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.630339576753892
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      User user0 = new User();
      user0.setAffiliation("UNABLE_TO_CHECK_USER_DUPLICATE");
      user0.setPassword("UNABLE_TO_CHECK_USER_DUPLICATE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1665);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCoded(false);
      derivedVariable0.getCategory();
      derivedVariable0.getQuestionNumber();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      boolean boolean0 = derivedVariable0.isCoded();
      assertEquals("1665", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setColumnStart("|d");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setAlternativeVariable(rawVariable2);
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      assertEquals("|d", rawVariable0.getColumnStart());
      
      RawVariable rawVariable4 = new RawVariable();
      User user1 = new User();
      int int0 = rawVariable3.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.8600494531748777
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.setYear("UNABLE_TO_GET_CATEGORIES");
      rawVariable0.questionNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_DUPLICATE";
      derivedVariable0.containsSourceVariable(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      rawVariable0.getQuestionNumber();
      derivedVariable0.getSourceVariables();
      rawVariable0.clone();
      derivedVariable0.getFilePath();
      assertEquals("UNABLE_TO_GET_CATEGORIES", derivedVariable0.getYear());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2590752087262675
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCleaningDescription("UNABLE_TO_GET_CATEGORIES");
      derivedVariable0.isNewRecord();
      derivedVariable0.setCleaningStatus("(2<r");
      derivedVariable0.getCleaningStatus();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Function.identity();
      arrayList1.add((Object) derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      unaryOperator0.apply(valueLabel0);
      arrayList0.removeAll(arrayList1);
      ArrayList<RawVariable> arrayList2 = new ArrayList<RawVariable>();
      arrayList2.iterator();
      arrayList0.retainAll(arrayList2);
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getAlias();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList3);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getYear();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariable(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(116);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.createVariableSummary();
      rawVariable0.setYear("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      rawVariable0.getLabel();
      assertEquals("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM", rawVariable0.getYear());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=4.185120055617699
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.getForm();
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable1.getForm();
      User user0 = new User("YqB%+", "");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      assertEquals(0, arrayList1.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getSourceVariables();
      derivedVariable1.getOntologyTerms();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=4.159744852236512
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      arrayList0.remove((Object) derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      derivedVariable0.setForm((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      String string0 = derivedVariable0.getForm();
      assertNull(string0);
      
      User user0 = new User((String) null, (String) null);
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, arrayList1.size());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.283829765951666
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setLabel("variable.category.label");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getLabel();
      assertEquals("variable.category.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=4.161023575063653
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_UPDATE_VALUE_LABELS");
      derivedVariable0.clone();
      derivedVariable0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("}Hqe>cgqAh");
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getName();
      derivedVariable0.clone();
      User user0 = new User();
      user0.setUserID("");
      RawVariable rawVariable0 = new RawVariable();
      user0.setAffiliation("}Hqe>cgqAh");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setCleaningDescription("variable.questionNumber.label");
      rawVariable0.notes = "zx$|)%j9z7j";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable.validateFields(derivedVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.containsAll(arrayList0);
      derivedVariable0.setSourceVariables(arrayList1);
      rawVariable0.isCoded();
      rawVariable0.getCodeBookNumber();
      assertEquals("variable.questionNumber.label", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.questionNumber = "variable.name.label";
      rawVariable0.setAlternativeVariable(rawVariable1);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      variable0.form = "variable.name.label";
      variable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes((String) null);
      derivedVariable0.setFilePath("{HtV'@CFav{@0z");
      derivedVariable0.getFilePath();
      assertEquals("{HtV'@CFav{@0z", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.9598535498585483
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setCodeBookNumber(",;*(z8:~El");
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.clone();
      derivedVariable0.isCoded();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.585991948307809
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable1.codeBookNumber = "variable.notes.label";
      derivedVariable1.setAlias("variable.notes.label");
      derivedVariable0.setName("variable.notes.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      supportingDocument0.setFilePath("variable.notes.label");
      user0.setAddressLine1("variable.notes.label");
      user0.setPhone(">g%cJa?yE^MguJ2 }");
      derivedVariable0.setSupportingDocuments(arrayList0);
      user0.setPostCode("variable.notes.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.getCategory();
      assertEquals("variable.notes.label", derivedVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(164);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getCategory();
      derivedVariable0.getAlias();
      derivedVariable0.getIdentifier();
      User user0 = new User(",;*(z8:~El", "");
      user0.setFirstName("[&>F~>;^gKXRquBC,$9");
      try { 
        User.checkValidEmail("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("c{a\"1*(_^ummNrrZu9");
      supportingDocument0.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(1);
      supportingDocument1.setFilePath("macaw.businessLayer.Variable");
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean1 == boolean0);
      
      derivedVariable1.getSourceVariables();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4392843399911825
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName("R>");
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.columnEnd = "gRi~e";
      derivedVariable0.getLabel();
      derivedVariable0.getAlias();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.getCleaningDescription();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("gRi~e", derivedVariable0.getColumnEnd());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable2);
      derivedVariable2.getCodeBookNumber();
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.383705091229498
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPostCode("Wb8V+!L+e");
      User user1 = new User("Wb8V+!L+e", "~<;]OkfgG7`2");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        OntologyTerm.validateFields((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.862533925224567
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.getIdentifier();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.ensureCapacity(0);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getForm();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      Object object0 = derivedVariable0.clone();
      arrayList1.add((Variable) derivedVariable0);
      rawVariable0.setName(",;*(z8:~El");
      arrayList1.remove(object0);
      derivedVariable0.getQuestionNumber();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.91744264088867
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("kpu");
      rawVariable0.setCategory("kpu");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      derivedVariable0.setSupportingDocuments(arrayList0);
      user0.setPostCode("kpu");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("kpu", rawVariable0.getCategory());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable1.getCategory();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.getSourceVariables();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      derivedVariable0.setForm(",;*(z8:~El");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setUserID(" #T,A/ce.fIK");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("|<.FoZ");
      rawVariable0.createVariableSummary();
      System.setCurrentTimeMillis(2926L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeSourceVariable((Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      rawVariable0.setAlternativeVariable((Variable) null);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("^sxQit");
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("8");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("8", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "yv:},@Zr#";
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", variableSummary0.getLabel());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      derivedVariable0.columnEnd = "MPJw7WS}6pX";
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "q84\u0006{/w";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnStart();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("q84\u0006{/w", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.5860919583088093
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("b");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "b";
      User user0 = new User();
      derivedVariable0.setSupportingDocuments(arrayList0);
      user0.setPassword("variable.questionNumber.label");
      user0.setPostCode("variable.questionNumber.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("b", rawVariable0.getNotes());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.4391758212717036
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.columnEnd = "variable.columnEnd.label";
      RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable0);
      assertEquals("variable.columnEnd.label", rawVariable3.getColumnEnd());
      
      RawVariable rawVariable4 = new RawVariable();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      rawVariable1.getIdentifier();
      rawVariable4.getColumnEnd();
      assertEquals("Unknown", rawVariable4.getCleaningStatus());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("]bllS&}IVO._");
      User user0 = new User();
      user0.setPostCode("]bllS&}IVO._");
      user0.setPhone("variable.year.label");
      User user1 = new User();
      user1.setLastName((String) null);
      User.checkValidUserIDField("kpu");
      rawVariable0.setColumnStart("ontologyTerm.term.label");
      User user2 = new User();
      user2.setFirstName((String) null);
      rawVariable0.setFilePath("kpu");
      rawVariable0.getIdentifier();
      rawVariable0.getYear();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      String string0 = rawVariable0.getLabel();
      assertNotNull(string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.remove((Object) derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      derivedVariable0.setForm((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User();
      derivedVariable2.setAvailability("MPJw7WS}6pX");
      user0.setUserID((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.columnStart.label");
      rawVariable0.createVariableSummary();
      rawVariable0.getQuestionNumber();
      assertEquals("variable.columnStart.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "F/tjmFUd/*9vwtjO";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", string1);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.2627848006711537
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setName("variable.columnStart.label");
      derivedVariable0.setLabel(">R!J+.{dz7MzfgK9\"");
      derivedVariable0.setYear("variable.columnStart.label");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      User user1 = new User();
      user1.setEmail(">R!J+.{dz7MzfgK9\"");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      rawVariable0.getDisplayName();
      rawVariable0.setColumnStart("0`WqC};%");
      System.setCurrentTimeMillis(0L);
      derivedVariable0.removeSourceVariable(rawVariable0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getColumnStart();
      rawVariable0.createVariableSummary();
      derivedVariable0.isNewRecord();
      derivedVariable0.isCoded();
      derivedVariable0.isCleaned();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getIdentifier();
      derivedVariable0.getColumnStart();
      assertEquals(">R!J+.{dz7MzfgK9\"", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("j+");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getForm();
      User user0 = new User((String) null, "gRi~e");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("j+", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getColumnStart();
      assertEquals("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      assertEquals("UNABLE_TO_FILTER_ONTOLOGY_TERMS", derivedVariable0.getDisplayName());
      
      DerivedVariable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "lha.mrc.ac.uk:LHA";
      rawVariable0.setOntologyTerms(arrayList0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", variableSummary0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getName());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      UnaryOperator.identity();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        arrayList1.listIterator(478);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 478
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.4902377680594854
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getLabel();
      derivedVariable0.getAlias();
      User user0 = new User("", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      assertTrue(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "DUPLICATE_VARIABLE";
      derivedVariable0.setCleaningDescription("DUPLICATE_VARIABLE");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.getNotes();
      assertEquals("DUPLICATE_VARIABLE", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER");
      ontologyTerm0.setTerm("variable.label.label");
      rawVariable0.getAvailability();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("variable.label.label");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getNotes();
      assertEquals("UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER", rawVariable0.getNotes());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ontologyTerm0.setDescription("variable.columnStart.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("variable.columnStart.label");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      supportingDocument0.setFileName("^P()mZ2ma/");
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.questionNumber = null;
      rawVariable0.form = null;
      rawVariable0.getQuestionNumber();
      System.setCurrentTimeMillis(0L);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.retainAll(arrayList1);
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.remove((Object) derivedVariable1);
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.notes = ">#8N";
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList3);
      arrayList2.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable0.getQuestionNumber();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.clear();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setForm("or#PJ`w[w~~Z'GP");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.getForm();
      User user0 = new User((String) null, ",;*(z8:~El");
      ArrayList<MacawChangeEvent> arrayList2 = new ArrayList<MacawChangeEvent>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      assertEquals("or#PJ`w[w~~Z'GP", derivedVariable0.getForm());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.264392000928306
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getForm();
      derivedVariable0.setForm((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable2);
      User user0 = new User();
      derivedVariable0.setColumnEnd((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "UNABLE_TO_GET_ALL_SUPPORTING_DOCUMENTS";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getSupportingDocuments();
      String string0 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("n$IbxrOHmO?rI");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.getColumnStart();
      assertEquals("n$IbxrOHmO?rI", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "UR/iCmQJ2";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("UR/iCmQJ2", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("MPJw`7WS}6pX");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      DerivedVariable[] derivedVariableArray0 = new DerivedVariable[2];
      derivedVariableArray0[0] = derivedVariable0;
      derivedVariableArray0[1] = derivedVariable0;
      derivedVariable0.createVariableSummary();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setYear((String) null);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPostCode("MPJw`7WS}6pX");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      derivedVariable0.setNotes("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      derivedVariable0.getIdentifier();
      derivedVariable0.getYear();
      assertEquals("UNABLE_TO_UPDATE_DERIVED_VARIABLE", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("general.fieldValue.blank");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getLabel();
      assertEquals("general.fieldValue.blank", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      System.setCurrentTimeMillis((-732L));
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.6214584602430353
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("variable.columnStart.label");
      derivedVariable0.getColumnEnd();
      derivedVariable0.getAlias();
      derivedVariable0.getCleaningDescription();
      assertEquals("variable.columnStart.label", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      String string0 = null;
      derivedVariable0.columnEnd = null;
      boolean boolean0 = true;
      derivedVariable0.setIsNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable1.setValueLabels(arrayList0);
      derivedVariable0.setCoded(false);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getYear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "BS [pK";
      rawVariable0.setForm("ontologyTerm.description.saveChanges");
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList0.subList(1, (-1841));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1) > toIndex(-1841)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      String string0 = derivedVariable0.getFilePath();
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "d=G*b%P";
      derivedVariable0.setLabel((String) null);
      derivedVariable0.questionNumber = "cr7_a+t1V<jNAQ@8a";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "yv:},@Zr#";
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail("vTGeYbTIx+a=Yx\"X<");
      rawVariable0.setAlias("vTGeYbTIx+a=Yx\"X<");
      rawVariable0.setCleaningStatus("TP|X=[1Yg+{3o");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("vTGeYbTIx+a=Yx\"X<", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(rawVariable1);
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("^P()mZ2ma/");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setCleaningStatus((String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable3 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_CREATE_TABLES");
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_CREATE_TABLES", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "G.*,U1hJwR&|";
      rawVariable0.getColumnStart();
      rawVariable0.createVariableSummary();
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.6275577079926418
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "variable.questionNumber.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.questionNumber.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setNotes("ontologyTerm.term.label");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.listIterator();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("variable.saveChanges.valueChanged", "ontologyTerm.term.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      // Undeclared exception!
      try { 
        ValueLabel.differencesExist((User) null, rawVariable0, valueLabel0, valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.699348220284402
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "#F1:qY";
      rawVariable0.setNotes(" i6)qNi");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getForm();
      rawVariable0.getForm();
      rawVariable0.setLabel("");
      assertEquals(" i6)qNi", rawVariable0.getNotes());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      user0.setPostCode("user.addressLine2.label");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("pq7dI](F`8IApM");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getName();
      assertEquals("pq7dI](F`8IApM", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setCounty("GUt?Ozsqd^H*Nw");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.notes = "user.city.saveChanges";
      User user1 = new User("GUt?Ozsqd^H*Nw", "O?4");
      // Undeclared exception!
      try { 
        ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("MPJw7WS}6pX");
      derivedVariable0.getForm();
      derivedVariable0.clone();
      derivedVariable0.setCleaned(true);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "UNABLE_TO_GET_VARIABLE_IDENTIFIER";
      derivedVariable0.clone();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      // Undeclared exception!
      try { 
        arrayList1.listIterator(49);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 49
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setNotes("O<$,3L'MV88z_iQKCl ");
      derivedVariable1.notes = " ;_";
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.cloneAttributes(derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable1);
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      // Undeclared exception!
      try { 
        arrayList0.subList((-5044), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -5044
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.columnStart = "j";
      rawVariable0.setAvailability("j");
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.6272974946176744
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "variable.cleaningDescription.label";
      derivedVariable1.setName((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      User user1 = new User();
      user1.setPostCode("NON_EXISTENT_DOCUMENT_ASSOCIATION");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
      
      rawVariable0.isCleaned();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable1.clone();
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("", derivedVariable2.getLabel());
      assertEquals("", derivedVariable2.getYear());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("", derivedVariable2.getAlias());
      assertEquals("variable.cleaningDescription.label", derivedVariable2.getForm());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("", derivedVariable2.getQuestionNumber());
      assertEquals("", derivedVariable2.getColumnEnd());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setLabel(",;*(z8:~El");
      rawVariable0.setAvailability(",;*(z8:~El");
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals(",;*(z8:~El", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.6272974946176744
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable1.setAlias("variable.notes.label");
      derivedVariable0.setName("variable.notes.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("variable.notes.label", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.8044637737338487
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.clear();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.getForm();
      User user0 = new User((String) null, ",;*(z8:~El");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      rawVariable0.setCleaningStatus("nR%Ca[Yv>&'8j{X");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber((String) null);
      rawVariable0.getAvailability();
      assertEquals("nR%Ca[Yv>&'8j{X", rawVariable0.getCleaningStatus());
      
      rawVariable1.isCoded();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable1.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "uOh\"";
      derivedVariable0.setName((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      user0.setPostCode("R7Az$H],;lG");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPostCode((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("`1X");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      derivedVariable1.setYear((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.4338006812941
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      System.setCurrentTimeMillis(1107L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("q<0^Q4*OSNp");
      derivedVariable0.questionNumber = "";
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("N\"n?:}`ZGa$)NW");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("N\"n?:}`ZGa$)NW", derivedVariable0.getCleaningDescription());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.5220721042444585
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Object object0 = derivedVariable0.clone();
      arrayList0.remove(object0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getForm();
      derivedVariable0.setForm((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setUserID((String) null);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.48462116244288
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.379260646785054
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.setCategory("blank");
      derivedVariable0.setCategory("aiM_Vq");
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable1.isNewRecord());
      
      derivedVariable0.getSourceVariables();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("cz8]Xff+$@M*s_?");
      rawVariable0.getAlias();
      assertEquals("cz8]Xff+$@M*s_?", rawVariable0.getAlias());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("ul#]XCm4K]rp0;28o{T");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("ul#]XCm4K]rp0;28o{T", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "NON_EXISTENT_CATEGORY";
      rawVariable0.setCategory("general.error.blankField");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("Nk.t");
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
