/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 21:21:12 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.net.Socket;
import java.net.SocketException;
import java.net.SocketOption;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.net.server.impl.DefaultClientEventHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0547452758288847
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      QuickServer quickServer0 = new QuickServer();
      quickServer0.setRunningSecure(true);
      quickServer0.getPort();
      quickServer0.setConsoleLoggingToMicro();
      theClient0.setServer(quickServer0);
      theClient0.getServer();
      theClient0.toString();
      theClient0.getServer();
      theClient0.setTrusted(false);
      theClient0.setMaxAuthTryMsg("{TheClient ");
      ClientEvent clientEvent0 = ClientEvent.MAX_CON;
      theClient0.setClientEvent(clientEvent0);
      theClient0.getSocket();
      theClient0.getServer();
      theClient0.getSocketChannel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      theClient0.getSocket();
      theClient0.getSocketChannel();
      theClient0.getAuthenticator();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getServer();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Max Connection)}", string0);
      
      theClient0.getClientExtendedEventHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer("F8HmvK7sV8", 0);
      quickServer0.setCommunicationLogging(false);
      theClient0.setServer(quickServer0);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getServer();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("4etc p_Y%%I,a8e");
      SocketOption<Object> socketOption0 = (SocketOption<Object>) mock(SocketOption.class, new ViolatedAssumptionAnswer());
      theClient0.setClientEvent((ClientEvent) null);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      org.quickserver.net.qsadmin.Authenticator authenticator1 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.getClientEvent();
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.getServer();
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      blockingClientHandler0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setCommunicationLogging(false);
      QuickServer quickServer0 = new QuickServer("");
      quickServer0.getQSAdminServer();
      quickServer0.makeServerSocket();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      theClient0.setServer(quickServer0);
      QuickServer quickServer1 = new QuickServer("");
      theClient0.toString();
      theClient0.getClientObjectHandler();
      theClient0.getSocket();
      theClient0.toString();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      theClient0.toString();
      blockingClientHandler0.getSocket();
      //  // Unstable assertion: assertEquals("<ClientHandler-Pool#-1-ID:20>", blockingClientHandler0.getName());
      
      theClient0.getSocketChannel();
      theClient0.getClientExtendedEventHandler();
      theClient0.getServer();
      //  // Unstable assertion: assertFalse(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      theClient0.getSocket();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      ClientEvent clientEvent0 = theClient0.getClientEvent();
      theClient0.setClientEvent(clientEvent0);
      theClient0.getClientExtendedEventHandler();
      theClient0.toString();
      theClient0.setTimeout((-4585));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)37;
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte)125;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      theClient0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.getTimeout();
      theClient0.getClientExtendedEventHandler();
      theClient0.getSocketChannel();
      theClient0.getClientObjectHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getSocketChannel();
      theClient0.getClientBinaryHandler();
      theClient0.getClientEvent();
      theClient0.getClientObjectHandler();
      theClient0.getClientBinaryHandler();
      theClient0.toString();
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      assertEquals((-4585), theClient0.getTimeout());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      Data data0 = new Data();
      theClient0.setClientData(data0);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.setMaxAuthTryMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.getClientData();
      theClient0.getClientAuthenticationHandler();
      System.setCurrentTimeMillis(3808L);
      theClient0.getSocketChannel();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      TheClient theClient0 = new TheClient();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientAuthenticationHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      assertTrue(theClient0.getCommunicationLogging());
      
      theClient0.setCommunicationLogging(false);
      theClient0.setTimeoutMsg("org.quickserver.net.server.TheClient");
      theClient0.getCommunicationLogging();
      theClient0.getSocket();
      assertFalse(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      TheClient theClient1 = new TheClient();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient1.setMaxConnectionMsg("Loading ClientObjectHandler class..");
      theClient1.setClientEventHandler(defaultClientEventHandler0);
      ClientEventHandler clientEventHandler0 = theClient1.getClientEventHandler();
      theClient0.setClientEventHandler(clientEventHandler0);
      theClient0.getClientExtendedEventHandler();
      theClient0.toString();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setTrusted(true);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getTrusted();
      // Undeclared exception!
      try { 
        NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.testdata.NetworkHandling", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3234094224875887
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientAuthenticationHandler();
      TheClient theClient1 = new TheClient();
      theClient1.getClientBinaryHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getSocketChannel();
      boolean boolean0 = theClient1.getCommunicationLogging();
      assertTrue(boolean0);
      
      String string0 = theClient1.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientExtendedEventHandler();
      ClientEvent clientEvent0 = ClientEvent.MAX_CON_BLOCKING;
      theClient1.setClientEvent(clientEvent0);
      theClient0.getMaxAuthTryMsg();
      theClient1.setMaxAuthTryMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient1.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.setSocket((Socket) null);
      theClient0.getClientCommandHandler();
      theClient1.getServer();
      theClient1.setClientCommandHandler(commandHandler0);
      theClient1.getClientExtendedEventHandler();
      theClient1.getClientExtendedEventHandler();
      theClient1.getClientWriteHandler();
      theClient1.getMaxAuthTryMsg();
      theClient1.getSocket();
      theClient0.getSocketChannel();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getClientCommandHandler();
      theClient0.getClientExtendedEventHandler();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket(inetAddress0, (-879), inetAddress0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-879
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      String string0 = theClient0.toString();
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      ClientEvent clientEvent0 = ClientEvent.MAX_CON;
      blockingClientHandler0.hasEvent(clientEvent0);
      blockingClientHandler0.getClientData();
      theClient0.setMaxConnectionMsg("TrustMaHbg1r Uot");
      theClient0.getMaxConnectionMsg();
      BlockingClientHandler blockingClientHandler1 = new BlockingClientHandler();
      //  // Unstable assertion: assertEquals("<ClientHandler-Pool#-1-ID:15>", blockingClientHandler1.getName());
      
      theClient0.getClientWriteHandler();
      //  // Unstable assertion: assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      TheClient theClient1 = new TheClient();
      theClient1.getAuthenticator();
      theClient1.setMaxAuthTry(85);
      theClient1.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient1.getCommunicationLogging();
      theClient1.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getCommunicationLogging();
      theClient1.getMaxAuthTry();
      theClient0.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.READ;
      theClient1.setClientEvent(clientEvent0);
      theClient1.setClientEvent(clientEvent0);
      theClient0.getMaxAuthTryMsg();
      try { 
        blockingClientHandler0.handleClient(theClient1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.server.impl.BasicClientHandler", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer();
      theClient0.setServer(quickServer0);
      theClient0.getServer();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTry((-1));
      theClient0.getMaxAuthTry();
      CommandHandler commandHandler0 = new CommandHandler();
      String string0 = "9~5|";
      QuickServer quickServer0 = new QuickServer("9~5|");
      // Undeclared exception!
      try { 
        quickServer0.findClientByKey("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.server.QuickServer", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("h2'5_)X;xe(AI:");
      TheClient theClient1 = new TheClient();
      theClient0.getTimeoutMsg();
      CommandHandler commandHandler0 = new CommandHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      try { 
        commandHandler0.gotConnected(blockingClientHandler0);
        fail("Expecting exception: SocketException");
      
      } catch(SocketException e) {
         //
         // Connection is no more open!
         //
         verifyException("org.quickserver.net.server.impl.BasicClientHandler", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getMaxConnectionMsg();
      theClient0.getClientWriteHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("");
      theClient0.getMaxConnectionMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("");
      theClient0.setTimeoutMsg("");
      theClient0.getTimeoutMsg();
      CommandHandler commandHandler0 = new CommandHandler();
      QuickServer quickServer0 = new QuickServer("", 0);
      // Undeclared exception!
      try { 
        quickServer0.findFirstClientById("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.server.QuickServer", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getTimeout();
      theClient0.setTimeout(456);
      theClient0.getClientBinaryHandler();
      theClient0.getTimeout();
      theClient0.setTimeout(1320);
      theClient0.toString();
      assertEquals(1320, theClient0.getTimeout());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("");
      theClient0.setMaxAuthTry((-2093));
      theClient0.getMaxAuthTryMsg();
      // Undeclared exception!
      try { 
        ByteBuffer.allocateDirect((-2093));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative capacity: -2093
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      boolean boolean0 = theClient0.getTrusted();
      assertFalse(boolean0);
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getTimeoutMsg();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler((-7));
      //  // Unstable assertion: assertEquals("<ClientHandler-Pool#-7-ID:4>", blockingClientHandler0.getName());
      
      SocketChannel socketChannel0 = SocketChannel.open();
      theClient0.setSocketChannel(socketChannel0);
      //  // Unstable assertion: assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getSocket();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getMaxAuthTry();
      CommandHandler commandHandler0 = new CommandHandler();
      QuickServer quickServer0 = new QuickServer((String) null, 0);
      QuickServer.getVersionNo();
      // Undeclared exception!
      try { 
        quickServer0.findClientByKey((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.server.QuickServer", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler((-7));
      // Undeclared exception!
      try { 
        blockingClientHandler0.getSocketChannel();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't get in blocking mode!
         //
         verifyException("org.quickserver.net.server.impl.BlockingClientHandler", e);
      }
  }
}
