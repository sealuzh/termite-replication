/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 21:28:05 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      Player player1 = new Player((short)4919, "", 3);
      player0.setY(3);
      Player player2 = new Player((-2250), "4|as([YipUW}iWsAeo", (-2229));
      player0.setDead((-2138L), true);
      player0.setY((-2001.0F));
      player1.isJoinOK(player0, false);
      Player player3 = new Player(5);
      player0.getY();
      player0.pack();
      assertEquals((-2138L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte) (-74);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readBoolean();
      dataInputStream0.close();
      Player player0 = new Player((-18944));
      boolean boolean0 = player0.unpack(dataInputStream0);
      Player player1 = new Player((-787), "Player", (String) null, (byte)17);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-18944", player0.getName());
      assertTrue(boolean1 == boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      
      player1.toString();
      assertEquals(17, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(5, "tI", 5);
      player0.setDead((long) 5, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte)13;
      player0.setX((byte) (-74));
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-27131), 1846);
      byteArrayInputStream1.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      dataInputStream0.close();
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.196939089991099
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "E#j1!;$", 0);
      player0.setDead(2045L);
      Player player1 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.id = 0;
      player0.getSubparty();
      player1.setZ((-1.0F));
      player1.setJoinOK(player0, false);
      player0.head = (Party) player1;
      player1.setY(0);
      player0.setY(0.0F);
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      player0.getZ();
      player1.getZ();
      int int0 = Packable.PLAYER;
      player1.getTimeOfDeath();
      player1.pack();
      player0.gangStrength();
      float float0 = player1.getY();
      assertEquals((-1.0F), player1.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2524);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      System.setCurrentTimeMillis(1392409296320L);
      player0.getX();
      Player player1 = new Player(0);
      player0.isJoinOK(player1, true);
      player1.pack();
      assertEquals("Player0", player1.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 11862;
      Player player0 = new Player(11862);
      player0.setMoney(11862);
      player0.setZ(11862);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getX();
      player0.getMoney();
      System.setCurrentTimeMillis(11862);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(938);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      Player player1 = new Player(938, "", (-2860));
      player1.pack();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player938", player0.toString());
      
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
      
      int int1 = player1.getPictureId();
      assertEquals((-2860), int1);
      
      float float0 = player1.getX();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-1), "dVL+", (-1));
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.id = 5;
      player0.setMoney((-1));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte) (-22);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)54;
      byteArray0[8] = (byte)127;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.getMoney();
      System.setCurrentTimeMillis((short)4919);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getMoney();
      player0.toString();
      player1.getY();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-327), "", "", (-450), (-327));
      player0.toString();
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals((-327), player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-450), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(0, "E#j1!;$", "6PLz>xS='%k_", 0);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((-1L));
      Player player1 = new Player((short)4919, "EhXMt\"!$qc+p", "E#j1!;$", 347, 347);
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      player0.setY(0);
      player0.isJoinOK(player1, false);
      player1.getZ();
      player0.getZ();
      player0.type();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, "", 5);
      player0.setDead((long) 0, true);
      Player player1 = new Player(5, "", 5);
      player0.setY((short)4919);
      Player player2 = new Player(965, "", 1757);
      assertEquals(0.0F, player2.getY(), 0.01F);
      
      player2.setY(0.1F);
      Player player3 = new Player(2782);
      float float0 = player2.getY();
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "EhXMt\"!$qc+p", "1PEwX'^W\"", 0, 0);
      player0.id = 0;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      player0.reset(true);
      float float0 = Player.TOLERANCE;
      int int0 = player0.type();
      assertEquals(5, int0);
      
      player0.getTimeOfDeath();
      int int1 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertEquals(0, int1);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("EhXMt\"!$qc+p", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      
      Player player1 = new Player((byte) (-5));
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-5", player1.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(5, (String) null, 5);
      Player player1 = new Player(5);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1958550791509905
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(5888);
      player0.setMoney(0.0F);
      Party party0 = player0.head;
      player0.boss = null;
      Player player1 = new Player(0, (String) null, (String) null, 0, 5888);
      player0.next = (Party) player1;
      player0.setDead(1392409281320L);
      player0.setX(5888);
      player0.setMoney(5888);
      player0.reset(true);
      player0.gangStrength();
      player0.setZ(528.0F);
      player0.toString();
      player0.getStrength();
      player1.getName();
      player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player1.getIP();
      player1.getIP();
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, ".*[.]class$", 1802);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      player0.setDead((long) (byte) (-47), false);
      player0.pack();
      player0.setConnected(false);
      player0.getName();
      player0.isConnected();
      player0.setX((byte)97);
      player0.setY((byte) (-47));
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(".*[.]class$");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(2);
      player0.setDead(1L, false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-74);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.close();
      Player player1 = new Player(2);
      player0.getZ();
      player1.getZ();
      player1.type();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.getTimeOfDeath();
      player0.pack();
      player0.gangStrength();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertTrue(player0.isDead());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.325750657489052
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.setDead((long) 0);
      player0.setZ(0);
      Player player1 = new Player(2147340491, "GFot.MjB", "", 0, 2147340491);
      player1.setZ(0);
      Player player2 = new Player((-490), "", "", 0, 0);
      player2.reset(false);
      player1.setMoney(0.0F);
      player1.setDead(220L);
      player1.add(player0);
      player0.setJoinOK(player1, false);
      Player player3 = new Player(10);
      player3.getMoney();
      player0.type();
      byte[] byteArray0 = player3.pack();
      player2.setZ((-3414.8F));
      Player player4 = new Player(1);
      player4.getMoney();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = Packable.TEXT_MESSAGE;
      player0.reset(false);
      player2.getIP();
      System.setCurrentTimeMillis(1221L);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1, "module.ModuleBrowserDialog$ModuleFilter", (-2237));
      player0.setX((-2237));
      player0.setZ(1);
      player0.setY((-1888.409F));
      player0.setZ(3534.2F);
      float float0 = player0.getZ();
      assertEquals((-2237.0F), player0.getX(), 0.01F);
      assertEquals(3534.2F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(13111);
      Player player1 = new Player(13111, "=mZnjvI2", "=mZnjvI2", 1);
      player0.isJoinOK(player1, true);
      player1.setY(0.2F);
      Player player2 = new Player(11862, "=mZnjvI2", "wI2.Io<?", 602);
      Party party0 = player1.prev;
      player1.isJoinOK(player2, false);
      byte[] byteArray0 = player1.pack();
      Player player3 = new Player(32517);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 555);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player3.unpack(dataInputStream0);
      boolean boolean0 = player1.isJoinOK(player3, true);
      assertEquals("=mZnjvI2", player3.toString());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(3911L);
      Player player0 = new Player((-1));
      player0.getX();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(13824);
      player0.reset(true);
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertEquals("Player13824", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(0, "", "", 746, 0);
      player0.reset(true);
      player0.setDead(0L, true);
      player0.id = (-1440);
      player0.getName();
      player0.setDead(629L, true);
      assertEquals(629L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.322575046183876
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(583L);
      player0.setZ((-1461));
      Player player1 = new Player((-1461), "<'D*'", "<'D*'", (-1461), 0);
      player1.setZ((short)4919);
      player1.reset(false);
      player1.setMoney((short)4919);
      player0.add(player1);
      player0.setJoinOK(player1, false);
      player0.getMoney();
      player0.type();
      player1.pack();
      player1.head = (Party) player0;
      player1.setZ(0.0F);
      player0.getMoney();
      player1.getStrength();
      player0.reset(false);
      player1.getIP();
      assertEquals(0.0F, player1.getZ(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, "state.Party", "state.Party", 0, (-1875));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals((-1875), player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System.setCurrentTimeMillis((-1723L));
      Player player0 = new Player((-527), "n\"F!_}|", "n\"F!_}|", (-527), (-527));
      player0.setX(3158.2937F);
      int int0 = player0.getStrength();
      assertEquals(3158.2937F, player0.getX(), 0.01F);
      assertEquals((-527), int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.getY();
      player0.getIP();
      boolean boolean0 = false;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(3);
      int int0 = 347;
      player0.reset(false);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((long) 0, true);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(10);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("Player10", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(1213);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream1.close();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("Player1213", player0.getName());
      
      Player player1 = new Player((byte)1);
      boolean boolean1 = player1.unpack(dataInputStream1);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(boolean1 == boolean0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-642));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-642", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-307));
      Party party0 = player0.boss;
      player0.remove((Party) null);
      player0.prev = (Party) player0;
      player0.gangStrength();
      player0.isConnected();
      float float0 = Player.TOLERANCE;
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(22273);
      player0.setConnected(false);
      Player player1 = new Player(1053);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(player0.isConnected());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-2237), "Player.unpack(): *** WARNING *** data is not of proper type!", 33);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(33, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.add(player1);
      player0.gangStrength();
      boolean boolean0 = true;
      player0.reset(true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      player1.setDead(0L, false);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player1.unpack(dataInputStream0);
      mockFileInputStream0.markSupported();
      long long0 = 0L;
      try { 
        dataInputStream0.readInt();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-2237), "", "", (-2237), (-1417));
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-1417), int0);
      assertEquals((-2237), player0.getPictureId());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      float float0 = player0.getZ();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(22273);
      Party party0 = new Party(22273);
      player0.add(party0);
      player0.setMoney(22273);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(5, "%`", 5);
      MockPrintStream mockPrintStream0 = new MockPrintStream("%`");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      PrintStream printStream0 = mockPrintStream1.append((CharSequence) "%`");
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player(5);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(0, "+Qw.ro", 0);
      Party party0 = player0.prev;
      Player player1 = new Player((-288));
      player0.remove(player1);
      player0.getSubparty();
      player0.getTimeOfDeath();
      assertEquals(0, player0.getPictureId());
      
      Player player2 = new Player();
      Player player3 = new Player();
      String string0 = player3.getName();
      assertEquals("Player-1", string0);
      
      player3.isDead();
      player1.reset(false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = (-1089);
      boolean boolean0 = true;
      Player player0 = new Player(2662);
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(2531, "", "", 1, (-2586));
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getPictureId());
      assertEquals((-2586), player0.getStrength());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0, "UhwM=&'.v8`p?4)&/:", 0);
      player0.setDead(73L);
      player0.getSubparty();
      player0.pack();
      player0.gangStrength();
      boolean boolean0 = player0.isDead();
      assertEquals(73L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((byte)17);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)17;
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player17", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.close();
      Player player0 = new Player((-18955));
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-18955", player0.toString());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-4048));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
