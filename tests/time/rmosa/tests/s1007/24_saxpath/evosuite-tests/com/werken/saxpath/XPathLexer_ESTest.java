/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 21:28:37 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.892740633623113
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.consume((-3891));
      xPathLexer0.consume(0);
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('g');
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7993171191378363
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("||> f#N");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.718309903298007
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!9(u`<\"90Q&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("9", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      char char0 = xPathLexer0.LA(26);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("u`", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7983834123217766
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-353));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer(".50Z5[s");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer2.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.06154799691732
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.consume((-2002));
      xPathLexer0.equals();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9833775978002337
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lTtfO1aVViB[OlHY5");
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.endPosition();
      xPathLexer0.consume((-2112));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7982372669070887
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("1", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("I-", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("T", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.slashes();
      assertEquals(":", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("I-", token2.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.number();
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer(".50Z5[s");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6937280738397162
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!9(u`<\"90Q&");
      XPathLexer xPathLexer1 = new XPathLexer("H6:88#@Q_3^Pejy");
      xPathLexer1.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4398860526697708
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2330));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-3541));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4417779176503545
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<}8<Ds");
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("d_31l,l%fOhh+w[n");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz'eIXUohe1lp6/EH");
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"Sdr#nd\"^Y");
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6956765897201205
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v]OAw5qTHtGhpElihB(");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("]", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5723992881587088
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{##DUR*QVqT.+RC*nU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{##DUR*QVqT.+RC*nU", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("##DUR*QVqT.+RC*nU", token2.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hhv!Jpfw13N{Oe@}4 J");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("hhv!Jpfw13N{Oe@}4 J");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.693868872638233
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("Q'S");
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5758444193776775
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f1I-/8G`3{7M");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("f1I-/8G`3{7M");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7975345879435403
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DJ");
      Token token0 = xPathLexer0.equals();
      assertEquals("D", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.702531455627
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume((-1748));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7401328800860463
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3`Z6ngko)#qT,^]");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`Z6ngko)#qT,^]", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Z6ngko)#qT,^]", token3.getTokenText());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.comma();
      assertEquals("Z", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7403525516770177
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3`Z6ngko)#qT,^]");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e$VT>lA*;");
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("n}{9O:'Us^^k");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4272967300945019
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z?q.-GZy@a3wTaU!0");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Z?", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.star();
      assertEquals("-", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.at();
      assertEquals("G", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Zy", token5.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1769));
      XPathLexer xPathLexer1 = new XPathLexer("Xkc|rtbW^");
      xPathLexer1.identifier();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("sdInSq<E-w9i+Aj-t#");
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~q-D ;)#`dMPR$dTi$@");
      Token token0 = xPathLexer0.equals();
      assertEquals("~", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("q-D", token1.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.797997937030743
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pg");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Pg", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&A4'm?-R*+O'(~PV6kQ");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer1.literal();
      xPathLexer1.setXPath("");
      xPathLexer1.consume((-672));
      xPathLexer1.consume();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6940398639604233
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^mtNTt+cTB^*");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.798311588720541
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~+B5");
      Token token0 = xPathLexer0.equals();
      assertEquals("~", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("~+B5");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("B5", token2.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Yre$VT>lA*;");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Yre", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("$V", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4638472964752638
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zvYtcU!&3u[d\"\"'7v");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">4G3D{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kQ d`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("kQ", token0.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.983640827003191
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.equals();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.mod();
      xPathLexer1.at();
      xPathLexer1.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer1.setXPath("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5uU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-1286));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t6d@GI~[L?m[ne!O#");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("t6d", token0.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.597340969335392
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<#");
      Token token0 = xPathLexer0.equals();
      assertEquals("<", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#", token1.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.7120991733196425
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e$VT>lA*;");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("T", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      char char0 = xPathLexer0.LA(26);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1769));
      XPathLexer xPathLexer2 = new XPathLexer("Xkc|rtbW^");
      // Undeclared exception!
      try { 
        xPathLexer1.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^/$l:.\">U");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      assertEquals("", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q.6NO(B");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("q", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".6", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("NO(B", token2.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.577662182249231
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'*,n6P_0-A7ded");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.div();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.204453078800052
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-1710));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%JDu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%JDu", token0.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ap<DfP+3#6JZ");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(19, token1.getTokenType());
      assertEquals("ap", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      assertNotNull(token4);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";[", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(";", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.577137394214398
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e$VT>lA*;");
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.dots();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.695541075652718
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gWj=.dbW~vv{yKf");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.97915952335122
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1769));
      xPathLexer1.dollar();
      xPathLexer1.not();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("vxabN3v~!CM!s@9x@4");
      xPathLexer3.mod();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y@.]qCw')T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m@v");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K&6|93Pc(->h~=8-wY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5783933236504857
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.Token", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L*aQnI2v\"_|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("L", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CRqo@w");
      Token token0 = xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (21) (C)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Rqo", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E)\"ipydD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("E", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.0621244987044753
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C)Xe,8:+T>9");
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.whitespace();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer1.at();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.9070423996763959
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e$VT>lA*;");
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('1', char0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.7396018478922195
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3`Z6ngko)#qT,^]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("`", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Z6ngko)#qT,^]", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("8", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">=)VQl2no5=I{");
      Token token0 = xPathLexer0.equals();
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.797208748908024
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.comma();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertNotNull(token3);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.consume((-377));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C[J.hfXF4MA%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.9780573347195083
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1769));
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("Xkc|rtbW^");
      xPathLexer1.notEquals();
      xPathLexer1.plus();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.2869975644661498
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V 8|VR(C=~&j ");
      Token token0 = xPathLexer0.literal();
      assertEquals(" 8|", token0.getTokenText());
      assertNotNull(token0);
      assertEquals(27, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("R", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7733417936620914
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"Sdr#nd\"^Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Sdr#nd", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.9818391651254244
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4d=ZglC(}'Q");
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("4d=ZglC(}'Q");
      xPathLexer2.equals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      xPathLexer2.getXPath();
      xPathLexer3.consume((-3860));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer3.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^I");
      XPathLexer xPathLexer1 = new XPathLexer("pk|a=bAs$8Szlo]_ ");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("pk", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z^Vf4s`iZ~'dvrF");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("z", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.6912004809506773
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j^AE7>M!#BJKU");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("^AE7>M!#BJKU", token1.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4919491764502424
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z?q.-GZy@a3wTaU!0");
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("([*?Blz'cIe_<SJL");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K0Kw.K*lk");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("db#^t;kB`uj3o:'");
      xPathLexer0.and();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("LFwW`c~p#6=2H  lI");
      xPathLexer1.setXPath("LFwW`c~p#6=2H  lI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("db", token0.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setXPath(" u");
      xPathLexer0.dots();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.5709669654086493
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+z:G");
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      int int0 = (-1508);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1508));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oW&T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("oW", token0.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("aZ3\"(9T)CUq7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("aZ3", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.7930132951479338
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3`Z6ngko)#qT,^]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("`", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("6", token3.getTokenText());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.comma();
      assertEquals("n", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("gko)#qT,^]", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals("g", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.1143824410371264
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yxA,\"sF62>&");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("yx", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(32, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.156136910750285
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+z:G");
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("z", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("2?u2S\"Ig'I*.<2D");
      xPathLexer1.mod();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("G", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.setXPath("2?u2S\"Ig'I*.<2D");
      Token token5 = xPathLexer2.nextToken();
      assertEquals("2", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("?", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer2.plus();
      assertEquals("u", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("I-", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("T/", token2.getTokenText());
      assertEquals(12, token2.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ap<DfP+3#6JZ");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.1360633176392105
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.isIdentifierStartChar('E');
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.hasMoreChars();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.currentPosition();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.consume((-2766));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.setXPath("9=J$oP3}}c");
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.setXPath("9=J$oP3}}c");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals("=", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S>A`~qe+H-:NOb");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("S", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.pipe();
      boolean boolean0 = xPathLexer0.isIdentifierChar('}');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("DO");
      Token token1 = xPathLexer0.dots();
      assertEquals("D", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("O", token2.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-347));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.896761485950298
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "r wRM#8ZbE:-`9?{jP4";
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer1.consume((-60));
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.060362201498235
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("T(Efx-}O~");
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer0.slashes();
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      xPathLexer1.pipe();
      xPathLexer1.colon();
      xPathLexer1.consume((-1272));
      // Undeclared exception!
      try { 
        xPathLexer1.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.438867895534186
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ap<DfP+3#6JZ");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.relationalOperator();
      assertNotNull(token2);
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.4377134277438377
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.minus();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.282325506963904
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^mtNTt+cTB^*");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" <)s");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.793494183903136
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(" ", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("To-[Q8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("To-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('c', char0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("X");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("X", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.7024388844629175
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Psjs9z*X5", token4.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.692637421372917
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.isIdentifierChar('b');
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.LA(108);
      xPathLexer0.div();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.1369652794060534
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.slashes();
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer1.whitespace();
      xPathLexer1.identifierOrOperatorName();
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('\"');
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token4 = xPathLexer3.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token5 = xPathLexer4.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer1.equals();
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      char char0 = xPathLexer2.LA(45);
      assertEquals('\uFFFF', char0);
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer3.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer3.getXPath();
      Token token9 = xPathLexer3.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      xPathLexer4.getXPath();
      Token token10 = xPathLexer3.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.800923963425939
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e$VT>lA*;");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("$", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("VT", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer2.setXPath("_7We<9&Zp+");
      Token token3 = xPathLexer2.nextToken();
      assertEquals("_7We", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals(9, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("l", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.7018871603249865
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3264));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e$VT>lA*;");
      xPathLexer0.nextToken();
      xPathLexer0.LA(895);
      xPathLexer0.setXPath("jK8@");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.205827978879988
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("J$g}qu");
      Token token0 = xPathLexer0.identifier();
      assertEquals("J", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("$", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.star();
      assertEquals("g", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("}", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("q", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("u", token6.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("uO#q6J{?'|t");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("#", token7.getTokenText());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("q", token8.getTokenText());
      
      xPathLexer0.currentPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
      
      xPathLexer0.operatorName();
      xPathLexer0.consume((-2227));
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer0.currentPosition();
      int int1 = xPathLexer0.currentPosition();
      assertEquals((-2222), int1);
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.8000975308049907
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Mi-^a--(");
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      assertEquals("'Mi-^a--(", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.0627659513480006
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.setXPath("V*");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      token2.toString();
      xPathLexer0.mod();
      String string0 = token2.toString();
      assertEquals("[ (20) (*)", string0);
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('K');
      assertTrue(boolean0);
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("[ (20) (*)");
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      xPathLexer1.setPreviousToken((Token) null);
      char char0 = xPathLexer1.LA(46);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.setXPath("aCf-:");
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("V*");
      Token token4 = xPathLexer2.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("V", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("aCf-", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r*fo{C8mu UnRrBB");
      Token token0 = xPathLexer0.equals();
      assertEquals("r", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"Sdr#nd\"^Y");
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-162));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.6754040267347132
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.655846964960198
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^I", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("^", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals("I", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.687420655767592
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('6');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.star();
      assertEquals("c", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.7016854796527177
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.not();
      assertEquals("?", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(13, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.4423669064964826
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.setXPath("9=J$oP3}}c");
      XPathLexer xPathLexer1 = new XPathLexer("S>A`~qe+H-:NOb");
      Token token0 = xPathLexer1.leftParen();
      assertEquals("S", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("A", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("9", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.5529142223825259
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("wRM#8ZbE:-`9?{jP4", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.357428714569072
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("<", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("D", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.6757439123065707
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T>,@)G69BE\"95L5G_w");
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.isIdentifierStartChar('{');
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.hasMoreChars();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.864657915153603
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("LFwW`c~p#6=2H  lI");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer1.star();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.5769289788657654
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M4nrvRFl@Ndf*cWqY3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("M4nrvRFl", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.2856813742863518
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.982684427565779
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('y');
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.equals();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      char char0 = xPathLexer0.LA(14);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.getXPath();
      Token token7 = xPathLexer1.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer1.getXPath();
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=0.9830420371921524
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("I-", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("T", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.2275986084816335
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("304~k[8w`");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals("304", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("~k[8w`", token1.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.2727910846730663
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("304~k[8w`");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.colon();
      assertEquals("3", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("04", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("~k[8w`", token2.getTokenText());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.2869572719715086
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      Token token0 = xPathLexer0.identifier();
      assertEquals("8", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("D", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.8962771498210245
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?@S_=tloy7xT4kQF6 ");
      xPathLexer0.or();
      Token token0 = xPathLexer0.minus();
      assertEquals("?", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("@", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("S", token2.getTokenText());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.comma();
      assertEquals("=", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("t", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("l", token5.getTokenText());
      
      xPathLexer0.literal();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.5712448203683604
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('E');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=2.5773318370384857
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.hasMoreChars();
      xPathLexer0.setXPath("");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.slashes();
      xPathLexer0.setXPath("SCSrTcP!");
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.and();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.2291531384792045
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("304~k[8w`");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("3", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.2863315223756386
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("<", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Ds", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 160
  /*Coverage entropy=0.9416446366054887
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("I-", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=0.9830420371921524
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("1", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("I-", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("T", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=1.321973997117399
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      Token token0 = xPathLexer0.equals();
      assertEquals("8", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("D", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 163
  /*Coverage entropy=1.4252416339453606
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z?q.-GZy@a3wTaU!0");
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.star();
      assertEquals("?", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.comma();
      assertEquals("q", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("-", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=1.0244042546138663
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">4G3D{");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("4", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 166
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      int int1 = xPathLexer0.currentPosition();
      assertEquals(1, int1);
  }

  /**
  //Test case number: 167
  /*Coverage entropy=1.18942264696271
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("304~k[8w`");
      Token token0 = xPathLexer0.number();
      assertEquals("304", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("~k[8w`", token1.getTokenText());
  }

  /**
  //Test case number: 168
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath(":1I-T/8G`3{7M");
      boolean boolean0 = xPathLexer0.isIdentifierChar('W');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.28576402574515
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8<Ds");
      Token token0 = xPathLexer0.equals();
      assertEquals("8", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=1.3934830992222302
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z?q.-GZy@a3wTaU!0");
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 171
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("75D`b+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("75", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("D", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 172
  /*Coverage entropy=0.9852041993543146
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("1I", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("-T", token2.getTokenText());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=1.700510816238965
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".?x:Psjs9z*X5");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume(107);
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 174
  /*Coverage entropy=0.9406189955798477
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("1I", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("-", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 175
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 176
  /*Coverage entropy=1.0232903250638257
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("I-", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("T/", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=1.2776803167786612
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!9(u`<\"90Q&");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=0.9875810442843511
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("1I", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 180
  /*Coverage entropy=0.939539373447594
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":1I-T/8G`3{7M");
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }
}
