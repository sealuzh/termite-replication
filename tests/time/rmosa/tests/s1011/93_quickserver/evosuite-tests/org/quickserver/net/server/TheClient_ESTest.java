/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 00:34:38 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Socket;
import java.net.SocketAddress;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer("'b ?|~!<@Hu,D\"[P2x");
      quickServer0.setServerBanner("SWHc1i>]0]");
      quickServer0.configQuickServer();
      theClient0.setServer(quickServer0);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getServer();
      theClient0.setMaxAuthTry(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)75;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientWriteHandler();
      System.setCurrentTimeMillis(0L);
      theClient0.getServer();
      theClient0.getClientObjectHandler();
      theClient0.toString();
      theClient0.getSocketChannel();
      theClient0.getClientObjectHandler();
      theClient0.getClientObjectHandler();
      System.setCurrentTimeMillis((-463L));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      TheClient theClient0 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setTrusted(false);
      theClient0.getAuthenticator();
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getSoLinger();
      mockSocket0.setSoLinger(false, 16);
      mockSocket0.bind((SocketAddress) null);
      mockSocket0.getKeepAlive();
      theClient0.setSocket(mockSocket0);
      theClient0.getSocketChannel();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getSocket();
      theClient0.getSocket();
      theClient0.getAuthenticator();
      theClient0.getAuthenticator();
      theClient0.getAuthenticator();
      System.setCurrentTimeMillis((-898L));
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      System.setCurrentTimeMillis(986L);
      theClient0.getClientEvent();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      String string0 = theClient0.toString();
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientExtendedEventHandler();
      theClient0.getMaxAuthTryMsg();
      theClient0.getSocket();
      theClient0.setTimeoutMsg((String) null);
      theClient0.getAuthenticator();
      TheClient theClient1 = new TheClient();
      theClient1.getClientCommandHandler();
      theClient0.setMaxConnectionMsg("^y/?3g2ZC-BUhqt");
      theClient1.setTrusted(false);
      assertFalse(theClient1.getTrusted());
      
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout((-1));
      theClient0.getClientEvent();
      int int0 = theClient0.getTimeout();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      Data data0 = new Data();
      theClient0.setClientData(data0);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getClientData();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setCommunicationLogging(true);
      theClient0.getServer();
      theClient0.toString();
      theClient0.setCommunicationLogging(false);
      theClient0.getTimeoutMsg();
      ClientEvent clientEvent0 = ClientEvent.ACCEPT;
      theClient0.setClientEvent(clientEvent0);
      theClient0.getClientObjectHandler();
      theClient0.getCommunicationLogging();
      theClient0.getClientAuthenticationHandler();
      theClient0.getMaxAuthTry();
      System.setCurrentTimeMillis(1754L);
      theClient0.toString();
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      theClient0.getMaxConnectionMsg();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.setTrusted(true);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler((-2677));
      blockingClientHandler0.getServer();
      assertEquals("<ClientHandler-Pool#-2677-ID:1>", blockingClientHandler0.getName());
      
      theClient0.setServer((QuickServer) null);
      theClient0.getTrusted();
      theClient0.getClientEvent();
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      TheClient theClient1 = new TheClient();
      theClient1.getClientWriteHandler();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientEventHandler();
      theClient1.setClientEventHandler((ClientEventHandler) null);
      theClient0.setTimeout(0);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient1.setCommunicationLogging(false);
      theClient1.getSocket();
      TheClient theClient2 = new TheClient();
      theClient2.getClientBinaryHandler();
      theClient2.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getClientCommandHandler();
      assertTrue(theClient0.getCommunicationLogging());
      
      theClient1.getClientWriteHandler();
      assertFalse(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.setMaxAuthTry((-1523));
      ClientEvent clientEvent0 = ClientEvent.ACCEPT;
      theClient0.setClientEvent(clientEvent0);
      theClient0.getClientObjectHandler();
      theClient0.getTrusted();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientEventHandler();
      theClient0.getClientEventHandler();
      theClient0.toString();
      assertEquals((-1523), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTry((-2903));
      int int0 = theClient0.getMaxAuthTry();
      assertEquals((-2903), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientAuthenticationHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("FgB");
      theClient0.getTimeoutMsg();
      theClient0.getSocketChannel();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setCommunicationLogging(true);
      theClient0.setTimeout(1485);
      theClient0.setClientData((ClientData) null);
      theClient0.toString();
      theClient0.setMaxAuthTry((-1608));
      theClient0.getMaxConnectionMsg();
      theClient0.getClientEvent();
      int int0 = theClient0.getTimeout();
      assertEquals((-1608), theClient0.getMaxAuthTry());
      assertEquals(1485, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("{TheClient ");
      theClient0.getClientCommandHandler();
      theClient0.getMaxConnectionMsg();
      int int0 = 2364;
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler(2364);
      // Undeclared exception!
      try { 
        blockingClientHandler0.getSocketChannel();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't get in blocking mode!
         //
         verifyException("org.quickserver.net.server.impl.BlockingClientHandler", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTry(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      theClient0.setMaxAuthTryMsg("");
      theClient0.getMaxAuthTryMsg();
      theClient0.getAuthenticator();
      assertTrue(theClient0.getCommunicationLogging());
      assertEquals(0, theClient0.getMaxAuthTry());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("");
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getAuthenticator();
      theClient0.setMaxConnectionMsg("");
      theClient0.toString();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getMaxConnectionMsg();
      CommandHandler commandHandler0 = new CommandHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler((-1));
      // Undeclared exception!
      try { 
        commandHandler0.handleCommand(blockingClientHandler0, "GKc\"Kaha$v<Zs<c\"!}E");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.quickserver.net.qsadmin.CommandHandler", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      blockingClientHandler0.getSocket();
      assertEquals("<ClientHandler-Pool#-1-ID:1>", blockingClientHandler0.getName());
      
      theClient0.setSocket((Socket) null);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setTimeout(0);
      theClient0.getMaxAuthTryMsg();
      theClient0.setSocket((Socket) null);
      theClient0.setMaxAuthTryMsg(", Event: ");
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientWriteHandler();
      assertFalse(theClient0.getTrusted());
      assertEquals(0, theClient0.getTimeout());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      QuickServer quickServer0 = new QuickServer("~~/|1v)X@");
      theClient0.setServer(quickServer0);
      theClient0.getServer();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      SocketChannel socketChannel0 = SocketChannel.open();
      theClient0.setSocketChannel(socketChannel0);
      theClient0.toString();
      String string0 = theClient0.toString();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTry(125);
      int int0 = theClient0.getMaxAuthTry();
      assertEquals(125, int0);
  }
}
