/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 01:09:52 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.OutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.io.Writer;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcDataSource;
import org.hsqldb.jdbc.jdbcClob;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.rowio.RowOutputText;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("'3$%[(9#7", defaultDBTable0, 1291, "Connection.setSavepoint() method cannot be used in auto-commit mode.");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("//");
      String[] stringArray0 = new String[15];
      System.setCurrentTimeMillis(0L);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "//", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("//");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = "-web";
      RowOutputText rowOutputText0 = new RowOutputText("//", "-web", "//", false, "//");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(rowOutputText0, false);
      PrintWriter printWriter0 = mockPrintWriter0.printf("Exception. ", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      // Undeclared exception!
      try { 
        DBDataType.jdbcTypeFor("-web");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = "qxefS6<%R:>y|G/2";
      DBDataType dBDataType0 = DBDataType.getInstance(524288, "qxefS6<%R:>y|G/2");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("qxefS6<%R:>y|G/2");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("qxefS6<%R:>y|G/2", defaultDBTable0, dBDataType0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "qxefS6<%R:>y|G/2";
      PrintWriter printWriter0 = mockPrintWriter0.printf("create table", objectArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "BLOB";
      stringArray0[1] = "rename";
      // Undeclared exception!
      try { 
        DBDataType.jdbcTypeFor("rename");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.normalize("/*", false);
      assertEquals("/*", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "//";
      stringArray0[1] = "//";
      stringArray0[2] = "//";
      stringArray0[3] = null;
      stringArray0[4] = "//";
      stringArray0[5] = "//";
      stringArray0[6] = null;
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("+PFO<9\"?");
      Object object0 = new Object();
      defaultDBTable0.equals(object0);
      dBUniqueConstraint0.setTable(defaultDBTable0);
      stringBuilder0.appendCodePoint(661);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      StringBuffer stringBuffer0 = new StringBuffer();
      System.setCurrentTimeMillis(0L);
      defaultDBTable0.getColumns();
      System.setCurrentTimeMillis(0L);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = ",";
      stringArray0[1] = ",";
      stringArray0[2] = ",";
      stringArray0[3] = ",";
      stringArray0[4] = ",";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin(",", stringArray0, ",", "execorg.apache.derby.impl.services.bytecode.bcmethod", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("select into");
      Boolean boolean0 = Boolean.TRUE;
      DBSchema dBSchema0 = new DBSchema("sZ_j1ABHC0L`TX-1");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("sZ_j1ABHC0L`TX-1", dBSchema0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "sZ_j1ABHC0L`TX-1";
      stringArray0[1] = "select into";
      stringArray0[2] = "select into";
      stringArray0[3] = "select into";
      stringArray0[4] = "sZ_j1ABHC0L`TX-1";
      stringArray0[5] = "sZ_j1ABHC0L`TX-1";
      stringArray0[6] = "sZ_j1ABHC0L`TX-1";
      stringArray0[7] = "InstantiationException";
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'sZ_j1ABHC0L`TX-1' has no foreign key with the columns (sZ_j1ABHC0L`TX-1, select into, select into, select into, sZ_j1ABHC0L`TX-1, sZ_j1ABHC0L`TX-1, sZ_j1ABHC0L`TX-1, InstantiationException)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      int int0 = 889;
      String string0 = ">]4^";
      boolean boolean0 = true;
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " REFERENCES ", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(889, '\'');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String[] stringArray0 = new String[1];
      NameSpec nameSpec0 = NameSpec.NEVER;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "<xe3_+6", false, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "9;tClob(String, Reader, long)";
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("9;tClob(String, Reader, long)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      String string0 = "]iJ-ur/*?O*C>3aJa|";
      // Undeclared exception!
      SQLUtil.isDML("]iJ-ur/*?O*C>3aJa|");
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(1392, "select intos2oredpreparedstatement");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance(1392, "drop table");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("r VGGca_u\";qf", defaultDBTable0, dBDataType0);
      defaultDBColumn0.setDefaultValue("drop table");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("r VGGca_u\";qf SELECT INTOS2OREDPREPAREDSTATEMENT DEFAULT drop table NULL", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("creatV table", (DBSchema) null);
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, (DBDataType) null, integer0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "creatV table");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("alter tableupdategeletecreate unique indexs:t` g$2px");
      Object[] objectArray0 = new Object[18];
      objectArray0[0] = (Object) "alter tableupdategeletecreate unique indexs:t` g$2px";
      objectArray0[1] = (Object) mockPrintWriter0;
      mockPrintWriter0.printf("alter tableupdategeletecreate unique indexs:t` g$2px", objectArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      try { 
        DBDataType.jdbcTypeFor("alter tableupdategeletecreate unique indexs:t` g$2px");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "cannot retr";
      String string1 = "create unique index";
      MockFile mockFile0 = new MockFile("create unique index");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = SQLUtil.normalize("pXVoy,w,", false);
      assertEquals("pXVoy, w,", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.870165328861826
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%D26[)x");
      stringReader0.ready();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nval = (double) (-1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)33;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      streamTokenizer0.whitespaceChars((-1), (-1123));
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      stringReader0.markSupported();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = "z-qUTR*";
      stringArray0[2] = "Attempting to initilize native library.";
      stringArray0[3] = "z-qUTR*";
      stringArray0[4] = "%D26[)x";
      stringArray0[5] = "z-qUTR*";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "z-qUTR*", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "z-qUTR*";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) nameSpec0;
      objectArray0[5] = (Object) "Attempting to initilize native library.";
      objectArray0[6] = (Object) nameSpec0;
      objectArray0[7] = (Object) "Attempting to initilize native library.";
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = SQLUtil.isQuery("insert");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("p|$an_,tq\"f&`6wz*i3");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("m'X1v'f!l PdbLU[?O!", dBSchema0);
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("p|$an_,tq\"f&`6wz*i3.m'X1v'f!l PdbLU[?O!", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SQLUtil.normalize("inner", true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "drop materialized view";
      stringArray0[1] = "drop materialized view";
      stringArray0[2] = "inner";
      stringArray0[3] = "inner";
      SQLUtil.join("inner", "drop materialized view", stringArray0, " or ", "drop materialized view", stringArray0);
      SQLUtil.isDML("select");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "inner");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("o4!U|4nIJ2MY", stringBuilder0);
      int int0 = (-4926);
      char char0 = '(';
      Character character0 = Character.valueOf('(');
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-4926), (Object) character0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4926
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = new String[17];
      stringArray0[0] = ":";
      stringArray0[6] = ":";
      stringArray0[2] = ":";
      stringArray0[3] = ":";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.ownerDotComponent(defaultDBTable0);
      SQLUtil.isDML(":");
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("(", defaultDBTable0, (-2087), "rM) ");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      Integer integer0 = new Integer((-2087));
      Integer integer1 = new Integer(3794);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("uKo9_H6M>", defaultDBTable0, (DBDataType) null, integer0, integer1);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      Integer integer2 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("uKo9_H6M>", defaultDBTable0, (DBDataType) null, integer2);
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      Integer integer3 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn("(", defaultDBTable0, (DBDataType) null, integer3);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn3;
      Integer integer4 = new Integer((-2087));
      DefaultDBColumn defaultDBColumn4 = new DefaultDBColumn("uKo9_H6M>", defaultDBTable0, (DBDataType) null, integer0, integer4);
      dBColumnArray0[4] = (DBColumn) defaultDBColumn4;
      DefaultDBColumn defaultDBColumn5 = null;
      try {
        defaultDBColumn5 = new DefaultDBColumn(":", defaultDBTable0, (-1952257859), "(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("toradians(doublef");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("WKfA1B\"HA9SG}4gQ5dv", dBSchema0);
      dBSchema0.isIdentical(defaultDBTable0);
      DBDataType.getInstance((-1145), "");
      TableContainer tableContainer0 = new TableContainer("toradians(doublef", dBSchema0);
      tableContainer0.getTable("//");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("CduD-X>CJ&|");
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType dBDataType0 = DBDataType.getInstance((-1145), "//");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("toradians(doublef", defaultDBTable0, dBDataType0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("select into_/6");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DBDataType.getInstance((-569212810), "Q@ b");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("X,@21H\"=nZP'", (DBSchema) null);
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "X,@21H\"=nZP'";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("X,@21H\"=nZP'", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (X,@21H\"=nZP') REFERENCES X,@21H\"=nZP'(X,@21H\"=nZP')", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      genericDescriptorList0.clear();
      genericDescriptorList0.add((Object) tableContainer0);
      genericDescriptorList0.add((Object) null);
      SQLUtil.ownerDotComponent(tableContainer0);
      SQLUtil.typeAndName(tableContainer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CHECK ");
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      dBPrimaryKeyConstraint0.toString();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.databene.jdbacl.model.TableContainer cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = SQLUtil.normalize("P2k ]=\" TkO3y{?GH", true);
      assertEquals(" P2k ] = \" TkO3y{?GH\"", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(0, "mx0Y@!");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[8];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DBCatalog dBCatalog0 = new DBCatalog("");
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      defaultDBColumn0.setVersionColumn(false);
      dBColumnArray0[6] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[7] = (DBColumn) defaultDBColumn0;
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      String string0 = SQLUtil.renderColumnNames(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.normalize("*/", true);
      Boolean boolean0 = new Boolean("org.apache.derby.impl.sql.compile.QueryTreeNode");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "execcannot retrieve the id of a named savepoint.";
      SQLUtil.removeComments("execcannot retrieve the id of a named savepoint.");
      SQLUtil.renderValue("execcannot retrieve the id of a named savepoint.");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "execcannot retrieve the id of a named savepoint.";
      stringArray0[1] = "execcannot retrieve the id of a named savepoint.";
      stringArray0[2] = "'execcannot retrieve the id of a named savepoint.'";
      stringArray0[3] = "execcannot retrieve the id of a named savepoint.";
      stringArray0[4] = "execcannot retrieve the id of a named savepoint.";
      stringArray0[5] = "'execcannot retrieve the id of a named savepoint.'";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "execcannot retrieve the id of a named savepoint.";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = SQLUtil.normalize("`E|6!)#C}u5?x>A", false);
      assertEquals("` E |  6 !) # C } u5 ? x > A", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = Boolean.TRUE;
      DBDataType dBDataType0 = DBDataType.getInstance(889, " REFERENCES ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" REFERENCES ", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals(" REFERENCES   REFERENCES  NULL", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "*/";
      String string1 = "org.apache.derby.impl.sql.compile.QueryTreeNode";
      Boolean boolean0 = new Boolean("org.apache.derby.impl.sql.compile.QueryTreeNode");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = SQLUtil.normalize("*ImwIx32;G|", false);
      assertEquals("* ImwIx32 ; G |", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = SQLUtil.normalize("-kP|B", true);
      assertEquals("- kP | B", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SQLUtil.normalize("", false);
      Boolean boolean1 = new Boolean("iT[lQ>3Z%");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "eU_\"EFA=:65CtBz";
      stringArray0[5] = "eU_\"EFA=:65CtBz";
      stringArray0[6] = "eU_\"EFA=:65CtBz";
      stringArray0[7] = null;
      String string0 = SQLUtil.renderColumnListWithTableName("eU_\"EFA=:65CtBz", stringArray0);
      assertEquals("eU_\"EFA=:65CtBz.null, eU_\"EFA=:65CtBz.null, eU_\"EFA=:65CtBz.null, eU_\"EFA=:65CtBz.null, eU_\"EFA=:65CtBz.eU_\"EFA=:65CtBz, eU_\"EFA=:65CtBz.eU_\"EFA=:65CtBz, eU_\"EFA=:65CtBz.eU_\"EFA=:65CtBz, eU_\"EFA=:65CtBz.null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("eU_\"EFA=:65CtBz", (DBSchema) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "F,s)fxBn0}c", false, stringArray0);
      dBPrimaryKeyConstraint0.setName((String) null);
      String string1 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("", string1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      String string0 = "mu/}";
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      DBSchema dBSchema0 = new DBSchema((String) null);
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join((String) null, (String) null, stringArray0, (String) null, (String) null, stringArray0);
      assertEquals("null as null on ", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "cannot retri";
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.join("cannot retri", "cannot retri", (String[]) null, "cannot retri", "cannot retri", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "-kP|B";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("-kP|B", false, "alter tablecreatv table", "rename");
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK rename", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(524288, "qxefS6<%R:>y|G/2");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("qxefS6<%R:>y|G/2");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("qxefS6<%R:>y|G/2", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("qxefS6<%R:>y|G/2", string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "qxefS6<%R:>y|G/2";
      stringArray0[1] = ".";
      stringArray0[2] = "qxefS6<%R:>y|G/2";
      stringArray0[3] = "7qse1";
      stringArray0[4] = "qxefS6<%R:>y|G/2";
      stringArray0[5] = "qxefS6<%R:>y|G/2";
      stringArray0[6] = "qxefS6<%R:>y|G/2";
      stringArray0[7] = "qxefS6<%R:>y|G/2";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "qxefS6<%R:>y|G/2", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT qxefS6<%R:>y|G/2 UNIQUE (qxefS6<%R:>y|G/2, ., qxefS6<%R:>y|G/2, 7qse1, qxefS6<%R:>y|G/2, qxefS6<%R:>y|G/2, qxefS6<%R:>y|G/2, qxefS6<%R:>y|G/2)", string1);
      
      String string2 = SQLUtil.normalize("qxefS6<%R:>y|G/2", true);
      assertEquals("qxefS6 < % R : > y | G / 2", string2);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin((String) null, (String[]) null, "w~x&h", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DBDataType.getInstance(0, "mx0Y@!");
      DBCatalog dBCatalog0 = new DBCatalog("mx0Y@!");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, (String) null, "mx0Y@!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "z\"v6o.");
      SQLUtil.addOptionalCondition("z\"v6o.", stringBuilder0);
      assertEquals("z\"v6o. or z\"v6o.", stringBuilder0.toString());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 0, "");
      StringBuilder stringBuilder0 = new StringBuilder(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/ZwG!fP");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("/ZwG!fP", stringBuilder0);
      stringBuilder1.deleteCharAt(0);
      assertEquals("ZwG!fP", stringBuilder1.toString());
      
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = SQLUtil.normalize("/-", false);
      assertEquals("/ -", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("execute");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = SQLUtil.mutatesStructure("call");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("pX(t'l", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(0, "mx0Y@!");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("pX(t'l", defaultDBTable0, dBDataType0);
      DBCatalog dBCatalog0 = new DBCatalog("");
      dBSchema0.setCatalog(dBCatalog0);
      defaultDBColumn0.setVersionColumn(false);
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      String string0 = SQLUtil.renderColumnNames(list0);
      assertEquals("pX(t'l", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ArrayList<DBColumn> arrayList0 = new ConstraintDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition((String) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("xpX(t'>l");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: xpX(t'>l
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "cannot retri";
      String[] stringArray0 = null;
      String string1 = "\\^pb-r6sL*4lc<";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("^pb-r6sL*4lc<", (String[]) null, "^pb-r6sL*4lc<", "cannot retri", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.normalize("B[o*/?lxXMjpE|", false);
      String[] stringArray0 = new String[8];
      stringArray0[1] = "unknownLength";
      stringArray0[3] = "Cannot retrieve the id of a named savepoint.";
      stringArray0[4] = "NC/]H9vx;2Y3";
      stringArray0[6] = "unknownLength";
      stringArray0[7] = "Cannot retrieve the id of a named savepoint.";
      SQLUtil.join("NC/]H9vx;2Y3", "NC/]H9vx;2Y3", stringArray0, "Z", "", stringArray0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("unknownLength", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFile mockFile0 = new MockFile("NC/]H9vx;2Y3");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "unknownLength");
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, printWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SQLUtil.isDML("updateNClob(int, Reader)");
      StringBuilder stringBuilder0 = new StringBuilder();
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("updateo}");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Integer.getInteger("Cannot retriee th id of  named savepoint.", 689);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Cannot retriee th id of  named savepoint.");
      DBDataType dBDataType0 = DBDataType.getInstance(689, "Cannot retriee th id of  named savepoint.");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = new Integer(689);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Cannot retriee th id of  named savepoint.", defaultDBTable0, dBDataType0, integer0, integer1);
      defaultDBColumn0.toString();
      DBCatalog dBCatalog0 = new DBCatalog("Cannot retriee th id of  named savepoint. : CANNOT RETRIEE TH ID OF  NAMED SAVEPOINT.(3,689)");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("truncate", "truncate", (VersionNumber) null);
      // Undeclared exception!
      try { 
        defaultDatabase0.getSchema("0f6 R#9-");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'truncate'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("truc\te", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("//");
      String[] stringArray0 = new String[1];
      stringArray0[0] = " h;";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "alter materialized view", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table '//' has no foreign key with the columns ( h;)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = SQLUtil.normalize("hwu! gw(}sz:pyqc]x,", false);
      assertEquals("hwu ! gw (} sz : pyqc ] x,", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("*6'", (DBSchema) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*6'";
      stringArray0[1] = "*6'";
      stringArray0[2] = "*6'";
      stringArray0[3] = "*6'";
      stringArray0[4] = "*6'";
      stringArray0[5] = "selectselect intocannot retrieve the id of a named savepoint.";
      stringArray0[6] = "*6'";
      stringArray0[7] = "*6'";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "*6'", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT *6' ", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("pX(t'l", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(0, "mx0Y@!");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("pX(t'l", defaultDBTable0, dBDataType0);
      DBCatalog dBCatalog0 = new DBCatalog("");
      dBSchema0.setCatalog(dBCatalog0);
      boolean boolean0 = false;
      defaultDBColumn0.setVersionColumn(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "FOREIGN KEY ";
      stringArray0[1] = "mx0Y@!";
      stringArray0[2] = "FOREIGN KEY ";
      stringArray0[3] = "(B\"Lo";
      stringArray0[4] = "pX(t'l";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SQLUtil.join("FOREIGN KEY ", "1/\"", stringArray0, "FOREIGN KEY ", "", stringArray0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("(B\"Lo", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("//");
      SQLUtil.isDDL("drop materialized viewtoradians(doublef");
      StringBuilder stringBuilder0 = new StringBuilder("toRadians(doubleF");
      assertEquals("toRadians(doubleF", stringBuilder0.toString());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("//");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.substituteMarkers("", "select into", dBSchema0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("sr~p");
      assertNull(boolean0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select intogeletecreate u ique inde$s:t` g$2px");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter tableupdategeletecreate unique indexs:t` g$2px");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter sessioncreate unique index");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = "lADuCSRcOs)v6[;cmC";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("lADuCSRcOs)v6[;cmC");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "QRoh\"", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("$]fxF1%<,Si:H8:S");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      StringBuffer stringBuffer0 = new StringBuffer();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("QRoh\"");
      stringBuffer0.append('8');
      defaultDBTable0.equals(jMXPrincipal0);
      StringBuilder stringBuilder2 = stringBuilder1.append(stringBuffer0);
      // Undeclared exception!
      try { 
        stringBuilder2.insert((-2857), true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2857
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("//");
      String[] stringArray0 = new String[15];
      System.setCurrentTimeMillis(0L);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "//", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("//");
      StringBuilder stringBuilder1 = stringBuilder0.append(1424);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1);
      assertEquals("//1424CONSTRAINT // ", stringBuilder1.toString());
      assertEquals("//1424CONSTRAINT // ", stringBuilder0.toString());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("lADuCSRcOs)v6[;cmC");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "lADuCSRcOs)v6[;cmC", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("$]fxF1%<,Si:H8:S");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      StringBuffer stringBuffer0 = new StringBuffer();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String string0 = SQLUtil.removeComments("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Z(K3)Di+6j.";
      stringArray0[1] = "Z(K3)Di+6j.";
      stringArray0[2] = "Z(K3)Di+6j.";
      stringArray0[3] = "Z(K3)Di+6j.";
      stringArray0[4] = "Z(K3)Di+6j.";
      stringArray0[5] = "Z(K3)Di+6j.";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("Z(K3)Di+6j.", stringArray0, (String) null, "Idv$[JoL1^A", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join("-kP|B", "call", stringArray0, "call", "-kP|B", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[0];
      String string0 = SQLUtil.leftJoin("pA\"1c;G|g3p5$\"J05$", stringArray0, "pA\"1c;G|g3p5$\"J05$", "pA\"1c;G|g3p5$\"J05$", stringArray1);
      assertEquals("left join pA\"1c;G|g3p5$\"J05$ as pA\"1c;G|g3p5$\"J05$ on ", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      SQLUtil.normalize("naX7b2]x.o&", false);
      Boolean boolean0 = new Boolean("naX7b2 ] x.o &");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5748027648585858
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      genericDescriptorList0.add((Object) tableContainer0);
      genericDescriptorList0.add((Object) null);
      tableContainer0.getTables(true, (List<DBTable>) genericDescriptorList0);
      SQLUtil.ownerDotComponent(tableContainer0);
      SQLUtil.typeAndName(tableContainer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("CHECK ");
      boolean boolean0 = true;
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "($*,Xh/2@'o9?", false, stringArray0);
      SQLUtil.ukSpec(dBPrimaryKeyConstraint1, nameSpec0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.typeAndName(dBPrimaryKeyConstraint0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      jdbcClob jdbcClob0 = new jdbcClob("*fUy");
      // Undeclared exception!
      try { 
        jdbcClob0.setCharacterStream(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.Trace", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "callkkr{afxws@?@t38=";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "il<'zrh", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      SQLUtil.addOptionalCondition("update", stringBuilder0);
      assertEquals("update", stringBuilder0.toString());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("delete");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "c-+.>r4K$GG*21bA";
      stringArray0[1] = "c-+.>r4K$GG*21bA";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "c-+.>r4K$GG*21bA";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Boolean.valueOf("select intogeletecreate u ique inde$s:t` g$2px");
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("index (1..", stringArray0, "index (1..", "deleteh1:", stringArray0);
      assertEquals("index (1.. as deleteh1: on ", string0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.leftJoin("drop table", stringArray0, "rename", "#d#WY", stringArray0);
      assertEquals("left join rename as #d#WY on ", string0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.2603967218250913
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = SQLUtil.normalize("ecG", true);
      assertEquals("ecG", string0);
      
      DBSchema dBSchema0 = new DBSchema("42Z70");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("updategeletecreate u ique inde$s:t` g$2px", dBSchema0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("42Z70", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT 42Z70 FOREIGN KEY () REFERENCES updategeletecreate u ique inde$s:t` g$2px()", string1);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Character character0 = Character.valueOf('6');
      Character.isSurrogate('u');
      SQLUtil.renderValue(character0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)58;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("7<yj.?WDQS<DDM]l");
      StringBuilder stringBuilder0 = new StringBuilder("ISO8859_2");
      assertEquals("ISO8859_2", stringBuilder0.toString());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = SQLUtil.normalize("!^W1ilW'n", true);
      assertEquals("! ^ W1ilW 'n'", string0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("+P6qL7Iisb7:YZJ3{R", "v", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog("+P6qL7Iisb7:YZJ3{R", defaultDatabase0);
      dBCatalog0.getTable("+P6qL7Iisb7:YZJ3{R", false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = " <`>=uWepM8S";
      stringArray0[1] = "v";
      stringArray0[2] = "+P6qL7Iisb7:YZJ3{R";
      stringArray0[3] = "v";
      stringArray0[4] = "+P6qL7Iisb7:YZJ3{R";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("cannot retr");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(889, " REFERENCES ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" REFERENCES ", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("(yk?:5`6jv_8|", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join("-kP|B", "<JkXtam\"*J", stringArray0, "<JkXtam\"*J", "-kP|B", stringArray0);
      assertEquals("-kP|B join <JkXtam\"*J as -kP|B on <JkXtam\"*J.null = -kP|B.null and <JkXtam\"*J.null = -kP|B.null", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = SQLUtil.join("-kP|B", "-kP|B", stringArray0, stringArray0[1], stringArray0[1], stringArray0);
      assertEquals("-kP|B join null as null on -kP|B.null = null.null and -kP|B.null = null.null", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = SQLUtil.join("UNIQUE ", "tAGIc95+szR@u", stringArray0, "UNIQUE ", "UNIQUE ", stringArray0);
      assertEquals("UNIQUE  join UNIQUE  as UNIQUE  on tAGIc95+szR@u.null = UNIQUE .null and tAGIc95+szR@u.null = UNIQUE .null and tAGIc95+szR@u.null = UNIQUE .null and tAGIc95+szR@u.null = UNIQUE .null", string0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("(yk?:5`6jv_8|", (String[]) null, "^pb-sL*4lc<", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("alter table", "org.h2.tools.TriggerAdapter", "org.h2.tools.TriggerAdapter");
      assertEquals("alter table", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("\">:_Is';XtAZ");
      String string0 = SQLUtil.renderValue(jMXPrincipal0);
      assertEquals("JMXPrincipal:  \">:_Is';XtAZ", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("lADuCSRcOs)v6[;cmC");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "QRoh\"", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("$]fxF1%<,Si:H8:S");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      StringBuffer stringBuffer0 = new StringBuffer();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("Cannot retrieve the id of a named savepoint.");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("drop materialized viewinto");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("t9Ai+qtn2zNY=7!t", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Boolean.valueOf("select intogeletecreate u ique inde$s:t` g$2px");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "select intogeletecreate u ique inde$s:t` g$2px");
      DBDataType dBDataType0 = DBDataType.getInstance((-358092758), "select intogeletecreate u ique inde$s:t` g$2px");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("!B_", (DBTable) null, dBDataType0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("select intogeletecreate u ique inde$s:t` g$2pxSELECT INTOGELETECREATE U IQUE INDE$S:T` G$2PX", stringBuilder0.toString());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(34, "G&!+#");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("E", defaultDBTable0, dBDataType0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "E");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("EG&!+#(1)", stringBuilder0.toString());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(894, " REFERENCES ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" REFERENCES ", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnTypeWithSize(dBColumnArray0[1]);
      assertEquals(" REFERENCES ", string0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("wPw");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("annot retr");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("@i");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "-kP|B";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[3];
      stringArray1[0] = null;
      stringArray1[1] = "alter indexa7";
      stringArray1[2] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray1, defaultDBTable0, stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = stringBuilder0.append(1756L);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(40, (CharSequence) stringBuilder0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 40
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("lADuCSRcOs)v6[;cmC");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "lADuCSRcOs)v6[;cmC", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("$]fxF1%<,Si:H8:S");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      StringBuffer stringBuffer0 = new StringBuffer();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("kW=}vCD%^gcMGl?", stringBuilder0);
      assertEquals("kW=}vCD%^gcMGl?", stringBuilder0.toString());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.9197466995099146
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.normalize("B[m*/?lxXMjpE|", false);
      assertEquals("B [ m */ ? lxXMjpE |", string0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("unknownLength");
      StringBuilder stringBuilder0 = new StringBuilder("ISO8859_2");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "B[m*/?lxXMjpE|";
      stringArray0[1] = "B [ m */ ? lxXMjpE |";
      stringArray0[2] = "4rV#^}5l+jQsq7";
      stringArray0[3] = "B [ m */ ? lxXMjpE |";
      stringArray0[4] = "B [ m */ ? lxXMjpE |";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B [ m */ ? lxXMjpE |");
      stringArray0[5] = "B [ m */ ? lxXMjpE |";
      stringArray0[6] = "B[m*/?lxXMjpE|";
      stringArray0[7] = "B[m*/?lxXMjpE|";
      stringArray0[8] = "B[m*/?lxXMjpE|";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "B [ m */ ? lxXMjpE |", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"B [ m */ ? lxXMjpE |\" PRIMARY KEY (B[m*/?lxXMjpE|, B [ m */ ? lxXMjpE |, 4rV#^}5l+jQsq7, B [ m */ ? lxXMjpE |, B [ m */ ? lxXMjpE |, B [ m */ ? lxXMjpE |, B[m*/?lxXMjpE|, B[m*/?lxXMjpE|, B[m*/?lxXMjpE|)", string1);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = SQLUtil.renderColumnNames((String[]) null);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Random.setNextRandom(1636);
      VersionNumber versionNumber0 = VersionNumber.valueOf("9vfR4KD0usqst,0");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("9vfR4KD0usqst,0", "9vfR4KD0usqst,0", versionNumber0);
      SQLUtil.typeAndName(defaultDatabase0);
      String string0 = "`'60*zdZc65@{f:";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("DATE");
      // Undeclared exception!
      try { 
        DBDataType.getInstance(389, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getIndex("alter tableet_(b,+");
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = "XSDAC.S";
      DBCatalog dBCatalog0 = new DBCatalog();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }
}
