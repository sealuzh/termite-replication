/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 00:51:36 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("D20E$ICsm*UY", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write(37);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      SimpleNode simpleNode1 = new SimpleNode((-2028325666));
      simpleNode1.jjtAddChild(simpleNode0, 37);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      assertEquals(38, simpleNode1.jjtGetNumChildren());
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(62);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild(simpleNode0, 47);
      SimpleNode simpleNode1 = new SimpleNode(47);
      simpleNode1.jjtAddChild((Node) null, 47);
      simpleNode0.jjtGetChild(47);
      assertEquals(48, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1089));
      SimpleNode simpleNode1 = new SimpleNode(48);
      StringWriter stringWriter0 = new StringWriter(48);
      SimpleNode simpleNode2 = new SimpleNode(48);
      simpleNode2.setIdentifier("D");
      simpleNode1.dump("AllocationExpression", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode2, 48);
      simpleNode2.setIdentifier(">>");
      simpleNode2.dump("AllocationExpression", stringWriter0);
      assertEquals("<RelationalExpression>\n  <identifier>D</identifier>\n  <identifier>*rshft</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("TN-;RLc!yPJ->qP");
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<ExclusiveOrExpression>\n  <identifier>TN-;RLc!yPJ->qP</identifier>\n</ExclusiveOrExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(37);
      simpleNode1.jjtAddChild(simpleNode0, 37);
      simpleNode0.toString();
      simpleNode1.jjtGetChild(37);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      SystemInUtil.addInputLine("qk ,N");
      simpleNode0.identifiers = null;
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("}");
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<RelationalExpression>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter(27);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-110);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-110), 0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      simpleNode0.parser = javaParser0;
      simpleNode0.setIdentifier(">=");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      stringWriter0.write(27);
      simpleNode0.setIdentifier("D");
      simpleNode0.dump("x", stringWriter0);
      Node node1 = simpleNode0.jjtGetParent();
      assertNull(node1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter(27);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append(')');
      stringWriter2.write(27);
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("<", stringWriter0);
      assertEquals(")\u001B<Initializer>\n</Initializer>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("I`T_", stringWriter0);
      assertEquals("<CastLookahead>\n</CastLookahead>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.009656341980306
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("H");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('b');
      simpleNode0.setIdentifier(":F0eZYXmn5Q B(]g? k");
      simpleNode0.setIdentifier("<=");
      stringWriter0.write("+");
      stringWriter1.append('i');
      simpleNode0.dump(":F0eZYXmn5Q B(]g? k", stringWriter1);
      int int0 = (-728);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-728));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(48);
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("UHG$3t+Z0FD<N#o6", stringWriter0);
      assertEquals("0<RelationalExpression>\n  <identifier>*lshft</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      SimpleNode simpleNode1 = new SimpleNode(44);
      simpleNode0.jjtAddChild(simpleNode1, 1);
      simpleNode0.jjtAddChild(simpleNode1, 4005);
      assertEquals(4006, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(40);
      simpleNode0.jjtAddChild((Node) null, 10);
      simpleNode0.jjtAddChild((Node) null, 40);
      assertEquals(41, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(32);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(simpleNode0, 32);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(33, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 88;
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 88);
      SimpleNode simpleNode1 = new SimpleNode(88);
      simpleNode1.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5045749997294995
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 56);
      StringWriter stringWriter0 = new StringWriter(88);
      simpleNode0.dump("}", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier("*4");
      simpleNode0.dump("*4", stringWriter0);
      int int0 = 2562;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2562);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2562
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.jjtAddChild(simpleNode0, 48);
      // Undeclared exception!
      try { 
        simpleNode0.dump("extends", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      simpleNode0.jjtAddChild((Node) null, 56);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-3352));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3352
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.49783549783549785
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 88;
      SimpleNode simpleNode0 = new SimpleNode(88);
      simpleNode0.jjtAddChild(simpleNode0, 88);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("r-D/=n{#|[G1D%^", stringWriter0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.958541141784395
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("+");
      simpleNode0.dump("+", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(37);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 37
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-124249917));
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      JavaParser javaParser0 = new JavaParser(">>");
      simpleNode0.parser = javaParser0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(nodeArray0[1], (-124249917));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -124249917
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(88);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-339));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.009656341980306
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("~");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*gt", stringWriter0);
      simpleNode0.dump("~", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 48);
      simpleNode0.jjtGetChild(48);
      assertEquals(49, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.7957596077518445
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("H");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode((-1725115035));
      stringWriter0.write((-1725115035));
      simpleNode1.dump("Uo}EOG2;=(BNCaCn]", stringWriter0);
      stringWriter0.close();
      stringWriter0.append('2');
      simpleNode0.setIdentifier("AS4x");
      simpleNode0.dump("</", stringWriter0);
      assertEquals("\uD5652<RelationalExpression>\n  <identifier>H</identifier>\n  <identifier>AS4x</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8001573041913385
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(37);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.setIdentifier("+");
      JavaParser javaParser0 = new JavaParser(">Z");
      simpleNode0.parser = javaParser0;
      simpleNode0.dump("+", stringWriter0);
      assertEquals("%<NameList>\n  <identifier>+</identifier>\n</NameList>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("NameList : +", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(302);
      // Undeclared exception!
      try { 
        simpleNode0.toString("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 302
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9426681259113789
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(37);
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.children = nodeArray0;
      simpleNode0.toString((String) null);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "nullNameList", 37, 37);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 4096);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 2154;
      SimpleNode simpleNode0 = new SimpleNode(2154);
      simpleNode0.jjtClose();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2154);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2154
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("WildcardBounds", stringWriter0);
      assertEquals("<ExclusiveOrExpression>\n  <identifier>*amp</identifier>\n</ExclusiveOrExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 27);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<Initializer></Initializer>\n", stringWriter0.toString());
      assertEquals(28, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("+", stringWriter0);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-124249917));
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, (Writer) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -124249917
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(56);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump("n", stringWriter0);
      assertEquals("<CastLookahead>\n  <identifier>*amp</identifier>\n</CastLookahead>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*gt");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte) (-58);
      byteArray0[6] = (byte)53;
      byteArray0[7] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 418);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.parent = (Node) simpleNode1;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
      
      String string0 = simpleNode0.toString();
      assertEquals("EnumConstant", string0);
      
      StringWriter stringWriter0 = new StringWriter(189);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*gt");
      simpleNode1.dump(":fF>A\"E$i=l?F797B-", stringWriter1);
      Node node0 = simpleNode0.jjtGetParent();
      assertEquals(0, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 48;
      SimpleNode simpleNode0 = new SimpleNode(48);
      SimpleNode simpleNode1 = new SimpleNode(48);
      simpleNode0.jjtSetParent(simpleNode1);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.rootNode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.958541141784395
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(37);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.setIdentifier("+");
      simpleNode0.dump("+", stringWriter0);
      assertEquals("%<NameList>\n  <identifier>+</identifier>\n</NameList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.958541141784395
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(37);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("+");
      simpleNode0.dump("+", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9364691075366706
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      JavaParser javaParser0 = new JavaParser(">");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 44);
      simpleNode1.jjtAddChild((Node) null, 44);
      ArrayList<String> arrayList1 = simpleNode1.identifiers;
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("C{", stringWriter0);
      simpleNode1.dump("rRgJwFE`Q dm34!", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode((-2021317172));
      simpleNode0.jjtAddChild(simpleNode2, 1447);
      assertEquals(1448, simpleNode0.jjtGetNumChildren());
  }
}
