/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 00:50:09 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9830751479564994
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<xSHMj9k^cn*sL");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("<x", token0.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("H", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y.4^ZAQ\u0003+tr*7o;{FX");
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("<xSHMj9k^cn*sL");
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("Y", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(31, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer2.relationalOperator();
      assertEquals(7, token7.getTokenType());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("x", token8.getTokenText());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("ZAQ\u0003+tr*7o;{FX", token9.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6936784780454395
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/P#tt->Dl1V<sN5");
      xPathLexer0.setXPath("_3");
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("/P#tt->Dl1V<sN5");
      xPathLexer1.div();
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer1.consume((-2316));
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0624112863955477
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<xSHMj9k^cn*sL");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.equals();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("Ra>8<lVRaxt");
      xPathLexer1.setXPath("");
      xPathLexer1.nextToken();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8904325862312064
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1319));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1367948861763444
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.equals();
      xPathLexer0.comma();
      xPathLexer0.setXPath("Y.4^ZAQ\u0003+tr*7o;{FX");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("A-6t8Ke");
      xPathLexer1.relationalOperator();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.893390768293866
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-M0.1D4;^KC_u~?chK");
      Token token0 = xPathLexer0.at();
      assertEquals("-", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("0", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.not();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("D", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("4", token5.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.576953979490781
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'0\"_q3e 3");
      xPathLexer0.setXPath("i4njdh;");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("i4njdh", token1.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("znGR>LJUMBK]Gm~a");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("z", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("n", token2.getTokenText());
      
      xPathLexer0.getPreviousToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("GR", token3.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("r");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1367317482199097
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("q?4I/jV9PsTD+A|");
      xPathLexer1.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.setXPath("Ra>8<lVRaxt");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Ra", token3.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer2.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.leftBracket();
      assertEquals(3, token6.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.285586629721882
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{P0");
      xPathLexer0.setXPath("{P0");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.983594313829996
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|W*O};r@1");
      Token token0 = xPathLexer0.plus();
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("O", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("\"PFgY8,?9Y{47G");
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5@");
      xPathLexer0.setXPath("5@");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("5", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token1 = xPathLexer0.minus();
      assertEquals("c", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("o", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1021915356225063
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mYe*>E/wdUj");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.798311588720541
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!@*O");
      xPathLexer0.setXPath(".!@*O");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("@", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.575309310274877
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("znGR>LJUMBK]Gm~a");
      xPathLexer0.mod();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("Y.4^ZAQ\u0003+tr*7o;{FX");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer1.number();
      assertEquals(31, token1.getTokenType());
      assertEquals(".4", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("^ZAQ\u0003+tr*7o;{FX", token2.getTokenText());
      
      Token token3 = xPathLexer1.dots();
      assertEquals("^", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.892518928712349
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.consume((-473));
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1359517395531467
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+r[x=");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.894901260822323
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";2pga} O");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("ga", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("}", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("O", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.099633990865473
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("dNEp=|%Y:,+");
      xPathLexer0.and();
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8398570246367767
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("dp:i~,2NqQ");
      xPathLexer0.or();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(2);
      assertEquals('p', char0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("dp:i~,2NqQ");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("dp", token1.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.102944405940594
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("dp:i~,2NqQ");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8921481463615892
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g,,!.6ZeQR^S<Lr(+S");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("g", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
      
      xPathLexer0.getPreviousToken();
      Token token3 = xPathLexer0.dots();
      assertEquals(14, token3.getTokenType());
      assertEquals("!.", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("6", token4.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5758444193776775
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sd&");
      xPathLexer0.setXPath("sd&");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8938302321479643
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.setXPath("Ra>8<lVRaxt");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Ra", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1376567693911688
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tT6IQ:&!_");
      xPathLexer0.plus();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.setXPath("KE8[o");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("tT6IQ:&!_");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("KE8[o");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.leftBracket();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.577049197182228
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("F}9eFiA1<$");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("F}9eFiA1<$");
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifier();
      assertEquals("F", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.695263793022494
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<xSHMj9k^cn*sL");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("<x", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.setXPath("Q_D8[K");
      XPathLexer xPathLexer1 = new XPathLexer("uE,");
      xPathLexer1.and();
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("uE", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.div();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Q_D8", token3.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("UV,Vay(+ig5u;");
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("UV", token0.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0245033395864347
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/P#tt->Dl1V<sN5");
      xPathLexer0.setXPath("_3");
      xPathLexer0.div();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("/P#tt->Dl1V<sN5");
      xPathLexer1.div();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(11, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      xPathLexer1.div();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("P", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("#tt->Dl1V<sN5", token5.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6940799232481694
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("0Dc+Y");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("0Dc+Y");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.062385254897435
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".bJG}XYm$T");
      xPathLexer0.setXPath("j|Pk");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("k", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer1.not();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7994795029319337
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!@*O");
      xPathLexer0.setXPath(".!@*O");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("hp*u-w>=^T=y v_");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer2.div();
      Token token2 = xPathLexer2.rightParen();
      assertEquals("*", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.692637421372917
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("f#26|4e");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("f", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.795338716182451
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(2, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("8^ YuLi%KGeV)=");
      xPathLexer0.and();
      xPathLexer1.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("8m4mcn");
      xPathLexer1.nextToken();
      xPathLexer1.setXPath("");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.796702740052869
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r");
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.literal();
      xPathLexer0.consume((-1170));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.799760234236983
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";2pga} O");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.plus();
      assertEquals(";", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.div();
      String string0 = token2.toString();
      assertEquals("[ (23) (p)", string0);
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("ga} O", token3.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.062988573147812
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z2bgob,A");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("Z", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.endPosition();
      Token token1 = xPathLexer0.comma();
      assertEquals("b", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
      
      xPathLexer1.setXPath("7XtzJA$J]!~}nA");
      xPathLexer1.or();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("7", token4.getTokenText());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifier();
      Token token6 = xPathLexer3.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("A", token7.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!@*O");
      xPathLexer0.setXPath("B{`] xPMW-,q{YH");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5755655726875877
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("znGR>LJUMBK]Gm~a");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y.4^ZAQ\u0003+tr*7o;{FX");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("Y.4", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7163826715971322
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("F}9eFiA1<$");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("F", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifier();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      char char0 = xPathLexer0.LA(1421);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XKL");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6950023551139974
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<xSHMj9k^cn*sL");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("<xSHMj9k^cn*sL");
      Token token1 = xPathLexer2.leftBracket();
      assertEquals("<", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("xSHMj9k", token2.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.798881389290342
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tT6IQ:&!_");
      Token token0 = xPathLexer0.plus();
      assertEquals("t", token0.getTokenText());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Q:&!_", token4.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?/>!");
      xPathLexer0.setXPath("E/rd^ 8_<_{#d+u");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("E", token1.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.692720072831715
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C~KB2~Mtd");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("C", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.796560996608503
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yj[eTQXDD6z");
      xPathLexer0.whitespace();
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-1572));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")wcn\"5M#~ ");
      xPathLexer0.setXPath("+\"Y#");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("+\"Y#");
      assertEquals("+\"Y#", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2838229612915466
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";2pga} O");
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6957048204973137
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("'S@]<E,nr");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.dollar();
      assertEquals("(", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("", token5.getTokenText());
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.5755655726875877
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")wcn\"5M#~ ");
      xPathLexer0.setXPath("+\"Y#");
      xPathLexer0.and();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("+", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.setXPath("+\"Y#");
      char char0 = xPathLexer0.LA(55);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.796837966557264
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer("2Fl%tiPq:2'+|K<");
      xPathLexer1.not();
      xPathLexer0.comma();
      xPathLexer0.setXPath("");
      xPathLexer1.consume((-1471));
      xPathLexer0.setXPath(".bJG}XYm$T");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer2.not();
      xPathLexer1.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MfmO");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("MfmO", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OZ;GxB[)cUr8");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("OZ", token1.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.694334403925815
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("]T");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("]", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.setXPath("]T");
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("T", token4.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7993592865424324
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tT6IQ:&!_");
      xPathLexer0.plus();
      xPathLexer0.not();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("IQ:&!_", token2.getTokenText());
      
      xPathLexer0.not();
      xPathLexer0.and();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("Q", token3.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.7980805884895408
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DZM");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("ZM", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v'9s}.s$bW:h%C<n");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6933486083439715
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~ (");
      xPathLexer0.setXPath(">3\"k+*/VJc+5C,b4");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("3", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.876140508052913
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.setXPath("Ra>8<lVRaxt");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Ra", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(">", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.dollar();
      assertEquals("8", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("<", token5.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("lVRaxt", token6.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">lV");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.nextToken();
      xPathLexer1.setPreviousToken(token0);
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer1.setXPath("");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.576335951617724
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("'r~o_;A:/y>(\r)gaOo");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("X.8=cvgE]`rpyu");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("X.8", token1.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".F@{0");
      xPathLexer0.setXPath("amXZ)(?akOSVt<'");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("|?");
      Token token0 = xPathLexer3.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.8954322186111785
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">lV");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("BEA|'2hGi31P");
      xPathLexer0.and();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer1.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("B", token3.getTokenText());
      
      xPathLexer1.or();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("V", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8757170809882249
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.equals();
      xPathLexer0.comma();
      xPathLexer0.setXPath("Ra>8<lVRaxt");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.573112427755785
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!@*O");
      xPathLexer0.setXPath("@e_'2#k4T8r/TrpN$");
      xPathLexer0.and();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("*=Dlp.<mT");
      xPathLexer1.div();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.576040181135618
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("znGR>LJUMBK]Gm~a");
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("znGR", token0.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ol=TZhe6");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      assertEquals("Ol", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.0978100054573563
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/P#tt->Dl1V<sN5");
      xPathLexer0.setXPath("/P#tt->Dl1V<sN5");
      xPathLexer0.setXPath("/P#tt->Dl1V<sN5");
      xPathLexer0.or();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VC7&}=A<6J&/Lt");
      xPathLexer0.setXPath("e;");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("e", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6961539135246566
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".bJG}XYm$T");
      xPathLexer0.setXPath("j|Pk");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("j", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("WcfTQqEQrJ^:wXIBJf");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("WcfTQqEQrJ", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("^", token3.getTokenText());
      
      xPathLexer0.or();
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("Pk", token4.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.577674757227539
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("<Hn_.m~)leZ");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("<Hn_.m~)leZ");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Hn_.m", token2.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.693868872638233
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath(".!@*O");
      XPathLexer xPathLexer1 = new XPathLexer(".!@*O");
      xPathLexer1.and();
      Token token0 = xPathLexer1.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("w@*+:2YZ)D");
      Token token1 = xPathLexer2.nextToken();
      assertEquals("w", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer2.div();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(".", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%?a4~v");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.692637421372917
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(" ", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("[A.");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("[", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8046289777193891
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tT6IQ:&!_");
      Token token0 = xPathLexer0.plus();
      assertEquals("t", token0.getTokenText());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      xPathLexer0.number();
      xPathLexer0.nextToken();
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5754415416798357
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">lV");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("BEA|'2hGi31P");
      xPathLexer0.and();
      xPathLexer1.mod();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("J G");
      xPathLexer1.number();
      xPathLexer2.div();
      xPathLexer2.nextToken();
      xPathLexer2.mod();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("dp:i~,2NqQ");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.7974304538187877
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath(",;k4HtmGp$iISE[(B)");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mYe*>E/wdUj");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("mYe", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5765175650716485
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LGwRA68z\"");
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("LGwRA68z\"");
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("LGwRA68z", token1.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.mod();
      xPathLexer1.or();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.571505033743328
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!39WQ");
      Token token0 = xPathLexer0.plus();
      assertEquals("!", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("39", token1.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("`ic$^#g|aZRH>");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`ic$^#g|aZRH>", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6950786545894383
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tT6IQ:&!_");
      XPathLexer xPathLexer1 = new XPathLexer("tT6IQ:&!_");
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      xPathLexer1.not();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer1.div();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5784630680986225
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals("om.werken.saxpath.Token", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.576551368269431
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath(".kS|:=pY4U^");
      XPathLexer xPathLexer1 = new XPathLexer(";vj|0KIcPm.X'");
      xPathLexer1.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer1.setXPath(".kS|:=pY4U^");
      XPathLexer xPathLexer2 = new XPathLexer("u]K2k");
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer("tB<jpfOVCOYoVN.n:q");
      Token token0 = xPathLexer3.or();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_W:JFT?-kRB#cJ^0>7");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("_W", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.576738838977133
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("-zu~z|ia;K13");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      xPathLexer0.setXPath("-zu~z|ia;K13");
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifier();
      assertEquals("-zu", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.5765175650716485
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("Npsd;$%S}uej`");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("s^P;SnY_aSNo-a");
      xPathLexer1.setXPath("");
      assertEquals("", xPathLexer1.getXPath());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.2845130924164607
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5@");
      xPathLexer0.setXPath("5@");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.setXPath("5@");
      XPathLexer xPathLexer1 = new XPathLexer("5@");
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.6921740722857144
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("dp:i~,2NqQ");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("d", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("p", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.43906083398682
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/P#tt->Dl1V<sN5");
      xPathLexer0.setXPath("_3");
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-24));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.691848233250198
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-M0.1D4;^KC_u~?chK");
      Token token0 = xPathLexer0.plus();
      assertEquals("-", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals("0.1", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("D", token2.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.282325506963904
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9Bv4d;R-");
      xPathLexer0.setXPath("9Bv4d;R-");
      xPathLexer0.and();
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.796560996608503
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mT7ZX[mc&a'h");
      Token token0 = xPathLexer0.plus();
      assertEquals("m", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("Z", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("X", token3.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6936784780454395
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!@*O");
      xPathLexer0.setXPath("7O~]2qS`\u0007,7");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("O", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("~", token2.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8308545846472897
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tT6IQ:&!_");
      Token token0 = xPathLexer0.plus();
      assertEquals("t", token0.getTokenText());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.not();
      assertEquals("", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.plus();
      assertEquals(":", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.nextToken();
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("&", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.8626237139003268
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";2pga} O");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("g", token3.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (5) (;)", string0);
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("a} O", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("a", token5.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("UV,Vay(+ig5u;");
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      xPathLexer1.div();
      xPathLexer1.setXPath("`=[~$w!X+s");
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token1 = xPathLexer0.dots();
      assertEquals("m.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.4441679887765675
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.setXPath("F}9eFiA1<$");
      Token token0 = xPathLexer0.literal();
      assertNotNull(token0);
      
      String string0 = token0.toString();
      assertEquals("[ (27) (}9e)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token2 = xPathLexer0.identifier();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      char char0 = xPathLexer0.LA(1421);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mYe*>E/wdUj");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2826685601371457
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!39WQ");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bM<#u~j,Y~~`1");
      xPathLexer0.setXPath("0a");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.0916288801707994
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".bJG}XYm$T");
      xPathLexer0.setXPath("j|Pk");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("|", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.not();
      assertEquals("P", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("k", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("j|Pk");
      xPathLexer0.setXPath(".bJG}XYm$T");
      token0.toString();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("bJG}XYm$T", token6.getTokenText());
      
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("j", token7.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.204174232109962
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KSjeoj[|n^>");
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.currentPosition();
      xPathLexer1.comma();
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer1.rightParen();
      xPathLexer2.consume((-875));
      // Undeclared exception!
      try { 
        xPathLexer2.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = ") (";
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.693520873632516
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("znGR>LJUMBK]Gm~a");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("nGR", token2.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.835971834475727
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";2pga} O");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      xPathLexer0.not();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
      
      xPathLexer0.equals();
      String string0 = token0.toString();
      assertEquals("[ (5) (;)", string0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("} O", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("}", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.2379679861913795
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q?4I/jV9PsTD+A|");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.consume((-185));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.895163032361212
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_W:JFT?-kRB#cJ^0>7");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("W", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("JFT", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      char char0 = xPathLexer0.LA(10);
      assertEquals('0', char0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      char char0 = xPathLexer0.LA(83);
      assertEquals('\uFFFF', char0);
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('#');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.7991368171319766
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.leftBracket();
      xPathLexer0.getXPath();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.1371846704392286
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      xPathLexer0.consume((-291));
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.796837966557264
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.literal();
      xPathLexer0.consume((-1170));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.2811211713557142
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.whitespace();
      xPathLexer0.LA(100);
      boolean boolean0 = xPathLexer0.isIdentifierChar('#');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.895192570095668
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token5);
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.LA((-1));
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('_');
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.getPreviousToken();
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('\uFFFF');
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.4361062274866856
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.062217117024379
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.consume(418);
      xPathLexer0.consume(418);
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-5130));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$TSf#9D");
      xPathLexer0.consume((-902));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.437138219230752
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$TSf#9D");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.minus();
      assertEquals("$", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.7033603889559878
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.equals();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(" ", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.3557275936511182
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!@*O");
      xPathLexer0.setXPath(".!@*O");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("*O", token4.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.9699149572375498
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_W:JFT?-kRB#cJ^0>7");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("-", token6.getTokenText());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals("k", token7.getTokenText());
      
      Token token8 = xPathLexer0.equals();
      assertEquals("R", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.3127670036479961
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q?4I/jV9PsTD+A|");
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("q", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('q', char0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.6966943546426885
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.getXPath();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.9885229229352284
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<xSHMj9k^cn*sL");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("<x", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token1 = xPathLexer0.not();
      assertEquals("S", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y.4^ZAQ\u0003+tr*7o;{FX");
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("<xSHMj9k^cn*sL");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer1.div();
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("M", token5.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer2.dollar();
      assertEquals("x", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("SHMj9k", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.7029609960332306
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.5700977792733186
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.610554592512646
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$TSf#9D");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5686032737788131
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.number();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(100);
      assertEquals('\uFFFF', char0);
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('K');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.3097809907609932
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q?4I/jV9PsTD+A|");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("?", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.2575223781676184
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("znGR>LJUMBK]Gm~a");
      xPathLexer0.mod();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("Y.4^ZAQ\u0003+tr*7o;{FX");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals("Y", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(".4", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.37313977693904
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tT6IQ:&!_");
      Token token0 = xPathLexer0.plus();
      assertEquals("t", token0.getTokenText());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("6", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer0.number();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(18, token6.getTokenType());
      assertEquals(":", token6.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.7929143761227528
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!@*O");
      xPathLexer0.setXPath(".!@*O");
      xPathLexer0.and();
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(16, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("*", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("O", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.4551919455751563
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.div();
      xPathLexer0.nextToken();
      xPathLexer1.setXPath("");
      xPathLexer1.setXPath("");
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token3 = xPathLexer1.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.7404028179151076
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".!@*O");
      xPathLexer0.setXPath(".!@*O");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.7256201370839892
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.number();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2199));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.3160339970139996
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q?4I/jV9PsTD+A|");
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.034224635124009
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".bJG}XYm$T");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
  }
}
