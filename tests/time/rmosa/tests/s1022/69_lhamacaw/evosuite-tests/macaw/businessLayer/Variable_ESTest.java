/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 09:22:11 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.960581263624467
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1073741822));
      rawVariable0.setCategory("I7Q;W8(aV");
      rawVariable0.createVariableSummary();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "]405tZz{rhM0ud,CX");
      derivedVariable0.removeValueLabel((ValueLabel) null);
      user0.setStatus("I7Q;W8(aV");
      user0.setCity("I7Q;W8(aV");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      Variable.validateFields(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable1.setOntologyTerms(arrayList0);
      rawVariable1.setAvailability(")n.R[JISAt{pw'");
      ontologyTerm0.getDisplayName();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      derivedVariable0.setCoded(true);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      System.setCurrentTimeMillis((-1073741822));
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable0.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("I7Q;W8(aV", rawVariable0.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.5394719326729165
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("5\"|r");
      derivedVariable0.columnStart = null;
      derivedVariable0.setColumnEnd("5\"|r");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("5\"|r", derivedVariable0.getLabel());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.getCleaningDescription();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getAvailability();
      String string0 = derivedVariable2.getAvailability();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setIdentifier((-1151));
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      derivedVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("-1151", derivedVariable0.getDisplayItemIdentifier());
      
      derivedVariable1.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSourceVariable(derivedVariable1);
      derivedVariable2.getCategory();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.setName("a");
      derivedVariable3.setCleaningStatus("variable.name.label");
      User user0 = new User("u#-", ".DSV");
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable3, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument1);
      assertEquals("a", derivedVariable1.getDisplayName());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5861880844262752
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSourceVariable(derivedVariable1);
      derivedVariable2.getCategory();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setAvailability("mCy h:vhcFNh");
      derivedVariable1.setName("a");
      User user0 = new User("u#-", ".DSV");
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable3, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      assertEquals("a", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable2.setCategory("P");
      derivedVariable1.setValueLabels(arrayList0);
      User user0 = new User();
      user0.setUserID("macaw.businessLayer.SupportingDocument");
      User user1 = new User();
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      assertEquals("P", derivedVariable2.getCategory());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Variable.validateFields(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5858878141830566
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("u#-");
      User user0 = new User("macaw.businessLayer.DerivedVariable", (String) null);
      user0.setAddressLine1("");
      derivedVariable1.setQuestionNumber("I");
      User user1 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.getCleaningStatus();
      assertEquals("u#-", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.438556626225264
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "iis7Anf5";
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("iis7Anf5", derivedVariable0.getColumnStart());
      
      rawVariable0.getDisplayName();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setQuestionNumber("/4Jjcn8B");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlternativeVariable();
      assertEquals("/4Jjcn8B", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.setIdentifier((-289576544));
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      assertEquals("-289576544", derivedVariable1.getDisplayItemIdentifier());
      
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
      derivedVariable0.hasSameDisplayName(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      String string0 = derivedVariable0.getCategory();
      assertNull(string0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("UNABLE_TO_GET_ORIGINAL_VALUE_LABEL");
      User user0 = new User((String) null, "sP=#%X;I");
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.750404230329176
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setYear("A");
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.setAvailability("~I[");
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getYear();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "~I[";
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getSupportingDocuments();
      User user0 = new User();
      user0.setIdentifier((-1997));
      try { 
        User.checkValidEmail("A");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"A\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.894155128141027
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable0.questionNumber = null;
      String string0 = rawVariable0.getQuestionNumber();
      assertNull(string0);
      
      rawVariable0.setFilePath("");
      rawVariable0.getCleaningStatus();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("", "<)?iggW%b?2mX");
      user0.setPostCode("Unknown");
      user0.setPassword("general.fieldValue.unknown");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable0.getLabel();
      rawVariable0.getNotes();
      rawVariable0.getOntologyTerms();
      String string1 = rawVariable0.getFilePath();
      assertNotNull(string1);
      
      rawVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("oo");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setLabel("oo");
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User("Unknown", "$uwa09g8");
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("D}[ y");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("D}[ y", (String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.getQuestionNumber();
      assertEquals("D}[ y", derivedVariable0.getLabel());
      
      derivedVariable1.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable1.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("mCy h:vhcFNh");
      User user0 = new User();
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.441171005310231
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("C@}P'-YR8b]Z%\"{", "Unknown");
      User user1 = new User("C@}P'-YR8b]Z%\"{", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "0;9{>VW(-Gl ";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      arrayList0.add((Variable) derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable1.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.185003485121692
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.codeBookNumber = "->a`L!4a4m";
      User user0 = new User("Ih_?}qUx55u@;t", (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.columnEnd = ",&M'wm<*E&~Bp\",_s5";
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      derivedVariable0.getSourceVariables();
      System.setCurrentTimeMillis((-1L));
      rawVariable0.getNotes();
      assertEquals("->a`L!4a4m", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "iis7Anf4a5";
      derivedVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      derivedVariable0.getAlias();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.createVariableSummary();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("iis7Anf4a5", derivedVariable0.getColumnStart());
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3843476615106227
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setCleaned(true);
      ontologyTerm0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      User user0 = new User("`V `[si M26e| |x$M", "UNABLE_TO_CHECK_DATABASE_EXISTS");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setFilePath("INVALID_ALIAS_FILE_PATH");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      derivedVariable1.setCleaningDescription(",d85x<");
      derivedVariable0.setAvailability(",d85x<");
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.getYear();
      derivedVariable0.getNotes();
      derivedVariable0.getCategory();
      assertEquals(",d85x<", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7161133939289717
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCategory();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable1.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      user0.setEmail("Unknown");
      User.checkValidUserIDField("UNABLE_TO_UPDATE_RAW_VARIABLE");
      rawVariable1.setLabel("UNABLE_TO_UPDATE_RAW_VARIABLE");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      user0.setCity("z0Mp+Z");
      rawVariable0.setCleaned(false);
      user0.setCity("variable.saveChanges.valueChanged");
      rawVariable0.setAlias("z0Mp+Z");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      user0.setFirstName("D{apxM-)|mP>t?");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("z0Mp+Z", rawVariable0.getAlias());
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1219));
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      derivedVariable0.setCleaned(true);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getFilePath();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.setFileName((String) null);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      derivedVariable0.setCleaningStatus("");
      derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4381098652423896
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2070787801));
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, arrayList1.size());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "iis7Anf5";
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getValueLabels();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("0N?f");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setFilePath(" u1?ks{'Wz+sKShQ1!");
      rawVariable0.getValueLabels();
      rawVariable0.getCleaningDescription();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList0.add((-1840700267), (Variable) rawVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1840700267, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.539367798548164
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setCoded(true);
      Variable.validateFields(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("D$|fa<6Q+25w");
      User user0 = new User((String) null, "0T=&R,:I_=nW$TJ]zbw");
      User user1 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.columnStart.label";
      derivedVariable0.form = "r";
      derivedVariable0.setNotes("variable.columnStart.label");
      derivedVariable0.setCodeBookNumber("[sw-,.]*");
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getAlternativeVariable();
      assertEquals("[sw-,.]*", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("a");
      User user0 = new User("a", "u#-");
      derivedVariable1.setForm("u#-");
      User user1 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setColumnStart("GoGeuqg1)Rg3bb4PB");
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.432811072189696
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath((String) null);
      rawVariable0.setColumnEnd("");
      rawVariable0.getColumnEnd();
      rawVariable0.getAvailability();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setCoded(false);
      rawVariable0.setCategory("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setIdentifier(0);
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setDescription("");
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setForm("eKMGmz,?;");
      rawVariable0.setCoded(false);
      rawVariable0.setCleaned(false);
      rawVariable0.getForm();
      rawVariable0.notes = "IQd}|]-{yW` ;\"";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getCleaningDescription();
      rawVariable0.setColumnStart("gwC97b,vg");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.getCategory();
      assertEquals("eKMGmz,?;", rawVariable0.getForm());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, (Variable) null);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3849954138101435
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      Variable.validateFields(derivedVariable0);
      User user0 = new User("6d^?'TkZ", "6d^?'TkZ");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.codeBookNumber = ",R2YQ[~}!hPTQ6P";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setIdentifier(1718);
      derivedVariable0.setColumnEnd("UNABLE_TO_CHECK_AVAILABILITY_STATE_DUPLICATE");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCategory();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.getSourceVariables();
      assertEquals("UNABLE_TO_CHECK_AVAILABILITY_STATE_DUPLICATE", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.438944473671935
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Variable variable0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("D{apxM-)|mP>t?");
      Variable.validateFields(derivedVariable0);
      Variable.validateFields(derivedVariable0);
      User user0 = new User("6d^?'TkZ", "6d^?'TkZ");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setIdentifier(1718);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setIdentifier((-2147483641));
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm2.getNameSpace());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.6733809331516847
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("o0eoPQF#e9 ");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.5909915420458205
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Unknown");
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.isCoded();
      // Undeclared exception!
      try { 
        arrayList0.subList((-1879048189), 3601);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1879048189
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_FILTER_SUMMARIES");
      derivedVariable0.form = "Unknown";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setQuestionNumber("~yhgFY'");
      derivedVariable0.getLabel();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(0);
      derivedVariable0.questionNumber = "qHFMRWB";
      arrayList0.iterator();
      derivedVariable0.addSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("Lge\"eF$OZ1:");
      rawVariable0.getAlias();
      assertEquals("Lge\"eF$OZ1:", rawVariable0.getForm());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("n@F=o_$4gQu>", "");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getQuestionNumber();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.questionNumber = "macaw.businessLayer.Variable";
      derivedVariable2.setFilePath("");
      derivedVariable2.getQuestionNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "Kio";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getDescription());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getCategory();
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.notes = ";97Hzg>{6D1Fp4v&*~d";
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      String string1 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setIdentifier((-402));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("variable.label.label");
      User user1 = new User();
      User user2 = new User("UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER", "UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, derivedVariable1);
      assertEquals((-402), rawVariable0.getIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.removeValueLabel(valueLabel1);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) arrayList0;
      arrayList0.toArray(objectArray0);
      rawVariable0.codeBookNumber = null;
      Consumer<ValueLabel> consumer0 = (Consumer<ValueLabel>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.form.labl");
      ontologyTerm0.setIdentifier(2);
      User user0 = new User();
      try { 
        User.checkValidEmail("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"UNABLE_TO_GET_ALTERNATIVE_VARIABLE\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setLabel("oo");
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("a");
      User user0 = new User("(33Ga", ".DSV");
      User user1 = new User();
      Variable.validateFields(derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList0.removeAll(arrayList1);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.addAll((Collection<? extends Variable>) arrayList0);
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.getDisplayName();
      assertEquals("oo", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "u#-";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlternativeVariable();
      String string0 = derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.columnStart.label");
      derivedVariable0.setCodeBookNumber("9QYb_8Pd");
      derivedVariable0.getValueLabels();
      derivedVariable0.getYear();
      assertEquals("9QYb_8Pd", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.630732311167245
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      derivedVariable0.setYear("variable.cleaningStatus.label");
      Variable.validateFields(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.getSupportingDocuments();
      User user0 = new User("variable.cleaningStatus.label", "variable.cleaningStatus.label");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getYear());
      
      derivedVariable1.getColumnEnd();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.7887946124832026
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("UySB");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.form = "/~x~!`<b t?44./3r";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("UySB");
      derivedVariable0.form = "/~x~!`<b t?44./3r";
      derivedVariable0.getYear();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setNotes("/~x~!`<b t?44./3r");
      derivedVariable1.setCategory("macaw.businessLayer.ValueLabel$EditingOperationType");
      User user0 = new User("", "d;MsGWe`olLDPxc&P*Q");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("");
      rawVariable0.getAlternativeVariable();
      derivedVariable1.getNotes();
      assertEquals("/~x~!`<b t?44./3r", derivedVariable0.getNotes());
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.384753780368075
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.questionNumber = "6d^?'TkZ";
      User user0 = new User("6d^?'TkZ", "6d^?'TkZ");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("D/}[ y");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.codeBookNumber = "j%$yv492*Uk";
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("D/}[ y", derivedVariable1.getLabel());
      
      String string0 = derivedVariable0.getNotes();
      assertEquals("", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "|}K";
      String string0 = rawVariable0.getNotes();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName((String) null);
      User user0 = new User("Ok}@", "Ok}@");
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("%ZV@sui9I@zqeZ.^c");
      derivedVariable0.setQuestionNumber("%ZV@sui9I@zqeZ.^c");
      derivedVariable0.getFilePath();
      derivedVariable0.getForm();
      assertEquals("%ZV@sui9I@zqeZ.^c", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("APfiO-Glo6", "APfiO-Glo6");
      derivedVariable0.codeBookNumber = "APfiO-Glo6";
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.form = "APfiO-Glo6";
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = " u1?ks{'Wz+sKShQ1!";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.getSourceVariables();
      String string0 = derivedVariable0.getForm();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.86257310963418
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("5\"|r");
      derivedVariable0.setColumnEnd("5\"|r");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.getCleaningDescription();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("5\"|r", derivedVariable0.getColumnEnd());
      
      derivedVariable1.getForm();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("blank");
      derivedVariable0.getFilePath();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getAvailability();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningDescription();
      assertEquals("blank", derivedVariable0.getForm());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      rawVariable0.setColumnStart("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      String string0 = "user.status.label";
      rawVariable0.setLabel("user.status.label");
      rawVariable0.getLabel();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("user.status.label");
      supportingDocument0.setFilePath("user.status.label");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setYear("user.status.label");
      derivedVariable0.getSourceVariables();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "K)yy<wCo'QU'=Cw`vF";
      derivedVariable0.getCodeBookNumber();
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, (RawVariable) null, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("+#<~");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Integer integer0 = new Integer((-1648));
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.isNewRecord();
      derivedVariable0.getNotes();
      derivedVariable0.isNewRecord();
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User();
      user0.setPhone("(BHR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getYear();
      derivedVariable0.getValueLabels();
      derivedVariable0.getYear();
      User user1 = new User("+#<~", (String) null);
      User user2 = new User();
      try { 
        User.validateFields(user2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.4377723124997734
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      User user0 = new User("Ws27r[Si&_'!0", "Ws27r[Si&_'!0");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("variable.questionNumber.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.questionNumber.label", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      arrayList0.parallelStream();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.addOntologyTerms(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.5816084910941632
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("S34|$QB=0Ve(6j");
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = null;
      ArrayList<SupportingDocument> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<SupportingDocument>((-2034458190));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2034458190
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, (Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "APfiO-Glo6";
      supportingDocument0.setFileName("APfiO-Glo6");
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals(0, ontologyTerm0.getIdentifier());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getName();
      rawVariable0.setIdentifier((-1));
      rawVariable0.setCodeBookNumber("");
      int int0 = rawVariable0.getIdentifier();
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.clone();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("blank");
      rawVariable0.createVariableSummary();
      rawVariable0.getQuestionNumber();
      assertEquals("blank", rawVariable0.getYear());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "3C eAg_4Q";
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable2.getSupportingDocuments();
      rawVariable1.setSupportingDocuments(arrayList1);
      rawVariable0.setIdentifier((-1368));
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable2.removeSupportingDocument(supportingDocument1);
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals("-1368", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("[2x(X,F!");
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      try { 
        User.checkValidEmail("variable.label.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"variable.label.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      User user0 = new User("S+vnrH,;+j", "M4BgUo");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(182);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAvailability("Unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      assertEquals(182, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.isCoded();
      boolean boolean1 = derivedVariable0.isCleaned();
      assertTrue(boolean1 == boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.7467447448420033
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("D/}[ y");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("N6");
      User user0 = new User("vKd79[", "N6");
      User user1 = new User("vKd79[", "N6");
      User user2 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("N6", derivedVariable0.getName());
      
      derivedVariable1.getCleaningDescription();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.8744075929844977
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("Unknown", "variable.label.label");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.questionNumber = "variable.label.label";
      arrayList1.containsAll(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.hasSameDisplayName(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.580404155485974
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      User user0 = new User();
      user0.setCounty("J2?| +");
      user0.setStatus(" u1?ks{'Wz+sKShQ1!");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = " u1?ks{'Wz+sKShQ1!";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.cloneAttributes(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "oQ]eT8(t";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("oQ]eT8(t", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "DUPLICATE_VALUE_LABEL";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("DUPLICATE_VALUE_LABEL", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      String[] stringArray0 = new String[0];
      arrayList0.toArray(stringArray0);
      arrayList0.stream();
      derivedVariable0.columnStart = "VKkVA_lg@^6{.!Xdv)a";
      derivedVariable0.clone();
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList0.set(1469, derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1469, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.columnStart = "!wU[3D-aZ:L";
      String string0 = rawVariable0.getNotes();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      String string0 = derivedVariable0.getForm();
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_GET_CONNECTION";
      derivedVariable0.setQuestionNumber("%ZV@sui9I@zqeZ.^c");
      derivedVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getColumnEnd();
      assertEquals("UNABLE_TO_GET_CONNECTION", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.3838782514026584
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "iis7Anf5";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getCleaningDescription();
      assertEquals("iis7Anf5", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      ontologyTerm1.clone();
      derivedVariable0.setNotes("?l.SOm/a{C");
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList1.add((OntologyTerm) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      derivedVariable0.columnStart = "?l.SOm/a{C";
      derivedVariable0.getColumnStart();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      arrayList0.iterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.codeBookNumber = "UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE";
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-67));
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "iis7Anf5";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getQuestionNumber();
      String string0 = derivedVariable0.getQuestionNumber();
      assertEquals("", string0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string1 = derivedVariable0.getYear();
      assertEquals("", string1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "V#U)^}b]mpqgh";
      derivedVariable0.columnStart = "iis7Anf5";
      String string0 = derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "iis7Anf5";
      derivedVariable0.setCleaned(true);
      User user0 = new User("`%3xr", "iis7Anf5");
      User.detectFieldChanges(user0, user0, user0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("mCy h:vhcFNh");
      User user0 = new User();
      User user1 = new User();
      User user2 = new User("mCy h:vhcFNh", ",ztK|yy*I\"PKi");
      User user3 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      derivedVariable0.form = "";
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.578720472879498
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "";
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setIsNewRecord(true);
      supportingDocument0.setIdentifier(134);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("5eeyt", ".DSV");
      User user1 = new User();
      derivedVariable0.setCoded(false);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      rawVariable0.setCodeBookNumber("+u|zPNn-'tqLj|2Zr");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user1 = new User("->a`L!4a4m", "->a`L!4a4m");
      User.detectFieldChanges(user1, user0, user1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertEquals("", supportingDocument1.getFilePath());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "iis7Anf5";
      derivedVariable0.setCleaningDescription("variable.cleaningStatus.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getCleaningDescription());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear((String) null);
      derivedVariable0.setName((String) null);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1142388179));
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
