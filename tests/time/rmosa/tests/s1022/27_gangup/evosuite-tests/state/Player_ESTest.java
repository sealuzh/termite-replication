/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 09:27:09 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.263497813148872
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      Player player1 = new Player(0, "4$", "RLFn<0y", (-1893));
      player0.remove(player1);
      player0.pack();
      player1.isJoinOK(player0, false);
      player0.setDead();
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, true);
      player1.setDead((long) (-1893));
      Player player2 = new Player((-2569), "RLFn<0y", "4$", 1994);
      player2.getStrength();
      player1.getPictureId();
      player0.isJoinOK(player1, false);
      player1.getName();
      player0.getTimeOfDeath();
      player0.getZ();
      long long0 = player1.getTimeOfDeath();
      assertEquals((-1893L), long0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)35;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(3054, "sipHb%:hOy", "G{#Og2o XQ-&l", 0, 0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Player player1 = new Player((-1431), "sipHb%:hOy", "sipHb%:hOy", 67, 0);
      player0.head = (Party) player1;
      assertEquals(67, player1.getPictureId());
      
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      int int0 = player0.gangStrength();
      assertEquals("sipHb%:hOy", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(4919L);
      Player player0 = new Player(1, "", 417);
      player0.getY();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)34, (-928));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ");
      byteArrayInputStream0.skip(2642L);
      player0.setX((byte) (-62));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.getY();
      player0.getTimeOfDeath();
      float float0 = player0.getX();
      assertEquals((-62.0F), float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      Party party0 = player0.next;
      player0.boss = null;
      player0.getSubparty();
      player0.setMoney((-34.89671F));
      player0.getMoney();
      player0.type();
      System.setCurrentTimeMillis((-1250L));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8884613105342196
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(16079);
      player0.setDead();
      Player player1 = new Player(16079);
      Player player2 = new Player((short)4919, "module.ModuleBrowserDialog$ModuleFilter", "A;Ax8a", 16079);
      player0.isJoinOK(player2, false);
      player2.setJoinOK(player0, false);
      player1.getStrength();
      player0.setJoinOK(player1, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      Player player3 = new Player(1, "N;>ELSR !9(", "", (-26162));
      Player player4 = new Player((short)4919);
      player2.reset(true);
      Player player5 = new Player((-26162), "module.ModuleBrowserDialog$ModuleFilter", "N;>ELSR !9(", 662, 0);
      player5.getStrength();
      player3.getPictureId();
      boolean boolean0 = player1.isJoinOK(player5, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(682, "", "}?fh+ WsO(OH9<<)", 692);
      player0.reset(true);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      int int1 = player0.getPictureId();
      assertEquals(692, int1);
      
      Player player1 = new Player((-82), (String) null, 692);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      player0.pack();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals("", player0.getIP());
      
      player1.toString();
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      player0.gangStrength();
      player0.gangStrength();
      Player player1 = new Player(0);
      player0.head = (Party) player1;
      player0.getY();
      player0.type();
      player0.gangStrength();
      System.setCurrentTimeMillis(15000L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(535, "", 535);
      Player player1 = new Player(1);
      player0.setJoinOK(player1, true);
      assertEquals("Player1", player1.getName());
      assertEquals(0, player1.getPictureId());
      
      Player player2 = new Player(4919, "", "]?W80P;la_", (short)4919);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      player2.getPictureId();
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertFalse(boolean0);
      
      player0.getName();
      long long0 = player2.getTimeOfDeath();
      assertEquals(0L, long0);
      assertEquals("", player2.getIP());
      
      Player player3 = new Player((-2385), "", 4919);
      assertFalse(player3.isDead());
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals(4919, player3.getPictureId());
      assertEquals("0.0.0.0", player3.getIP());
      assertTrue(player3.isConnected());
      assertEquals(0.0F, player3.getY(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(28620);
      Player player1 = new Player(28620);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(player1.isConnected());
      assertTrue(boolean0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("Player28620", player1.toString());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-764));
      Player player1 = new Player((-764));
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals("Player-764", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(28620);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(boolean0);
      assertEquals("Player28620", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(28590, "N%Q;2a-uy^9", (String) null, 28590);
      player0.getName();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(28590, player0.getPictureId());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0);
      assertFalse(player0.isDead());
      
      player0.setDead((long) 0, false);
      boolean boolean0 = player0.isDead();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(28651);
      player0.reset(true);
      boolean boolean0 = false;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2600), 3);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.129253408046631
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.prev = (Party) player1;
      player0.reset(true);
      Player player2 = new Player((short)4919, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (-1116));
      player2.setZ((short)4919);
      player0.setDead(0L, true);
      player2.reset(true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-36);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)93;
      byteArray0[7] = (byte) (-119);
      byteArray0[8] = (byte)7;
      player1.unpack(byteArray0);
      player0.setJoinOK(player2, true);
      player0.reset(true);
      player2.getSubparty();
      player0.setDead(0L);
      player2.setConnected(false);
      player2.setJoinOK(player0, false);
      player2.getZ();
      player0.setConnected(true);
      player2.setX((-1116));
      boolean boolean0 = player2.isConnected();
      assertEquals((-1116.0F), player2.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-3753), "state.Player$JiInfo", (-3753));
      Player player1 = new Player();
      player0.remove(player1);
      player0.setMoney((short)4919);
      player1.gangStrength();
      player0.remove(player1);
      player0.getTimeOfDeath();
      player0.next = (Party) player1;
      player1.setMoney(0L);
      player1.toString();
      player0.getStrength();
      player0.getMoney();
      player0.remove(player1);
      player0.getY();
      assertEquals(4919.0F, player0.getMoney(), 0.01F);
      
      Player player2 = new Player(668, "state.Player$JiInfo", 3);
      assertEquals(10.0F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(6441, "#7+bw", 6441);
      player0.setY(6441);
      float float0 = player0.getY();
      assertEquals(6441.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 4919, 4919);
      Party party0 = new Party((short)4919);
      player0.getSubparty();
      player0.setDead(0L);
      player0.prev = party0;
      player0.getPictureId();
      player0.setConnected(true);
      player0.getIP();
      player0.setDead();
      player0.setConnected(true);
      player0.setDead((long) 4919);
      player0.getTimeOfDeath();
      player0.setDead((-563L));
      player0.setConnected(true);
      player0.setZ(1708.278F);
      assertEquals(1708.278F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(16079, "HObK_G.", "HObK_G.", 16079);
      player0.reset(false);
      player0.getStrength();
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(0, "4", "%RLFn<0y", (-1893));
      int int0 = player0.getPictureId();
      assertEquals((-1893), int0);
      
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("4", player0.getIP());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, "", 0);
      Party party0 = new Party();
      player0.boss = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(4919);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      System.setCurrentTimeMillis(1641L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(16079);
      player0.setDead(1641L, true);
      player0.setDead();
      player0.getTimeOfDeath();
      player0.prev = null;
      System.setCurrentTimeMillis(4919L);
      player0.gangStrength();
      player0.getX();
      float float0 = player0.getX();
      assertEquals(1641L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(521, "", "", 10, (-413));
      player0.setConnected(true);
      int int0 = player0.getStrength();
      assertEquals((-413), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(10, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-3662), "us", "module.ModuleBrowserDialog$ModuleFilter", (-3662), 5);
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-3662), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(5, int0);
      assertTrue(player0.isConnected());
      assertEquals("us", player0.getIP());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-1), ".*[.]class$", "HObK_G.", (-1), (-1));
      int int0 = player0.gangStrength();
      assertEquals((-1), player0.getPictureId());
      assertEquals((-1), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(".*[.]class$", player0.getIP());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(16079, "HObK_G.", 16079);
      float float0 = player0.getMoney();
      assertEquals(16079, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9(xt~[+I");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(4919);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player4919", player0.getName());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(28, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(290);
      player0.setX(290);
      float float0 = player0.getX();
      assertEquals(290.0F, float0, 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(1, (String) null, 1);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(16079, "C@M", "C@M", 16079, 16079);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(16079, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(16079, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-179), "", 2753);
      Party party0 = player0.boss;
      player0.remove((Party) null);
      player0.setY(0.0F);
      player0.toString();
      String string0 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(2753, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", string0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-145));
      String string0 = player0.toString();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-145", string0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(true);
      player0.getName();
      player0.setZ((-993.18F));
      player0.getZ();
      player0.isConnected();
      player0.setDead((-577L));
      player0.setDead((-577L), false);
      assertEquals((-993.18F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(1337);
      player0.setZ(0.0F);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-14076));
      String string0 = player0.getName();
      assertEquals("Player-14076", string0);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      Player player1 = new Player((short)4919);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(28651);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player28651", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      int int0 = 605;
      int int1 = Packable.TEXT_MESSAGE;
      player0.getY();
      player0.reset(false);
      player0.getIP();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = new Party();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte)8;
      player0.unpack(byteArray0);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.reset(false);
      boolean boolean0 = player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player0", player0.getName());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(28623);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(2341, (String) null, "!aqJ&l9KoS$^a", (-4601));
      String string0 = player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals((-4601), player0.getPictureId());
      assertNull(string0);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(1422);
      player0.setMoney((-3463.9F));
      int int0 = player0.getStrength();
      assertEquals((-3463.9F), player0.getMoney(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(28651);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(28590);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-12500));
      player0.setY((-1133.4896F));
      assertEquals((-1133.4896F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(3);
      player0.setDead((long) (-145));
      assertEquals((-145L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(2);
      player0.setZ(1.0F);
      player0.setConnected(false);
      int int0 = player0.gangStrength();
      assertEquals(1.0F, player0.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(3235);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player3235", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)0;
      int int0 = 605;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 605);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      try { 
        dataInputStream0.readInt();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(59);
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-39);
      byteArray0[3] = (byte)28;
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte) (-65);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(1765);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-14089));
      float float0 = player0.getZ();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-14089", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.head;
      boolean boolean0 = player0.isDead();
      Player player1 = new Player(764);
      boolean boolean1 = player1.isJoinOK(player0, true);
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player764", player1.getName());
      assertTrue(boolean1 == boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean1);
  }
}
