/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 16:58:49 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.892518928712349
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("}37!53A[?2<0,*#");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("}", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("3", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("4`(P-p`k4");
      xPathLexer1.operatorName();
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("4", token3.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5758444193776775
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("T2");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.793494183903136
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1158));
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0614032581707575
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.setXPath("{_+LGS[44LqZh");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer1.consume((-293));
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0622466547588347
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("uTG|_ILh(yn82;Q}vly");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("u", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("T", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token2);
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("_", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("ILh", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0619190544312347
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.LA(1);
      XPathLexer xPathLexer1 = new XPathLexer("zQ");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.leftParen();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HP@4Q");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("P", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.star();
      assertEquals("@", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0618818727989607
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath(")");
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-925));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.795122406426881
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-229));
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7991837324498277
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("J", token3.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8943987693018673
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("H@eK3{L6b82<3=_");
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5755655726875877
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("y!y-WfSgf~n_+D");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1372905451629616
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.setXPath("2ONy0G]p=r/");
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("2", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("O", token3.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("]", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("p", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(21, token6.getTokenType());
      assertEquals("=", token6.getTokenText());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(12, token7.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HP@4Q");
      xPathLexer0.setXPath("mqU)uFp*I*Y~N{$Zf`P");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("qU", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(")", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9824190875989465
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("&ObRBV~{");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1358315231636453
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">hu");
      xPathLexer0.literal();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.endPosition();
      xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.minus();
      int int0 = (-1916);
      xPathLexer0.consume((-1916));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.7959184263273786
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.setXPath("<<Q$sSwPy]");
      xPathLexer0.leftParen();
      xPathLexer0.consume((-1418));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifier();
      assertEquals(".p", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("4", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.895005099387966
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.plus();
      xPathLexer1.setXPath("fSlYr]-o+");
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("SlYr", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7974304538187877
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer1.div();
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7986480851200297
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath("@9Y(3`6");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("9Y", token2.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.061593652763551
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.setXPath("<<Q$sSwPy]");
      Token token3 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("<", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.setXPath("<<Q$sSwPy]");
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Q", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7985850929940455
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      Token token0 = xPathLexer0.minus();
      assertEquals("8", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath("g+x#nX\"B75UR_");
      Token token1 = xPathLexer0.leftParen();
      assertEquals("g", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("#", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.795122406426881
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.mod();
      xPathLexer0.setXPath("AO=`h+");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.798825694497805
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(".p", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath(")");
      XPathLexer xPathLexer1 = new XPathLexer("|W}hz\"a?q");
      Token token1 = xPathLexer1.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("|W}hz\"a?q");
      xPathLexer2.consume();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("W", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(")", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.893958264924355
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("a;_Vt");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Vt", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token2);
      assertEquals(1, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sGxd[dS");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.setXPath("-^#$7LI7f41;DD2vDE");
      Token token1 = xPathLexer0.comma();
      assertEquals("-", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("^#$7LI7f41;DD2vDE", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.798825694497805
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.setXPath(",2c!41z.k");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      int int0 = xPathLexer1.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dZmBU<(<");
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.8952214760069266
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("%>@Xl7Ec;(Hd3Ad-87Q");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(">", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Xl7Ec", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.434799037944202
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpah\"XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.operatorName();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.440959654005808
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("`dkZmUB<(h<", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6917059456267762
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("7", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("aD", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("+", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token5 = xPathLexer0.plus();
      assertEquals("k", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.575624747786706
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("1t");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("t", token2.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      int int0 = xPathLexer1.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.576709301242677
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("MkD_}h&y`L9>}!MmM'c");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6942659974545626
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath("U_|o?P");
      XPathLexer xPathLexer1 = new XPathLexer("kf1XYt;7");
      xPathLexer1.consume();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("f1XYt", token1.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5769289788657654
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      Token token0 = xPathLexer0.dots();
      assertEquals("{", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("v", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("dkZmUB<(h<", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.795338716182451
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("h%)]");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("h", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("p?E\"4/Za@T", token1.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.029951778030629
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken((Token) null);
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer1.setPreviousToken(token1);
      assertEquals(26, token1.getTokenType());
      
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6945218746335167
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      Token token0 = xPathLexer0.minus();
      assertEquals("8", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals("g", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token4);
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.895132841859144
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$XQR75U");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifier();
      assertEquals("XQR75U", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume(0);
      xPathLexer2.and();
      xPathLexer2.consume();
      XPathLexer xPathLexer3 = new XPathLexer("$XQR75U");
      Token token2 = xPathLexer3.nextToken();
      assertEquals("$", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5786828163384095
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("u.+#5'0\"iGdH?E");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("u.", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.693913319058074
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("/2@<*");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5754415416798357
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.or();
      xPathLexer0.setXPath("9vk&");
      Token token0 = xPathLexer0.dots();
      assertEquals("9", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(118);
      assertEquals('\uFFFF', char0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("vk", token1.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("bf*eQN^<zj0*6]");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("bf", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w!Ce#ckf4.MD");
      XPathLexer xPathLexer1 = new XPathLexer("/?Ww1Ld-<F");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6929510730627153
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      xPathLexer0.minus();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("871gI}rYY@z");
      xPathLexer1.identifier();
      xPathLexer0.and();
      xPathLexer1.star();
      xPathLexer0.consume(109);
      xPathLexer0.consume((-246));
      xPathLexer1.or();
      xPathLexer1.or();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.893547446711414
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("SD]B|e0=aK<@");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("S", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("D", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("B", token3.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      xPathLexer0.setXPath("C2 {ZL$YEL):");
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("l04vqyHNpgZXp");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("04", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.578071678666137
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath\"XPathLexer");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("<<Q$sSwPy]");
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.relationalOperator();
      assertEquals(7, token3.getTokenType());
      assertNotNull(token3);
      assertEquals("<", token3.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2897831846430745
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("w1yOE.V1L@'{&d");
      Token token0 = xPathLexer1.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("w1yOE.V1L", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("5lz(/0%V}1ij09W5{1");
      Token token1 = xPathLexer2.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer2.setXPath("");
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7974304538187877
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("5N*TN2[gi`dU.@D");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer1.leftParen();
      xPathLexer1.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.844194873387614
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("1t");
      Token token1 = xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer2.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer2.setPreviousToken(token1);
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer2.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer2.dollar();
      assertEquals(26, token5.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.6750594690976235
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("mqU)uFp*I*Y~N{$Zf`P");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('q', char0);
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("qU", token1.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      XPathLexer xPathLexer1 = new XPathLexer(" 6|liI%");
      Token token0 = xPathLexer1.dots();
      assertEquals(" ", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      Token token2 = xPathLexer2.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.6935749422997235
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.plus();
      assertEquals("?", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer(".p?E\"4/Za@T");
      xPathLexer1.setXPath(".p?E\"4/Za@T");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("E", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6940398639604233
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("DF*");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("DF", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.currentPosition();
      char char0 = xPathLexer0.LA(2);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.694118987274108
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n?.^y0G");
      XPathLexer xPathLexer1 = new XPathLexer("n?.^y0G");
      xPathLexer1.minus();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      xPathLexer1.whitespace();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("n?.^y0G");
      xPathLexer2.setXPath("n?.^y0G");
      Token token2 = xPathLexer2.nextToken();
      assertEquals("n", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.setXPath("@9Y(3`6");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.8004016868805084
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      xPathLexer0.consume();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("kZmUB", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token2 = xPathLexer0.star();
      assertEquals("<", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setXPath("CL");
      xPathLexer1.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("CL", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("C", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.8003019879712143
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%gOiJCK:5MFwKFAF ");
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("%gOiJCK:5MFwKFAF ");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.694492336899061
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sGxd[dS");
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer0.nextToken();
      xPathLexer1.literal();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("-^#$7LI7f41;DD2vDE");
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6941570926736427
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=Zeb(xUZ!:G");
      XPathLexer xPathLexer1 = new XPathLexer("jcS&j");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("jcS", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.9825592319476257
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      xPathLexer0.consume();
      xPathLexer0.identifier();
      xPathLexer0.not();
      xPathLexer0.setXPath("rNk8?Z,B^nOzk]h}5");
      XPathLexer xPathLexer1 = new XPathLexer("rNk8?Z,B^nOzk]h}5");
      xPathLexer1.consume(0);
      xPathLexer1.leftParen();
      xPathLexer1.leftParen();
      xPathLexer0.consume();
      xPathLexer1.nextToken();
      xPathLexer0.at();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.4406469911605764
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HP@4Q");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("msZFd,)K u%");
      xPathLexer1.not();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8906488959867764
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("Qlz*[Ug5*r<G1");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("Q", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("l", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("*", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qH");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.8940193038061226
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("'I#%@>l>J/}&");
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("!CR$T<uL`Nf6");
      xPathLexer0.colon();
      xPathLexer1.leftParen();
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer1.relationalOperator();
      xPathLexer0.consume((-4204));
      xPathLexer0.consume(60);
      xPathLexer1.or();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.733008142848218
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.577812877184722
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%w@'fA3#J1yO -@M");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.577049197182228
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("?", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.892740633623113
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("o");
      xPathLexer0.doubleColon();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath\"XPathLexer");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.8957307706338686
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("d", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("k", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("ZmUB", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.5683304305687247
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8974791212842188
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.identifierOrOperatorName();
      xPathLexer1.setPreviousToken(token0);
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.pipe();
      assertEquals("c", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer1.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.setXPath("<;dFWJ");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.9826442063490872
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("xzalL.T}lp)0");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("x", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("z", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("lL.T", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("}", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("lp)0", token5.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer1.setXPath("-^#$7LI7f41;DD2vDE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      assertNotNull(token1);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.694492336899061
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%gOiJCK:5MFwKFAF ");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.6947120145221493
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a;,zFMDC;,:");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("QfV>y@U8fRN\"xC8");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("QfV", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.796560996608503
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.rightParen();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("FL");
      xPathLexer1.consume();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("L", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.5721951648682415
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.plus();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.setXPath("<@NPE");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.4422064453516095
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("<!6l%j>H2MCaiyYSr'p");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      xPathLexer0.number();
      xPathLexer0.setXPath("i*NsP<6LW+UIKB2V.x");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("3z");
      xPathLexer1.consume();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("z", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.690895463412169
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(20, token0.getTokenType());
      
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.691730071841714
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("3z");
      xPathLexer0.setXPath("0.G$.b");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals("z", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("z.&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("z.", token0.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      Token token0 = xPathLexer0.minus();
      assertEquals("8", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("1", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h<J:7aD+kC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("h", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("<", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.693913319058074
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("U|~?");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("U", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.setXPath("{&_.+^Z");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8985686364635985
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.setXPath(".p?E\"4/Za@T");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.6941484548094783
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w!Ce#ckf4.MD");
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("e", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.setXPath("v");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1367));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.8002809455286077
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'I#%@>l>J/}&");
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.consume(124);
      assertEquals("'I#%@>l>J/}&", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      xPathLexer0.consume((-368));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.7983834123217766
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      char char0 = xPathLexer0.LA(111);
      assertEquals('\uFFFF', char0);
      
      XPathLexer xPathLexer1 = new XPathLexer("bf*eQN^<zj0*6]");
      Token token0 = xPathLexer1.rightBracket();
      assertEquals("b", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.8950944561149394
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.at();
      assertEquals("o", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      xPathLexer0.star();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("we", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("rken.saxpath.Token", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.pipe();
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      xPathLexer0.div();
      xPathLexer0.setXPath("F");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.8017185418675288
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.leftParen();
      assertEquals("c", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.833881306803264
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("U_|o?P");
      Token token2 = xPathLexer0.slashes();
      assertEquals("U", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("_", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pUa='= XoYr -$bbmpu");
      int int0 = (-2524);
      xPathLexer0.consume((-2524));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.6909927019892337
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("h", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token5 = xPathLexer0.plus();
      assertEquals("C", token5.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.706602387904312
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("p", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.not();
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.4648350762739737
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.identifier();
      xPathLexer0.not();
      xPathLexer0.setXPath("C2 {ZL$YEL):");
      xPathLexer0.consume(0);
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5758954423890557
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      XPathLexer xPathLexer1 = new XPathLexer("Jy0u");
      xPathLexer1.nextToken();
      xPathLexer1.div();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("{v`dkZmUB<(h<");
      assertFalse(xPathLexer2.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.639361298095103
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(18, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(4, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("7", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.plus();
      assertEquals("a", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.5757919066433397
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("mqU)uwp*I*Y~N{$Zf`P");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E#ppLZ}Q");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#ppLZ}Q", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.setXPath("U_|o?P");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("U_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      xPathLexer0.star();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.7714818647400503
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C#:)>ALI_4Jme|<ije");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("ALI_4Jme", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.7983834123217766
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.at();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      boolean boolean0 = xPathLexer0.isIdentifierChar('N');
      assertTrue(boolean0);
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.43973730954914
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.isIdentifierChar(']');
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierChar('<');
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(']');
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('C');
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-797));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.7715851909840552
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C#:)>ALI_4Jme|<ije");
      Token token0 = xPathLexer0.identifier();
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(":", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(9, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals("ALI_4Jme", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.446904959333776
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.setXPath("@9Y(3`6");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.061012349587522
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token0 = xPathLexer2.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer1.setXPath("");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.consume();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      xPathLexer2.or();
      Token token6 = xPathLexer3.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer3.rightParen();
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.7492135252812762
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w!Ce#ckf4.MD");
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("!C", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("e", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.setXPath("w!Ce#ckf4.MD");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("w!Ce#ckf4.MD", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("w", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("!", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.7587003703395832
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sGxd[dS");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dollar();
      assertEquals("s", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.setXPath("-^#$7LI7f41;DD2vDE");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(6, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("^#", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.4650203214923314
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifier();
      assertEquals("v", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("`", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      xPathLexer0.setXPath("C2 {ZL$YEL):");
      xPathLexer0.consume(0);
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("C", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("{ZL$YEL):", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("{", token5.getTokenText());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.7970145070536536
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer1.consume();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      xPathLexer1.or();
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hvd3m/3*^;Uht");
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.3340519706210698
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C#:)>ALI_4Jme|<ije");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("C", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(")", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("ALI_4Jme", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(13, int0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.6899782005246253
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("}_aJk&");
      xPathLexer1.dots();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.431517251034014
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{v`dkZmUB<(h<");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifier();
      assertEquals("v", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("d", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setXPath("C2 {ZL$YEL):");
      xPathLexer0.consume(0);
      Token token3 = xPathLexer0.dots();
      assertEquals("C", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("2", token4.getTokenText());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("{ZL$YEL):", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("{", token6.getTokenText());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(20);
      assertEquals('\uFFFF', char0);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.7927991751477095
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("U_|o?P");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("U_", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('T');
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('0');
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.3930086340815013
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C#:)>ALI_4Jme|<ije");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(":", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("A", token4.getTokenText());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0650605797259831
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C#:)>ALI_4Jme|<ije");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("C", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.setXPath("Jq!}.i. ");
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("J", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("q", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("!", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.744622301239759
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.setXPath("@9Y(3`6");
      Token token1 = xPathLexer0.leftParen();
      assertEquals("@", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Y", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("(", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("3", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.5239905037355044
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      Token token0 = xPathLexer0.minus();
      assertEquals("8", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("871gI}rYY@z");
      xPathLexer1.identifier();
      xPathLexer1.and();
      Token token2 = xPathLexer0.dollar();
      assertEquals("1", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer1.colon();
      assertEquals("}", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("g", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer1.identifier();
      xPathLexer0.endPosition();
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.1355806585613455
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume(121);
      xPathLexer0.setXPath("{&_.+^Z");
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("{", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("&", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(".", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.star();
      assertEquals("+", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.1016569460642307
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w!Ce#ckf4.MD");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.5809035320688838
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".p?E\"4/Za@T");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.4810323374848138
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.setXPath("@9Y(3`6");
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.277736880575789
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sGxd[dS");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("sGxd", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("[", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.0548899347951775
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("66C@y");
      xPathLexer0.setXPath(") (");
      XPathLexer xPathLexer1 = new XPathLexer("A)!");
      Token token0 = xPathLexer1.at();
      assertEquals("A", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer1.rightParen();
      assertEquals(")", token1.getTokenText());
      
      xPathLexer1.literal();
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
  }
}
