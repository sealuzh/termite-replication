/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 17:06:53 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("O");
      StringWriter stringWriter0 = new StringWriter(63);
      simpleNode0.toString();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ">=");
      simpleNode0.setIdentifier(">=");
      simpleNode0.id = 63;
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("E{p|-uL9", stringWriter1);
      simpleNode0.dump("vwqtsfo:m,C'HN~", stringWriter1);
      assertEquals(">=<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("Literal : O : >=", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("7G/(4v!j", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 48);
      assertEquals(49, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("{");
      SimpleNode simpleNode0 = new SimpleNode(48);
      String string0 = "\\b";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.nextCharInd = (-256);
      SimpleNode simpleNode0 = new SimpleNode((-1));
      simpleNode0.jjtSetParent(simpleNode0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      Node node0 = simpleNode0.jjtGetParent();
      Node node1 = simpleNode0.jjtGetParent();
      assertSame(node1, node0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("*amw", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 88);
      assertEquals(89, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0853864655447525
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("O");
      StringWriter stringWriter0 = new StringWriter(63);
      simpleNode0.toString();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ">");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump("InstanceOfExpression : O", stringWriter2);
      simpleNode0.dump(">", stringWriter0);
      stringWriter1.write("InstanceOfExpression : O");
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) ">", 4853, 4853);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter(63);
      simpleNode0.toString();
      stringWriter0.append((CharSequence) "<=");
      simpleNode0.dump("fi", stringWriter0);
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(63);
      simpleNode0.jjtAddChild(simpleNode1, 47);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('@');
      simpleNode0.dump((String) null, stringWriter1);
      assertEquals("@<Block>\n  <identifier>*lshft</identifier>\n</Block>\n", stringWriter1.toString());
      assertEquals("@<Block>\n  <identifier>*lshft</identifier>\n</Block>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("&cSB");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('_');
      simpleNode0.dump("Literal", stringWriter2);
      assertEquals("_<RelationalExpression>\n  <identifier>&cSB</identifier>\n  <identifier>*rshft</identifier>\n</RelationalExpression>\n", stringWriter2.toString());
      assertEquals("_<RelationalExpression>\n  <identifier>&cSB</identifier>\n  <identifier>*rshft</identifier>\n</RelationalExpression>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3765585591273541
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("O");
      StringWriter stringWriter0 = new StringWriter(63);
      simpleNode0.toString();
      stringWriter0.append((CharSequence) ">=");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("InstanceOfExpression : O", stringWriter1);
      simpleNode0.dump("", stringWriter0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 63);
      simpleNode0.jjtGetChild(63);
      simpleNode0.dump("cxL8", stringWriter0);
      assertEquals(64, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&&", stringWriter0);
      assertEquals("<Block>\n  <identifier>*amp</identifier>\n</Block>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8229691200188713
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '<';
      charArray0[1] = 'r';
      charArray0[2] = 'l';
      charArray0[3] = 'h';
      charArray0[4] = 'E';
      stringWriter0.write(charArray0);
      simpleNode0.dump("&se%|z0#-Jm", stringWriter0);
      assertEquals("<rlhE<EnumConstant>\n  <identifier>*amp</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('6');
      String string0 = "&By\"w,+/";
      simpleNode0.dump("9tx", stringWriter0);
      int int0 = 258;
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-633));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.04461051760409
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{");
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write((-1618837183));
      simpleNode0.dump("\b", stringWriter0);
      assertEquals("\u8141<RelationalExpression>\n</RelationalExpression>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("RelationalExpression : {", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<QR&syv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.jjimageLen = (-1591);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager1);
      SimpleNode simpleNode0 = new SimpleNode(73);
      SimpleNode simpleNode1 = new SimpleNode((-1));
      stringReader0.skip(0);
      int int0 = 0;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      // Undeclared exception!
      try { 
        simpleNode0.dump("&&", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 1952;
      SimpleNode simpleNode0 = new SimpleNode(1952);
      Node node0 = simpleNode0.parent;
      int int1 = (-2013669056);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2013669056));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<");
      SystemInUtil.addInputLine("<");
      simpleNode0.setIdentifier("Fy^b{");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('@');
      simpleNode0.dump("&&", stringWriter0);
      assertEquals("@<Block>\n  <identifier>Fy^b{</identifier>\n</Block>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<QR&syv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.jjimageLen = (-1591);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager1);
      SimpleNode simpleNode0 = new SimpleNode(73);
      SimpleNode simpleNode1 = new SimpleNode((-1));
      stringReader0.skip(0);
      simpleNode1.id = (-1591);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild(simpleNode1, 1584);
      StringWriter stringWriter1 = stringWriter0.append('_');
      simpleNode0.dump("<QR&syv", stringWriter1);
      assertEquals("_<Block></Block>\n", stringWriter0.toString());
      assertEquals(1585, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1086529830777425
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      jJTJavaParserState0.pushNode(simpleNode0);
      SimpleNode simpleNode1 = (SimpleNode)jJTJavaParserState0.rootNode();
      simpleNode0.jjtAddChild(simpleNode1, 10);
      simpleNode0.jjtGetNumChildren();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Annotation");
      simpleNode0.toString("");
      simpleNode0.setIdentifier("EnumConstant");
      simpleNode0.toString("");
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.parser = javaParser0;
      simpleNode0.setIdentifier("");
      simpleNode1.jjtOpen();
      simpleNode1.toString("");
      simpleNode0.jjtOpen();
      simpleNode1.jjtAddChild(simpleNode0, 11);
      String string0 = "U~GKdq";
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      simpleNode0.dump(string0, stringWriter1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(48);
      simpleNode0.dump("PrimaryExpfession", stringWriter0);
      assertEquals("<RelationalExpression>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(95);
      SimpleNode simpleNode1 = new SimpleNode(95);
      simpleNode1.jjtAddChild(simpleNode0, 29);
      simpleNode1.toString();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(95);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "Annotation");
      stringWriter1.write(95);
      simpleNode1.dump("Annotation", stringWriter1);
      simpleNode1.jjtAddChild(simpleNode0, 95);
      assertEquals(96, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader(") Vr!*QT<Hj&J: O`i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node node0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.49693251533742333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{");
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtAddChild(simpleNode0, 128);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.flush();
      // Undeclared exception!
      simpleNode0.dump("PackageDeclaration", stringWriter0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = (-266);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-266));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1444960164));
      // Undeclared exception!
      try { 
        simpleNode0.toString("b)N}!,a@");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1444960164
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      SystemInUtil.addInputLine("<IDENTIFIER>");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(73);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 73
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<");
      SystemInUtil.addInputLine("<IDENTIFIER>");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('9');
      simpleNode0.dump("lSuQt#R=2<#-;", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1910911262));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(671);
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("&P[4$)RE72MZSV7", stringWriter0);
      simpleNode1.toString();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LajN)u)");
      SystemInUtil.addInputLine("CYe\n{ b$]Xd!x;W*qX");
      simpleNode0.setIdentifier("k+7o<, 9Prp4I");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('9');
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      charArray0[1] = '|';
      stringWriter0.write(charArray0);
      simpleNode0.dump(">=", stringWriter1);
      assertEquals("99|<ForInit>\n  <identifier>k+7o<, 9Prp4I</identifier>\n</ForInit>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ForInit : k+7o<, 9Prp4I", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{");
      SimpleNode simpleNode0 = new SimpleNode(48);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Block", stringWriter0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 88);
      simpleNode0.jjtAddChild((Node) null, 88);
      assertEquals(89, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-155));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(95);
      simpleNode0.setIdentifier(" : ");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('R');
      simpleNode0.dump(" : ", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(95);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2206));
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode((-1));
      stringReader0.skip(3502L);
      simpleNode0.jjtAddChild(simpleNode0, 47);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("nQ[!", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      simpleNode0.toString("Nrv.6#tM<dI+u1_U8U");
      simpleNode0.setIdentifier("\b");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(48);
      simpleNode0.dump("\b", stringWriter0);
      assertEquals("0<RelationalExpression>\n  <identifier>\b</identifier>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6029);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6029
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
