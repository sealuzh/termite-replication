/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 06:54:54 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("->>c3rNWnjmFO\"C!J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 24, 24);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream1.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.getBeginColumn());
      assertEquals(124, token1.kind);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ajSTBW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2812), 2873);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)35;
      byteArray0[5] = (byte)74;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)28;
      byteArray0[8] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(2878, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)107;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)107);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5843265743823953
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|j\"x#({FX+;Xg%}%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1680), 931);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte)97;
      byteArray0[5] = (byte) (-79);
      byteArray0[6] = (byte) (-82);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2667, (byte) (-82));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 28, 2833);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream1);
      javaParserTokenManager1.ReInit(javaCharStream2);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals("!", token0.toString());
      assertEquals(89, token0.kind);
      assertEquals(1, token0.endLine);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("cDw_LM]A>Zv1:I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 113, 1718);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(1723, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8792521075987638
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("($Gw{?8whj[}[TN~@^b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1678), 2093);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[7];
      charArray0[0] = '2';
      charArray0[1] = '2';
      char[] charArray1 = new char[3];
      charArray1[0] = 'P';
      charArray1[1] = 'T';
      charArray1[2] = '?';
      stringReader0.read(charArray1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(66);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 66. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.592118782174603
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a%-M_wpN`}@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 24, 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(33, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("abstract");
      char[] charArray0 = new char[2];
      charArray0[0] = '6';
      charArray0[1] = 'p';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5933491307733727
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5_v=/s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-861), 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      token0.beginColumn = (-242);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager1.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(29, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RXA2");
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqYNy<(hm+Xy&Y5a");
      StringReader stringReader1 = new StringReader("M~ZJ,#7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-4269), 1569);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1570, javaCharStream0.getBeginColumn());
      assertEquals(90, token0.kind);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-861), (-861));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("abstract");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("Fp$]6hm_ZWw$");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 6, 1049, 46);
      javaCharStream1.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      assertFalse(javaParserTokenManager1.equals((Object)javaParserTokenManager0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RDHP|Q=E0qN:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RDHP|Q=E0qN:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 951);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.ready();
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(955, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z\")\f7=!B");
      StringReader stringReader1 = new StringReader("($Gw{?8whj[}[TN~@^b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2513, 2513);
      stringReader1.skip((-1));
      StringReader stringReader2 = new StringReader("j.^Q^:*ZUK_?\"Bpo");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 931, 1865);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(85, token0.kind);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5813709093577648
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b]I!1w");
      StringReader stringReader1 = new StringReader("nI+ r9akf5(;1,oUmx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader2 = new StringReader("nI+ r9akf5(;1,oUmx");
      StringReader stringReader3 = new StringReader("b]I!1w");
      stringReader2.read();
      StringReader stringReader4 = new StringReader("b]I!1w");
      stringReader4.read();
      stringReader0.ready();
      stringReader0.ready();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader3, 9, (-13));
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader4, 42, (byte) (-27));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(82, token0.kind);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("H{Y{h)/<Y8(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-261), 112);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("H", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.49557522123893805
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",x\"z5O7,!gt*-@~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 14.  Encountered: <EOF> after : \"\\\"z5O7,!gt*-@~\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("abstract");
      char[] charArray0 = new char[1];
      charArray0[0] = 'g';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("abstract");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5869843816913654
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("($Gw{?8whj[}[TN~@^b");
      StringReader stringReader1 = new StringReader("v_qC$m]7%k{y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 60, (-1678));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals((-1672), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qqx*l9w!#cE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("bzWX)P<PPu6^-2ftzq");
      stringReader1.ready();
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = '5';
      charArray0[4] = ';';
      charArray0[5] = 'A';
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("qqx", token0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3L-d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 37);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(38);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 38. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qqx*l9w!#cE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[0] = ' ';
      charArray0[1] = 'I';
      charArray0[2] = '4';
      charArray0[3] = 'A';
      charArray0[4] = 'A';
      charArray0[5] = 'T';
      charArray0[6] = 'I';
      charArray0[7] = 'P';
      charArray0[8] = 'I';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"const\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'A';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo((-3722));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -3722. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.49122807017543857
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z\")\f7=!B");
      StringReader stringReader1 = new StringReader("($Gw{?8whj[}[TN~@^b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2513, 2513);
      stringReader1.skip((-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[6];
      charArray0[0] = '[';
      charArray0[1] = 'q';
      charArray0[2] = 'P';
      charArray0[3] = 'x';
      charArray0[4] = '_';
      charArray0[5] = '2';
      javaCharStream0.buffer = charArray0;
      stringReader1.ready();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("abstract");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-5125), 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals("abstract", token0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[Qdosb");
      StringReader stringReader1 = new StringReader("<DECIMAL_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      stringReader1.read(charArray0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5843265743823953
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eo%[Sbd`y)A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-586), (-586));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[7];
      charArray0[0] = 'E';
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      stringReader0.close();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals((-583), javaCharStream0.getBeginColumn());
      assertEquals((-586), javaCharStream0.getLine());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte)22;
      byteArray0[4] = (byte)85;
      byteArray0[5] = (byte)22;
      byteArray0[6] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte)22, 111);
      StringReader stringReader0 = new StringReader("4zOy");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)85, (-241));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(3, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eo%[Sbd`y)A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-586), (-586));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[7];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      charArray0[6] = 'E';
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-586));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -586. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eo%[Sbd`y)A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-586), (-586));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("BN+)", "%");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.49367088607594933
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z\")\f7=!B");
      StringReader stringReader1 = new StringReader("($Gw{?8whj[}[TN~@^b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2513, 2513);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.ready();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2513, column 2521.  Encountered: <EOF> after : \"\\\")\\f7=!B\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("($Gw{?8whj[}[TN~@^b");
      StringReader stringReader1 = new StringReader("($Gw{?8whj[}[TN~@^b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 36, (-1678));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      javaParserTokenManager0.jjround = (-168);
      stringReader1.ready();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(91, token1.kind);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5913659118565153
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-n>>c3rNWnjymFO\"C!J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1275, 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte) (-83);
      byteArray0[5] = (byte) (-102);
      byteArray0[6] = (byte)27;
      byteArray0[7] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(1275);
      stringReader0.mark(24);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 97, 51);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaParserTokenManager2.ReInit((JavaCharStream) null);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8814399921878517
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":E>7 nTbia7o7aLw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-861), (-861));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.jjFillToken();
      javaParserTokenManager1.getNextToken();
      assertEquals((-856), javaCharStream0.getBeginColumn());
      assertEquals((-846), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5834607735165944
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":E>7 nTbia7o7aLw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, (-861));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      char[] charArray0 = new char[3];
      charArray0[1] = '+';
      charArray0[1] = '4';
      charArray0[2] = 'z';
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals((-859), javaCharStream0.getBeginColumn());
      assertEquals(":", token0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 24, 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1840562714690361
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzWX)P<PPu6^-2ftzq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'A';
      charArray0[2] = '9';
      charArray0[3] = 'P';
      charArray0[4] = 'P';
      charArray0[5] = ' ';
      charArray0[7] = '4';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(102, token0.kind);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f9;^X@P8XH[DB83gr*$");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = '5';
      charArray0[6] = '5';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 217);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(220, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.48936170212765956
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      StringReader stringReader1 = new StringReader("IN_FORMAL_COMMENT");
      stringReader1.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1678), (-2977));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.backup((-1678));
      char[] charArray0 = new char[9];
      charArray0[0] = '2';
      charArray0[1] = '2';
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = '2';
      charArray0[5] = '2';
      charArray0[6] = '2';
      charArray0[7] = '2';
      charArray0[8] = '2';
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(15, javaCharStream0.bufpos);
      assertEquals("N_FORMAL_COMMENT", token0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GPZ'd5Ij.n<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3732), 94);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(96, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a%-M_wpN`}@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 24, 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = '%';
      charArray0[3] = 'Q';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("-", token1.toString());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5888083670994821
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(ee/(t`UR0uO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-861), 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      StringReader stringReader1 = new StringReader("(");
      char[] charArray0 = new char[5];
      charArray0[0] = '%';
      charArray0[1] = 'e';
      charArray0[1] = 'e';
      charArray0[3] = 'e';
      charArray0[4] = 'e';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(16, javaCharStream0.getBeginColumn());
      assertEquals("/", token1.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RDHP|Q=E0qN:");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RDHP|Q=E0qN:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 951);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[5];
      charArray0[0] = '7';
      charArray0[1] = 'x';
      charArray0[2] = '{';
      charArray0[3] = '@';
      charArray0[4] = 'm';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1815192735832012
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.defaultLexState = 1;
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqYNy<(hm+Xy&Y5a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("vqYNy<(hm+Xy&Y5a");
      StringReader stringReader2 = new StringReader("vqYNy<(hm+Xy&Y5a");
      stringReader2.ready();
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("YNy", token0.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u7Z4NZy=Dh2PM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = 'E';
      charArray0[2] = '|';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = '5';
      charArray0[6] = 'E';
      charArray0[7] = '5';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RDHP|Q=E0qN:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-193), 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(48, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rxu]C5%]tSgKI5F}=A&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager1.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-968));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -968. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5898403588435481
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '5';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      charArray0[6] = 'E';
      charArray0[7] = 'y';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.593235944582088
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager0.jjround = (-1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"0\" (48), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = '5';
      charArray0[1] = 'E';
      charArray0[2] = '5';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      charArray0[6] = 'E';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!)VA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(89, token0.kind);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rwKJ\"{fjIT(KQ8J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, (-1678));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      char char0 = javaCharStream0.readChar();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals('r', char0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("abstract");
      char[] charArray0 = new char[3];
      charArray0[0] = ' ';
      charArray0[1] = 'H';
      charArray0[2] = '';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("ct", token0.toString());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      char[] charArray0 = new char[5];
      charArray0[0] = 'T';
      charArray0[1] = 'S';
      charArray0[2] = 'F';
      charArray0[3] = 'r';
      charArray0[4] = 'F';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2650), 990);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5_v=/s");
      StringReader stringReader1 = new StringReader("E|Z\"*8@A/YO)1~m(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 123, (-795));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("E", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1759058012496004
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("($Gw{?8whj[}[TN~@^b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, (-1678));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)86;
      byteArray0[5] = (byte) (-27);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 510);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.47619047619047616
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("\"float\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, (-1678));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[2];
      charArray0[0] = '2';
      charArray0[1] = '2';
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-1675), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-n>>c3rNWnjymFO\"C!J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 915, 915);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.TokenLexicalActions((Token) null);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(102, token0.kind);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1803266677394324
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-950));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals((-944), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3Ld");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, 37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rwKJ\"{fjIT(KQ8J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1678), 969);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("wKJ", token0.toString());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[6];
      charArray0[0] = '%';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = '5';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5898403588435481
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5_v=/s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1809, 1795);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager1.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("/", token1.toString());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5884082070354566
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"float\"");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)107;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(29);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 73, (int) (byte)60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager1.ReInit(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z\")\f7=!B");
      StringReader stringReader1 = new StringReader("($Gw{?8whj[}[TN~@^b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2513, 2513);
      stringReader1.skip((-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[6];
      charArray0[0] = '[';
      charArray0[1] = 'q';
      charArray0[2] = 'P';
      charArray0[3] = 'x';
      charArray0[4] = '_';
      charArray0[5] = '2';
      javaCharStream0.buffer = charArray0;
      stringReader1.ready();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("z", token0.toString());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"float\"");
      StringReader stringReader1 = new StringReader("JwK;L1Vgae$5Ugu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1440, (-950));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(284);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 284. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r<)/cq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2308), 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(46, javaCharStream0.getBeginColumn());
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5843265743823953
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"float\"");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)107;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(29);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 73, (int) (byte)60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager1.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(73, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EW/^:%.[U'[7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("W", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.587973990795769
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f9;^X@P8XH[DB83gr*$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '_';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(";", token1.toString());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("while");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 713, 713);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(713, javaCharStream0.getBeginColumn());
      assertEquals(713, javaCharStream0.getLine());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("private");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1366, (-861));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-861), javaCharStream0.getBeginColumn());
      assertEquals(47, token0.kind);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 108, (-77));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-77), javaCharStream0.getBeginColumn());
      assertEquals("finally", token0.toString());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2878, 102);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.185684493992781
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqYNy<(hm+Xy&Y5a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("vqYNy<(hm+Xy&Y5a");
      stringReader1.read();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      stringReader1.ready();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)48;
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte)54;
      byteArray0[6] = (byte)48;
      byteArray0[7] = (byte) (-64);
      byteArray0[8] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 44);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.1875292030318554
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("($Gw{?8wj[}[TN~@^b");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)54;
      byteArray0[4] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)54);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, (-919), (byte)0);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.582483256410045
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-552), 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-643), 98);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.ReInit(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
      StringReader stringReader0 = new StringReader(",7]`UqHk$WUZ!50");
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.1779956654084303
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dnM7oV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 106, 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5919456220014427
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzWX)P<PPu6^-2ftzq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'A';
      charArray0[2] = '9';
      charArray0[3] = 'P';
      charArray0[4] = 'T';
      charArray0[5] = ' ';
      charArray0[6] = ')';
      charArray0[7] = '4';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      javaCharStream0.readChar();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("), ");
      StringReader stringReader1 = new StringReader("), ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 8, 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      charArray0[6] = 'E';
      charArray0[7] = 'E';
      charArray0[8] = 'o';
      stringReader0.read(charArray0);
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(",", token0.toString());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1809520586087259
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("($Gw{?8whj[}[TN~@^b");
      StringReader stringReader1 = new StringReader("($Gw{?8whj[}[TN~@^b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 36, (-1678));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-1674), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1815192735832012
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzWX)P<PPu6^-2ftzq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'A';
      charArray0[2] = '9';
      charArray0[3] = 'P';
      charArray0[4] = 'T';
      charArray0[5] = ' ';
      charArray0[6] = '0';
      charArray0[7] = '4';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      javaCharStream0.readChar();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqYNy<(hm+Xy&Y5a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("vqYNy<(hm+Xy&Y5a");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("goto");
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yo1>x/}jYJQkAQ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-67), (-1678));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte)86;
      byteArray0[3] = (byte) (-109);
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte) (-109);
      byteArray0[5] = (byte) (-109);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte) (-109));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"^=\"");
      StringReader stringReader1 = new StringReader("\"\n\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 99, 99);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringReader stringReader2 = new StringReader("bzWX)P<PPu6^-2ftzq");
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      stringReader2.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(116, token0.kind);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".,}w?6oaDvdSMPH'cg%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 33, 74);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("r", token0.toString());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzWX)P<PPu6^-2ftzq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[6];
      charArray0[0] = '9';
      charArray0[1] = 'L';
      charArray0[2] = '#';
      charArray0[3] = 'r';
      charArray0[4] = 'T';
      charArray0[5] = 'F';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)22;
      byteArray0[4] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)85, 177);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 85, column 177.  Encountered: \"\\\\\" (92), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4878048780487805
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[1] = 'E';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.newToken(1);
      javaCharStream0.readChar();
      javaParserTokenManager0.MoreLexicalActions();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(3, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C'IY<$jp");
      StringReader stringReader1 = new StringReader("j=@&>%V_Qes");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.newToken((-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 92, column 95.  Encountered: \"Y\" (89), after : \"\\'I\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4864864864864865
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"^=\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.4838709677419355
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"float\"");
      StringReader stringReader1 = new StringReader("\" \"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1678), 1197);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(73, token0.kind);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-493), (-493));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("_", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0645849606710729
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@");
      StringReader stringReader1 = new StringReader("@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 36, 999);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.ready();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqYNy<(hm+Xy&Y5a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("vqYNy<(hm+Xy&Y5a");
      stringReader1.read();
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("goto");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte) (-27);
      byteArray0[2] = (byte) (-11);
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)86;
      byteArray0[5] = (byte) (-109);
      byteArray0[6] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)86);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1796336670464318
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-552), 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte) (-64);
      byteArray0[4] = (byte) (-64);
      byteArray0[5] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 45);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("6", token0.toString());
      assertEquals(66, token0.kind);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.48717948717948717
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-552));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)48);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(66, token0.kind);
      assertEquals("0", token0.toString());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"~\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = 'W';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 879, 2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 879, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.178861466274231
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2_v=/s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 24, 90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(92, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5813709093577648
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzWX)P<PPu6^-2ftzq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("|TJXY>QGZuyL");
      stringReader1.skip((-1));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)23;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)118;
      byteArray0[8] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)23);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)22, (int) (byte)23);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((byte)92);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 92. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzWX)P<PPu6^-2ftzq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'A';
      charArray0[2] = '9';
      charArray0[3] = 'P';
      charArray0[4] = 'T';
      charArray0[5] = ' ';
      charArray0[6] = ')';
      charArray0[7] = '4';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.readChar();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SwitchTo(1);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("\"float\"");
      int int0 = (-1678);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 45, (-1678));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[2];
      charArray0[0] = '2';
      charArray0[1] = '2';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile("loat", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqYNy<(hm+Xy&Y5a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("vqYNy<(hm+Xy&Y5a");
      StringReader stringReader2 = new StringReader("goto");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 74, 290);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(35, token0.kind);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("($Gw{?8whj[}[TN~@^b");
      StringReader stringReader1 = new StringReader("($Gw{?8whj[}[TN~@^b");
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)108;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte)123;
      byteArray0[4] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 10, 985, (byte)10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curChar = 'l';
      javaParserTokenManager0.getNextToken();
      assertEquals(985, javaCharStream0.getBeginColumn());
      assertEquals(10, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("($Gw{?8whj[}[TN~@^b");
      int int0 = (-1678);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1678), 2093);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[7];
      charArray0[0] = '2';
      charArray0[1] = '2';
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = 'y';
      charArray0[5] = '2';
      charArray0[6] = '2';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("($Gw{?8whj[}[TN~@^b", "whj");
      MockFile mockFile1 = new MockFile(mockFile0, "u");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzWX)P<PPu6^-2ftzq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream1, 20);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throw");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 39);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzWX)P<PPu6^-2ftzq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"float\"");
      StringReader stringReader1 = new StringReader("b\"/E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 45, 47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte) (-3);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (-3982));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"default\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"default\"");
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      assertFalse(JavaCharStream.staticFlag);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      StringReader stringReader1 = new StringReader("finally");
      StringReader stringReader2 = new StringReader("finally");
      stringReader2.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 47, 61);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.endLine = 60;
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, token1.kind);
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      Token.newToken(310);
      String string0 = "0=xtp#=qYf9zbwtM";
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqYNy<(hm+Xy&Y5a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[6];
      intArray0[0] = 77;
      intArray0[1] = (-1);
      intArray0[2] = 77;
      intArray0[3] = 70;
      intArray0[4] = (-1);
      stringReader0.ready();
      intArray0[5] = 0;
      javaCharStream0.bufline = intArray0;
      stringReader0.reset();
      stringReader0.skip((-1));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)92;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("vqYNy<(hm+Xy&Y5a");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      mockPrintStream0.printf("SfXB[", (Object[]) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.setDebugStream((PrintStream) null);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3s0r,+g1Uz^Ou\"T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '5';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager0.jjround = (-1);
      Token token0 = new Token();
      javaCharStream0.readChar();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, token0.beginLine);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-861), 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h'/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 133, 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("h", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1730), 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1730, column 50.  Encountered: \"\\u0016\" (22), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 133, 30);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(58, token0.kind);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqYNy<(hm+Xy&Y5a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3631, (-1081));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`23R4?N1ZW2QL&?-y:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 74, (-493));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 74, column -493.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|j\"x#({FX+;Xg%}%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1680), 931);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(106, token0.kind);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",ua");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'Y';
      charArray0[1] = '~';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals("a", token0.toString());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"float\"");
      StringReader stringReader1 = new StringReader("+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 28, 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(101, token0.kind);
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1682), (-975));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N{Q@K-k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      byte[] byteArray0 = new byte[0];
      sequenceInputStream0.read(byteArray0, 0, (-1));
      javaParserTokenManager0.curChar = 'q';
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaCharStream0.Done();
      javaParserTokenManager0.jjnewStateCnt = (-6700);
      javaParserTokenManager0.SwitchTo(0);
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5061170576467744
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("If=&h[");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("If=&h[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 3631, 2301);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 3631);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 3631. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!/&FTJ!r9AZmjiIsZ2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
