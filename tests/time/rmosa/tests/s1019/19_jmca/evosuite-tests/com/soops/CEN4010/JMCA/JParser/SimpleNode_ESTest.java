/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 07:09:41 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      JavaParser javaParser0 = new JavaParser(")");
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      simpleNode0.setIdentifier("\"implements\"");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("=");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "com.soops.CEN4010.JMCA.JParser.SimpleNode");
      simpleNode0.dump(")", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.setIdentifier(">");
      simpleNode0.dump(">", stringWriter0);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) ">", (-1), (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(62);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter(1780);
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<PrimarySuffix>\n  <identifier>*le</identifier>\n</PrimarySuffix>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(48);
      StringWriter stringWriter0 = new StringWriter(48);
      String string0 = "1";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(" ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier("{");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(81);
      simpleNode0.setIdentifier(":BOvlQ^");
      simpleNode0.dump("[nf.j|B", stringWriter0);
      simpleNode0.dump("[nf.j|B", stringWriter0);
      assertEquals("<Modifiers>\n  <identifier>*lt</identifier>\n  <identifier>:BOvlQ^</identifier>\n</Modifiers>\n<Modifiers>\n  <identifier>*lt</identifier>\n  <identifier>:BOvlQ^</identifier>\n</Modifiers>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier("IZJQwI3kM+r!UHyJy~");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader("IZJQwI3kM+r!UHyJy~");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("p H7u", stringWriter0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 10);
      assertEquals(11, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("=");
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("PreIncrementExpression");
      simpleNode0.setIdentifier("}");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("=");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"implements\"");
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<NameList>\n  <identifier>PreIncrementExpression</identifier>\n</NameList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(78);
      SimpleNode simpleNode1 = new SimpleNode(78);
      StringReader stringReader0 = new StringReader("|4f3");
      StringReader stringReader1 = new StringReader("|4fV3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4159, 65);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 10, 6096);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 30);
      simpleNode2.setIdentifier("float");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode2.identifiers = arrayList0;
      simpleNode0.setIdentifier("f{(_JYHSEz~");
      simpleNode0.jjtAddChild(simpleNode1, 4159);
      StringWriter stringWriter0 = new StringWriter(65);
      stringWriter0.append('K');
      simpleNode2.dump("float", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(65);
      simpleNode1.dump("Literal", stringWriter1);
      simpleNode2.jjtSetParent(simpleNode0);
      assertEquals(4160, simpleNode0.jjtGetNumChildren());
      
      Node node0 = simpleNode2.jjtGetParent();
      assertEquals(4160, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&&");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("=");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "&&");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "&&");
      simpleNode0.dump("}", stringWriter0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4666666666666667
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("%F+WSoXpi", stringWriter0);
      simpleNode0.dump("%F+WSoXpi", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 79);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 80);
      assertEquals(81, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(62);
      StringWriter stringWriter0 = new StringWriter(1011);
      simpleNode0.setIdentifier("");
      simpleNode0.dump("", stringWriter0);
      assertEquals("<PrimarySuffix>\n</PrimarySuffix>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(524);
      simpleNode0.jjtAddChild((Node) null, 524);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("'}", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 524
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("kq9Ir{?)af");
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("&", stringWriter0);
      simpleNode0.dump("&", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1746286620414268
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader(">>");
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild(simpleNode0, 10);
      simpleNode0.jjtAddChild(simpleNode1, 3412);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode1.jjtGetParent();
      simpleNode1.toString();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('#');
      // Undeclared exception!
      simpleNode0.dump("EnumConstant", stringWriter1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.163735415854063
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringReader stringReader0 = new StringReader("GO3Gm9Fs$J%B");
      SimpleNode simpleNode1 = new SimpleNode(24);
      simpleNode1.jjtAddChild(simpleNode0, 24);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("^30", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode1, 24);
      assertEquals(25, simpleNode1.jjtGetNumChildren());
      
      simpleNode0.jjtGetChild(24);
      assertEquals(25, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(126);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-401));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -401
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.parser = javaParser0;
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(1);
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier></identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" : ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaParser javaParser1 = new JavaParser(";");
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 84);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1);
      simpleNode0.jjtAddChild(simpleNode1, 84);
      simpleNode0.jjtGetChild(84);
      assertEquals(85, simpleNode0.jjtGetNumChildren());
      
      simpleNode1.toString("d`R~&vT<4$:~t{");
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode1.dump("d`R~&vT<4$:~t{PackageDeclaration", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(47);
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode1 = new SimpleNode(47);
      simpleNode1.parent = (Node) simpleNode0;
      Node node0 = simpleNode1.jjtGetParent();
      assertNotSame(node0, simpleNode1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2343));
      simpleNode0.setIdentifier("lvd *M&.?{0J'p");
      simpleNode0.setIdentifier("lvd *M&.?{0J'p");
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(92);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.jjtSetParent(nodeArray0[1]);
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-238));
      // Undeclared exception!
      try { 
        simpleNode0.toString((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -238
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1113));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1265));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier(">>");
      simpleNode0.setIdentifier("ot8Co\"{yn8xh:}WLwq");
      StringWriter stringWriter0 = new StringWriter(81);
      simpleNode0.dump("ClassOrInterfaceType", stringWriter0);
      assertEquals("<Modifiers>\n  <identifier>*rshft</identifier>\n  <identifier>ot8Co\"{yn8xh:}WLwq</identifier>\n</Modifiers>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("gT[fw~V");
      assertEquals("gT[fw~VModifiers : >> : ot8Co\"{yn8xh:}WLwq", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : <<", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9971762968966938
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier(">>");
      simpleNode0.setIdentifier("ot8Co\"{yn8xh:}WLwq");
      StringWriter stringWriter0 = new StringWriter(81);
      simpleNode0.setIdentifier("1");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.dump("1", stringWriter0);
      simpleNode0.dump(">>", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-673));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3292));
      SimpleNode simpleNode1 = new SimpleNode((-1068));
      simpleNode0.jjtAddChild(simpleNode1, 63);
      simpleNode1.jjtAddChild(simpleNode0, 84);
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1068
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.937566794583933
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser(">=");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 37);
      simpleNode0.dump(",;)~H$NnWt3", stringWriter0);
      simpleNode0.setIdentifier(">=");
      JavaParser javaParser1 = new JavaParser(",;)~H$NnWt3");
      simpleNode0.setIdentifier("");
      StringWriter stringWriter1 = new StringWriter(690);
      simpleNode0.dump(">=", stringWriter1);
      assertEquals("<NameList>\n  <identifier>*ge</identifier>\n  <identifier></identifier>\n</NameList>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("NameList : >= : ", string0);
  }
}
