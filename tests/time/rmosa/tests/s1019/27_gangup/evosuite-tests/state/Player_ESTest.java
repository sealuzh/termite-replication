/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 06:53:08 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.198959292011301
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(1474, "f4", "f4", (-31636), 0);
      player0.setX(11520);
      player0.setDead();
      Player player1 = new Player((-31636), "7a1pY1WKVw.", "0O", 1, 2338);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player1.setConnected(false);
      player1.setJoinOK(player0, true);
      player0.pack();
      player1.getIP();
      player1.isJoinOK(player0, true);
      player1.pack();
      player0.gangStrength();
      player0.pack();
      player0.getStrength();
      player0.pack();
      assertEquals(11520.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      Player player0 = new Player(2482, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 2482);
      String string0 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertNull(string0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(2482, player0.getPictureId());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(10, (String) null, (String) null, (-938));
      player0.toString();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(324, "", 4);
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(4, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2147340491, "m{f\"Ly_9h^ p |N", 2147340491);
      player0.pack();
      player0.getMoney();
      player0.pack();
      Player player1 = new Player(2147340491, (String) null, (short)4919);
      player1.reset(true);
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
      
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player1.getName();
      Player player2 = new Player(0);
      assertEquals("Player0", player2.getName());
      
      player0.reset(true);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      
      Player player3 = new Player(18, "JWjyl=?Up{R,-", "", (short)4919);
      player3.setConnected(true);
      assertTrue(player3.isConnected());
      assertEquals("JWjyl=?Up{R,-", player3.getIP());
      assertEquals(4919, player3.getPictureId());
      assertEquals(10.0F, player3.getX(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(2023, "state.Player", 2023);
      player0.setMoney(0.2F);
      player0.isConnected();
      player0.setY((-1));
      player0.getSubparty();
      player0.getMoney();
      player0.setMoney((-1));
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1502), (String) null, (-1502));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-267));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)54;
      byteArray0[4] = (byte)108;
      byteArray0[5] = (byte) (-12);
      byteArray0[6] = (byte) (-42);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4593), (byte)108);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1622, ">l22E;[{go3y}*+", "", 1622, (-1));
      player0.setDead();
      player0.type();
      player0.gangStrength();
      player0.type();
      player0.getSubparty();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player1 = new Player(5, (String) null, ">l22E;[{go3y}*+", (-1));
      player0.add(player1);
      Party party0 = null;
      player0.next = null;
      player0.pack();
      player0.getStrength();
      DataInputStream dataInputStream0 = null;
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.541121077179204
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(4919);
      Player player1 = new Player((short)4919);
      player0.setZ(0.2F);
      player1.setZ(0.2F);
      player0.setDead(1029L);
      player1.setDead(0L);
      player0.setMoney(0.0F);
      player0.setMoney((-2045.959F));
      player1.setY((-170.0F));
      player1.setY((short)4919);
      Player player2 = new Player((-4138), "", "", 1489, (short)4919);
      player2.setZ(0.0F);
      player2.setZ((-4138));
      player2.getSubparty();
      player1.getSubparty();
      player1.setZ((-132.78584F));
      player1.setZ(0.2F);
      player1.gangStrength();
      player2.gangStrength();
      player1.getStrength();
      Player player3 = new Player((-4138), (String) null, "", 1);
      player3.getStrength();
      player2.getPictureId();
      player2.getPictureId();
      player3.setX(0.0F);
      player1.setX(0.0F);
      player2.setMoney(1);
      Player player4 = new Player(1);
      player4.setMoney(608.7773F);
      player4.setDead((-2995L), true);
      player4.setDead(1L, true);
      player2.setConnected(false);
      player2.setConnected(true);
      player4.setDead(15000L);
      player0.setDead((long) 1489);
      player1.setZ(1);
      Player player5 = new Player();
      player5.setZ((short)4919);
      Player player6 = new Player(1489, (String) null, (String) null, 340);
      player6.setDead(1L);
      player6.setDead(1392409281320L);
      player4.setMoney((-2628.7344F));
      player3.setMoney(0.2F);
      player1.getZ();
      player2.getZ();
      player6.setZ(1587.0F);
      player0.setZ(340);
      player2.getPictureId();
      player2.getPictureId();
      player1.isConnected();
      player1.isConnected();
      Player player7 = new Player(2042, "", "Qjs7<w\"@fK=>", 1, 1);
      player2.setJoinOK(player4, true);
      player4.getTimeOfDeath();
      player4.getIP();
      player6.setDead((long) 0, true);
      assertEquals(1587.0F, player6.getZ(), 0.01F);
      
      int int0 = player7.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0567526361500623
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0.0F);
      player0.setDead((-3902L));
      player0.setMoney((-3614.8574F));
      Player player1 = new Player(5);
      player1.setY((-3614.8574F));
      Player player2 = new Player((-1), "", "", (-5120));
      player2.setZ((-3614.8574F));
      player2.getSubparty();
      player2.setZ((-1));
      Player player3 = new Player(4919, "", 0);
      player3.gangStrength();
      player2.getStrength();
      player3.getPictureId();
      player0.setX(1);
      player1.setMoney(1.0F);
      player3.setDead(1L, false);
      player3.setConnected(false);
      Player player4 = new Player(0, "=mOV]JNpUo-&K", (-979));
      player4.setDead((-3902L));
      player0.setZ((-1));
      player4.setDead(0L);
      player0.setMoney((-3902L));
      player0.getZ();
      assertEquals((-3902L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-149));
      player0.setZ(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player1 = new Player(31930, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 31930);
      player1.setDead((long) 31930);
      Player player2 = new Player(0, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (short)4919);
      player2.setMoney(2715.9F);
      player0.setY((-3614.8574F));
      player0.setZ(0);
      player0.getSubparty();
      player0.setZ(0.0F);
      player1.getStrength();
      player2.getPictureId();
      player1.setX((-1380.0839F));
      player2.setDead(15000L, true);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Player player1 = new Player(0, (String) null, ":}_b** u)_v", 0, (-1161));
      player0.isJoinOK(player1, false);
      player0.setJoinOK(player1, false);
      player1.getMoney();
      player0.getX();
      Player player2 = new Player((-596), ":}_b** u)_v", (-1161));
      Player player3 = new Player(0, "", "ai", (-1161));
      player2.isJoinOK(player3, false);
      player0.isJoinOK(player2, false);
      player0.toString();
      assertEquals(0.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1945366875886965
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(3, "V1", "V1", (-1));
      player0.reset(true);
      Party party0 = player0.gangBoss();
      player0.boss = party0;
      player0.setDead((long) (-1), true);
      player0.setY(610.1778F);
      party0.id = 582;
      player0.prev = party0;
      party0.remove((Party) null);
      player0.getZ();
      player0.prev = party0;
      player0.getMoney();
      player0.getStrength();
      byte[] byteArray0 = player0.pack();
      player0.setX(1899.3866F);
      player0.getName();
      player0.unpack(byteArray0);
      long long0 = player0.getTimeOfDeath();
      assertEquals(610.1778F, player0.getY(), 0.01F);
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7862943611198907
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(518);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.326171090535089
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-1));
      player0.setMoney((-1));
      player0.isConnected();
      player0.getSubparty();
      player0.getMoney();
      player0.setMoney((-1.0F));
      player0.setY(0L);
      player0.setDead(0L);
      player0.setConnected(false);
      player0.setDead();
      player0.toString();
      player0.getX();
      Player player1 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-4841));
      player1.setY((-1));
      player1.setX((-4841));
      player0.isJoinOK(player1, true);
      player0.getZ();
      player0.setY(0.0F);
      player0.setDead(0L, false);
      player0.setDead();
      player0.getX();
      player1.isConnected();
      player1.isJoinOK(player0, true);
      player0.setDead((long) (-1));
      player1.toString();
      player1.getY();
      player0.pack();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-267));
      player0.setConnected(true);
      player0.setX((-267));
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, false);
      player0.setJoinOK(player1, true);
      player1.getMoney();
      player0.getX();
      boolean boolean0 = player0.isDead();
      assertEquals((-267.0F), player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(3281, "gui.ModuleBrowserDialog$ModuleFilter", "state.Player$JoinInfo", 2463, 5);
      player0.setMoney(5);
      player0.getY();
      Player player1 = new Player(3281, " H?o~gzpu<{Z*[O+`u", " H?o~gzpu<{Z*[O+`u", 3281);
      player1.pack();
      player0.setDead(1L, false);
      player1.isJoinOK(player0, true);
      player0.getTimeOfDeath();
      player0.toString();
      assertEquals(5.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)108;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-124);
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte) (-124);
      byteArray0[5] = (byte) (-124);
      byteArray0[6] = (byte) (-98);
      byteArray0[7] = (byte)108;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(1, "m{f\"Ly_9h^ p P|N", 11520);
      Party party0 = new Party();
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-190));
      Player player1 = new Player((-190));
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertTrue(boolean0);
      assertFalse(player1.isDead());
      assertEquals("Player-190", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1179));
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, false);
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2147340491, "", 2147340491);
      player0.pack();
      player0.getMoney();
      player0.pack();
      assertFalse(player0.isDead());
      
      player0.reset(true);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.getZ();
      player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2147340491, player0.getPictureId());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-1414));
      byte[] byteArray0 = player0.pack();
      System.setCurrentTimeMillis((short)4919);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-3425));
      Party party0 = new Party();
      player0.remove(party0);
      player0.gangStrength();
      player0.getName();
      player0.getName();
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileOutputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-247));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(31, byteArrayOutputStream0.size());
      
      Player player1 = new Player((-1074));
      player0.pack();
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-1283));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-124);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FOO8");
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", 4919);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)0;
      player0.unpack(byteArray0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(4919, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-93);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-27);
      byteArray0[5] = (byte)108;
      byteArray0[6] = (byte) (-15);
      byteArray0[7] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-267));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("Player-267", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-1), "module.ModuleBrowserDialog$ModuleFilter", (-1));
      player0.setMoney((-1));
      player0.setConnected(false);
      player0.setDead((-707L), true);
      player0.isConnected();
      player0.setY((-1));
      player0.getSubparty();
      player0.getMoney();
      player0.setMoney((-1.0F));
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
      
      Player player1 = new Player((short)4919);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Le+)?[&=G#='Cb");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setZ(0.0F);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      boolean boolean0 = player0.isDead();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(4722);
      Player player1 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(121, "4R8z:rCRe+", "4R8z:rCRe+", 27780);
      player0.getSubparty();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6Yh");
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getName();
      Player player1 = new Player((short)4919);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(27780, player0.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals("Player4919", player1.toString());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-1957), (String) null, (-1957));
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.reset(true);
      int int0 = player0.getPictureId();
      assertFalse(player0.isConnected());
      assertEquals((-1957), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(0, "", "Player.unpack(): *** WARNING *** data is not of proper type!", 0);
      assertEquals("", player0.getIP());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player(0, "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", 4919, 5);
      long long0 = player1.getTimeOfDeath();
      assertEquals(0L, long0);
      
      player1.toString();
      int int0 = player1.gangStrength();
      assertEquals(4919, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(5, int0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-267));
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isConnected();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-267", player0.toString());
      assertEquals(1, player0.getStrength());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-267));
      player0.setDead((long) (-267));
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isDead();
      assertEquals((-267L), player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-267));
      Player player1 = new Player();
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-267", player0.toString());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(4);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player4", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(18);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6Yh");
      Player player0 = new Player(18);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player18", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-190));
      Player player1 = new Player((-190));
      player0.reset(false);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player-190", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-1));
      float float0 = player0.getY();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(87);
      Player player1 = new Player(2428);
      player0.setMoney(0.2F);
      player0.isJoinOK(player1, false);
      File file0 = MockFile.createTempFile("BF]f//MTg", "BF]f//MTg");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(4664);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }
}
