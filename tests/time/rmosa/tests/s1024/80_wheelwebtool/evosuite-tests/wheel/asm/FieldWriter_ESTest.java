/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 11:11:48 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.index = (-5198);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "#}N<a]&30YEl`aa", "M ", (String) null, "M ");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(2);
      ByteVector byteVector2 = byteVector0.put11(2, 2);
      fieldWriter0.put(byteVector2);
      assertSame(byteVector2, byteVector1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-43));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-43), "5*6s4TdD=&>t7<U{", "5*6s4TdD=&>t7<U{", "5*6s4TdD=&>t7<U{", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte)21;
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      classWriter0.index = (-19);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-19), "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(10);
      ByteVector byteVector1 = byteVector0.putLong(0L);
      ByteVector byteVector2 = byteVector1.putShort(28);
      byteVector1.putInt(28);
      ByteVector byteVector3 = byteVector2.putInt((-19));
      fieldWriter0.put(byteVector3);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-19), "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(1);
      ByteVector byteVector2 = byteVector1.put11(2, 1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "V\"`,+h<QMG|O4@?gM8R";
      stringArray0[1] = "";
      classWriter0.visit((-19), 16777218, "V\"`,+h<QMG|O4@?gM8R", (String) null, "V\"`,+h<QMG|O4@?gM8R", stringArray0);
      ByteVector byteVector3 = byteVector2.putInt(0);
      fieldWriter0.put(byteVector3);
      assertSame(byteVector0, byteVector3);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-945));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "value ";
      stringArray0[1] = "";
      classWriter0.visit(65535, (-945), "value ", "value ", "{", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "{", "", "", "value ");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-43));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-43), "5*6s4TdD=&>t7<U{", "5*6s4TdD=&>t7<U{", "5*6s4TdD=&>t7<U{", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-43);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1568);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1568, ":", ":", (String) null, ":");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-945));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "value ";
      classWriter0.visit(49, 49, "value ", "value ", "value ", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-945), "ox,5xt.}", "", "ox,5xt.}", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-945));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "value ";
      stringArray0[1] = "value ";
      classWriter0.visit(49, 49, "value ", "value ", "value ", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-945), "value ", "", "value ", "");
      fieldWriter0.next = fieldWriter0;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "e", "e", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-45));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-40));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "e", "e", "e", "e");
      fieldWriter0.visitAnnotation("e", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-19), "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-30), "5*6s4TdD=&>t7<U{", "5*6s4TdD=&>t7<U{", "5*6s4TdD=&>t7<U{", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3051));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "e", "e", "e", "e");
      fieldWriter0.visitAnnotation("e", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "TDNRHynd7z82}`Kd)<", "bD0", "3]CiR&56d", "bD0");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("bD0");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector1 = new ByteVector();
      byteVector1.putUTF8("");
      byteVector0.putLong(0);
      ByteVector byteVector2 = classWriter0.pool;
      byteVector2.putShort(0);
      ByteVector byteVector3 = byteVector0.put11((-3067), 2);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      // Undeclared exception!
      fieldWriter1.put(byteVector3);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-31));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-31), ":", ":", "u<", "u<");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", (String) null, (Object) null);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-19), (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "O*6s4T;D=>t#<U{", "O*6s4T;D=>t#<U{", "O*6s4T;D=>t#<U{", "O*6s4T;D=>t#<U{");
      fieldWriter0.visitAnnotation("O*6s4T;D=>t#<U{", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "O*6s4$T;D=>t#<U{", "O*6s4$T;D=>t#<U{", "O*6s4$T;D=>t#<U{", "O*6s4$T;D=>t#<U{");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-59));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "O*6s4jleiT;D=>Y#<U{", "O*6s4jleiT;D=>Y#<U{", (String) null, (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "Depreated", "Depreated", "Depreated", "Depreated");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-31));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-31), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-53));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "O*6s4$T;D=>t#<U{", "O*6s4$T;D=>t#<U{", "O*6s4$T;D=>t#<U{", "O*6s4$T;D=>t#<U{");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-19), "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", "5*6s4TdD=>t7<U{", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
