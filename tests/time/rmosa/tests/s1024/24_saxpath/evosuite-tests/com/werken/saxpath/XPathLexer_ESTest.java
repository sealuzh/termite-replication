/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 10:58:42 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">qG|S'n6Umx");
      XPathLexer xPathLexer1 = new XPathLexer(">qG|S'n6Umx");
      xPathLexer0.consume((-1603));
      xPathLexer1.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o");
      XPathLexer xPathLexer1 = new XPathLexer("o");
      xPathLexer1.mod();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer1.star();
      assertEquals("o", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.797912195797784
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d~Z");
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.consume((-1935));
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.891722433292198
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.consume((-730));
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d~Z");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-731));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0624112863955477
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d,@>P66pgY);W");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("66", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("p", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("gY", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.consume((-170));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9810898558948713
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.equals();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.consume((-1713));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.694118987274108
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EE6|^<(t:-<;");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      Token token0 = xPathLexer0.pipe();
      assertEquals("E", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      assertEquals("E", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("^", token4.getTokenText());
      
      Token token5 = xPathLexer0.relationalOperator();
      assertEquals("<", token5.getTokenText());
      assertEquals(7, token5.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7977307240620064
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|u{:FVT]5|B^%a|P\"N");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{:FVT]5|B^%a|P\"N", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("{", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("FV", token4.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h~Z(n+K4:,'7aM");
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.currentPosition();
      xPathLexer0.consume((-23));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-600));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7996265131123885
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dSKSh<a^-@uv'(");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.star();
      assertEquals("d", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("KSh", token2.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.892400767303865
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mzI']");
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("mzI']");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("^mJPBy7ju0CCm[6");
      xPathLexer1.equals();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("mzI']");
      String string0 = "5%<h2jEfO8Z!o4q2";
      XPathLexer xPathLexer4 = new XPathLexer("5%<h2jEfO8Z!o4q2");
      xPathLexer4.consume((-1884));
      // Undeclared exception!
      try { 
        xPathLexer4.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.692637421372917
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mzI']");
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dSKSh<a^-@uv'(");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("L_H.W");
      xPathLexer1.div();
      xPathLexer0.dots();
      xPathLexer0.consume((-2571));
      xPathLexer1.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6939566034800104
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ,WX]io?8`zr");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(32, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("WX", token2.getTokenText());
      
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.801200051442799
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d.3MNmC6@|jz");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (26) (d)");
      xPathLexer1.consume();
      xPathLexer1.literal();
      xPathLexer1.getXPath();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8957118666848336
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EE6|^<(t:-<;");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("D 3msets@r7M+*j");
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("D 3msets@r7M+*j");
      xPathLexer2.minus();
      xPathLexer2.nextToken();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      xPathLexer3.consume();
      xPathLexer3.setXPath("");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.equals();
      xPathLexer2.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("EE6|^<(t:-<;");
      xPathLexer0.mod();
      // Undeclared exception!
      try { 
        xPathLexer6.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3304811036190576
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E8!>&@cI@l");
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals(">&", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer(":6!(sB@ nx ;bRGmhF");
      Token token5 = xPathLexer2.notEquals();
      assertEquals(":6", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer1.colon();
      Token token6 = xPathLexer2.nextToken();
      assertEquals("!", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token8.getTokenText());
      assertNotNull(token8);
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-772));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9831644895092557
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      Token token0 = xPathLexer0.dots();
      assertEquals("M", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      String string0 = token2.toString();
      assertEquals("[ (17) (!)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer1.colon();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("CxoWUefS", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6939566034800104
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YqQ=xF/[@2MU");
      XPathLexer xPathLexer1 = new XPathLexer("YqQ=xF/[@2MU");
      xPathLexer0.number();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.consume();
      assertNotSame(xPathLexer0, xPathLexer1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6940799232481694
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      XPathLexer xPathLexer1 = new XPathLexer("equ*XT\"On8D?dDvV[");
      Token token0 = xPathLexer1.star();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.number();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("i-NRZ1s!-_y");
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer0.dots();
      Token token1 = xPathLexer1.div();
      assertNull(token1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.798987970691887
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".*/>:zV");
      XPathLexer xPathLexer1 = new XPathLexer(".*/>:zV");
      Token token0 = xPathLexer1.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer1.dollar();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (26) (*)", string0);
      
      xPathLexer1.setPreviousToken(token1);
      Token token2 = xPathLexer1.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("*", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer1.mod();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("/", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4316244347695988
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K.uMD^%G]aU3Da+");
      Token token0 = xPathLexer0.dots();
      assertEquals("K.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("u", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7989354579575494
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.dots();
      String string1 = "fz}%T_";
      String string2 = ".V/2*Th(D<xIll(_ZE";
      XPathLexer xPathLexer1 = new XPathLexer(".V/2*Th(D<xIll(_ZE");
      xPathLexer1.minus();
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.982049506930858
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1784));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("q/m7");
      xPathLexer1.slashes();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer1.consume();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8001927484964377
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ,WX]io?8`zr");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.dots();
      assertEquals("W", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("]", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("i", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("o?8`zr", token4.getTokenText());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("?", token5.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9824190875989465
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EE6|^<(t:-<;");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.796702740052869
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aw'&]Kp`");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer2.minus();
      xPathLexer1.doubleColon();
      xPathLexer2.and();
      xPathLexer1.consume();
      assertNotSame(xPathLexer1, xPathLexer0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.578000619489634
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rn6LU6Ei W<%s:#r*");
      xPathLexer0.or();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Rn", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (13) (6)", string0);
      
      Token token3 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("6", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      char char0 = xPathLexer0.LA((-15));
      assertEquals('6', char0);
      
      xPathLexer0.hasMoreChars();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5754415416798357
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tNwWDmR|2j");
      XPathLexer xPathLexer1 = new XPathLexer("&=C!WMzNI&r,`]Y");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer2.and();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("&=C!WMzNI&r,`]Y", token0.getTokenText());
      
      xPathLexer4.consume();
      Token token1 = xPathLexer3.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      char char0 = xPathLexer5.LA(94);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer4.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ,WX]io?8`zr");
      xPathLexer0.setXPath(") ,WX]io?8`zr");
      XPathLexer xPathLexer1 = new XPathLexer("F0");
      XPathLexer xPathLexer2 = new XPathLexer("F0");
      xPathLexer2.nextToken();
      xPathLexer2.setXPath(") ,WX]io?8`zr");
      assertNotSame(xPathLexer2, xPathLexer0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.692551680139958
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.div();
      xPathLexer1.and();
      xPathLexer1.consume();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.setXPath("b;Oz:KB!w&hlCO");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WDfL`Ji;Xd`");
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2008));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.57613028340169
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">qG|S'*n6Um\"x");
      XPathLexer xPathLexer1 = new XPathLexer(">qG|S'*n6Um\"x");
      xPathLexer1.number();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.consume();
      assertNotSame(xPathLexer1, xPathLexer0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("L_", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("H.W", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(108);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("58:f^;j?i2?E=`$C_OQ");
      XPathLexer xPathLexer1 = new XPathLexer("58:f^;j?i2?E=`$C_OQ");
      xPathLexer1.div();
      Token token0 = xPathLexer1.dots();
      assertEquals("5", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("5", token1.getTokenText());
      
      xPathLexer1.nextToken();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2402326840806812
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hd2#w)1`y}O");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("hd2", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EE6|^<(t:-<;");
      xPathLexer0.mod();
      xPathLexer0.pipe();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      assertEquals("EE6|^<(t:-<;", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s/'<p;r_iP|y5=");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2212400444231193
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ,WX]io?8`zr");
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6953519181601897
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^i's7Q6 6M");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals("^", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("i", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d79Mm]zWH[_qR,5]+");
      Token token0 = xPathLexer0.not();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.number();
      xPathLexer0.nextToken();
      String string0 = xPathLexer0.getXPath();
      assertEquals("d79Mm]zWH[_qR,5]+", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" 9q@#z]i!>kb");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("ns}MRJ9");
      Token token1 = xPathLexer1.minus();
      assertEquals("n", token1.getTokenText());
      
      xPathLexer1.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("9", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.800020990429943
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iHCyGCQ}");
      Token token0 = xPathLexer0.equals();
      Token token1 = xPathLexer0.slashes();
      token1.toString();
      token1.toString();
      token1.toString();
      token0.toString();
      token1.toString();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (11) (H)", string0);
      
      token0.toString();
      String string1 = token0.toString();
      assertEquals("[ (21) (i)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.literal();
      assertEquals("yG", token2.getTokenText());
      assertEquals(27, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Q", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.setXPath("[ (21) (i)");
      xPathLexer1.or();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.8005930611215355
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("iPE.H0#Y6Gf7");
      Token token1 = xPathLexer1.minus();
      assertEquals("i", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("PE.H0", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer1.and();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("#Y6Gf7", token4.getTokenText());
      
      xPathLexer1.consume();
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("Y", token5.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6881336682453103
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Om$)>efv+H");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("O", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/>V@X+nl\"6udR5jLj?9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(11, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u8:'");
      XPathLexer xPathLexer1 = new XPathLexer("`^4");
      Token token0 = xPathLexer1.dots();
      assertEquals("`", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer1.minus();
      xPathLexer0.or();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("u", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("#");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (c)", string0);
      
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("#", token2.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-98));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y1F+T3G");
      XPathLexer xPathLexer1 = new XPathLexer("y1F+T3G");
      xPathLexer1.setXPath("Br?[o:BptR}");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("y1F", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T`Wk,g");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("T`Wk,g");
      Token token1 = xPathLexer1.minus();
      assertEquals("T", token1.getTokenText());
      
      xPathLexer1.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("`Wk,g", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.576447529703788
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      XPathLexer xPathLexer1 = new XPathLexer("M<!CxoWUefS)WXM");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("a*o<MY");
      xPathLexer2.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.consume();
      assertNotSame(xPathLexer1, xPathLexer0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.1370810450302784
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("F[  RA<b{");
      Token token0 = xPathLexer1.star();
      assertEquals("F", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("e", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("[", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.consume();
      Token token4 = xPathLexer2.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("RA", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.7990389937032654
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MaXk*bR1FChp2D+B:r");
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.692069938160962
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("f=~3`mauH`4I T");
      xPathLexer1.number();
      xPathLexer2.nextToken();
      xPathLexer2.consume();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5751680374063315
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rn6LU6Ei W<%s:#r*");
      xPathLexer0.consume();
      xPathLexer0.setXPath("XAE*tdWT137Od");
      XPathLexer xPathLexer1 = new XPathLexer("GmN<A%N-R4_$");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("GmN", token0.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.443902116926799
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (-1) ()", string0);
      
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.694118987274108
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tNwWDmR|2j");
      XPathLexer xPathLexer1 = new XPathLexer("Om$)>efv+H");
      Token token0 = xPathLexer1.rightBracket();
      token0.toString();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.number();
      xPathLexer0.nextToken();
      String string0 = xPathLexer0.getXPath();
      assertEquals("tNwWDmR|2j", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.799400379618249
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YI?Qz3L3");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("YI", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("?", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Qz3L3", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6941570926736427
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("58:f^;j?i2?E=`$C_OQ");
      XPathLexer xPathLexer1 = new XPathLexer("xT");
      xPathLexer1.div();
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.minus();
      xPathLexer1.nextToken();
      xPathLexer1.minus();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6948091183990215
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-pLxzS_`u:d3oVSH");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("-pLxzS_`u:d3oVSH");
      xPathLexer0.div();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("L", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("_H.W", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5768237406327152
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-pLxzS_`u:d3oVSH");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("pLxzS_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8751875760091705
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Om$)>efv+H");
      xPathLexer0.div();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("O", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("m", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(")", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(">", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("e", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals("f", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("v+H", token6.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("");
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.div();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7981603142329834
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d~Z");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("~Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("~", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertNotSame(token3, token1);
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6937763014741507
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hd2#w)1`y}O");
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      assertEquals("hd2#w)1`y}O", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("UJ\u0000(<P4SMCwh@jA");
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5765175650716485
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A%G>>:$'E}6|E");
      XPathLexer xPathLexer1 = new XPathLexer("A%G>>:$'E}6|E");
      xPathLexer1.number();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.5756821431835952
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EE6|^<(t:-<;");
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("E6", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("F0");
      XPathLexer xPathLexer1 = new XPathLexer("Xm);gh");
      xPathLexer1.nextToken();
      xPathLexer0.setXPath("[ (");
      assertNotSame(xPathLexer0, xPathLexer1);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.89599413211396
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7+X(XL4w69v|I4X");
      xPathLexer0.div();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("7", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("X", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("L4w69v", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5772388985080297
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rn6LU6Ei W<%s:#r*");
      xPathLexer0.or();
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("n6LU6Ei", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('i', char0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.576447529703788
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dSKSh<a^-@uv'(");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("SKSh", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(25);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.693092345931261
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RYr");
      Token token0 = xPathLexer0.dots();
      assertEquals("R", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("Y", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("r", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BJ#ik'z\"{[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("BJ", token0.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.692462672574315
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      Token token0 = xPathLexer0.dots();
      assertEquals("M", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("t1v3qtupJRy/f`Va?^");
      Token token1 = xPathLexer1.minus();
      assertEquals("t", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("1", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals("v", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.0992338308014475
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mI3]");
      xPathLexer0.div();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      String string0 = xPathLexer1.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mzI']");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.826000783956271
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      XPathLexer xPathLexer1 = new XPathLexer("equ*XT\"On8D?dDvV[");
      Token token0 = xPathLexer1.dollar();
      token0.toString();
      xPathLexer0.mod();
      Token token1 = xPathLexer1.leftParen();
      assertEquals("q", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (e)", string0);
      
      xPathLexer1.setPreviousToken(token0);
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.696019758059111
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rn6LU6Ei W<%s:#r*");
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("#", token4.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.2055626389131553
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yZKKl&_JXcJH,R\"\"|'");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.and();
      xPathLexer0.mod();
      Token token0 = xPathLexer1.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer1.star();
      assertEquals("o", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.slashes();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("yZ", token3.getTokenText());
      
      Token token4 = xPathLexer2.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      xPathLexer3.consume();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("KK", token5.getTokenText());
      
      xPathLexer3.colon();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("l", token6.getTokenText());
      
      Token token7 = xPathLexer2.colon();
      assertEquals(18, token7.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.57776930087716
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-pLxzS_`u:d3oVSH");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("-pLxzS_`u:d3oVSH");
      xPathLexer0.div();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.6956271332467625
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-tNntvrSV}TQ(");
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.5773668528831553
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rn6LU6Ei W<%s:#r*");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer1 = new XPathLexer("*Y%cx;G>&[e");
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5783933236504857
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.Token", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|~<I&EJe,5");
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("jgqnf'oFmOoo:");
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.23345861105843
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.mod();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.colon();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.7975345879435403
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ,WX]io?8`zr");
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6910517378300467
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0gAT'v!t(.jkl;r5x");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("g", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.573268702173663
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hd2#w)1`y}O");
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.1372258277837566
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      Token token0 = xPathLexer1.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer1.div();
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer1.star();
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      boolean boolean0 = xPathLexer1.isIdentifierStartChar(';');
      assertFalse(boolean0);
      
      XPathLexer xPathLexer2 = new XPathLexer("JR6uc3{$:37WB1X/IhV");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("JR6uc3", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("JR6uc3{$:37WB1X/IhV");
      boolean boolean1 = xPathLexer3.hasMoreChars();
      assertTrue(boolean1);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.8017965207136315
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      XPathLexer xPathLexer1 = new XPathLexer("equ*XT\"On8D?dDvV[");
      Token token0 = xPathLexer1.dollar();
      token0.toString();
      xPathLexer0.mod();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (e)", string0);
      
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("qu", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.093308880176036
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("hd2#w)1`y}O");
      xPathLexer1.getXPath();
      // Undeclared exception!
      try { 
        xPathLexer1.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.2481686105941472
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iHCyGCQ}");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.800510404197365
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4f(y@*vGC)}),");
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.div();
      xPathLexer0.div();
      xPathLexer1.and();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Nq@");
      Token token0 = xPathLexer0.dots();
      assertEquals("N", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("@", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.setXPath("%7c:Uk!R");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%7c:Uk!R", token2.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{K*");
      Token token0 = xPathLexer0.dots();
      assertEquals("{", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(20, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.8114827723126992
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rn6LU6Ei W<%s:#r*");
      xPathLexer0.or();
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals("R", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("6", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("L", token2.getTokenText());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("U6Ei W<%s:#r*", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.slashes();
      assertEquals("6", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.4246350953092914
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Om$)>efv+H");
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.setXPath("");
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GW+");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals("G", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("W", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.578625880994681
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.whitespace();
      token0.toString();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.literal();
      xPathLexer0.LA(1);
      xPathLexer0.consume();
      xPathLexer0.getPreviousToken();
      xPathLexer0.endPosition();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.5753765010294294
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cd$");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("LT!gy+)U.=^p=!Hd-d");
      xPathLexer0.setXPath(") (");
      xPathLexer1.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.hasMoreChars();
      xPathLexer1.and();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.7799098312019983
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.getXPath();
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath(")z qx (gFJ");
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.332531215816107
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.isIdentifierChar('!');
      xPathLexer0.consume((-3449));
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      String string0 = xPathLexer1.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d~Z");
      xPathLexer0.consume((-281));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      XPathLexer xPathLexer1 = new XPathLexer("equ*XT\"On8D?dDvV[");
      xPathLexer0.consume();
      Token token0 = xPathLexer1.dollar();
      token0.toString();
      xPathLexer0.mod();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (e)", string0);
      
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      char char0 = xPathLexer1.LA((-1));
      assertEquals('e', char0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.7600807478925788
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.dollar();
      xPathLexer1.dollar();
      xPathLexer1.pipe();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.8143620279956516
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.star();
      assertEquals("m", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(".", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("we", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.div();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("en", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(".", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("saxpath.XPathLexer", token7.getTokenText());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.5768237406327152
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"sOEOh %}2");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      xPathLexer0.whitespace();
      token1.toString();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.literal();
      Token token2 = xPathLexer0.operatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.2900293654218262
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      xPathLexer0.div();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("M<!CxoWUefS)WXM");
      xPathLexer1.getXPath();
      Token token0 = xPathLexer0.literal();
      assertEquals("<!CxoWUefS)WX", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      assertNotNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.798881389290342
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("equ*XT\"On8D?dDvV[");
      XPathLexer xPathLexer1 = new XPathLexer("equ*XT\"On8D?dDvV[");
      Token token0 = xPathLexer1.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("e", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("MI-&<0eq?5V[SNF");
      Token token1 = xPathLexer2.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      assertEquals("MI-", token1.getTokenText());
      
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      xPathLexer0.getXPath();
      Token token2 = xPathLexer1.star();
      assertEquals("q", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.8938952727983707
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.consume();
      boolean boolean0 = xPathLexer0.isIdentifierChar('n');
      assertTrue(boolean0);
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.endPosition();
      XPathLexer xPathLexer1 = new XPathLexer("^sQasHU|l\"");
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.8695686664773368
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tNwWDmR|2j");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("Om$)>efv+H");
      Token token0 = xPathLexer1.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("O", token0.getTokenText());
      
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer1.dots();
      assertEquals("$", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.minus();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(")", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.minus();
      assertEquals(">", token4.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.and();
      xPathLexer1.literal();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("", token5.getTokenText());
      
      xPathLexer1.consume();
      xPathLexer1.setXPath("oM!Je/M3y?");
      Token token6 = xPathLexer1.nextToken();
      assertNotSame(token6, token5);
      
      Token token7 = xPathLexer1.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals("o", token7.getTokenText());
      
      xPathLexer0.div();
      Token token8 = xPathLexer1.identifier();
      assertEquals(15, token8.getTokenType());
      assertEquals("M", token8.getTokenText());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.4330896362348002
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("iWMSd(Ou2<]YX|U");
      xPathLexer0.div();
      xPathLexer0.consume((-264));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.906420217601774
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rn6LU6Ei W<%s:#r*");
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.consume(1);
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.8811446864839958
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Rn6LU6Ei W<%s:#r*");
      Token token0 = xPathLexer0.minus();
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.div();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      xPathLexer0.minus();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("U6Ei", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("W<%s:#r*", token5.getTokenText());
      
      xPathLexer0.consume();
      Token token6 = xPathLexer0.slashes();
      assertEquals("<", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.7987091240017974
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.doubleColon();
      String string0 = token0.toString();
      assertEquals("[ (19) (L_)", string0);
      
      Token token1 = xPathLexer0.minus();
      assertEquals("H", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.number();
      assertEquals(31, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("W", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1763029840592487
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      Token token0 = xPathLexer0.dots();
      assertEquals("M", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("CxoWUefS", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      xPathLexer0.setXPath("");
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mzI']");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("mzI", token0.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.46550650712244
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("L", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("_H.W", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
      
      xPathLexer0.minus();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6725417168553187
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      Token token0 = xPathLexer0.dots();
      assertEquals("M", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.060001968021313
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("L_", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      boolean boolean0 = xPathLexer0.isIdentifierChar('\\');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.2148210788975
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A%G>>:$'E}6|E");
      Token token0 = xPathLexer0.dots();
      assertEquals("A", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals("G", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.060001968021313
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("L_", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("H", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("W", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.3980175545332347
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EE6|^<(t:-<;");
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.star();
      assertEquals("E", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("E", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("6|", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("<(", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.colon();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(18, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.comma();
      assertEquals("-", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.4375712594408907
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.div();
      xPathLexer1.dots();
      String string0 = "fz}%T_";
      XPathLexer xPathLexer2 = new XPathLexer("fz}%T_");
      xPathLexer2.minus();
      xPathLexer2.nextToken();
      xPathLexer2.minus();
      xPathLexer2.slashes();
      xPathLexer2.and();
      xPathLexer1.and();
      xPathLexer2.and();
      xPathLexer1.consume();
      String string1 = null;
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.0601371945257079
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("L_", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("H.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("W", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('c');
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      xPathLexer1.div();
      xPathLexer1.slashes();
      xPathLexer0.plus();
      xPathLexer1.operatorName();
      xPathLexer1.dots();
      xPathLexer1.rightParen();
      xPathLexer1.equals();
      xPathLexer1.isIdentifierStartChar(':');
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.1730494855684017
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^K&");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.mod();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dollar();
      Token token1 = xPathLexer0.minus();
      token1.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.star();
      token0.toString();
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer0.not();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0230684404517407
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("L_", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("H", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("W", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(34);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.1714080501251627
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.2573383630116632
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("58:f^;j?i2?E=`$C_OQ");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("58", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("j?i2?E=`$C_OQ", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("j", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("i", token5.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(9, int0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.2408073692011257
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hd2#w)1`y}O");
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.022500967974156
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("L_", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("W", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.0984147830355964
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("L", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("_H", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("W", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.2143638757543245
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.1742041247436594
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      xPathLexer0.setXPath("M<!CxoWUefS)WXM");
      Token token1 = xPathLexer0.minus();
      assertEquals("M", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("!", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("oW", token6.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.0236520531694753
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("[ ", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.1748027641994419
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M<!CxoWUefS)WXM");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      xPathLexer0.minus();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token1);
      
      Token token3 = xPathLexer0.minus();
      assertEquals("C", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("x", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("oW", token5.getTokenText());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.0613798164579848
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      xPathLexer0.doubleColon();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.0216254390087391
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L_H.W");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("L_", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("H.", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("W", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
  }
}
