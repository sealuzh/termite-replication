/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 10:58:07 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(0, "XfX<w=Dnnm\"THj|@,z", "XfX<w=Dnnm\"THj|@,z", 0, 0);
      Player player1 = new Player((-1520), "XfX<w=Dnnm\"THj|@,z", "", 0);
      player0.next = (Party) player1;
      assertEquals("XfX<w=Dnnm\"THj|@,z", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-27970), "PmA8GlpD<yN^B4Y", "8m{/?YwkFJ,jG", (-2383), (-27970));
      player0.setY((-1711.0F));
      player0.type();
      float float0 = player0.getY();
      assertEquals((-1711.0F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(818, "", 2);
      Party party0 = player0.boss;
      player0.setZ((-967.72974F));
      player0.add((Party) null);
      float float0 = player0.getZ();
      assertEquals((-967.72974F), float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(13438, "", "Player", 2147340491);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.getZ();
      player0.isConnected();
      int int0 = player0.type();
      assertFalse(player0.isConnected());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(682, "K7#`\"7ei3HDn13?8", "K7#`\"7ei3HDn13?8", 0, 0);
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0, int0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(7044);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(489, "", 489);
      player0.setY(489);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.getZ();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.isConnected();
      player0.getStrength();
      player0.gangStrength();
      player0.type();
      Party party0 = new Party(1862);
      player0.boss = party0;
      player0.type();
      player0.getY();
      System.setCurrentTimeMillis(489);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2302);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      try { 
        dataInputStream0.skip(5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(18740);
      player0.setDead((-1003L));
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1003L), long0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1880);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)73;
      player1.setMoney((byte)73);
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte) (-110);
      byteArray0[4] = (byte)124;
      player0.unpack(byteArray0);
      File file0 = MockFile.createTempFile("UW* }OG#T!y", "state.Player$JoinInfo");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      Player player2 = new Player(0, "WyW=vFA]km#92:%\"", 573);
      player2.prev = (Party) player0;
      player0.isJoinOK(player1, true);
      player1.setMoney(0.1F);
      player0.pack();
      System.setCurrentTimeMillis((short)4919);
      float float0 = player1.getMoney();
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(1);
      player0.setDead();
      player0.getY();
      Player player1 = new Player((-2703), "gui.ModuleBrowserDialog$ModuleFilter", (String) null, 531);
      player1.toString();
      player1.setDead(602L);
      player0.getPictureId();
      player0.getStrength();
      player1.getZ();
      float float0 = player0.getX();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(73);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.getName());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(26);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player4919", player1.getName());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = (-1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-1), (String) null, "", (-1), (-1));
      player0.getStrength();
      byte[] byteArray0 = new byte[3];
      player0.setDead();
      byteArray0[0] = (byte) (-35);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(512, "$+Bd]7sb<gJ}8", "$+Bd]7sb<gJ}8", 512, 512);
      int int0 = player0.getStrength();
      assertEquals(512, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(512, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-2106), "&KEm?tY1;", 10);
      player0.isConnected();
      Party party0 = player0.gangBoss();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      player0.prev = party0;
      player0.setX((-79.918F));
      player0.getX();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)37;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player0 = new Player((byte)37, (String) null, "", 4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.markSupported();
      player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      
      player0.getIP();
      player0.toString();
      assertEquals(4919, player0.getPictureId());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System.setCurrentTimeMillis((-282L));
      System.setCurrentTimeMillis((-282L));
      String string0 = "";
      Player player0 = new Player((-3773), "", "", (-28150));
      byte[] byteArray0 = new byte[4];
      player0.setY((byte) (-99));
      byteArray0[0] = (byte) (-99);
      byte byte0 = (byte)76;
      Party party0 = player0.next;
      player0.boss = null;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-5);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-99), 3074);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1880, "]/>{$nm9O4Ovr", 1880);
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(1880, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-27951), "", "", (-27951), (-27951));
      player0.pack();
      assertEquals((-27951), player0.getStrength());
      assertEquals((-27951), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(73);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1vD6|% @wAyc/H");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      dataOutputStream0.writeShort((short)4919);
      player0.pack(dataOutputStream0);
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player73", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(0, ".0q=FQA", 0);
      assertEquals(0.0F, player0.getZ(), 0.01F);
      
      byte[] byteArray0 = new byte[9];
      player0.setZ(0.1F);
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte)76;
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      float float0 = player0.getZ();
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(1540.0F);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)77;
      byteArray0[3] = (byte) (-14);
      player0.unpack(byteArray0);
      player0.setX(0.0F);
      player0.pack();
      player0.setDead((-2797L));
      player0.setDead((-2797L), true);
      player0.getStrength();
      player0.getZ();
      player0.getX();
      player0.getZ();
      player0.setMoney((-2797L));
      float float0 = player0.getZ();
      assertEquals(0.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(3, (String) null, 3);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      player0.setDead((-5630L));
      player0.isDead();
      int int0 = player0.gangStrength();
      assertEquals((-5630L), player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = new Player((-1733), "", (short)4919);
      player1.reset(false);
      player0.isJoinOK(player1, false);
      player1.prev = (Party) player0;
      player1.setMoney((-1733));
      player1.getMoney();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-1733.0F), player1.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8862673658216265
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-987), "", (-987));
      player0.setDead();
      player0.getSubparty();
      player0.setDead();
      player0.setConnected(true);
      player0.getMoney();
      player0.setZ(0.0F);
      player0.reset(true);
      player0.getName();
      player0.toString();
      player0.setConnected(true);
      player0.getName();
      player0.getPictureId();
      player0.setDead((long) (-987), true);
      player0.setConnected(false);
      player0.setDead(2716L);
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(7032);
      Party party0 = new Party();
      player0.head = party0;
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-1952));
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1952", player0.getName());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(1392409281320L, false);
      player0.getTimeOfDeath();
      int int0 = Packable.TEXT_MESSAGE;
      assertEquals(1, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0, "", "", (-3135), 0);
      player0.setMoney((-1.0F));
      player0.id = 1;
      player0.getPictureId();
      player0.getIP();
      assertEquals((-1.0F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player((-475));
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-475", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-1006));
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1006", player0.getName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(1, "", 3);
      player0.toString();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(3, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-11980));
      player0.setDead((long) (-11980));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-11980L), player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 7029;
      Player player0 = new Player(7029);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(14647);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player14647", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-4938));
      String string0 = player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-4938", player0.toString());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", string0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(1, (String) null, (String) null, 1, (-2384));
      Player player1 = new Player();
      player0.prev = (Party) player1;
      player0.isJoinOK(player1, true);
      assertEquals(1, player1.getStrength());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-2384), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(1);
      Player player1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(382, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 382, 382);
      Party party0 = player0.head;
      player0.prev = null;
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(382, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(382, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      player0.unpack(byteArray0);
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      player0.unpack(byteArray0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(4589);
      Player player1 = new Player((-687));
      boolean boolean0 = player1.isDead();
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-687", player1.getName());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-1006));
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1006", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-2646));
      player0.setDead();
      player0.getY();
      player0.toString();
      player0.setDead((-1L));
      int int0 = player0.getPictureId();
      assertEquals((-1L), player0.getTimeOfDeath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-15), "state.Party", "", (-15), (-2220));
      int int0 = player0.getPictureId();
      assertEquals((-15), int0);
      assertEquals((-2220), player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("state.Party", player0.getIP());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-389));
      player0.setY((-914.3535F));
      Player player1 = new Player(13715);
      player0.isJoinOK(player1, true);
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(3, "state.Party", "", 3, (-2220));
      int int0 = player0.getPictureId();
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("state.Party", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-2220), player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(3, (String) null, 3);
      player0.getSubparty();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-114);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis((byte)30);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(4);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte) (-110);
      player0.unpack(byteArray0);
      String string0 = " ";
      MockFile.createTempFile("_SW&fYwBx=KDhL-_Nd", " ");
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-12059));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(3, (String) null, 3);
      player0.getSubparty();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-114);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(3, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-1));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(1872);
      int int0 = player0.type();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(5, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player1872", player0.toString());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(4589);
      player0.setX(4589);
      System.setCurrentTimeMillis((-1240L));
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(1, "", 3);
      player0.setConnected(false);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(4);
      boolean boolean0 = player0.isConnected();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player4", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = 7029;
      Player player0 = new Player(7029);
      String string0 = "";
      player0.setZ(7029);
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player(7023);
      player0.getSubparty();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(0L, true);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player7023", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }
}
