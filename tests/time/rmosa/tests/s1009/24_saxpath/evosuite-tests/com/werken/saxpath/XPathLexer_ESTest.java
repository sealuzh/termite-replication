/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 23:01:14 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.80056080149607
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$ba>YKi`@");
      XPathLexer xPathLexer1 = new XPathLexer("$ba>YKi`@");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("$", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.comma();
      assertEquals(">", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("$", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("ba", token5.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6932245773362196
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.consume((-1200));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.577199389213468
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'e'oYdam(~Ha");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.896987831782037
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("m", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.062358683886408
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!\".'");
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.LA(121);
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("n!\".'");
      xPathLexer0.consume((-4564));
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.331573999793921
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B`Ez@vA#)#zW134M");
      xPathLexer0.pipe();
      xPathLexer0.plus();
      xPathLexer0.or();
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (5) (E)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.minus();
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("#", token3.getTokenText());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(")", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.not();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("z", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("W", token7.getTokenText());
      
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("1", token9.getTokenText());
      
      xPathLexer0.or();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("3", token10.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.consume((-934));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8016179750056507
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Pj#?B* 5Emvy3Fhr<");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("g1C?Cd(+})9.F>");
      xPathLexer1.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.dots();
      xPathLexer1.nextToken();
      xPathLexer2.operatorName();
      xPathLexer2.equals();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0619553454854898
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Pj#?B* 5Emvy3Fhr<");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.not();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (Pj)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (23) (#)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("B", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals("*", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(" ", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.leftBracket();
      char char0 = xPathLexer0.LA(0);
      assertEquals('5', char0);
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals("E", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.284895754901243
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume((-44));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1366649851176507
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.not();
      token0.toString();
      token2.toString();
      token2.toString();
      token2.toString();
      token1.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("[ (23) ( )");
      xPathLexer1.plus();
      xPathLexer1.at();
      xPathLexer1.pipe();
      xPathLexer0.leftBracket();
      xPathLexer1.LA(121);
      XPathLexer xPathLexer2 = new XPathLexer("[ (23) ())");
      xPathLexer2.leftBracket();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("[ (23) ())");
      xPathLexer2.consume(121);
      xPathLexer1.nextToken();
      xPathLexer0.number();
      Token token3 = xPathLexer0.mod();
      assertNull(token3);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0630336486492773
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.setXPath("YVd*Ger_Y4.@+{ZH");
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("YV", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(20, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-:8j");
      XPathLexer xPathLexer1 = new XPathLexer("% |YiFCQv?V09x8:dG{");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("% |YiFCQv?V09x8:dG{", token0.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.205611176711966
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Jfs5MG-");
      Token token0 = xPathLexer0.not();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.pipe();
      xPathLexer1.leftBracket();
      xPathLexer0.LA(105);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftBracket();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("[ (23) (.)");
      xPathLexer0.consume((-1222));
      xPathLexer3.nextToken();
      xPathLexer1.number();
      xPathLexer2.mod();
      XPathLexer xPathLexer4 = new XPathLexer("[ (23) (.)");
      xPathLexer2.dots();
      xPathLexer4.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      XPathLexer xPathLexer1 = new XPathLexer("r.Yp_[\"BiN3D?x");
      xPathLexer1.operatorName();
      Token token0 = xPathLexer1.dots();
      assertEquals("r.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7980805884895408
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Pj#?B* 5Emvy3Fhr<");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("'", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Pj", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("#", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.270673013427521
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Pj#?B* 5Emvy3Fhr<");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.comma();
      token1.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer0.at();
      xPathLexer1.pipe();
      xPathLexer0.leftBracket();
      xPathLexer1.LA(475);
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.consume((-2077));
      XPathLexer xPathLexer3 = new XPathLexer("TV");
      xPathLexer3.nextToken();
      xPathLexer2.number();
      xPathLexer0.mod();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer3.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer1.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6937763014741507
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-b8Ij");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.575093715592879
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i0?/&-o.T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("i0", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5753765010294294
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setXPath("Dh)9qV<tzpK");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.685029455385
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(18, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("*cDG~vrt5Te");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!\".'");
      Token token0 = xPathLexer0.dots();
      assertEquals("n", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.setXPath("|vSm[b|Y#CJv-");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7957357779255525
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("r", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("4", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.979024296846825
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Jfs5MG-");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.doubleColon();
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftBracket();
      xPathLexer2.slashes();
      xPathLexer1.minus();
      xPathLexer1.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("r}", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(12, token1.getTokenType());
      assertEquals("4/", token1.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4435178045577053
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4':[gk= /");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.574178383785099
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      XPathLexer xPathLexer1 = new XPathLexer("W?%H\"3wG");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("W", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.437973641118805
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setXPath("3UwrU4d(7fX5]9BK");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5769784874926436
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Jfs5MG-");
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ik;Eg:NyrUSW]/apV~Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";Eg:NyrUSW]/apV~Z", token1.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("w6");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("w6", token1.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setXPath("Z%rev,lHg$tc0");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Z%rev,lHg$tc0", token1.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.89413587430213
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("O>t,wy");
      Token token1 = xPathLexer2.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer3.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("O", token2.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.798987970691887
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("12L/j5u+d(M(V4a");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      assertEquals("L", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.dots();
      assertEquals("/", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.575737837976132
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z%rev,lHg$tc0");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("6a_G-A}xOc[_DtZbdS");
      XPathLexer xPathLexer1 = new XPathLexer("X<B");
      Token token1 = xPathLexer1.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("X", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.4374355727841266
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<Y,");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.setXPath("<Y,");
      Token token2 = xPathLexer0.relationalOperator();
      assertNotNull(token2);
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.8016470066901054
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("R=7hv(!y,'i&Op>sf|");
      xPathLexer0.setXPath("R=7hv(!y,'i&Op>sf|");
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer2.at();
      xPathLexer2.mod();
      xPathLexer2.consume();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer(">e>8");
      xPathLexer4.slashes();
      xPathLexer2.literal();
      xPathLexer4.nextToken();
      xPathLexer4.relationalOperator();
      Token token1 = xPathLexer2.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e;?2SDr ]trHh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("e", token0.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4352718511829727
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      xPathLexer0.setXPath(">=6x-%]/!@u");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">=", token0.getTokenText());
      assertEquals(10, token0.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5712448203683604
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".Jfs5Mg-");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5757919066433397
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6a_G-A}xOc[_DtZbdS");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("C9O*xgoH.8u~;4-k#");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("C9O", token1.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6940799232481694
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FI]h&");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.number();
      xPathLexer1.setXPath("FI]h&");
      xPathLexer1.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.leftBracket();
      xPathLexer1.slashes();
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6923702084041805
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qf");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("qf", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.574937037175331
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bIpaB?=* fY");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setXPath("lN#:L]$2p H{");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("lN", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5743910366293306
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("v");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("v", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xeN*AaK/l");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("xeN", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";?2SDr ]trHh");
      Token token0 = xPathLexer0.comma();
      assertEquals(";", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?2SDr ]trHh", token1.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.442364049764533
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"*Q");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7959184263273786
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer1.slashes();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.981680843336388
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6a_G-A}xOc[_DtZbdS");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("!=E");
      Token token1 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token1);
      assertEquals("!=", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer1.literal();
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.minus();
      assertEquals(6, token4.getTokenType());
      
      boolean boolean0 = xPathLexer2.isIdentifierChar('[');
      assertFalse(boolean0);
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",s!=()-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5755655726875877
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.setXPath("bnBa[V?UfN~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("bnBa", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`", token0.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6927997985751575
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tp|CvmVWQt4 B|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6948091183990215
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Jfs5MG-");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("f", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("s5MG-", token3.getTokenText());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6a_G-A}xOc[_DtZbdS");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      xPathLexer1.setXPath("^$l");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("^$l", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      Token token2 = xPathLexer2.leftBracket();
      assertEquals(3, token2.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_E,9t=%wx[:sdvM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("_E", token0.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.892632114903634
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.consume();
      xPathLexer1.rightBracket();
      xPathLexer1.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-412));
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m<*h");
      Token token0 = xPathLexer0.at();
      assertEquals("m", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.57613028340169
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.setXPath("yn$(>RFodIxNK_0h!");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("yn", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6a_G-A}xOc[_DtZbdS");
      Token token0 = xPathLexer0.number();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("L=i^cZD");
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("i", token3.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.2789389564075417
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-3405));
      // Undeclared exception!
      try { 
        xPathLexer1.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5633125094217712
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6a_G-A}xOc[_DtZbdS");
      xPathLexer0.setXPath("$]3;iT,8oRdDqJ#2+M");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-2606));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("V&tgc+CvR");
      xPathLexer1.relationalOperator();
      xPathLexer0.setXPath("V&tgc+CvR");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("V", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.695541075652718
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J1P-8q2[U#GO");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("[F0T'EG181I0 #W\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8001460686038016
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";(u1gW]0&@zw~S>zxh");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.not();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      token2.toString();
      String string0 = token0.toString();
      assertEquals("[ (23) (;)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (23) (()", string1);
      
      String string2 = token2.toString();
      assertEquals("[ (15) (u1gW)", string2);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("]", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.slashes();
      assertEquals("&", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]~7Z@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("~7Z@", token1.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5738235641517457
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Jfs5MG-");
      xPathLexer0.number();
      xPathLexer0.setXPath("EDStedQh&mI}(fr");
      xPathLexer0.consume((-1167));
      XPathLexer xPathLexer1 = new XPathLexer(".Jfs5MG-");
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GD");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("GD", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.4395810351312623
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("64hMBxqU");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setXPath("");
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("64", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("' '");
      int int0 = (-1020);
      xPathLexer0.consume((-1020));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.437138219230752
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.572948035186329
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-412));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.5703506325889265
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("r}", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("}4", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(11, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.6905579106695527
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("f`P5@cmoNv22jp6%Q]O");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.8928447677478655
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1817));
      xPathLexer0.plus();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("[ (");
      assertEquals("[ (", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.4394166425618065
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      String string0 = "9\\ut)+}s";
      xPathLexer0.setXPath(string0);
      Token token2 = xPathLexer0.nextToken();
      assertEquals("9", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.439243482388646
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("NP#}b62,7!'$N");
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals("NP#}b62,7!'$N", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R=7hv(!y,'i&Op>sf|");
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("{");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("{", token0.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("R", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setXPath("0w#_H");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("#", token3.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.99174013249436
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".Jfs5MG-");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("Jfs5MG-", token1.getTokenText());
      
      xPathLexer0.setXPath("EDStedQh&mI}(fr");
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("E", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.5771790982409217
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("EDStedQh&mI}(fr");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("EDStedQh", token1.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.6930228966639507
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!\".'");
      xPathLexer0.dots();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("QN");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5774335095513217
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6a_G-AxOc[_DtZbdS");
      XPathLexer xPathLexer1 = new XPathLexer("6a_G-AxOc[_DtZbdS");
      xPathLexer1.number();
      xPathLexer1.setXPath("nL");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("a", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals("n", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      assertEquals(27, token3.getTokenType());
      assertEquals("G-AxOc[", token3.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.2857353728425127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7}J2{lYwj'i2d_:aY");
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.number();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer2 = new XPathLexer("[ (30) ()");
      xPathLexer2.setXPath("");
      XPathLexer xPathLexer3 = new XPathLexer("[ (30) ()");
      xPathLexer2.mod();
      xPathLexer3.whitespace();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5719788551126714
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!\".'");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      boolean boolean0 = xPathLexer0.isIdentifierChar('+');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("!stEw'/TIxth=m/3B");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5773668528831553
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KPU.>");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r}4/M&sho[L9T\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      XPathLexer xPathLexer1 = new XPathLexer("pH");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("pH", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.9825810683926526
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SNc!'c+dIB");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(32, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("'", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.slashes();
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.isIdentifierChar('[');
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.8952214760069266
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals(7, token0.getTokenType());
      assertEquals("[ (7) (<)", string0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(32, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (7) (<)");
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("[", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("skPC>.\"HRk\"kGFW3<kM");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.and();
      XPathLexer xPathLexer3 = new XPathLexer("skPC>.\"HRk\"kGFW3<kM");
      Token token5 = xPathLexer3.not();
      assertEquals("s", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("s");
      xPathLexer1.consume((-3322));
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T5\u0004:mDWB:>ghpk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("T5\u0004", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.792161013796333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Pj#?B* 5Emvy3Fhr<");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      token1.toString();
      token0.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (Pj)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (23) (')", string1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#?B* 5Emvy3Fhr<", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("#", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("?", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (23) (')");
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer1.and();
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      xPathLexer1.consume((-895));
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5736944152430543
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath("M[|&MYmd");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.285265962734548
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&W3#)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&W3#)", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.3303231706458116
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0[s,F')@5.E>");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("~S&IWn.w");
      Token token2 = xPathLexer1.doubleColon();
      token2.toString();
      token1.toString();
      Token token3 = xPathLexer1.equals();
      token3.toString();
      token3.toString();
      token1.toString();
      token3.toString();
      XPathLexer xPathLexer2 = new XPathLexer("[ (15) ()");
      Token token4 = xPathLexer1.minus();
      xPathLexer2.setPreviousToken(token4);
      xPathLexer1.dots();
      xPathLexer1.at();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      xPathLexer1.leftBracket();
      xPathLexer0.LA(4831);
      XPathLexer xPathLexer4 = new XPathLexer("0[s,F')@5.E>");
      xPathLexer4.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      xPathLexer3.consume((-476));
      // Undeclared exception!
      try { 
        xPathLexer3.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.931067653776499
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6a_G-A}xOc[_DtZbdS");
      xPathLexer0.number();
      xPathLexer0.setXPath(") (");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer0.isIdentifierChar('[');
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("abt}-:{W=l\"6_*9M}");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("abt", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('b', char0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.7957357779255525
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5K'k<\"zs1ne4K1t]f#a");
      xPathLexer0.setXPath("");
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume((-435));
      xPathLexer1.plus();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer1.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5K'k<\"zs1ne4K1t]f#a");
      xPathLexer0.setXPath("");
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume((-435));
      xPathLexer1.plus();
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.572774875013169
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!\".'");
      xPathLexer0.setXPath("n!\".'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.6934077834430896
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("h]Pi38;6]axZ#I\"``");
      xPathLexer0.number();
      xPathLexer1.setXPath("h]Pi38;6]axZ#I\"``");
      XPathLexer xPathLexer2 = new XPathLexer("O)4Ig ");
      Token token0 = xPathLexer1.nextToken();
      xPathLexer1.setPreviousToken(token0);
      assertEquals("h", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer1.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.576374057017259
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("AwsP;q,q[/VBx");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("AwsP", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";q,q[/VBx", token1.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.9867837599917741
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'e'oYdam(~Ha");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("e", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("oYdam(~Ha", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.comma();
      assertEquals("o", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("Y", token3.getTokenText());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.dots();
      assertEquals("d", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.5723992881587088
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.1237317595306533
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Pj#?B* 5Emvy3Fhr<");
      Token token0 = xPathLexer0.not();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      token0.toString();
      token1.toString();
      token0.toString();
      token1.toString();
      token1.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.LA(121);
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("'Pj#?B* 5Emvy3Fhr<");
      xPathLexer1.consume(4831);
      xPathLexer0.nextToken();
      xPathLexer1.number();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.9782767882150005
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-:8j");
      Token token0 = xPathLexer0.colon();
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("8", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("j", token3.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.6933486083439715
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+n\",=`@\"}P");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("n", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("\"", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(5, token0.getTokenType());
      assertEquals("+", token0.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.6916065998081296
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-412));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.6870204957035666
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@-F4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cBYC1so");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.8620651674773046
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";(u1gW]0&@zw~S>zxh");
      Token token0 = xPathLexer0.not();
      token0.toString();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      token1.toString();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.at();
      token2.toString();
      token2.toString();
      token1.toString();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.literal();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.439243482388646
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.4179004843732437
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" =-J[1<K(&s,z[");
      xPathLexer0.number();
      xPathLexer0.equals();
      xPathLexer0.at();
      xPathLexer0.setXPath(" =-J[1<K(&s,z[");
      xPathLexer0.at();
      xPathLexer0.setXPath(" =-J[1<K(&s,z[");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.currentPosition();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-304));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.0618047033734874
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5<");
      xPathLexer0.setXPath("5<");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("5", token0.getTokenText());
      
      xPathLexer0.consume((-1));
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.consume((-1));
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.div();
      xPathLexer0.getXPath();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.4615266627808872
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("HysTfn.\"(/n_Us{NH");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("HysTfn.", token1.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.569237460047183
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-2048));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-916));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.137339116556839
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~S&IWn.w");
      Token token0 = xPathLexer0.not();
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (S)", string0);
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("&I", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("n.w", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.setXPath("q?8SG#S!#8%Oi?@-T");
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("q", token6.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierChar('n');
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      Token token7 = xPathLexer0.minus();
      assertEquals("8", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.or();
      Token token9 = xPathLexer0.at();
      assertEquals("G", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals("#", token10.getTokenText());
      assertEquals(11, token10.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.936823097354051
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'e'oYdam(~Ha");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.436476186791162
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6a_G-A}xOc[_DtZbdS");
      XPathLexer xPathLexer1 = new XPathLexer("6a_G-A}xOc[_DtZbdS");
      Token token0 = xPathLexer1.number();
      token0.toString();
      token0.toString();
      xPathLexer0.setXPath("CE8,`TwoIpWR");
      xPathLexer0.consume((-5620));
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.2396442564899652
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
      
      xPathLexer0.setXPath("jp3xA7K l%>Y.");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("jp3xA7K", token1.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.9773240183769714
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-:8j");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("j", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.currentPosition();
      xPathLexer0.getPreviousToken();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('a');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.currentPosition();
      xPathLexer0.getPreviousToken();
      boolean boolean0 = xPathLexer0.isIdentifierChar('a');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.9783899744062853
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-:8j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("j", token3.getTokenText());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.9994638379989775
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.022371819065464
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".Jfs5Mg-");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.equals();
      assertEquals("f", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.9818391651254244
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.star();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      xPathLexer0.endPosition();
      xPathLexer0.getXPath();
      xPathLexer0.div();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertNotNull(token7);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.6910517378300467
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.consume(366);
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.451677453814124
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" =-J[1<K(&s,z[");
      xPathLexer0.number();
      Token token0 = xPathLexer0.equals();
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.at();
      xPathLexer0.setXPath(" =-J[1<K(&s,z[");
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.setXPath(" =-J[1<K(&s,z[");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("-", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("J", token5.getTokenText());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.0618047033734874
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.consume((-1));
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.consume((-1));
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.div();
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.9819344023383753
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".Jfs5Mg-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("J", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("f", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.794192141155034
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<B");
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.9431937872619043
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".Jfs5Mg-");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.6855126311160165
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("1Zkt4d-w2xW6c");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("1Zkt4d-w2xW6c");
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("kt4d-w2xW6c", token1.getTokenText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.3043852958542255
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7}J2{lYwj'i2d_:aY");
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("J", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.9674983971788698
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";?2SDr ]trHh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";?2SDr ]trHh", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.733125256399209
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.0177004811204629
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-:8j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=0.9711897962191061
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L^TI<1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("L", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("T", token2.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=1.0182824686077319
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-:8j");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("8", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("j", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.0610299520304505
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n!\".'");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("n", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("!", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.dots();
      assertEquals("\".", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("'", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=0.9776290359154799
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-:8j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.9866412191962425
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c!BC1so");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("!", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("BC1so", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 157
  /*Coverage entropy=0.9546098792433829
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
  }
}
