/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 23:11:30 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.EmptyStackException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      Node node0 = simpleNode0.parent;
      JavaParser javaParser0 = new JavaParser("<");
      Node node1 = javaParser0.currNode;
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.close();
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("P$)~GTbJ[=sB} w_!#", stringWriter1);
      simpleNode0.dump("?Y'B9sayM4MaTdL'", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(580);
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("<<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 580);
      simpleNode1.jjtAddChild(simpleNode0, 1661);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.jjtGetChild(1661);
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: <<
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.49056603773584906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter(421);
      simpleNode0.jjtAddChild(simpleNode0, 421);
      // Undeclared exception!
      simpleNode0.dump("", stringWriter0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier(" ");
      StringWriter stringWriter0 = new StringWriter(2068);
      stringWriter0.append('v');
      stringWriter0.append((CharSequence) "\"float\"");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "\"float\"");
      stringWriter0.append('q');
      stringWriter0.flush();
      simpleNode0.dump("|Qh<hwNqcr", stringWriter1);
      simpleNode0.jjtAddChild((Node) null, 18);
      assertEquals(19, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(3);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("dzN", stringWriter0);
      assertEquals("<Modifiers>\n  <identifier>*le</identifier>\n</Modifiers>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 3;
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "dzN");
      simpleNode0.dump("dkT", stringWriter1);
      JavaParser javaParser0 = new JavaParser("dkT");
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      // Undeclared exception!
      try { 
        jJTJavaParserState0.rootNode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("+=");
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump("+=", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>*amp</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("sg{Pr05J", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 18;
      int int1 = 47;
      SimpleNode simpleNode0 = new SimpleNode(47);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = stringWriter0.append('p');
      stringWriter0.append((CharSequence) ">");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "\"float\"");
      stringWriter2.append('v');
      stringWriter1.write("CompilationUnit");
      simpleNode0.dump("CompilationUnit", stringWriter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(47);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter(47);
      stringWriter0.append('g');
      stringWriter0.append((CharSequence) null);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append('%');
      stringWriter1.write("<<");
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.SimpleNode", stringWriter1);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("+=");
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      stringWriter0.write(charArray0);
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("+=", stringWriter0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 30, 2, 2);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 30);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 30. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.identifiers = null;
      String string0 = "n;\\wVsKrgD3/N";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("n;wVsKrgD3/N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      Node node1 = simpleNode0.parent;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 1);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(97);
      simpleNode0.setIdentifier("com.soops.CEN4010.JMCA.JParser.JavaParserTreeConstants");
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('3');
      StringWriter stringWriter2 = stringWriter1.append('3');
      simpleNode0.dump((String) null, stringWriter2);
      assertEquals("33<MarkerAnnotation>\n  <identifier>com.soops.CEN4010.JMCA.JParser.JavaParserTreeConstants</identifier>\n</MarkerAnnotation>\n", stringWriter2.toString());
      assertEquals("33<MarkerAnnotation>\n  <identifier>com.soops.CEN4010.JMCA.JParser.JavaParserTreeConstants</identifier>\n</MarkerAnnotation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("nD", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(0);
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("\u0000<CompilationUnit>\n  <identifier>*rshft</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = stringWriter0.append('X');
      stringWriter1.append((CharSequence) "\"float\"");
      stringWriter1.append('X');
      stringWriter1.write("1SbVjq<:\"R txy(");
      simpleNode0.dump("\"^\"", stringWriter0);
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = (-457);
      SimpleNode simpleNode0 = new SimpleNode((-457));
      JavaParser javaParser0 = new JavaParser("N=HHbbw-cc~kPf,+>Q");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-2784));
      simpleNode0.jjtSetParent(simpleNode1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("  <identifier>", stringWriter0);
      stringWriter0.append('3');
      simpleNode0.jjtGetParent();
      String string0 = "z^,3V";
      char[] charArray0 = new char[2];
      charArray0[0] = '3';
      charArray0[1] = '3';
      // Undeclared exception!
      try { 
        stringWriter0.write(charArray0, (-1995026184), 3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-6477));
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump("<DECIMAL_LITERAL>", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 60);
      assertEquals(61, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(16);
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      simpleNode0.children = null;
      simpleNode0.jjtAddChild((Node) null, 7);
      SimpleNode simpleNode1 = new SimpleNode((byte)0);
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode1.jjtAddChild((Node) null, 0);
      simpleNode1.identifiers = null;
      simpleNode0.toString();
      assertEquals(8, simpleNode0.jjtGetNumChildren());
      
      simpleNode1.jjtGetParent();
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(30);
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild('#');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 35
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.setIdentifier(" (");
      StringWriter stringWriter0 = new StringWriter(3);
      simpleNode0.dump("/", stringWriter0);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 3, (-1088808359), (-1930));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8291879389386038
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("{");
      JavaParser javaParser0 = new JavaParser("{");
      Node node0 = javaParser0.currNode;
      simpleNode0.parent = null;
      StringWriter stringWriter0 = new StringWriter(14);
      stringWriter0.close();
      simpleNode0.setIdentifier("Mjn[I1}@;$iD:>uiza");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("Mjn[I1}@;$iD:>uiza", stringWriter1);
      simpleNode0.dump("~ZXP'F8hCcpc Se<", stringWriter1);
      assertEquals("<ClassOrInterfaceBody>\n  <identifier>Mjn[I1}@;$iD:>uiza</identifier>\n</ClassOrInterfaceBody>\n<ClassOrInterfaceBody>\n  <identifier>Mjn[I1}@;$iD:>uiza</identifier>\n</ClassOrInterfaceBody>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceBody : { : Mjn[I1}@;$iD:>uiza", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(7);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2004744157));
      // Undeclared exception!
      try { 
        simpleNode0.toString("*lshft");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2004744157
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = (-1);
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.popNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9971762968966938
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("{");
      JavaParser javaParser0 = new JavaParser("{");
      Node node0 = javaParser0.currNode;
      simpleNode0.parent = null;
      SimpleNode simpleNode1 = new SimpleNode(14);
      simpleNode0.jjtSetParent(simpleNode1);
      StringWriter stringWriter0 = new StringWriter(14);
      stringWriter0.close();
      simpleNode0.setIdentifier("Mjn[I1}@;$iD:>uiza");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("Mjn[I1}@;$iD:>uiza", stringWriter1);
      simpleNode0.dump("~ZXP'F8hCcpc Se<", stringWriter1);
      assertEquals("<ClassOrInterfaceBody>\n  <identifier>Mjn[I1}@;$iD:>uiza</identifier>\n</ClassOrInterfaceBody>\n<ClassOrInterfaceBody>\n  <identifier>Mjn[I1}@;$iD:>uiza</identifier>\n</ClassOrInterfaceBody>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 627);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1721115488));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.dump("", stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 3);
      simpleNode0.dump("#NA%K *P4`]N&q<YspUModifiers", stringWriter0);
      assertEquals(4, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(1111);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtAddChild(simpleNode0, 1111);
      // Undeclared exception!
      try { 
        simpleNode0.dump("#NA%K *P4`]N&q<YspUModifiers", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9749540746744716
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("t");
      StringWriter stringWriter0 = new StringWriter(2068);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.append((CharSequence) "\"float\"");
      stringWriter0.close();
      stringWriter0.append('q');
      stringWriter0.write("wwKJ~oY:]cs{1dW_~C");
      simpleNode0.dump("<", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2068);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2147);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("n;wVsKrgD3/N");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString(">=");
      simpleNode0.dump("n;wVsKrgD3/N", stringWriter0);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.rootNode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-651));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -651
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(685);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.941488363211384
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier("{");
      JavaParser javaParser0 = new JavaParser("1SG/bl");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 14);
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter(14);
      simpleNode1.dump("/", (Writer) null);
      simpleNode0.dump(" (", stringWriter0);
      assertEquals("<ClassOrInterfaceBody>\n  <identifier>=</identifier>\n</ClassOrInterfaceBody>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }
}
