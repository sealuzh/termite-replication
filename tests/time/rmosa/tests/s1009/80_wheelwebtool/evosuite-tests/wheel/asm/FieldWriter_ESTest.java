/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 23:44:00 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-532));
      classWriter0.index = (-532);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "h'(u~1", "h'(u~1", "h'(u~1", "h'(u~1");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-565));
      classWriter0.index = (-2334);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "F", "F", "F", "F");
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("F", false);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("F", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", (String) null, "=/ :kn>Z&c*H7<!!");
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-599));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.version = 2476;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-599), "DOeprecated", "DOeprecated", "DOeprecated", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putLong((-2831L));
      ByteVector byteVector2 = byteVector1.putUTF8("RuntimeVisibleAnnotations");
      ByteVector byteVector3 = byteVector2.putInt(2);
      ByteVector byteVector4 = byteVector3.putLong((-599));
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector4);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-599));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-599), "DOeprecated", "DOeprecated", "DOeprecated", (Object) null);
      ByteVector byteVector0 = new ByteVector(49);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-599));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.version = (-599);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-599), "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-599));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-599), "DOeprecated", "DOeprecated", "DOeprecated", (Object) null);
      ByteVector byteVector0 = new ByteVector(49);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-599));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-599), "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-560));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "F", "F", "F", "F");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2160));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-614));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "=/ :kn>Z&c*[7<!!", "=/ :kn>Z&c*[7<!!", "=/ :kn>Z&c*[7<!!", "=/ :kn>Z&c*[7<!!");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-614);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-567));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", (String) null, "=/ :kn>Z&c*H7<!!");
      fieldWriter0.visitAnnotation("=/ :kn>Z&c*H7<!!", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", (String) null, "=/ :kn>Z&c*H7<!!");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-588));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-588), "HmtX%E]K]R", "HmtX%E]K]R", "HmtX%E]K]R", "HmtX%E]K]R");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte((-588));
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 9, "=/ :kn>Z&c*[7<!!", "=/ :kn>Z&c*[7<!!", "=/ :kn>Z&c*[7<!!", "=/ :kn>Z&c*[7<!!");
      fieldWriter0.visitAnnotation("=/ :kn>Z&c*[7<!!", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-581));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-581), "Synthetic", "Synthetic", "StackMap", "Synthetic");
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[2] = (byte)0;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 3478, "r*<WO8j", "", "Synthetic", "");
      fieldWriter1.visitEnd();
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-599));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-599), "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", "=/ :kn>Z&c*H7<!!", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-593));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-593), "5P", "5P", "5P", (Object) null);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-593), "5P", "e,&xk[XW3X]'-", "5P", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-599));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-599), "=l/ :kn>Z&c*H7<!!", "=l/ :kn>Z&c*H7<!!", "=l/ :kn>Z&c*H7<!!", (Object) null);
      fieldWriter0.visitAnnotation("=l/ :kn>Z&c*H7<!!", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-565));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "<%", "<%", "<%", "<%");
      Attribute attribute0 = new Attribute("ConstantValue");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-556), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "h'vu~1", "h'vu~1", "h'vu~1", "h'vu~1");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-593));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-593), "F", "F", "F", "F");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-556));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-556), (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
