/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 23:00:40 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis((-12L));
      Player player0 = new Player(4919, "Player", 4919);
      Player player1 = new Player(4919);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player");
      player0.setJoinOK(player1, false);
      player1.setDead(1L, true);
      player0.setZ(4919);
      player0.gangStrength();
      player0.setMoney((-1171.3044F));
      File file0 = MockFile.createTempFile("Player", "Player");
      MockFile mockFile0 = new MockFile(file0, "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) player1;
      objectArray0[1] = (Object) "&!Fq/\\T9:dlI";
      objectArray0[2] = (Object) "&!Fq/\\T9:dlI";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) file0;
      objectArray0[5] = (Object) "Player";
      PrintStream printStream0 = mockPrintStream0.printf("&!Fq/\\T9:dlI", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player1.pack(dataOutputStream0);
      player1.setX(1010.1F);
      player0.isJoinOK(player1, true);
      player0.add(player1);
      player1.add(player0);
      player0.boss = (Party) player1;
      player1.isJoinOK(player0, false);
      player0.type();
      player1.type();
      player0.type();
      player0.getMoney();
      System.setCurrentTimeMillis((-341L));
      int int0 = player1.type();
      assertEquals(1L, player1.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-4800), "cEf5NTX+iKgi$$I(2Rc", (-1));
      Party party0 = player0.gangBoss();
      player0.next = party0;
      player0.setY((-1410.0516F));
      player0.getY();
      int int0 = player0.type();
      assertEquals((-1410.0516F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-897));
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-897", player0.toString());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player(0, ".*[.]class$", "f|PZ@OhpJ+v)bX", (-897), (-897));
      player1.pack();
      int int0 = player1.getStrength();
      assertEquals(".*[.]class$", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals((-897), int0);
      assertEquals((-897), player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(597, "", "", 597);
      player0.getMoney();
      player0.gangStrength();
      player0.gangStrength();
      Player player1 = new Player(1281, "", "Dz?NtZYep-", 1, 1);
      player0.next = (Party) player1;
      player0.setConnected(false);
      player1.setZ(0.0F);
      player0.getY();
      player0.type();
      player1.type();
      player1.boss = player0.next;
      player1.isJoinOK(player0, true);
      player1.setMoney((short)4919);
      player1.getMoney();
      player1.isJoinOK(player0, false);
      player0.isConnected();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(1);
      Party party0 = player0.head;
      player0.head = null;
      player0.pack();
      float float0 = player0.getY();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(30862, "", (-1709));
      Player player1 = new Player(710, "", "Qw'`", 3, 30862);
      player1.setZ(2567.0F);
      player0.add(player1);
      player0.setMoney(30862);
      player0.getMoney();
      player0.getMoney();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte) (-40);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player2 = new Player();
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertEquals(30862.0F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-180L));
      Player player0 = new Player(2, (String) null, (String) null, 2147340491);
      player0.getIP();
      assertEquals(2147340491, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0543110595891974
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(0, "", "U2wNQ';)RC8", 2);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead((long) 2, true);
      float float0 = Player.TOLERANCE;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      byteArrayInputStream0.skip(1392409281320L);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player(5);
      player0.setJoinOK(player1, true);
      player1.getName();
      player0.isJoinOK(player1, true);
      player0.pack();
      assertEquals(2L, player0.getTimeOfDeath());
      
      Player player2 = new Player(5, "U2wNQ';)RC8", "Player5", (short)4919, 0);
      int int0 = player2.getStrength();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(3);
      Player player1 = new Player(3, (String) null, 3);
      player1.getName();
      player0.isJoinOK(player1, true);
      player0.getName();
      System.setCurrentTimeMillis(3);
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(5, ";l1f#S|Sp|\tO$m", "", 5);
      byte[] byteArray0 = player0.pack();
      player0.setZ(5);
      int int0 = Packable.PLAYER;
      player0.type();
      player0.type();
      player0.setDead((-1002L), true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, 5);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player1 = new Player();
      Player player2 = new Player((-2111), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 5);
      Player player3 = new Player(3537);
      Player player4 = new Player();
      player4.getName();
      player1.isConnected();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1002L), long0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(23);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(boolean0);
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0, "Player", "@-ML{Cch]jf", (-131));
      byte[] byteArray0 = player0.pack();
      player0.setZ(2);
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead(15000L, true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 445, 18933);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player1 = new Player(5, "", 5);
      Player player2 = new Player(4, (String) null, (-2355));
      player0.getStrength();
      System.setCurrentTimeMillis(15000L);
      player0.getZ();
      player0.isJoinOK(player1, true);
      player0.type();
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(15000L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(548, "", 548);
      player0.getSubparty();
      player0.setDead(1780L);
      player0.toString();
      player0.toString();
      int int0 = player0.gangStrength();
      assertEquals(1780L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(402, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 402, 402);
      int int0 = player0.getStrength();
      assertEquals(402, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(402, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(548, "@/,@i=", "2Lt`vNQdB\n08Y#F&5", 548, 548);
      player0.setX((-2232.038F));
      player0.toString();
      player0.getX();
      player0.getPictureId();
      player0.setDead(0L, false);
      player0.getIP();
      player0.toString();
      player0.toString();
      assertEquals((-2232.038F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-153));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2863), 14289);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(17, (String) null, 17);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q%4mOIzq>nxO;9Mp-");
      System.setCurrentTimeMillis(974L);
      Player player0 = new Player(896);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player896", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-897));
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-1), "X", "X", (-1));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("X");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals((-1), player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-18224), "a5#G[[^og^", "a5#G[[^og^", (-18224), (-18224));
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-18224), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-18224), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-440), "state.Party", "\"c$3XxyY#d=zn~hAjy", (-440), 0);
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals((-440), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("state.Party", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(17, (String) null, (String) null, 17, 17);
      int int0 = player0.gangStrength();
      assertEquals(17, int0);
      assertEquals(17, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(1235, "", "", 1235, 1235);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1235, player0.getStrength());
      assertEquals(1235, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(548, "@/,@i=", 548);
      player0.getSubparty();
      player0.setDead(1839L);
      player0.toString();
      player0.isDead();
      player0.toString();
      int int0 = player0.gangStrength();
      assertEquals(1839L, player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6861134662251085
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(3006, "&?# u", (-936));
      player0.setY((-936));
      Player player1 = new Player(1548, (String) null, (-171));
      player0.remove(player1);
      Player player2 = new Player(3006, "xZFoYJDk", "", (-3355));
      player0.isJoinOK(player2, true);
      player2.setDead();
      player2.getSubparty();
      player2.getTimeOfDeath();
      Player player3 = new Player((-936), "", (String) null, 133);
      player1.setDead((-1485L));
      player3.toString();
      player1.isDead();
      player1.toString();
      int int0 = player1.gangStrength();
      assertTrue(player1.isDead());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(548, "@/,@i=", 548);
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(548, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(3006, "&?# u", (-936));
      player0.setMoney(1125.4623F);
      player0.getPictureId();
      player0.getStrength();
      player0.reset(false);
      Player player1 = new Player(0);
      player1.isJoinOK(player0, false);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-3457), "", (-811));
      player0.getName();
      System.setCurrentTimeMillis(199L);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(20);
      player0.getName();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(1374);
      boolean boolean0 = player0.isDead();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player1374", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(1232, "", "", 1232);
      player0.getSubparty();
      player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1232, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-12));
      player0.reset(false);
      Party party0 = new Party();
      player0.boss = party0;
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(8886);
      Player player1 = new Player(10);
      player0.head = (Party) player1;
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      int int1 = player1.type();
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(player1.isDead());
      assertEquals("Player10", player1.toString());
      assertEquals(5, int1);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 60;
      Player player0 = new Player(60, "=fX?rwu_(!2V\n,", (-582));
      Party party0 = player0.gangBoss();
      party0.getSubparty();
      party0.getSubparty();
      player0.setConnected(false);
      long long0 = 0L;
      Party party1 = new Party();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream1);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, "", "U2wNQ';)RC8", 2);
      player0.pack();
      float float0 = (-3591.8308F);
      player0.setZ((-3591.8308F));
      player0.setDead((long) 0, false);
      player0.getZ();
      Player player1 = new Player(2, (String) null, (String) null, 2);
      player0.isJoinOK(player1, true);
      player1.setDead();
      player1.getSubparty();
      player0.getTimeOfDeath();
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0);
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      
      long long0 = player0.getTimeOfDeath();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, long0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.getName());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(512);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte) (-52);
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)44;
      byteArray0[5] = (byte)94;
      byteArray0[6] = (byte)109;
      byteArray0[7] = (byte)100;
      byteArray0[8] = (byte)23;
      player0.unpack(byteArray0);
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player512", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-12));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(7014, "", 7014);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte) (-53);
      byteArray0[4] = (byte) (-126);
      byteArray0[5] = (byte)54;
      byteArray0[6] = (byte)65;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(5, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player(5);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-884));
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player((-897));
      player0.setJoinOK(player0, true);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-897", player0.getName());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(3);
      player0.getMoney();
      player0.getY();
      player0.getMoney();
      player0.setDead(1392409296320L, true);
      float float0 = player0.getZ();
      assertEquals(1392409296320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-12));
      player0.setDead(15000L);
      assertEquals(15000L, player0.getTimeOfDeath());
      
      Player player1 = new Player((-682));
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.getStrength();
      Player player1 = new Player();
      player1.reset(false);
      Player player2 = new Player();
      player2.setZ(0.1F);
      player1.getMoney();
      player1.getSubparty();
      player1.setDead((long) (short)4919, false);
      player0.setX((-291.979F));
      player0.toString();
      player2.getX();
      int int0 = player2.getPictureId();
      assertEquals(0.1F, player2.getZ(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(2455, (String) null, "n-7P[5L^3ks-\"", 2455);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      player0.toString();
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2455, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(548, ":i6# W]", "", 548, 548);
      player0.setMoney(548);
      player0.getZ();
      player0.setX(0.0F);
      player0.getTimeOfDeath();
      player0.getX();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-3457));
      String string0 = player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", string0);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-3457", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-898));
      player0.reset(true);
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-898", player0.getName());
      assertFalse(player0.isDead());
  }
}
