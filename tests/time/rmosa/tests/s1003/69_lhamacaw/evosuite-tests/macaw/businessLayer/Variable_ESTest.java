/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 18:21:32 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.Set;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "PfS?gb2q@7\"b1#7DDv";
      derivedVariable0.codeBookNumber = "PfS?gb2q@7\"b1#7DDv";
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      Comparator<OntologyTerm> comparator0 = (Comparator<OntologyTerm>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.clear();
      arrayList0.sort(comparator0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.setForm((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCategory("macaw.businessLayer.Variable");
      rawVariable0.setCodeBookNumber("^[w-+&*]+(?:.[w-_+&*]+)*@(?:[w-]+.)+[a-zA-Z]{2,7}$");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable0.isNewRecord();
      rawVariable0.getCodeBookNumber();
      rawVariable0.setName("UNABLE_TO_INITIALISE_CONNECTION");
      rawVariable0.isNewRecord();
      rawVariable0.getForm();
      rawVariable1.getCodeBookNumber();
      ontologyTerm0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setCoded(false);
      derivedVariable0.addSourceVariable(rawVariable1);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges((User) null, ontologyTerm0, ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=4.234443811831753
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = null;
      rawVariable0.setCodeBookNumber((String) null);
      derivedVariable0.createVariableSummary();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.setLabel("\"D_@_.<!H");
      rawVariable0.columnStart = null;
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setFilePath("");
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      User user0 = new User();
      user0.setLastName((String) null);
      user0.setAffiliation((String) null);
      derivedVariable0.setAvailability("YlkEV6eTp,{.B'?@");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1296));
      supportingDocument0.setDocumentCode("+A)");
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("\"D_@_.<!H", derivedVariable0.getLabel());
      
      derivedVariable1.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable1);
      rawVariable0.getName();
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      User user0 = new User("6", "user.userID.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        derivedVariable1.removeValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.585547947863809
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("UNABLE_TO_UPDATE_CLEANING_STATE");
      derivedVariable1.setIdentifier(2128);
      derivedVariable1.createVariableSummary();
      User user0 = new User("`;{_vElw1&mS1Ie\"", "ontologyTerm.term.label");
      user0.setFirstName("FJ");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      assertEquals("2128", derivedVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.containsSourceVariable(derivedVariable2);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      derivedVariable0.codeBookNumber = null;
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.isCoded();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean1 == boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName((String) null);
      rawVariable1.setIsNewRecord(false);
      int int0 = rawVariable1.getIdentifier();
      assertEquals(0, int0);
      
      rawVariable1.getDisplayName();
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.860446514917979
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setDocumentCode("bm#_:ld*\"X2@@B");
      derivedVariable0.setYear("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.clone();
      derivedVariable0.setIdentifier(159);
      supportingDocument0.setDescription("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument0.setFilePath("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      derivedVariable0.columnEnd = "bm#_:ld*\"X2@@B";
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getCategory();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setYear("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      derivedVariable0.isNewRecord();
      derivedVariable0.getLabel();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getLabel();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getColumnStart();
      assertEquals("159", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      Variable.validateFields(derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.9599887763629433
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("iTG^:3ch ?X..=:I\"a");
      Variable.validateFields(rawVariable0);
      rawVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getIdentifier();
      rawVariable0.getColumnStart();
      rawVariable0.getNotes();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getYear();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9986330663747731
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      user0.setCity("ebA,'T)@vlv?DY`XL");
      user0.setIdentifier(37);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7467447448420033
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("-");
      User user0 = new User("ontologyTerm.term.label", "ontologyTerm.term.label");
      user0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setForm(" A8T4+.av>");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertEquals("-", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      User user0 = new User((String) null, "user.userID.saveChanges");
      user0.setPassword("DUPLICATE_SUPPORTING_DOCUMENT");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable1.isCoded());
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      User user1 = new User();
      user1.setIdentifier(80);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, (Variable) null);
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.8249581333636096
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "/2;o1 s1CNCmh@2E>pS";
      rawVariable0.setFilePath((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.codeBookNumber = "/2;o1 s1CNCmh@2E>pS";
      ontologyTerm0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setDescription("Lxc)*L*WOG");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setCodeBookNumber("/2;o1 s1CNCmh@2E>pS");
      rawVariable0.getAvailability();
      rawVariable0.clone();
      rawVariable0.getFilePath();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      User user0 = new User("t~Y^", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.notes = "NO_SUPPORTING_DOCUMENT_FILTER";
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.getOntologyTerms();
      System.setCurrentTimeMillis((-1L));
      derivedVariable0.getName();
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setIdentifier(5540);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.remove((Object) valueLabel0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable1.notes = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS";
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.questionNumber = "bSrGt";
      derivedVariable0.isCleaned();
      derivedVariable0.isNewRecord();
      assertEquals(5540, derivedVariable0.getIdentifier());
      
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable1.removeValueLabel(valueLabel1);
      derivedVariable1.getForm();
      derivedVariable1.getName();
      String string0 = derivedVariable1.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("D6");
      User user0 = new User("D6", "user.usrID.saveChanges");
      User user1 = new User("general.fieldValue.blank", "CgP2}$RE");
      user0.setStatus("user.usrID.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("b(Q`I");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("b(Q`I", derivedVariable1.getAvailability());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.827856684088247
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      user0.setAddressLine2("macaw.businessLayer.OntologyTerm");
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      String string0 = "variable.saveChanges.valueChanged";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.isNewRecord();
      rawVariable1.cloneAttributes(rawVariable0);
      rawVariable0.setCategory("user.firstName.label");
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      User user0 = new User("6", "user.userID.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("6");
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("6", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setCleaningStatus((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("X[3:]xs5#xrPDil~~");
      User user0 = new User("X[3:]xs5#xrPDil~~", "Y{\"eA<");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "Y{\"eA<";
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("user.userID.saveChanges");
      User user0 = new User("6", "user.userID.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertEquals("user.userID.saveChanges", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1945366875886965
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.listIterator();
      derivedVariable1.form = "kwGGDM6`5tQjD}";
      derivedVariable0.setName("variable.codeBookNumber.label");
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.columnEnd = null;
      derivedVariable0.codeBookNumber = "variable.codeBookNumber.label";
      derivedVariable0.setAvailability("kwGGDM6`5tQjD}");
      derivedVariable0.setCoded(true);
      derivedVariable0.getCategory();
      derivedVariable0.getFilePath();
      derivedVariable0.getColumnStart();
      User user0 = new User();
      user0.setAffiliation((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.getValueLabels();
      assertEquals("kwGGDM6`5tQjD}", derivedVariable0.getAvailability());
      
      String string0 = derivedVariable1.getYear();
      assertEquals("", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.5391460936374
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("-");
      User user0 = new User("ontologyTerm.term.label", "ontologyTerm.term.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("-");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.getQuestionNumber();
      assertEquals("-", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      
      derivedVariable0.setCoded(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.isCoded();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("DUPLICATE_SUPPORTING_DOCUMENT");
      rawVariable0.setQuestionNumber(":a`LBdoum>,DL");
      rawVariable0.setName("NON_EXISTENT_VARIABLE_FOR_SUMMARY");
      rawVariable0.questionNumber = "-";
      rawVariable0.columnEnd = "DUPLICATE_SUPPORTING_DOCUMENT";
      rawVariable0.codeBookNumber = "DUPLICATE_SUPPORTING_DOCUMENT";
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      // Undeclared exception!
      try { 
        arrayList1.subList((-3677), 30);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -3677
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.4897081771684486
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals(1, arrayList0.size());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("macaw.businessLayer.Variable", "COH2_#neL");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.form = "<U_#ib8D1,=0q%XtR";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      String string0 = derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "UNABLE_TO_FILTER_ONTOLOGY_TERMS";
      derivedVariable0.setCodeBookNumber("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      derivedVariable0.getColumnStart();
      assertEquals("UNABLE_TO_FILTER_ONTOLOGY_TERMS", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("macaw.businesLayer.OntologyTerm");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1));
      ontologyTerm0.setNameSpace("user.phone.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.isCoded();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.removeAll(arrayList0);
      arrayList0.iterator();
      rawVariable0.createVariableSummary();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals((-1), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      String string0 = "general.fieldValue.unknown";
      rawVariable0.setForm("general.fieldValue.unknown");
      arrayList0.sort(comparator0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      rawVariable0.getCleaningStatus();
      String string1 = "general.error.invalidEmail";
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("variable.availability.label");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCategory();
      assertEquals("variable.availability.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getCategory();
      derivedVariable0.setQuestionNumber("pS[}:XQmGjhD%*Mm");
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getCleaningDescription();
      assertEquals("pS[}:XQmGjhD%*Mm", derivedVariable0.getQuestionNumber());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.cleaningDescription.label");
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.setAvailability("variable.label.label");
      derivedVariable0.getQuestionNumber();
      derivedVariable0.columnStart = "variable.label.label";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("");
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode((String) null);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.getColumnEnd();
      assertEquals("variable.label.label", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.392642885164996
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setCategory("3K{K <Y#&z@>>^");
      User user0 = new User();
      user0.setIdentifier(37);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("3K{K <Y#&z@>>^", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("NON_EXISTENT_SOURCE_VARIABLE");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setIdentifier((-2067947214));
      rawVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.9303375694486506
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable0.clone();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>(1);
      derivedVariable0.createVariableSummary();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = ":Uo3 &^vY^@;29xjf6l";
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(":Uo3 &^vY^@;29xjf6l", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "X[3:]xs5#xrPDil\\~~";
      derivedVariable0.setLabel("X[3:]xs5#xrPDil~~");
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("6", "6");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      user0.setEmail("atH");
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable1.setYear("6");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      user0.setAddressLine2("macaw.businessLayer.OntologyTerm");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("macaw.businessLayer.OntologyTerm");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("macaw.businessLayer.OntologyTerm");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("");
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("macaw.businessLayer.OntologyTerm", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(251);
      rawVariable0.getForm();
      User user0 = new User();
      user0.setPassword("");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      try { 
        User.checkValidEmail("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.6594993650116843
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "MZGCJ!]?6W?hi%4";
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      derivedVariable0.setCoded(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("MZGCJ!]?6W?hi%4", rawVariable1.getQuestionNumber());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "0}9";
      rawVariable0.addOntologyTerms(arrayList0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getForm());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("0}9", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getColumnEnd());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.setLabel((String) null);
      User user0 = new User("ontologyTerm.term.label", "/E}tBx?t$%Sw");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("-exZMv*Ou8lSB;s_0VC", "variable.alias.label");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.alternativeVariable.label";
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getAlias();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      User user0 = new User("ontologyTerm.term.label", "ontologyTerm.term.label");
      derivedVariable0.questionNumber = "ontologyTerm.term.label";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertEquals("ontologyTerm.term.label", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getForm());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.6256902943605223
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "CA";
      String string0 = "valueLabel.label.saveChanges";
      derivedVariable0.setName("CA");
      derivedVariable0.setAvailability("valueLabel.label.saveChanges");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.getAlias();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCategory("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "&XWI2;Vc";
      rawVariable0.getColumnStart();
      rawVariable0.getColumnEnd();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      rawVariable0.getCodeBookNumber();
      assertEquals("&XWI2;Vc", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.setName("$6");
      User user0 = new User("0H<hY#C-DSE5&k/79", "=RPS9(dq,xno");
      user0.setAddressLine2("0H<hY#C-DSE5&k/79");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(1, arrayList0.size());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList1);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable variable0 = null;
      derivedVariable0.setAlternativeVariable((Variable) null);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      User user0 = new User("6", "user.userID.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.getDisplayName();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.columnEnd = "@}8ssl/T9Y%QK:";
      derivedVariable0.setCleaned(false);
      derivedVariable0.getValueLabels();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariable((Variable) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getYear();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getYear();
      derivedVariable0.getAvailability();
      derivedVariable0.getColumnStart();
      User user0 = new User("4%x2\"3'Irx>_kB]yV", "@}8ssl/T9Y%QK:");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setForm("JUS.0c");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setColumnEnd("mh2MZdp5 r1b");
      rawVariable0.getForm();
      rawVariable0.getForm();
      assertEquals("mh2MZdp5 r1b", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setQuestionNumber("eZf_yE{yTZ:#");
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getColumnEnd();
      rawVariable0.createVariableSummary();
      assertEquals("eZf_yE{yTZ:#", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("user.email.label");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      assertEquals("user.email.label", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("znu'J-iUTLeOqldWd", (String) null);
      user0.setPhone("variable.label.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = null;
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable2 = new RawVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      String string0 = rawVariable1.getCodeBookNumber();
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertNotNull(string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("HZ$E,dRS~[rL_:,\"q");
      derivedVariable0.createVariableSummary();
      derivedVariable0.setLabel((String) null);
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.setForm("`E=L^|@'9m^D$60/_");
      String string0 = "variable.alternativeVariable.label";
      derivedVariable0.questionNumber = "variable.alternativeVariable.label";
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCodeBookNumber("variable.columnStart.label");
      derivedVariable0.codeBookNumber = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("`E=L^|@'9m^D$60/_");
      ontologyTerm0.setNameSpace("variable.alternativeVariable.label");
      ontologyTerm0.setIdentifier(2452);
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges((User) null, ontologyTerm0, ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      User user0 = new User("ontologyTerm.term.label", "UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User("6", "k");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable1.getDisplayName();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.685395339808851
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("-");
      User user0 = new User("ontologyTerm.term.label", "ontologyTerm.term.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "user.status.label";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertEquals("user.status.label", derivedVariable1.getColumnEnd());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.columnEnd = "]/$";
      User user0 = new User("ontologyTerm.term.label", "ontologyTerm.term.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      assertEquals("]/$", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.6733809331516847
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      String string0 = "t7=";
      rawVariable0.setName("t7=");
      rawVariable0.getColumnStart();
      rawVariable0.clone();
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.7549518839334333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.getYear();
      rawVariable0.clone();
      derivedVariable0.setColumnEnd("");
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getColumnStart();
      rawVariable0.getName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.setLabel("a\"");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.setCodeBookNumber("variable.notes.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList1);
      derivedVariable0.setName("v3zS|");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getForm();
      derivedVariable0.getLabel();
      assertEquals("a\"", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_CREATE_CONNECTION");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.isNewRecord();
      derivedVariable0.getNotes();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.notes = "";
      ontologyTerm0.getDisplayName();
      derivedVariable0.setIdentifier(71);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("71", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(71, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.setCodeBookNumber("variable.notes.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList1);
      derivedVariable0.setName("v3zS|");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getForm();
      derivedVariable0.getLabel();
      assertEquals("variable.notes.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      String string0 = rawVariable0.getLabel();
      assertNotNull(string0);
      
      String string1 = rawVariable0.getAlias();
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "IDtT<;n|s<v|D";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      User user0 = new User("6", "user.userID.saveChanges");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("6", derivedVariable0.getDisplayName());
      
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.7490545369607124
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("-");
      User user0 = new User("ontologyTerm.term.label", "ontologyTerm.term.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("-", derivedVariable0.getLabel());
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel((String) null);
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user1 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      user0.setIdentifier(37);
      rawVariable0.setForm("8Y#v_F-i0");
      rawVariable0.getNotes();
      assertEquals("8Y#v_F-i0", rawVariable0.getForm());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("cY^B6#");
      rawVariable0.createVariableSummary();
      rawVariable0.setNotes((String) null);
      rawVariable0.getAvailability();
      rawVariable0.getNotes();
      assertEquals("cY^B6#", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ontologyTerm0.setIdentifier((-605));
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.notes = " CSduTA";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd(" CSduTA");
      derivedVariable0.createVariableSummary();
      rawVariable0.getNotes();
      assertEquals(" CSduTA", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("/l@k{i+/JOB");
      rawVariable0.getQuestionNumber();
      assertEquals("/l@k{i+/JOB", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.notes = "O't3*FG";
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setQuestionNumber("UNABLE_TO_GET_VARIABLE_NAMES");
      rawVariable0.notes = "jpZ):<x#@:oV&-3";
      rawVariable0.createVariableSummary();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setIdentifier((-1));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.setTitle("EMPTY_LIST_CHOICE");
      arrayList0.containsAll(arrayList1);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getIdentifier();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList2);
      derivedVariable0.removeSourceVariables(arrayList2);
      rawVariable0.getAlias();
      System.setCurrentTimeMillis(2497L);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.setNotes("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.setCategory("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.getColumnEnd();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "gener:l.fieldValue.unknown";
      rawVariable0.columnStart = "gener:l.fieldValue.unknown";
      rawVariable0.getAvailability();
      rawVariable0.getColumnStart();
      assertEquals("gener:l.fieldValue.unknown", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("variable.form.label");
      derivedVariable0.columnEnd = "variable.cleaningDescription.label";
      derivedVariable0.columnEnd = "macaw.system.MacawException";
      Variable.validateFields(derivedVariable0);
      derivedVariable0.codeBookNumber = "macaw.businessLayer.OntologyTerm";
      derivedVariable0.getCleaningDescription();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setYear("+IHwU");
      derivedVariable0.setIdentifier((-2004318069));
      derivedVariable0.setForm("Bd.{4dw");
      derivedVariable0.getYear();
      assertEquals("Bd.{4dw", derivedVariable0.getForm());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("user.postCode.saveChanges");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      user0.setIdentifier(351);
      rawVariable0.getLabel();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("user.postCode.saveChanges", rawVariable0.getNotes());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      derivedVariable0.setCoded(true);
      String string0 = "general.error.invalidEmail";
      derivedVariable0.setFilePath("general.error.invalidEmail");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAvailability("variable.cleaningDescription.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.setCodeBookNumber("general.error.invalidEmail");
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getYear();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setColumnStart("-");
      rawVariable0.setColumnStart("-");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        arrayList0.listIterator(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.5543914566255155
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      User user1 = new User("mAaUbl$2b|-", "F^JhGFQ\u0002>2A");
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertTrue(arrayList1.isEmpty());
      
      derivedVariable0.getColumnStart();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("DUPLICATE_CLEANING_STATE");
      derivedVariable0.setColumnEnd("U$Z'H=(");
      derivedVariable0.clone();
      derivedVariable0.getAvailability();
      assertEquals("DUPLICATE_CLEANING_STATE", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("X[3:]xs5#xrPDil~~");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setName("H{d2+lQ 6$uU[u");
      derivedVariable0.getForm();
      assertEquals("X[3:]xs5#xrPDil~~", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "J05Wa@";
      rawVariable0.setCoded(true);
      rawVariable0.setCleaningDescription("J05Wa@");
      rawVariable0.isNewRecord();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.clone();
      assertEquals("J05Wa@", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.591891168711857
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.isCoded();
      derivedVariable0.setLabel("-");
      User user0 = new User((String) null, "ontologyTerm.term.label");
      user0.setPostCode("ontologyTerm.term.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("-", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("6");
      User user0 = new User("6", "user.userID.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User("uQiC0", "uQiC0");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setFilePath("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM");
      derivedVariable1.addSourceVariables(arrayList0);
      assertEquals("UNABLE_TO_DISASSOCIATE_ONTOLOGY_TERM", derivedVariable1.getFilePath());
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "gener:l.fieldValue.unknown";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.columnStart = "gener:l.fieldValue.unknown";
      String string0 = rawVariable0.getAvailability();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCleaningStatus((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<SupportingDocument>((-841));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -841
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.cleaningDescription.label";
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "}}";
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getYear();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("Bd.{4dw");
      derivedVariable0.getYear();
      assertEquals("Bd.{4dw", derivedVariable0.getForm());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("{V7LYJ)fhC2~S5^:h");
      rawVariable0.notes = "{V7LYJ)fhC2~S5^:h";
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) rawVariable0);
      arrayList0.iterator();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIdentifier((-1910));
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      user0.setIdentifier(37);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals((-1910), derivedVariable0.getIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("O]<2<i`d@IT", "O]<2<i`d@IT");
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("px");
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      arrayList0.clear();
      // Undeclared exception!
      try { 
        arrayList0.add(2446, (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2446, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setIdentifier(2403);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals(2403, rawVariable0.getIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("variable.saveChanges.valueChanged");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      arrayList0.removeAll(set0);
      derivedVariable0.addSourceVariables(arrayList0);
      boolean boolean0 = derivedVariable1.isCleaned();
      assertEquals("variable.saveChanges.valueChanged", derivedVariable1.getName());
      assertFalse(boolean0);
  }
}
