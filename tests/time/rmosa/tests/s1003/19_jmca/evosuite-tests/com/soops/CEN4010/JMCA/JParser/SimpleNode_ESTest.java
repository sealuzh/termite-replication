/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 18:58:41 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(38);
      simpleNode0.setIdentifier("<=");
      simpleNode0.setIdentifier("E");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('(');
      simpleNode0.dump("f", stringWriter1);
      assertEquals("(<Expression>\n  <identifier>*le</identifier>\n  <identifier>E</identifier>\n</Expression>\n", stringWriter1.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("Tlze");
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>Tlze</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("(?");
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('^');
      simpleNode0.dump((String) null, stringWriter1);
      assertEquals("^<CompilationUnit>\n  <identifier>(?</identifier>\n  <identifier>*lshft</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(1344);
      simpleNode0.jjtAddChild(simpleNode1, 1344);
      Node[] nodeArray0 = new Node[0];
      simpleNode1.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(1344);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode1.dump("*g", stringWriter0);
      assertEquals(0, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1731471805599454
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      simpleNode0.toString();
      JavaParser javaParser0 = new JavaParser((Reader) null);
      simpleNode0.jjtAddChild(simpleNode0, 1730);
      simpleNode0.setIdentifier("Initializer");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      simpleNode0.dump("o.Kn", stringWriter1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      stringWriter0.write("&&");
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.dump("&&", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('7');
      simpleNode0.dump("#?/ayiN[w", stringWriter0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.append('J');
      simpleNode0.dump("z-", stringWriter0);
      assertEquals("7J<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      JavaParser javaParser0 = new JavaParser((Reader) null);
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('S');
      simpleNode0.dump(";", stringWriter0);
      assertEquals("S<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9724426764391986
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      simpleNode0.jjtAddChild(simpleNode0, 1730);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "s(0V+*";
      stringWriter0.append('b');
      StringWriter stringWriter1 = stringWriter0.append('Q');
      stringWriter1.flush();
      // Undeclared exception!
      simpleNode0.dump("s(0V+*", stringWriter1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2782459557145414
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      JavaParser javaParser0 = new JavaParser("CompilationUnit");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 1740);
      simpleNode0.jjtClose();
      simpleNode0.toString("CompilationUnit");
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("CompilationUnit");
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtSetParent((Node) null);
      StringWriter stringWriter0 = new StringWriter(1741);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit");
      simpleNode0.jjtAddChild((Node) null, 1741);
      assertEquals(1742, simpleNode0.jjtGetNumChildren());
      
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter(1);
      stringWriter1.write("CompilationUnit");
      simpleNode1.dump("+t.V>X6Ua^XwLsaF-DE", stringWriter2);
      assertEquals("", stringWriter2.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      Node[] nodeArray0 = new Node[2];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(27);
      simpleNode0.dump("ljnrik:$Y88Qg>y^", stringWriter0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 33);
      assertEquals(34, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump("", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtClose();
      simpleNode1.jjtGetChild(0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3459);
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode1.jjtGetParent();
      simpleNode1.jjtSetParent(simpleNode0);
      Node node0 = simpleNode1.jjtGetParent();
      simpleNode1.jjtClose();
      simpleNode0.jjtSetParent(node0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.47058823529411764
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      simpleNode0.jjtAddChild(simpleNode0, 1730);
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "s(0V+*";
      stringWriter0.append('b');
      StringWriter stringWriter1 = stringWriter0.append('Q');
      stringWriter1.flush();
      // Undeclared exception!
      simpleNode0.dump("s(0V+*", stringWriter1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.49916805324459235
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 27;
      SimpleNode simpleNode0 = new SimpleNode(27);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(string0, stringWriter0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-9));
      JavaParser javaParser0 = new JavaParser((Reader) null);
      simpleNode0.jjtAddChild(simpleNode0, 1730);
      StringWriter stringWriter0 = new StringWriter(1730);
      stringWriter0.append('b');
      stringWriter0.append('Q');
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("s(L+*", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1339);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(662);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 662
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 27);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      arrayList0.add("Initializer");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1908));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1908
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "");
      simpleNode0.dump("", stringWriter0);
      StringReader stringReader0 = new StringReader("<=");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 1736);
      simpleNode0.jjtGetChild(1711);
      simpleNode0.toString();
      simpleNode0.toString();
      assertEquals(1737, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      simpleNode0.jjtAddChild(simpleNode0, 27);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "Initializer : >", (-3237), 27);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(27);
      simpleNode0.setIdentifier("o.Knl");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<Initializer>\n  <identifier>o.Knl</identifier>\n</Initializer>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 1733;
      SimpleNode simpleNode0 = new SimpleNode(1733);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (-920));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -920
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("(?");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString();
      stringWriter0.append('\\');
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("\\<CompilationUnit>\n  <identifier>(?</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2828);
      // Undeclared exception!
      try { 
        simpleNode0.toString("L||pK@eD$Xn@wVBY|D");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2828
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = (-15);
      SimpleNode simpleNode0 = new SimpleNode((-15));
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode((-15));
      simpleNode0.jjtSetParent(simpleNode1);
      SimpleNode simpleNode2 = new SimpleNode((-15));
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "#";
      StringWriter stringWriter1 = new StringWriter(1713);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -15
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.03961008770411
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 1740);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("&", stringWriter0);
      simpleNode0.dump("&", stringWriter0);
      simpleNode1.dump("&", stringWriter0);
      simpleNode0.toString("Qelf_au1Nz]**k)");
      assertEquals(1741, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3075));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-66));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier("F@-o>\"iVM#i)m");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('');
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      simpleNode0.dump("<", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2147483647));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.jjtAddChild(simpleNode1, 608);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('^');
      simpleNode0.dump("f", stringWriter1);
      assertEquals(609, simpleNode0.jjtGetNumChildren());
  }
}
