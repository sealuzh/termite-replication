/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 13:15:14 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2076));
      classWriter0.index = (-2076);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "cge\"!hz#_N", "cge\"!hz#_N", "cge\"!hz#_N", "cge\"!hz#_N");
      FieldWriter fieldWriter1 = (FieldWriter)classWriter0.visitField((-2076), "", "y *dL>tP=p5[{M`WX", "", "RuntimeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter1.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-54));
      classWriter0.version = 2;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-156), "RuntimeVisibleAnno?ations", "RuntimeVisibleAnno?ations", "RuntimeVisibleAnno?ations", "RuntimeVisibleAnno?ations");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2614, "RuntimeVisibleAnno?ations", "R~N~??cDY:<*@u<g? ", "RuntimeVisibleAnno?ations", (Object) null);
      fieldWriter1.visitAnnotation("", true);
      fieldWriter1.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = classWriter0.pool;
      fieldWriter0.getSize();
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.put(byteVector1);
      fieldWriter1.put(byteVector0);
      fieldWriter2.put(byteVector0);
      ByteVector byteVector2 = new ByteVector(65535);
      FieldWriter fieldWriter3 = classWriter0.firstField;
      fieldWriter0.put(byteVector1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-37);
      byteVector1.data = byteArray0;
      FieldWriter fieldWriter4 = null;
      try {
        fieldWriter4 = new FieldWriter(classWriter0, (-156), "Q%#jl6", "8LJ:gMa:x}Lm", "Deprecated", "Deprecated");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Li)eNumerTQabe";
      stringArray0[1] = "Li)eNumerTQabe";
      stringArray0[2] = ">,ZP";
      stringArray0[3] = "";
      classWriter0.visit((-73), (-73), "", ">,ZP", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-73), "Li)eNumerTQabe", "Li)eNumerTQabe", "Li)eNumerTQabe", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.put(byteVector0);
      assertSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      classWriter0.index = (-73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4150, "", "", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 3331, "[]", "org.apache.commons.io.filefilter.TrueFileFilter", "", byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ByteVector@1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      classWriter0.index = (-73);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4150, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-54));
      classWriter0.version = (-54);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-54), "RuntimeVisibleAnno?ations", "YOv4", "YOv4", "RuntimeVisibleAnno?ations");
      FieldWriter fieldWriter2 = classWriter0.firstField;
      int int0 = fieldWriter2.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2045));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "ysv(.9cy", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 3619;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-35));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2076));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2076), "Class not found", "Class not found", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2089));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2089), "$_SB 0vH@uM", "$_SB 0vH@uM", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2076));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "s", "s", "s", "s");
      Attribute attribute0 = new Attribute("s");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2045));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2089));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2089), "$_SB 0vH@uM", "$_SB 0vH@uM", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("$_SB 0vH@uM", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(32, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-73), "Li)eNumerTQab", "Li)eNumerTQab", "Li)eNumerTQab", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2106));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2106), "$_SB 0vH@uM", "$_SB 0vH@uM", (String) null, (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-73), "LineNumerTQabe", "LineNumerTQabe", "LineNumerTQabe", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 5, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
