/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 13:04:10 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=4.235407174844451
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setForm("H&al");
      rawVariable0.columnEnd = "UNABLE_TO_CREATE_RAW_VARIABLE";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setOntologyName("UNABLE_TO_CREATE_RAW_VARIABLE");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnEnd();
      rawVariable0.getDisplayName();
      System.setCurrentTimeMillis((-756L));
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("UNABLE_TO_CREATE_RAW_VARIABLE");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ontologyTerm0.setNewRecord(true);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.getName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getSupportingDocuments();
      derivedVariable0.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("H&al", rawVariable0.getForm());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.635444657003587
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCodeBookNumber("%rOG=");
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.585547947863809
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", "`@Qi,Xt!Pp");
      user0.setAffiliation(",3Y,jI:Z");
      rawVariable0.setLabel("`@Qi,Xt!Pp");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setAffiliation("");
      supportingDocument0.setTitle("qp52C{x(PBP^En");
      supportingDocument0.setTitle("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      rawVariable0.getAvailability();
      rawVariable0.getAlias();
      rawVariable0.getLabel();
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setLabel((String) null);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("", "");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier((-906));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.8982033696861063
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      System.setCurrentTimeMillis(633L);
      User user0 = new User("user.city.label", "J");
      user0.setEmail("J");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnEnd();
      rawVariable0.setCategory("");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.cloneAttributes(rawVariable0);
      rawVariable1.getCategory();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getCategory();
      rawVariable0.getNotes();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.addSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0921965331237558
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("i");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.getDisplayName();
      assertEquals("i", derivedVariable0.getName());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.282622235799144
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      User user0 = new User("K*nG", "&${b7[P3[c");
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable2.setForm("user.firstName.label");
      user0.setCounty("K*nG");
      Variable.validateFields(rawVariable2);
      rawVariable0.setAlias("variable.notes.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable3, derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getIdentifier();
      rawVariable1.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.getCategory();
      derivedVariable0.getCategory();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.setIdentifier((-2370));
      Variable.validateFields(rawVariable0);
      rawVariable1.getAvailability();
      rawVariable2.setIdentifier(0);
      derivedVariable0.getCleaningStatus();
      rawVariable2.getCleaningStatus();
      rawVariable0.getIdentifier();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals((-2370), rawVariable0.getIdentifier());
      
      Variable.validateFields(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setAlternativeVariable((Variable) null);
      rawVariable0.setCleaned(false);
      User user0 = new User("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", "UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      user0.setPostCode("Kqa%-yL}(JQ-");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      derivedVariable0.setCleaningDescription("Kqa%-yL}(JQ-");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      ontologyTerm0.setIdentifier((-2171));
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      Object object0 = new Object();
      derivedVariable0.getSourceVariables();
      assertEquals("Kqa%-yL}(JQ-", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.25923933137984
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setIdentifier(1446);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getForm();
      ontologyTerm0.clone();
      rawVariable0.setCoded(true);
      derivedVariable0.setAvailability("variable.category.label");
      derivedVariable0.clone();
      derivedVariable0.getCodeBookNumber();
      ontologyTerm0.setDescription((String) null);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getDisplayName();
      rawVariable0.isCoded();
      rawVariable0.getDisplayItemIdentifier();
      user0.setUserID("Unknown");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.spliterator();
      derivedVariable0.removeSourceVariables(arrayList0);
      rawVariable0.clone();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getColumnEnd();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("variable.category.label", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.setName("E@&.qnyIp(2 e?x");
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.iterator();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("E@&.qnyIp(2 e?x", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "OKb-UP:fnr%";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.isNewRecord();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(76);
      ontologyTerm1.setNameSpace("2,`(G4}@g");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("OKb-UP:fnr%");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ontologyTerm2.setNameSpace("OKb-UP:fnr%");
      try { 
        OntologyTerm.validateFields(ontologyTerm2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-260));
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      Variable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5722964991944255
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.9603595587137033
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm((String) null);
      Variable.validateFields(rawVariable0);
      rawVariable0.questionNumber = null;
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getSupportingDocuments();
      supportingDocument0.setIdentifier(1518);
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      User user0 = new User();
      derivedVariable0.form = "zkP_iZq!g*";
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getQuestionNumber();
      derivedVariable0.getOntologyTerms();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("variable.isCoded.label");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("variable.isCoded.label", rawVariable0.getNotes());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.282025131753763
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setCleaned(true);
      derivedVariable0.questionNumber = "DUPLICATE_SUPPORTING_DOCUMENT";
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCleaningDescription("");
      User.checkValidUserIDField("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(140);
      ontologyTerm0.setDescription("9ip");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      user0.setCity("y");
      derivedVariable0.getValueLabels();
      derivedVariable0.setAvailability("");
      derivedVariable0.getDisplayItemIdentifier();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getQuestionNumber();
      rawVariable0.clone();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getYear();
      assertEquals("DUPLICATE_SUPPORTING_DOCUMENT", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable1.isCoded());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.632388625867038
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCoded(true);
      derivedVariable1.setName("tF:d.Bx'18");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User("zS}", "tF:d.Bx'18");
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      derivedVariable1.getValueLabels();
      assertEquals("tF:d.Bx'18", derivedVariable1.getName());
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("NON_EXISTENT_AVAILABILITY_STATE");
      derivedVariable0.setIdentifier((-1));
      derivedVariable0.createVariableSummary();
      derivedVariable0.getAvailability();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("Unknown");
      ontologyTerm0.setOntologyName("NON_EXISTENT_AVAILABILITY_STATE");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable2.getSourceVariables();
      arrayList0.add((Variable) derivedVariable1);
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.539367798548164
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("j8 xAvQqI%e");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaningStatus("j8 xAvQqI%e");
      User user0 = new User("", "");
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      assertEquals("j8 xAvQqI%e", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.788144558312022
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      rawVariable0.form = "~s.kJ!o4w@UN";
      rawVariable0.notes = "wnNj2_}5@q";
      rawVariable0.getIdentifier();
      rawVariable0.setCoded(false);
      System.setCurrentTimeMillis(3405L);
      rawVariable0.getNotes();
      rawVariable0.getCleaningDescription();
      rawVariable0.getNotes();
      assertEquals("wnNj2_}5@q", rawVariable0.getNotes());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.711629448056604
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getValueLabels();
      rawVariable0.setColumnStart((String) null);
      rawVariable0.setName("<,DM:b>fW,Q:B)8~");
      System.setCurrentTimeMillis(0L);
      rawVariable0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      rawVariable0.getColumnStart();
      rawVariable0.isNewRecord();
      assertEquals("<,DM:b>fW,Q:B)8~", rawVariable0.getDisplayName());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      ontologyTerm0.clone();
      rawVariable0.getFilePath();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isCleaned());
      assertNotSame(variable0, rawVariable0);
      assertEquals("0", variable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.6305437208796447
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.5822705235337526
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setColumnEnd("\"UUM K[?");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      int int0 = 140;
      ontologyTerm0.setIdentifier(140);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      Object object0 = new Object();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("&kPVcHz,w");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      linkedList0.add((Object) supportingDocument0);
      linkedList0.addFirst(derivedVariable0);
      arrayList0.removeAll(linkedList0);
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      User user0 = new User("\"V12l", "user.addressLine1.saveChanges");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("&kPVcHz,w", derivedVariable0.getForm());
      
      derivedVariable1.getValueLabels();
      derivedVariable1.addSourceVariables(arrayList1);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6870204957035666
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setLabel((String) null);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("variable.columnEnd.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("8zWr*s]Q&5r", (String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setForm("ZP<xiAR`,g)AP!<x:");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      assertEquals("ZP<xiAR`,g)AP!<x:", derivedVariable0.getForm());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      String string0 = rawVariable0.getFilePath();
      assertNotNull(string0);
      
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("!2zaFltm((Wjm");
      rawVariable0.addValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      rawVariable0.getValueLabels();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, arrayList0.size());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.4906817685034857
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setNotes("vYct}=q!K~(R;NWGE(=");
      User user0 = new User("", "1fml:1DbMByE&");
      User user1 = new User("1fml:1DbMByE&", (String) null);
      user1.setAffiliation((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5384983413378794
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("qp52C{x(PBP^En");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm0.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getAvailability();
      derivedVariable0.setCategory("Unknown");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getValueLabels();
      assertEquals("qp52C{x(PBP^En", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("/");
      rawVariable0.codeBookNumber = "/";
      ontologyTerm0.clone();
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("b`Qt; EavPj");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable1.setYear("`Ns}N");
      derivedVariable1.getSourceVariables();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("b`Qt; EavPj", derivedVariable0.getYear());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4899851471172094
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      derivedVariable0.codeBookNumber = "AaBY]k5p7";
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      derivedVariable0.getValueLabels();
      derivedVariable1.getYear();
      derivedVariable0.getCodeBookNumber();
      assertEquals("AaBY]k5p7", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("Nj//5<)&ET%");
      rawVariable0.setCodeBookNumber("zezTTC'eGXaDFOW}+");
      rawVariable0.setQuestionNumber("zezTTC'eGXaDFOW}+");
      rawVariable0.getCategory();
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5386400847822452
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", "o#i,Xt!rp");
      user0.setAffiliation(",3Y,jI:Z");
      rawVariable0.setLabel("o#i,Xt!rp");
      rawVariable0.setLabel("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      user0.setAffiliation("NON_EXISTENT_AVAILABILITY_STATE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setColumnEnd(",3Y,jI:Z");
      rawVariable0.getAlias();
      rawVariable0.getFilePath();
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", rawVariable0.getLabel());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      ontologyTerm0.setIdentifier(2370);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.columnEnd = "2";
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable1);
      assertEquals(1, arrayList1.size());
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string1 = derivedVariable0.getCodeBookNumber();
      assertEquals("", string1);
      
      String string2 = derivedVariable0.getLabel();
      assertEquals("", string2);
      
      derivedVariable1.getDisplayName();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      Integer integer0 = new Integer(2370);
      derivedVariable1.addSourceVariable(derivedVariable0);
      assertEquals("", derivedVariable0.getName());
      
      derivedVariable1.getValueLabels();
      derivedVariable1.getDisplayName();
      String string3 = derivedVariable1.getCleaningStatus();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", string3);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.form = "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM";
      derivedVariable0.setName("zS}");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable2.addSourceVariable(derivedVariable1);
      derivedVariable0.getColumnEnd();
      assertEquals("zS}", derivedVariable0.getDisplayName());
      
      derivedVariable2.getCodeBookNumber();
      assertEquals(0, derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.clone();
      System.setCurrentTimeMillis(0L);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.585295326921533
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("UNABLE_TO_GET_ORIGINAL_AVAILABILITY_STATE");
      user0.setPassword("S:4NG");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        arrayList0.add((-2334), ontologyTerm0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2334, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      rawVariable0.getLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ontologyTerm0.setIdentifier((-1));
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier((-1));
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      System.setCurrentTimeMillis((-2234L));
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("-1", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("user.affiliation.saveChanges");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("supportingDocument.title.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.notes = "user.affiliation.saveChanges";
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getCleaningDescription();
      assertEquals("user.affiliation.saveChanges", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User.checkValidUserIDField("c");
      User.checkValidUserIDField("c");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      User user1 = new User("~s.kJ!o4w@UN", "~s.kJ!o4w@UN");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user2 = new User("0bV}Fn:73ShtlNU", "0bV}Fn:73ShtlNU");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("c");
      rawVariable0.getColumnEnd();
      assertEquals("c", rawVariable0.getNotes());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6306398469971106
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("4)%o");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      String string0 = "6*%";
      User user0 = new User();
      user0.setAffiliation("6*%");
      rawVariable0.setLabel("6*%");
      user0.setPassword("^S:4NG");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=4.210387353328515
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(true);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable1.setQuestionNumber("b`Qt; EavPj");
      derivedVariable1.setColumnStart((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlias("b`Qt; EavPj");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable2.createVariableSummary();
      derivedVariable1.getOntologyTerms();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getAvailability();
      derivedVariable1.setCategory("I%+Z4UBkt\"1\"p");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable3);
      assertEquals("I%+Z4UBkt\"1\"p", derivedVariable1.getCategory());
      assertEquals("b`Qt; EavPj", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.6727906724532096
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("s/; ?3}XjEs$c");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.setColumnStart("s/; ?3}XjEs$c");
      derivedVariable0.setAlias("s/; ?3}XjEs$c");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getOntologyTerms();
      User user0 = new User();
      user0.setAddressLine2((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getAvailability();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.setColumnStart("hT}_alw");
      rawVariable0.getNotes();
      assertEquals("hT}_alw", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.4382661396602674
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", "UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      user0.setAffiliation(",3Y,jI:Z");
      rawVariable0.setLabel("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setAffiliation("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      supportingDocument0.setTitle("g6");
      supportingDocument0.setTitle(",3Y,jI:Z");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", rawVariable0.getLabel());
      
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-91));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.539027932228916
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("Tk9%6&P", "Tk9%6&P");
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setAddressLine1("Tk9%6&P");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getAvailability();
      user0.setAddressLine1("Tk9%6&P");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("o");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable1.getSourceVariables();
      derivedVariable1.getAlias();
      assertEquals("o", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setAddressLine1("UNABLE_TO_CREATE_CATEGORY");
      ontologyTerm0.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setTerm("v.(@~~Ss=6");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "UNABLE_TO_GET_ORIGINAL_VARIABLE";
      rawVariable0.getFilePath();
      System.setCurrentTimeMillis((-4375L));
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "NDXof/f[}O}";
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(boolean0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      User user0 = new User("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", "`@Qi,Xt!Pp");
      user0.setAffiliation(",3Y,jI:Z");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setAffiliation("");
      supportingDocument0.setTitle(".'0");
      supportingDocument0.setTitle("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd((String) null);
      String string0 = rawVariable0.getNotes();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setYear("784lyd");
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getSourceVariables();
      assertEquals("784lyd", derivedVariable0.getYear());
      
      derivedVariable1.getFilePath();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.4898499206128144
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<MacawChangeEvent> arrayList0 = OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getAvailability();
      derivedVariable0.setCategory("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertFalse(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("user.affiliation.saveChanges");
      rawVariable0.codeBookNumber = "*=.g?5LVXV$\b";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("[ GqC^Y.Dj-b;ae");
      ontologyTerm0.setNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      assertEquals("user.affiliation.saveChanges", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "|^wRkL7ao";
      derivedVariable0.form = "|^wRkL7ao";
      derivedVariable0.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.codeBookNumber = "";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.setColumnStart("I%+Z4UBkt\"1\"p");
      derivedVariable0.setAlias("");
      derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      derivedVariable0.getColumnStart();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.getAvailability();
      user0.clone();
      derivedVariable0.setCategory("I%+Z4UBkt\"1\"p");
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel1);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable1, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("w<#_[\"nt=6AQ7");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getYear();
      assertEquals("w<#_[\"nt=6AQ7", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setNotes("x-%nTFn:.8RW@t0:z4");
      derivedVariable0.getYear();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaningDescription("mTq|_W?DE fo3.E");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnEnd = "mTq|_W?DE fo3.E";
      derivedVariable1.getYear();
      derivedVariable0.getForm();
      assertEquals("mTq|_W?DE fo3.E", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.668962921257037
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      System.setCurrentTimeMillis(1399L);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("/");
      ontologyTerm0.clone();
      rawVariable0.columnStart = "/";
      rawVariable0.getFilePath();
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<Variable>((Collection<? extends Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("uUJs", "uUJs");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, (DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.5808383717256613
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.form = "variable.isCleaned.saveChanges.changedToNotClean";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.add((Variable) derivedVariable0);
      linkedList0.addFirst(arrayList0);
      arrayList0.removeAll(linkedList0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.clone();
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("macaw.businessLayer.ValueLabel$EditingOperationType");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertEquals("macaw.businessLayer.ValueLabel$EditingOperationType", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.8888043637074614
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      derivedVariable0.setCleaningDescription((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.getDisplayName();
      ontologyTerm0.setIdentifier((-1073741822));
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      Object object0 = new Object();
      derivedVariable0.getSourceVariables();
      User user0 = new User("-LHA", "PLq;q\"=}p?AvdYTvkk`");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("J*[q?F?Si|;lCfKw}M", "LHA");
      user0.setAddressLine2((String) null);
      UnaryOperator.identity();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setFileName("");
      unaryOperator0.apply(supportingDocument0);
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.isNewRecord();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      rawVariable0.setAlias("general.error.promotesSecurityRisk");
      rawVariable0.getAlias();
      assertEquals("general.error.promotesSecurityRisk", rawVariable0.getAlias());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, "UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      user0.setAffiliation("o#,turu");
      rawVariable0.setLabel((String) null);
      user0.setPassword("xhhEw>T,");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCleaned();
      rawVariable0.setIdentifier((-555));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      String string0 = "user.firstName.saveChanges";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningDescription("}A[I7kSv}N7d\"w'7");
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "jec26+dWkNziz!";
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      valueLabel0.setMissingValue(false);
      ValueLabel.validateFields(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("rOGmn[J:cbaN*^q3b");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getAvailability();
      derivedVariable0.getNotes();
      assertEquals("rOGmn[J:cbaN*^q3b", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("o3zzU\"s> Z^X5#F");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getQuestionNumber();
      assertEquals("o3zzU\"s> Z^X5#F", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "'";
      rawVariable0.getCodeBookNumber();
      rawVariable0.getForm();
      assertEquals("'", rawVariable0.getForm());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias((String) null);
      String string0 = rawVariable0.getAlias();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertNull(string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm0.clone();
      derivedVariable0.setQuestionNumber((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getAvailability();
      derivedVariable0.setCategory("Unknown");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.131810952803664
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.columnStart = "UNABLE_TO_GET_RAW_VARIABLE";
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("i");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber((String) null);
      User user0 = new User("", "i");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "4)%o";
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("variable.columnStart.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.containsAll(arrayList1);
      derivedVariable0.setForm("variable.form.label");
      derivedVariable0.questionNumber = "UNABLE_TO_CHECK_CLEANING_STATE_EXISTS";
      arrayList0.add((OntologyTerm) null);
      arrayList0.add((OntologyTerm) null);
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.codeBookNumber = "Fg=";
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getIdentifier();
      derivedVariable0.getYear();
      derivedVariable0.getAlias();
      assertEquals("variable.form.label", derivedVariable0.getForm());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("UNABLE_TO_GET_RAW_VARIABLE");
      rawVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.9497385713557955
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.columnStart = "t";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("i");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("", "i");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("t", derivedVariable0.getColumnStart());
      
      derivedVariable1.getAlias();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("UNABLE_TO_GET_RAW_VARIABLE");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.addFirst(derivedVariable0);
      arrayList0.removeAll(linkedList0);
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("UNABLE_TO_GET_RAW_VARIABLE", derivedVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("Fg=");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      derivedVariable0.columnStart = "Evd]";
      linkedList0.addFirst(derivedVariable0);
      arrayList0.removeAll(linkedList0);
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable1.getSourceVariables();
      assertEquals("Fg=", derivedVariable0.getAlias());
      assertEquals("Evd]", derivedVariable1.getColumnStart());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.485528191921338
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.notes = "UNABLE_TO_CREATE_SUPPORTING_DOCUMENT";
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      rawVariable0.createVariableSummary();
      rawVariable0.setForm("variable.category.label");
      String string0 = "X5iJCA<}sL\\";
      rawVariable0.setCodeBookNumber("variable.category.label");
      rawVariable0.setAlias("X5iJCA<}sL");
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("G/84e:");
      Variable.validateFields(derivedVariable0);
      assertEquals("G/84e:", derivedVariable0.getName());
      assertEquals("G/84e:", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("]02^f.8V&", ")}/b]$9#zt+ty2xD?");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, "=JT*(DaC}");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("variable.questionNumber.label");
      derivedVariable0.getSourceVariables();
      assertEquals("variable.questionNumber.label", derivedVariable0.getYear());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.ensureCapacity(89);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("user.affiliation.saveChanges");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("supportingDocument.title.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("q]'}9s7jl");
      ontologyTerm1.setOntologyName("");
      ontologyTerm1.clone();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getFilePath();
      System.setCurrentTimeMillis((-1392L));
      rawVariable0.createVariableSummary();
      assertEquals("user.affiliation.saveChanges", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm(", Yn?;>M");
      derivedVariable0.createVariableSummary();
      assertEquals(", Yn?;>M", derivedVariable0.getForm());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      LinkedList<ValueLabel> linkedList0 = new LinkedList<ValueLabel>();
      linkedList0.retainAll(arrayList0);
      linkedList0.stream();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("ID]>Xs(i6");
      derivedVariable0.createVariableSummary();
      arrayList0.trimToSize();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      String string0 = "X:J]/bIku1s;O*Dxp";
      derivedVariable0.setColumnEnd("X:J]/bIku1s;O*Dxp");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.7885904891927353
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable1.setFilePath("q{89XwARcwoK");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.parallelStream();
      rawVariable1.removeSupportingDocuments(arrayList0);
      rawVariable1.getYear();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("q{89XwARcwoK");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      // Undeclared exception!
      try { 
        rawVariable1.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("user.affiliation.saveChanges");
      rawVariable0.codeBookNumber = "*=.g?5LVXV$\b";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("[ GqC^Y.Dj-b;ae");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.form = "*=.g?5LVXV$\b";
      rawVariable1.getYear();
      rawVariable1.getForm();
      rawVariable0.getAlternativeVariable();
      assertEquals("user.affiliation.saveChanges", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(linkedList0);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setCleaningStatus("UNABLE_TO_UPDATE_CATEGORY");
      // Undeclared exception!
      try { 
        arrayList0.add(2417, ontologyTerm1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2417, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "#J7r?7C";
      derivedVariable0.columnEnd = "#J7r?7C";
      user0.setUserID("#J7r?7C");
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.7855709210239814
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "UNABLE_TO_GET_ALTERNATIVE_VARIABLE";
      User user0 = new User((String) null, "o#,turu");
      user0.setAffiliation(",3Y,jI:Z");
      rawVariable0.setLabel("o#,turu");
      user0.setPassword((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine2((String) null);
      derivedVariable0.setCleaningDescription("i3#!1*kay}PE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier(140);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      Object object0 = new Object();
      derivedVariable1.getSourceVariables();
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.5338841398510814
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.addFirst(derivedVariable0);
      arrayList0.removeAll(linkedList0);
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable0.setSourceVariables(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.4338006812941
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.addSourceVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      String string0 = "variable.notes.label";
      ontologyTerm0.setOntologyName("variable.notes.label");
      derivedVariable1.setColumnEnd("variable.notes.label");
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.columnEnd = "variable.availability.label";
      derivedVariable0.getAvailability();
      derivedVariable0.addValueLabel((ValueLabel) null);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm0.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getAvailability();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
      
      derivedVariable0.setCategory("Unknown");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      user0.setAffiliation("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      rawVariable0.setLabel((String) null);
      user0.setPassword((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=4.258874534298217
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.addOntologyTerms(arrayList2);
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("kIp+KY~2GeAybjJi;^:");
      derivedVariable0.columnStart = "";
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList3);
      derivedVariable0.setAvailability("");
      rawVariable0.setNotes("");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      rawVariable0.clone();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("");
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", "`@Qi,Xt!Pp");
      user0.setAffiliation(",3Y,jI:Z");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setQuestionNumber("UCxG");
      user0.setAffiliation("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("UCxG", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.getFilePath();
      rawVariable0.getQuestionNumber();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("B5pj=6qW!");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      String string0 = "user.affiliation.saveChanges";
      derivedVariable0.setForm("user.affiliation.saveChanges");
      OntologyTerm ontologyTerm1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.addFirst(arrayList0);
      derivedVariable0.setSourceVariables(arrayList0);
      Object object0 = new Object();
      derivedVariable0.getSourceVariables();
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("Fg=");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      derivedVariable0.columnStart = "Vg-;3jX2!8}RV:L0]";
      linkedList0.addFirst(derivedVariable0);
      arrayList0.removeAll(linkedList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        derivedVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("");
      String string0 = "\\9$'\"mm^Z*qo0]rc6}";
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setCodeBookNumber("9$'\"mm^Z*qo0]rc6}");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      User user0 = new User();
      user0.setUserID("9$'\"mm^Z*qo0]rc6}");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.removeAll(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("supportingDocument.description.saveChanges");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSourceVariables();
      assertEquals("supportingDocument.description.saveChanges", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = null;
      arrayList0.add((OntologyTerm) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.notes = "OlePS}4%h4{sq";
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "s/; ?3}XjEs$c";
      supportingDocument0.setFilePath("s/; ?3}XjEs$c");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("s/; ?3}XjEs$c");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }
}
