/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 09:51:18 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedReader;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.List;
import java.util.Vector;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBClob;
import org.firebirdsql.jdbc.FBDriverNotCapableException;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder();
      SQLUtil.addRequiredCondition("update", stringBuilder1);
      assertEquals("update", stringBuilder1.toString());
      
      String string0 = SQLUtil.renderValue(stringBuilder0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3295757236756525
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("ABRLSyrB_3h3");
      assertNull(boolean0);
      
      SQLUtil.mutatesStructure("");
      System.setCurrentTimeMillis((-2451L));
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      String string0 = SQLUtil.ownerDotComponent(tableContainer0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = 1.0;
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("1", string0);
      
      String string1 = SQLUtil.normalize("create unique index", true);
      assertEquals("create unique index", string1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-73667635), "drop table");
      Integer integer0 = new Integer((-73667635));
      SQLUtil.isDML("T*>liga!7n_DN");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("ju/7(}]e");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: ju/7(}]e
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "2a.2d[a*:m", false, (String[]) null);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT 2a.2d[a*:m ", string0);
      
      DBDataType dBDataType0 = DBDataType.getInstance((-1596), "2a.2d[a*:m");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderValue(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-73667635), "drop table");
      Integer integer0 = new Integer(9);
      Integer integer1 = new Integer(9);
      Integer integer2 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer2, integer2);
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      FBClob fBClob0 = new FBClob();
      try { 
        fBClob0.getCharacterStream((long) 9, 0L);
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.firebirdsql.jdbc.FBClob", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("J");
      SQLUtil.isQuery("J");
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "create table, other plugin";
      SQLUtil.isQuery("create table, other plugin");
      Boolean boolean0 = Boolean.TRUE;
      String string1 = "09Vi[/*jLb;'";
      // Undeclared exception!
      SQLUtil.isDML("09Vi[/*jLb;'");
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = SQLUtil.join("IMvgJ", "n<P", stringArray0, "IMvgJ", "n<P", stringArray0);
      String[] stringArray1 = new String[0];
      String string1 = SQLUtil.renderColumnListWithTableName(stringArray0[0], stringArray1);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "^KIVIwqTi?:J+>!5";
      stringArray0[1] = "^KIVIwqTi?:J+>!5";
      stringArray0[2] = "^KIVIwqTi?:J+>!5";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "org.h2.engine.Role";
      stringArray0[4] = "^KIVIwqTi?:J+>!5";
      stringArray0[5] = "select intoposition(clob,start)";
      stringArray0[6] = "create unique index(a[tlxub.lk";
      stringArray0[7] = "^KIVIwqTi?:J+>!5";
      stringArray0[8] = "^KIVIwqTi?:J+>!5";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create unique index(a[tlxub.lk", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("^KIVIwqTi?:J+>!5", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      dBUniqueConstraint0.setTable(dBTable0);
      DBDataType dBDataType0 = DBDataType.getInstance((-474), "selectcallcreaue table, other plugin");
      Integer integer0 = new Integer((-474));
      Integer.compare(2968, 972);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create unique index(a[tlxub.lk", dBTable0, dBDataType0, integer0);
      defaultDBTable0.addColumn(defaultDBColumn0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("IdIjq,");
      mockPrintWriter0.append((CharSequence) "create unique index(a[tlxub.lk");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertSame(defaultDBTable0, dBTable0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("FM|n,1");
      DBDataType.getInstance(1, "org.h2.command.dml.SelectUnion");
      boolean boolean0 = SQLUtil.isQuery("org.h2.command.dml.SelectUnion");
      boolean boolean1 = SQLUtil.isQuery("select into");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String[] stringArray0 = new String[7];
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("referenc");
      genericDescriptorList0.add((Object) jMXPrincipal0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.management.remote.JMXPrincipal cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("^1|ZZs8vZwwE$hk[dml", false, "create unique index", "executeupdate");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      dBCheckConstraint0.setTable(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK executeupdate", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.iapi.services.io.FormatableIntHolder");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "alter tabldTlete";
      stringArray0[1] = "alter tabldTlete";
      stringArray0[2] = "alter tabldTlete";
      stringArray0[3] = "alter tabldTlete";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "org.apache.derby.iapi.services.io.FormatableIntHolder", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("alter tabldTlete", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("wzl!GV%hEq_8+C");
      dBUniqueIndex0.setDoc("alter tabldTlete");
      PrintWriter printWriter0 = mockPrintWriter0.printf("alter tabldTlete", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(dBTable0, false, nameSpec0, printWriter0);
      assertEquals("org.apache.derby.iapi.services.io.FormatableIntHolder", dBTable0.getName());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("LONG");
      DBDataType dBDataType0 = DBDataType.getInstance(1, "LONG");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("LONG", defaultDBTable0, dBDataType0, integer0, integer1);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("\u0001\u01B0", defaultDBTable0, dBDataType0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "F?N J=#dx0ex";
      NameSpec nameSpec0 = NameSpec.NEVER;
      File file0 = FileUtil.canonicalFile("\u0001\u01B0");
      File file1 = MockFile.createTempFile("call", "call", file0);
      File file2 = FileUtil.canonicalFile(file1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file2);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.mutatesDataOrStructure("alter index");
      String string0 = SQLUtil.renderValue(defaultDBTable0);
      assertNull(string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBTable0.setPrimaryKey((DBPrimaryKeyConstraint) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop indexldheee", false, (String[]) null);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("create table3fgipr_({\"a8>9qbpbp");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: create table3fgipr_({\"a8>9qbpbp
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = Boolean.TRUE;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "truncateu";
      stringArray0[1] = "truncateu";
      stringArray0[2] = "truncateu";
      stringArray0[3] = "truncateu";
      stringArray0[4] = "truncateu";
      stringArray0[5] = "truncateu";
      stringArray0[6] = "truncateu";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("truncateu", stringArray0, "truncateu", " or ", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.normalize("H\"T:~|h", false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "create tablesl";
      stringArray0[1] = "H \"T:~|h\"";
      stringArray0[2] = "H \"T:~|h\"";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("create tablesl", stringArray0, "ANY ", "create tablesl", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String[] stringArray0 = new String[14];
      SQLUtil.renderColumnListWithTableName("07n*", stringArray0);
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String string0 = "select intoalter tabldtlete";
      SQLUtil.isQuery("select intoalter tabldtlete");
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("av\"jIb#a l", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select intoalter tabldtlete", dBSchema0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider((-575));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("R.`u%SzB?Kp/7");
      tableContainer0.getTable("");
      DBDataType dBDataType0 = DBDataType.getInstance((-1995509504), "renamealter tabledelete");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", (DBTable) null, dBDataType0, (Integer) null);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.substituteMarkers("", "42X08", "");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("R.`u%SzB?Kp/7");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "creat] taple";
      DBDataType dBDataType0 = DBDataType.getInstance(3068, "creat] taple");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("creat] taple", defaultDBTable0, dBDataType0, (Integer) null, (Integer) null);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("alter session", defaultDBTable0, 4298, "creat] taple");
      defaultDBTable0.getColumn("creat] taple");
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      String string0 = SQLUtil.renderColumnNames(list0);
      assertEquals("creat] taple, alter session", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("w#ggHD#(");
      StringBuilder stringBuilder0 = new StringBuilder(" on ");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("w#ggHD#(", stringBuilder0);
      DBDataType dBDataType0 = DBDataType.getInstance(1105, "NF*%NFi94(hF");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("create tableg", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.isUnique();
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals(" on  and w#ggHD#(NF*%NFI94(HF(0)", stringBuilder1.toString());
      assertEquals(" on  and w#ggHD#(NF*%NFI94(HF(0)", stringBuilder0.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-73667635), "drop table");
      Integer integer0 = new Integer((-73667635));
      Integer integer1 = new Integer((-73667635));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop table", defaultDBTable0, dBDataType0, integer0, integer0);
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      SQLUtil.renderColumnNames(list0);
      SQLUtil.removeComments("drop table");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("drop table", defaultDBTable0, 444, "drop table");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn1, stringBuilder0);
      assertEquals("DROP TABLE", stringBuilder0.toString());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.normalize("ISrreMC_", true);
      DBColumn dBColumn0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition((String) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SQLUtil.isDML("dHeete");
      SQLUtil.isQuery("dHeete");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("org.databene.jdbacl.model.DefaultDBColumn", (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "alter materialized viewon");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "6$oil>tJLAKUe*";
      stringArray0[2] = "6$oil>tJLAKUe*";
      stringArray0[3] = "Activation";
      stringArray0[4] = "alter materialized viewon";
      stringArray0[1] = "6$oil>tJLAKUe*";
      SQLUtil.normalize("*/", false);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType.getInstance((-73667635), "drop table");
      Integer integer0 = new Integer((-73667635));
      Integer integer1 = new Integer((-73667635));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "drop table";
      stringArray0[1] = "drop table";
      stringArray0[2] = "drop table";
      stringArray0[3] = "drop table";
      stringArray0[4] = "drop table";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "drop table", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("UNIQUE (drop table, drop table, drop table, drop table, drop table)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'UNIQUE (drop table, drop table, drop table, drop table, drop table)' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-73667635), "drop table");
      Integer integer0 = new Integer(9);
      Integer integer1 = new Integer(9);
      Integer integer2 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer2, integer2);
      defaultDBTable0.getColumns();
      SQLUtil.removeComments("");
      FBClob fBClob0 = new FBClob();
      try { 
        fBClob0.getCharacterStream((long) 9, 0L);
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.firebirdsql.jdbc.FBClob", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "java.lang.Object@74ae1b5f";
      stringArray0[2] = " REFERENCES ";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" on ");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " REFERENCES ", false, stringArray0);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT \" REFERENCES \" ", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter tabldTlete");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "(a[tlXuBlk";
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("(a[tlXuBlk", defaultDBTable0, 2240, "(a[tlXuBlk");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (a[tlXuBlk
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "+DN^(62jtKcx";
      stringArray0[1] = "+DN^(62jtKcx";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("+DN^(62jtKcx", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("+DN^(62jtKcx");
      List<DBColumn> list0 = defaultDBTable1.getColumns();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[4];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("(a[tlXuB.lk");
      mockPrintWriter0.append((CharSequence) "(a[tlXuB.lk");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.48484848484848486
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("left");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Rd8Z!i\"~";
      stringArray0[1] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      SQLUtil.isQuery("");
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("Rd8Z!i\"~", compositeDBObject0);
      TableContainer tableContainer1 = new TableContainer("@^0M=Vlw_PV@jMi_[Kg");
      tableContainer1.getSchema();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("xru*PMTtK&}AdM0j)v1", (DBSchema) null);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("Rd8Z!i\"~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'Rd8Z!i\"~' not found in table ''
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0921965331237558
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "alter materialized viewon");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "6$oil>tJLAKUe*";
      stringArray0[1] = "6$oil>tJLAKUe*";
      stringArray0[3] = "Activation";
      stringArray0[4] = "alter materialized viewon";
      stringArray0[1] = "6$oil>tJLAKUe*";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "6$oil>tJLAKUe*", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("6$oil>tJLAKUe*", false, dBPrimaryKeyConstraint0);
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      
      SQLUtil.removeComments("truncateexecutez'ws#2");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (6$oil>tJLAKUe*, 6$oil>tJLAKUe*, , Activation, alter materialized viewon, )", string1);
      
      Random.setNextRandom(44);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("creae materialized viewdeterministic", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      MockFile mockFile0 = new MockFile("6$oil>tJLAKUe*");
      File file0 = FileUtil.canonicalFile((File) mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      PrintStream printStream0 = mockPrintStream0.append('[');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, false);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec1, mockPrintWriter0);
      String string2 = SQLUtil.join("6$oil>tJLAKUe*", "6$oil>tJLAKUe*", stringArray0, "truncateexecutez'ws#2", "SDBC.", stringArray0);
      assertEquals("6$oil>tJLAKUe* join truncateexecutez'ws#2 as SDBC. on 6$oil>tJLAKUe*.6$oil>tJLAKUe* = SDBC..6$oil>tJLAKUe* and 6$oil>tJLAKUe*.6$oil>tJLAKUe* = SDBC..6$oil>tJLAKUe* and 6$oil>tJLAKUe*.null = SDBC..null and 6$oil>tJLAKUe*.Activation = SDBC..Activation and 6$oil>tJLAKUe*.alter materialized viewon = SDBC..alter materialized viewon and 6$oil>tJLAKUe*.null = SDBC..null", string2);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      String string0 = SQLUtil.normalize(".9:Rx/&kM!k@4", true);
      assertEquals(".9 : Rx / & kM ! k @ 4", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string1 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("null", string1);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "_p0?L'nn'\"$G'9L&";
      stringArray0[1] = "_p0?L'nn'\"$G'9L&";
      stringArray0[2] = "07n*";
      String string0 = SQLUtil.renderColumnListWithTableName("_p0?L'nn'\"$G'9L&", stringArray0);
      assertEquals("_p0?L'nn'\"$G'9L&._p0?L'nn'\"$G'9L&, _p0?L'nn'\"$G'9L&._p0?L'nn'\"$G'9L&, _p0?L'nn'\"$G'9L&.07n*", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " REFERENCES ", false, stringArray0);
      String string1 = SQLUtil.ownerDotComponent(dBUniqueConstraint0);
      assertEquals("null. REFERENCES ", string1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.48484848484848486
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure(" on ");
      String string0 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBDataType dBDataType0 = DBDataType.getInstance(12, "truncate_xe");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      String[] stringArray0 = new String[7];
      stringArray0[0] = " on ";
      stringArray0[1] = null;
      stringArray0[2] = "truncate_xe";
      stringArray0[3] = " on ";
      stringArray0[4] = " on ";
      stringArray0[5] = " on ";
      stringArray0[6] = null;
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DBDataType.getInstance(2136, " on ");
      int int0 = (-240727844);
      Integer.divideUnsigned((-240727844), 12);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.setTable(defaultDBTable0);
      defaultDBColumn0.setDefaultValue("truncate_xe");
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop<indexldheee", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT drop<indexldheee ", stringBuilder0.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance("LONG");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("LONG", defaultDBTable0, dBDataType0, integer0, integer0);
      String string0 = "F\\?N J=#dx0ex";
      String string1 = " N+";
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn(" N+", defaultDBTable0, dBDataType0);
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("LONG", defaultDBTable0, dBDataType0, integer0);
      DefaultDBColumn defaultDBColumn3 = null;
      try {
        defaultDBColumn3 = new DefaultDBColumn("LONG", defaultDBTable0, (-7), "setDate(String,Date,Calendar)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "alter tabldelete";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = "KEYCONSTRAINTID";
      String string2 = "drop table";
      String[] stringArray0 = null;
      String[] stringArray1 = new String[8];
      stringArray1[0] = "alter tabldelete";
      stringArray1[1] = "alter tabldelete";
      stringArray1[2] = "getTypeMap";
      stringArray1[3] = "vq";
      stringArray1[4] = "execsl";
      stringArray1[5] = "vq";
      stringArray1[6] = "KEYCONSTRAINTID";
      stringArray1[7] = "execsl";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("drop table", (String[]) null, "execsl", "vq", stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = SQLUtil.normalize("lD$Di!\"Hl(Vg|v,_~g", false);
      assertEquals("lD $ Di ! \"Hl(Vg|v,_~g\"", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4782608695652174
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("insertdheete");
      assertTrue(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SQLUtil.isProcedureCall("alter tabldTlete");
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("'#qX?5M]b^X#R74$BkR", (String[]) null, "alter tabldTlete", "changePending", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("blXJZ7IGk#16j");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "execcreate table, other plugin";
      stringArray0[1] = "blXJZ7IGk#16j";
      stringArray0[2] = "blXJZ7IGk#16j";
      stringArray0[3] = "execcreate table, other plugin";
      stringArray0[4] = "blXJZ7IGk#16j";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("execcreate table, other plugin", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (execcreate table, other plugin, blXJZ7IGk#16j, blXJZ7IGk#16j, execcreate table, other plugin, blXJZ7IGk#16j) REFERENCES blXJZ7IGk#16j(execcreate table, other plugin, blXJZ7IGk#16j, blXJZ7IGk#16j, execcreate table, other plugin, blXJZ7IGk#16j)", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = SQLUtil.normalize(".9:Rx/&kM!k@4", true);
      String string1 = SQLUtil.renderValue(".9:Rx/&kM!k@4");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, false, (String[]) null);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = SQLUtil.normalize("xru*PMTtK&}AdM0j)v1", false);
      assertEquals("xru * PMTtK & } AdM0j) v1", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("uV", "uV", stringArray0, "uV", (String) null, stringArray0);
      assertEquals("uV join uV as null on ", string0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable1.getIndex("uV");
      String string1 = SQLUtil.renderQuery(defaultDBTable1, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE ", string1);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("o6)-+To3 +N1}j';5LV", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("DROP TABLE ");
      SQLUtil.addOptionalCondition("DROP TABLE ", stringBuilder0);
      assertEquals("DROP TABLE  or DROP TABLE ", stringBuilder0.toString());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "alter materialized viewon");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[2] = "6$oil>tJLAKUe*";
      stringArray0[4] = "alter materialized viewon";
      stringArray0[1] = "6$oil>tJLAKUe*";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "6$oil>tJLAKUe*", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("6$oil>tJLAKUe*", false, dBPrimaryKeyConstraint0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (, 6$oil>tJLAKUe*, 6$oil>tJLAKUe*, , alter materialized viewon, )", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("xru*PMTtK&}AdM0j)v1");
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table xru*PMTtK&}AdM0j)v1", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance((-73667656), "org.h2.store.Page");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("org.h2.store.Page", (DBTable) null, dBDataType0, integer0, integer2);
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("org.h2.store.Page, org.h2.store.Page, org.h2.store.Page", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "create table, other plugin";
      stringArray0[1] = "create table, other plugin";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "select intoalter tabl4ylese";
      stringArray1[1] = "2LF0|T;9<3BIG";
      stringArray1[2] = "2LF0|T;9<3BIG";
      // Undeclared exception!
      try { 
        SQLUtil.join("create table, other plugin", "select intoalter tabl4ylese", stringArray0, "create table, other plugin", "2LF0|T;9<3BIG", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "create table, other plugin";
      stringArray0[1] = "create table, other plugin";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "~k";
      stringArray1[1] = "2LF0|T;9<3BIG";
      stringArray1[2] = "2LF0|T;9<3BIG";
      String string0 = SQLUtil.join("create table, other plugin", "~k", stringArray0, "create table, other plugin", "2LF0|T;9<3BIG", stringArray1);
      assertEquals("create table, other plugin join create table, other plugin as 2LF0|T;9<3BIG on ~k.create table, other plugin = 2LF0|T;9<3BIG.~k and ~k.create table, other plugin = 2LF0|T;9<3BIG.2LF0|T;9<3BIG", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SQLUtil.removeComments("zp*1ru:E=3#+");
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = SQLUtil.normalize("callb{,r", false);
      assertEquals("callb {, r", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.join("ArQ+p~#uQBGI*CUl", "ArQ+p~#uQBGI*CUl", stringArray0, "ArQ+p~#uQBGI*CUl", "1B@y>", (String[]) null);
      assertEquals("ArQ+p~#uQBGI*CUl join ArQ+p~#uQBGI*CUl as 1B@y> on ", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("exec", 3);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Boolean boolean0 = Boolean.TRUE;
      SQLUtil.mutatesDataOrStructure("#A20;,SbfGx");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "#A20;,SbfGx";
      stringArray0[1] = "#A20;,SbfGx";
      stringArray0[2] = "#A20;,SbfGx";
      stringArray0[3] = "#A20;,SbfGx";
      stringArray0[4] = "#A20;,SbfGx";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) boolean0;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop indexldheee", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("CONSTRAINT \"drop indexldheee\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("exec8|nk_:f");
      assertTrue(boolean0);
      
      Boolean boolean1 = Boolean.TRUE;
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBDataType.getInstance(751, "update");
      TableContainer tableContainer0 = new TableContainer("position(Clob,start)");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" DEFAUT ", (DBSchema) null);
      Boolean boolean0 = SQLUtil.mutatesStructure("call");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("P", stringBuilder0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("alter tabldTlete");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = SQLUtil.isDML("mPwBL32 $");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("xSws8d@8yQ");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "xSws8d@8yQ", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE ()", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop indexldheee", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop indexldheee", defaultDBTable0, (-1570), "drop indexldheee");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("DROP INDEXLDHEEE", string0);
      
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec1);
      assertEquals("CONSTRAINT \"drop indexldheee\" PRIMARY KEY ()", string1);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = SQLUtil.normalize("drop tablethe jvm claims not to support the {0} encoding.", false);
      assertEquals("drop tablethe jvm claims not to support the { 0 } encoding.", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = SQLUtil.normalize("update(db=", false);
      assertEquals("update (db =", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      String[] stringArray0 = new String[7];
      stringArray0[0] = "create unique index";
      stringArray0[1] = "renameupdate";
      stringArray0[2] = "VDyd3bqjMq";
      stringArray0[3] = "renameupdate";
      stringArray0[4] = "renameupdate";
      stringArray0[5] = "truncate.9:rx/&km!k@4";
      stringArray0[6] = "renameupdate";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "truncate.9:rx/&km!k@4", true, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "truncate.9:rx/&km!k@4", false, (String[]) null);
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = new Integer((-1091598173));
      DBDataType dBDataType0 = DBDataType.getInstance(6134, "truncate.9:rx/&km!k@4");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("truncatecreate materialized view", defaultDBTable0, dBDataType0, (Integer) null, integer0);
      defaultDBColumn0.getNotNullConstraint();
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("8>_X5.+C", true, defaultDBTable0, "callcr");
      Object object0 = new Object();
      dBPrimaryKeyConstraint1.equals(object0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("renameupdate", false, defaultDBTable0, stringArray0, defaultDBTable0, (String[]) null);
      defaultDBColumn0.toString();
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("truncatecreate materialized view : TRUNCATE.9:RX/&KM!K@4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'truncatecreate materialized view : TRUNCATE.9:RX/&KM!K@4' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = SQLUtil.normalize("o6)-+To3 +N1}j';5LV", false);
      assertEquals("o6) - + To3 + N1 } j ';5LV'", string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[1];
      NameSpec nameSpec0 = NameSpec.NEVER;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create table", false, stringArray0);
      SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("B{/@lkdoxiqK7c4", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'null' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.9127536925169077
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      String string0 = SQLUtil.normalize("o6)-+To3 +N1}j';5LV", true);
      assertEquals("o6) - + To3 + N1 } j ';5LV'", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "E";
      stringArray0[1] = "E";
      stringArray0[2] = "o6)-+To3 +N1}j';5LV";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "E", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (E, E, o6)-+To3 +N1}j';5LV)", string1);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(751, "dHeete");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("dHeete");
      defaultDBTable0.setName("dHeete");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("dHeete", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("dHeete DHEETE(1) NULL", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("updateo(efbx2vt5;!(rq", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop indexon", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop indexon", false, (String[]) null);
      String string0 = SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      assertEquals("CONSTRAINT \"drop indexon\" ", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.NEVER;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("xru*PMTtK&}AdM0j)v1");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "xru*PMTtK&}AdM0j)v1";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "xru*PMTtK&}AdM0j)v1";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("xru*PMTtK&}AdM0j)v1", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      SQLUtil.isQuery("yiNsWj:7}f");
      TableContainer tableContainer0 = new TableContainer("yiNsWj:7}f", defaultDBTable0);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable(".9:Rx/&kM!k@4", (DBSchema) null);
      // Undeclared exception!
      try { 
        defaultDBTable1.getColumn("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '' not found in table '.9:Rx/&kM!k@4'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = Boolean.FALSE;
      String string0 = "alter session";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "alter session";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("alter session", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null, nameSpec0);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("dHeete");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "dHeete");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String[] stringArray0 = new String[14];
      boolean boolean0 = SQLUtil.isDDL("07`*");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "java.lang.Object@6f58b0c2";
      stringArray0[1] = "java.lang.Object@6f58b0c2";
      stringArray0[2] = " REFERENCES ";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "java.lang.Object@6f58b0c2";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(3, "B$b2");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("B$b2", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.setType(dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("B$B2(2,2)", string0);
      
      boolean boolean0 = SQLUtil.isDML("cM'$,/iw{");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(751, "dHeete");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("dHeete");
      defaultDBTable0.setName("dHeete");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("dHeete", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("DHEETE(1)", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("_%iy.mB(hTo'M)!i/ ;");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"hTo'M\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertEquals("table null", string0);
      assertNotNull(string0);
      
      String string1 = SQLUtil.substituteMarkers("table null", "table null", (Object) null);
      assertEquals("null", string1);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("fM_o:8\"7W=", "YRpt|iC\f]xVx", "fM_o:8\"7W=");
      assertEquals("fM_o:8\"7W=", string0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Character character0 = Character.valueOf('M');
      String string0 = SQLUtil.renderValue(character0);
      assertEquals("'M'", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.normalize("", true);
      assertEquals("", string0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[14];
      String string0 = SQLUtil.renderColumnListWithTableName("create materialized view", stringArray0);
      assertEquals("create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null, create materialized view.null", string0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, , , , , , , , , , , , , )", string1);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("()", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("create materialized vieworg.databene.jdbacl.sql.parser.sqllexer");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("delete");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.4736842105263158
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select");
      assertFalse(boolean0);
      assertNotNull(boolean0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("rename");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter session");
      assertNotNull(boolean0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addOptionalCondition("]P:", stringBuilder0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.7689528313755152
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = "xru*PMTtK&}AdM0j)v1";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("xru*PMTtK&}AdM0j)v1");
      String string1 = ".9:Rx/&kM!k@4";
      SQLUtil.normalize(".9:Rx/&kM!k@4", false);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      SQLUtil.renderValue(integer0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("0");
      assertNull(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null AND null = null AND null = null", string0);
      
      boolean boolean0 = SQLUtil.isQuery("SELECT * FROM null WHERE null = null AND null = null AND null = null");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "xru*PMTtK&}AdM0j)v1";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "xru*PMTtK&}AdM0j)v1";
      String string0 = SQLUtil.leftJoin("", stringArray0, "l5fFQG;)Aq", "create unique index-yvms<g^t0n$", stringArray0);
      assertEquals("left join l5fFQG;)Aq as create unique index-yvms<g^t0n$ on .xru*PMTtK&}AdM0j)v1 = create unique index-yvms<g^t0n$.xru*PMTtK&}AdM0j)v1 and . = create unique index-yvms<g^t0n$. and . = create unique index-yvms<g^t0n$. and .xru*PMTtK&}AdM0j)v1 = create unique index-yvms<g^t0n$.xru*PMTtK&}AdM0j)v1", string0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("drop materialized view", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.7598407318671061
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      SQLUtil.normalize("o6)-+To3 +N1}j';5LV", true);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "drop indexon", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("$VJ.'}|/5u$t;?%");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = "";
      DBCatalog dBCatalog0 = new DBCatalog();
      // Undeclared exception!
      try { 
        dBCatalog0.getTable("", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table ''
         //
         verifyException("org.databene.jdbacl.model.DBCatalog", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = "alter materialized viewon";
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "alter materialized viewon");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized viewon");
      DBDataType dBDataType0 = DBDataType.getInstance((-565), "alter materialized viewon");
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = new Integer((-565));
      DBDataType.getInstance(264, "-$'%b0JQV");
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      Integer integer3 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("-$'%b0JQV", defaultDBTable0, dBDataType0, integer1, integer3);
      defaultDBColumn0.toString();
      // Undeclared exception!
      try { 
        stringBuilder0.appendCodePoint((-131));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("j3QJ$T[a?c0");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("dHeete");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter tableon");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("alter tabledelete");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String[] stringArray0 = new String[19];
      String string0 = SQLUtil.innerJoin("y_g%x<1", stringArray0, "y_g%x<1", "6b;Jz+oH-%", stringArray0);
      assertEquals("y_g%x<1 as 6b;Jz+oH-% on y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null and y_g%x<1.null = 6b;Jz+oH-%.null", string0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      String string0 = SQLUtil.join("deete", "create table, othr plugin", stringArray0, "create table, othr plugin", "create table, othr plugin", stringArray0);
      assertEquals("deete join create table, othr plugin as create table, othr plugin on create table, othr plugin.null = create table, othr plugin.null and create table, othr plugin.null = create table, othr plugin.null and create table, othr plugin.null = create table, othr plugin.null and create table, othr plugin.null = create table, othr plugin.null and create table, othr plugin.null = create table, othr plugin.null and create table, othr plugin.null = create table, othr plugin.null and create table, othr plugin.null = create table, othr plugin.null", string0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("Unable to create file: ", "Unable to create file: ", (String[]) null, (String) null, "drop materialized view", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("KEYCONSTRAINTID", "drop table", (String[]) null, "drop table", "alter tabldelete", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin((String) null, (String[]) null, "drop materialized view", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.join("inner", "inner", stringArray0, "inner", (String) null, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getReferrers();
      StringBuilder stringBuilder0 = new StringBuilder("inner");
      assertEquals("inner", stringBuilder0.toString());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("rname", "rname", (String[]) null, "rname", "rname", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("", "", (String[]) null, "", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "into";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("drop indexon", stringArray0, "drop indexon", "into", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
