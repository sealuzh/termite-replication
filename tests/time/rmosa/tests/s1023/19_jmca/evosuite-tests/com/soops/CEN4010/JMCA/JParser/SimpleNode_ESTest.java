/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 10:17:30 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.009656341980306
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      Node node0 = simpleNode0.parent;
      simpleNode0.toString();
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("EqualityExpression", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*gt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      Node node1 = simpleNode0.parent;
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8690529818095458
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4093);
      SimpleNode simpleNode1 = new SimpleNode(17);
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.jjtAddChild(simpleNode1, 4093);
      simpleNode1.jjtAddChild(simpleNode0.parent, 4093);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7viku)vIr`jJ_");
      simpleNode0.jjtGetChild(4093);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtGetParent();
      simpleNode1.identifiers = arrayList0;
      simpleNode0.jjtGetChild(4093);
      simpleNode0.jjtGetParent();
      simpleNode1.jjtGetChild(0);
      simpleNode1.jjtGetParent();
      simpleNode1.toString("7viku)vIr`jJ_");
      arrayList0.add("L*x]1k_");
      // Undeclared exception!
      try { 
        simpleNode0.toString("L*x]1k_");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4093
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.toString();
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("AdditiveExpression", stringWriter0);
      assertEquals("<AdditiveExpression>\n  <identifier>*rshft</identifier>\n</AdditiveExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)35;
      byteArray0[6] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.toString();
      String string0 = "C";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1920482794610443
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 44;
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.toString();
      simpleNode0.setIdentifier("C");
      simpleNode0.jjtAddChild(simpleNode0, 44);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "ExclusiveOrExpression");
      // Undeclared exception!
      simpleNode0.dump("\"super\"", stringWriter1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("RP%23@ ?!JBu-,7rWU:");
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('H');
      stringWriter1.append((CharSequence) "Block");
      stringWriter0.append((CharSequence) "RP%23@ ?!JBu-,7rWU:");
      simpleNode0.dump("&", stringWriter1);
      assertEquals("HBlockRP%23@ ?!JBu-,7rWU:<Block>\n  <identifier>*amp</identifier>\n</Block>\n", stringWriter1.toString());
      assertEquals("HBlockRP%23@ ?!JBu-,7rWU:<Block>\n  <identifier>*amp</identifier>\n</Block>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.toString();
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter(50);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "&&");
      simpleNode0.dump("|VPW{T2Z9~oP[/v", stringWriter1);
      assertEquals("&&<AdditiveExpression>\n  <identifier>*amp</identifier>\n</AdditiveExpression>\n", stringWriter1.toString());
      assertEquals("&&<AdditiveExpression>\n  <identifier>*amp</identifier>\n</AdditiveExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.jjtGetParent();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("EE");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "RP%23@ ?!JBu-,7rWU:");
      StringWriter stringWriter1 = new StringWriter(1695);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.flush();
      stringWriter1.append((CharSequence) "EE");
      simpleNode0.dump("]'uyta#", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-16519105));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<ExclusiveOrExpression>\n</ExclusiveOrExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.toString();
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(20);
      simpleNode0.dump("AdditiveExpression", stringWriter0);
      assertEquals("<AdditiveExpression>\n</AdditiveExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3615));
      Node[] nodeArray0 = new Node[0];
      SystemInUtil.addInputLine("\"super\"");
      simpleNode0.children = nodeArray0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.jjtAddChild(simpleNode0, 1414);
      StringWriter stringWriter0 = new StringWriter(1414);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter1 = new StringWriter(245);
      simpleNode0.jjtGetChild(1414);
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.jjtGetParent();
      simpleNode1.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("TE|^j(_#|/fz&`D2x", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*lshft</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode((-6103));
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.identifiers = arrayList0;
      Node node0 = simpleNode0.jjtGetParent();
      assertEquals(0, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.toString();
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter(50);
      stringWriter0.append((CharSequence) "AdditiveExpression");
      simpleNode0.dump("|VPW{T2Z9~oP[/v", stringWriter0);
      assertEquals("AdditiveExpression<AdditiveExpression>\n  <identifier>*le</identifier>\n</AdditiveExpression>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(168);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 52);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("_T?^K#6%n{^-", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((byte)9);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, (byte)9);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-57557325));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("EqualityExpression");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("z", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-442));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3615));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      Node node0 = simpleNode0.parent;
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<EnumBody>\n</EnumBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("}", stringWriter0);
      assertEquals("<ClassOrInterfaceType></ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3615));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-3615));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3615
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3649));
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-3649));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3649
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3615));
      int int0 = (-1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.009656341980306
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(71);
      simpleNode0.toString();
      simpleNode0.setIdentifier("`");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "AssertStatement");
      simpleNode0.dump("AssertStatement", stringWriter0);
      simpleNode0.dump("`", stringWriter0);
      assertEquals("AssertStatement<AssertStatement>\n  <identifier>`</identifier>\n</AssertStatement>\n<AssertStatement>\n  <identifier>`</identifier>\n</AssertStatement>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("AssertStatement : `", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((byte)9);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('w');
      simpleNode0.dump("#4}<ngSj];=9tm/", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((byte)9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(8);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("M)-1q?Li1!ypKI85)H", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("}", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("\"?wE3G_!");
      StringWriter stringWriter0 = new StringWriter(9);
      simpleNode0.dump("\"?wE3G_!", stringWriter0);
      assertEquals("<EnumBody>\n  <identifier>\"?wE3G_!</identifier>\n</EnumBody>\n", stringWriter0.toString());
      
      simpleNode0.jjtGetParent();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3614));
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3614
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-492));
      simpleNode0.jjtClose();
      String string0 = "";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
      stringWriter1.write("");
      stringWriter1.flush();
      StringWriter stringWriter2 = stringWriter1.append('M');
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      // Undeclared exception!
      try { 
        stringWriter2.write(charArray0, (-492), 5045);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3615));
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("RP%23@ ?!JBu-,7rWU:");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
