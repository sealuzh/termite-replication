/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 09:50:10 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1982462795335826
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.setDead();
      player0.getSubparty();
      player0.setX(0.0F);
      player0.setDead((-2785L));
      Player player1 = new Player((short)4919, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "", (-1));
      player1.getSubparty();
      player1.setMoney(0.2F);
      player1.head = (Party) player0;
      player0.next = (Party) player1;
      player0.gangStrength();
      player0.getX();
      player0.setX(10.0F);
      System.setCurrentTimeMillis((-1962L));
      System.setCurrentTimeMillis(0L);
      player0.type();
      player0.setConnected(true);
      player0.isJoinOK(player1, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 765, (short)4919);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      player1.isJoinOK(player0, false);
      player1.getMoney();
      player0.getMoney();
      assertEquals((-2785L), player0.getTimeOfDeath());
      
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(5140);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gQPwNHBx}dS$,");
      Player player1 = new Player(1716, "52_", "52_", (byte)1);
      Player player2 = new Player((byte)1, "28D[ LJ)0L:GP", " ", (short)4919, 0);
      player0.setJoinOK(player2, false);
      boolean boolean0 = player2.isJoinOK(player0, false);
      assertFalse(boolean0);
      
      player0.pack();
      player2.unpack(dataInputStream0);
      player0.isConnected();
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player5140", player0.getName());
      assertEquals(0, player0.getPictureId());
      
      int int1 = player2.getStrength();
      assertEquals(0, int1);
      
      System.setCurrentTimeMillis(15000L);
      float float0 = player1.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player2.getX();
      assertEquals(10.0F, float1, 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertFalse(player2.isDead());
      assertEquals(4919, player2.getPictureId());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(29953, "|pgv)w}je%^E%uBq,`~", (-2081));
      player0.getSubparty();
      player0.gangStrength();
      player0.setX((-1341.6028F));
      Player player1 = new Player((short)4919, "-6%f5", (-2081));
      player0.setJoinOK(player1, false);
      Player player2 = new Player(4919, "~CNOS", 29953);
      player2.getSubparty();
      player0.isJoinOK(player2, true);
      player2.isJoinOK(player0, true);
      float float0 = player0.getX();
      assertEquals((-1341.6028F), float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.getMoney();
      player0.setDead((-663L));
      Party party0 = new Party((short)4919);
      party0.next = (Party) player0;
      party0.id = (int) (short)4919;
      party0.prev = (Party) player0;
      player0.add(party0);
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(1567);
      player0.getStrength();
      player0.setConnected(false);
      byte[] byteArray0 = player0.pack();
      player0.setConnected(false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 660);
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      player0.unpack(dataInputStream0);
      player0.isConnected();
      player0.getMoney();
      player0.gangStrength();
      Player player1 = new Player((short)4919);
      player1.setDead();
      player1.id = 660;
      player1.setX(569.7036F);
      player0.isJoinOK(player1, true);
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      
      System.setCurrentTimeMillis(88L);
      player0.isConnected();
      player0.getStrength();
      player0.pack();
      assertEquals("Player1567", player0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(4936, "hONBW", "AXQ4/}a7#", 5140, (-835));
      int int0 = player0.gangStrength();
      assertEquals(5140, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals((-835), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(25);
      Player player1 = new Player(25);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertTrue(boolean0);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player25", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(5352);
      player0.next = (Party) player0;
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals("Player5352", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)20;
      int int0 = (-1828);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1828), (byte)2);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-1529), "", "", (-1493), 0);
      int int0 = player0.gangStrength();
      assertEquals((-1493), player0.getPictureId());
      assertEquals(0, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(3, (String) null, 3);
      player0.setMoney(3);
      player0.getMoney();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(3);
      player0.getSubparty();
      player0.gangStrength();
      player0.reset(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      player0.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      
      player0.isJoinOK(player0, false);
      Player player1 = new Player((byte)0, (String) null, (String) null, (byte)0, 1);
      player0.isJoinOK(player1, false);
      player1.getIP();
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-9718), "m<6& 8NHr??nKOg)~", "*dKFv'", 4919, 4919);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(4919, player0.getPictureId());
      assertEquals("m<6& 8NHr??nKOg)~", player0.getIP());
      assertEquals(4919, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(2658, "", "", (-594), 2658);
      Party party0 = player0.boss;
      player0.setDead((-1073L));
      player0.getPictureId();
      Player player1 = new Player((-2078));
      player0.getName();
      player0.setDead((long) (-594), true);
      player1.setY(0);
      player0.getPictureId();
      player0.reset(false);
      player1.setX(1.0F);
      assertEquals(1.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(17762, (String) null, (String) null, 17762, (-582));
      Party party0 = player0.boss;
      player0.setDead((-1287L));
      player0.getPictureId();
      Player player1 = new Player(0);
      player0.setJoinOK(player1, true);
      player0.getName();
      player0.setDead((-975L), true);
      player1.setY((-275.90247F));
      player0.getPictureId();
      player0.reset(true);
      player0.setX(1263.0F);
      player0.add(player1);
      player0.getSubparty();
      player0.reset(true);
      player1.getTimeOfDeath();
      player1.setConnected(true);
      player0.setConnected(true);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(609);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      player0.gangStrength();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, "", "", 4, 0);
      player0.reset(true);
      Player player1 = new Player(0, "", "M|hQgv\"-KOjHO2G", 0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)1;
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)78;
      byteArray1[2] = (byte)50;
      player0.unpack(byteArray1);
      player1.getName();
      player1.reset(false);
      assertEquals(1, player1.getStrength());
      assertEquals("", player1.getIP());
      assertEquals(0, player1.getPictureId());
      
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(4, player0.getPictureId());
      assertEquals(0, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-594), "", "p/W*\",JEB", (-594), 4);
      Party party0 = player0.boss;
      Player player1 = new Player(5, "p/W*\",JEB", "", 1787);
      player1.setDead((-1287L));
      int int0 = player1.getPictureId();
      assertEquals((-1287L), player1.getTimeOfDeath());
      assertEquals(1787, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte) (-91);
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      byteArrayInputStream0.skip((byte) (-86));
      byteArrayInputStream0.close();
      Player player0 = new Player((byte)76, "", "", (byte) (-86));
      player0.unpack(dataInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      
      Player player1 = new Player(516, "D-{T3m`OQ:,", "", (short)4919);
      player0.isJoinOK(player1, false);
      player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(4);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(5092);
      Player player1 = new Player((short)4919);
      player0.head = (Party) player1;
      player0.pack();
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2, int0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player5092", player0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(3);
      player0.getSubparty();
      player0.gangStrength();
      player0.reset(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      player0.unpack(dataInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream2 = new DataInputStream((InputStream) null);
      player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(395);
      player0.setZ(0.0F);
      Party party0 = new Party(5);
      player0.remove(party0);
      player0.setZ(0.1F);
      player0.setY((-1.0F));
      player0.isDead();
      player0.gangStrength();
      player0.getMoney();
      player0.getZ();
      player0.setY(395);
      float float0 = player0.getY();
      assertEquals(395.0F, float0, 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(4919, "okP[%pQwV%Md", "NMQ.}B6<:QH3", 4919);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte) (-50);
      player0.unpack(byteArray0);
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(1L);
      player0.isDead();
      player0.type();
      String string0 = player0.getIP();
      assertEquals("okP[%pQwV%Md", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(2043);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player2043", player0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY((-275.90247F));
      player0.getTimeOfDeath();
      player0.setConnected(true);
      int int0 = player0.type();
      assertEquals((-275.90247F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0, "a|xpC]@]h|?Ayrr}", "*F?=p", 0, 0);
      Player player1 = new Player(10, "a|xpC]@]h|?Ayrr}", "*F?=p", 2516, 3);
      player0.remove(player1);
      player0.setDead();
      player0.setConnected(true);
      player0.isConnected();
      player0.toString();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(2043);
      int int0 = Packable.GAME_EVENT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-3832), (String) null, (-3832));
      Player player1 = new Player();
      player0.head = (Party) player1;
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player0.head.toString());
      
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-3832), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(2043);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark(4919);
      dataInputStream0.available();
      player0.unpack(dataInputStream0);
      assertEquals(7, byteArrayInputStream0.available());
      
      Player player1 = new Player((-1412), "", "4}o{ +8s._cZ", 5, (-1497));
      player0.isJoinOK(player1, false);
      int int0 = player1.getStrength();
      assertEquals((-1497), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.1262368167947456
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1549), "@6P69+1A", "Aq[!G{NS0R9rf", (-1549), (-7724));
      player0.pack();
      player0.setMoney((-7724));
      player0.setDead((-200L), true);
      player0.getStrength();
      player0.getZ();
      Player player1 = new Player(3033, "Aq[!G{NS0R9rf", (-7724));
      player1.setDead(0L);
      player0.getY();
      player0.setDead();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-7724.0F), player0.getMoney(), 0.01F);
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(5);
      Party party0 = player0.prev;
      player0.head = null;
      player0.setZ(0);
      player0.setY((-1780.391F));
      player0.id = 0;
      Party party1 = new Party((-643));
      player0.head = party1;
      player0.remove(party1);
      player0.gangStrength();
      player0.setZ((-1.0F));
      player0.setY(5);
      player0.isDead();
      player0.gangStrength();
      player0.boss = party1;
      player0.prev = null;
      player0.getMoney();
      player0.getZ();
      player0.setY((-1.0F));
      player0.getY();
      player0.setY((-1.0F));
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(5);
      Party party0 = player0.prev;
      player0.setZ(0);
      player0.setY(1509.919F);
      Party party1 = new Party(0);
      player0.remove((Party) null);
      player0.gangStrength();
      player0.setZ((-1780.391F));
      player0.setY(0.0F);
      player0.isDead();
      int int0 = Packable.PLAYER;
      player0.getZ();
      player0.setY((-249.80069F));
      assertEquals((-249.80069F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1, "module.ModuleBrowserDialog$ModuleFilter", "O<vJz!$|^<v\"jYy4<K", 1);
      float float0 = player0.getZ();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(0, "t%@{", "", (-1));
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((-1L), true);
      player0.getPictureId();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis((-308L));
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-2289));
      int int0 = 1240;
      Party party0 = new Party(1240);
      player0.prev = party0;
      party0.prev = (Party) player0;
      party0.next = (Party) player0;
      player0.setY(1484.3695F);
      DataInputStream dataInputStream0 = null;
      party0.add(player0.prev);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.getSubparty();
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.reset(true);
      String string0 = player0.getName();
      assertEquals("Player-1", string0);
      
      player0.reset(false);
      int int1 = player0.getPictureId();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(0, int1);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-1));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      int int0 = Packable.UNDEFINED;
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(3);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)37;
      byteArray0[3] = (byte)2;
      player0.unpack(byteArray0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player3", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(3348);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-1));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(532);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(532);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(30, byteArrayOutputStream0.size());
      
      player0.pack();
      assertEquals("Player532", player0.getName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(1649, "n!G.ZU57-M[9`\"4sN", 1649);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("n!G.ZU57-M[9`\"4sN");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(2048, "", ">n<++qDWc31d`w3", 2048, 2048);
      int int0 = player0.getStrength();
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(2048, int0);
      assertEquals(2048, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-2777));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1137);
      float float0 = player0.getY();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player1137", player0.toString());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(262);
      player0.setX(262);
      player0.getName();
      assertEquals(262.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(4);
      player0.setMoney(4);
      MockFile mockFile0 = new MockFile("");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(609);
      player0.setDead((long) 609, true);
      DataInputStream dataInputStream0 = null;
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(5352);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }
}
