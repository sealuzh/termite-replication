/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 10:23:48 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.980481871026939
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer0.consume((-127));
      XPathLexer xPathLexer1 = new XPathLexer(".=<&5T.[A");
      xPathLexer1.or();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.693913319058074
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" mH7l ");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(" ", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("mH7l", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7994795029319337
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:.$J~!Y");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.hasMoreChars();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9803194938246986
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("X).T{&5ddPE");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume((-1955));
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer1.comma();
      // Undeclared exception!
      try { 
        xPathLexer2.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.574286902504578
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-304));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7994404389059953
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":7Zhd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("Z", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      XPathLexer xPathLexer1 = new XPathLexer(":7Zhd");
      Token token4 = xPathLexer0.dots();
      assertEquals("d", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":7Zhd");
      String string0 = " @@gpYd^DE<8+]>>";
      xPathLexer0.setXPath("oXC.HWwT");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1955));
      xPathLexer1.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer1.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J/");
      xPathLexer0.slashes();
      xPathLexer0.consume((-167));
      xPathLexer0.hasMoreChars();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5774807573661103
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".=<&5T.[A");
      XPathLexer xPathLexer1 = new XPathLexer("h5y0>=");
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("h5y0", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(10, token3.getTokenType());
      assertEquals(">=", token3.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7995176083314686
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D&t8Y}o{2TmRib!P");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&t8Y}o{2TmRib!P", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("t", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      XPathLexer xPathLexer1 = new XPathLexer("<>2%0cocB");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.dots();
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8936935921261018
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("z", token1.getTokenText());
      
      xPathLexer0.dots();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.setXPath("-z");
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("-", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("z", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.893763041393412
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6V0['C:?4L#e(J5");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath(" @@gpYd^DE<8+]>>");
      xPathLexer0.consume((-1955));
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.69536584127674
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "vIfmZQY.A+V:";
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-4054));
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6942659974545626
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XgyL]tPgU3+d12a<y");
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<<;!w,A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8956926296265646
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RP%23@ ?!JBu-,7rWU:");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("RP", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("o");
      Token token1 = xPathLexer1.operatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.equals();
      assertEquals("%", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("23", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("o");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals("o", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertNull(token6);
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8006395677022167
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xM_o;s:e'@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("xM_o", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.hasMoreChars();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("s", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.27660795407654
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`w3@?+z`)\"L-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`w3@?+z`)\"L-", token0.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.896245107781869
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6V0['C:?4L#e(J5");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      xPathLexer0.setXPath(" @@gpYd^DE<8+]>>");
      XPathLexer xPathLexer1 = new XPathLexer("eVtL?{v<2}LN2");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("eVtL", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("@", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("@", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      xPathLexer1.setPreviousToken(token0);
      assertEquals(30, token0.getTokenType());
      
      char char0 = xPathLexer1.LA(9);
      assertEquals('2', char0);
      
      Token token7 = xPathLexer1.whitespace();
      assertEquals("", token7.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.576335951617724
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:.$J~!Y");
      Token token0 = xPathLexer0.dots();
      assertEquals("!", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Fc,<:");
      xPathLexer1.hasMoreChars();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Fc", token3.getTokenText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>2%0cocB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5723992881587088
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1SD)xm?]j");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("D", token2.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EJfT3#P{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("EJfT3", token0.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.79438837168257
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.891722433292198
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(" ", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.setXPath("[ (");
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4419731411812973
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*X%5) XYHiO8");
      Token token0 = xPathLexer0.dots();
      assertEquals("*", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("X", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      xPathLexer0.hasMoreChars();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("5", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.758427512929035
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]FYT'QKA9#Y}");
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1977));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6943006007280323
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p>xO`nB+fd");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("|vDnde,k");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7974304538187877
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3A4c");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("UF{+B>kmSk");
      xPathLexer1.minus();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.setXPath(" @@gpad^DE<8+]>>");
      xPathLexer1.consume(726);
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9832989327462007
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g*~ifbw<");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("~", token1.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("i", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("fbw", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.star();
      assertEquals("<", token4.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.identifier();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6951325271270146
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ujs[of%r-%G");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("o", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.dots();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("ujs[of%r-%G");
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.575624747786706
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:.$J~!Y");
      Token token0 = xPathLexer0.dots();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("$", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5735591887386593
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0y{Kc@lxzh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("y{Kc@lxzh", token1.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6952940754057177
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W2LCmnsS#EI;V");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("W2LCmnsS", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#EI;V", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("W2LCmnsS#EI;V");
      Token token2 = xPathLexer1.not();
      assertEquals("W", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("#", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s/oyd7%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.575239861007567
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h^bT>N");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("h", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.and();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|~@Y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("~", token1.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.693520873632516
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aOz");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("aOz");
      xPathLexer1.or();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Oz", token1.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.693520873632516
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("di)/*l[s}e0");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.57707187343339
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HBiuyhQ_:");
      xPathLexer0.or();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("BiuyhQ_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2878835002358064
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:.$J~!Y");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("@tas");
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.dots();
      assertEquals(":.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("!:.$J~!Y");
      Token token3 = xPathLexer2.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tU4-/2#9?^*");
      Token token0 = xPathLexer0.dots();
      assertEquals("t", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("4", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("-", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5758444193776775
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.or();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("GqV", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6942659974545626
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r#|%*xr");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#|%*xr", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("<>2%0cocB");
      Token token2 = xPathLexer1.not();
      assertEquals("<", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer1.dots();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      XPathLexer xPathLexer2 = new XPathLexer("r#|%*xr");
      Token token4 = xPathLexer0.dots();
      assertEquals("#", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5765843988226926
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",#KAD]v6l`d+");
      Token token0 = xPathLexer0.dots();
      assertEquals(",", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.slashes();
      assertEquals("#", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("KAD", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.797912195797784
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@03\"zJhs02ksc");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("3", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.5774652570948557
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6V0['C:?4L#e(J5");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("kr_S*orWi_");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.hasMoreChars();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("kr_S", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.799994419418916
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tU4-/2#9?^*");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      xPathLexer0.setXPath("tU4-/2#9?^*");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("tU4-", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1:-H ");
      Token token0 = xPathLexer0.number();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n4/~\";Rw|I'MtE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("n4", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.691961419441483
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tU4-/2#9?^*");
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("A^(i~#XFuv5cUqos?@");
      xPathLexer0.pipe();
      xPathLexer0.hasMoreChars();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.442951569173656
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YmSIj>P");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      assertEquals("YmSIj", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6937763014741507
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U!68tmHkF}A4");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.800669384181785
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aOz");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.dollar();
      assertEquals("a", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.setXPath("DKB4-#}SHiC");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("DKB4-", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("#", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.plus();
      assertEquals("}", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("SHiC", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.434282242078569
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8;oi,M;|M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("8", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5712448203683604
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";'7XNR8L2g+$#fk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";'7XNR8L2g+$#fk", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(";", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("'", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0B/A}QdTJ<j");
      Token token0 = xPathLexer0.number();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.442916137079265
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6V0['C:?4L#e(J5");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("6V0['C:?4L#e(J5");
      Token token1 = xPathLexer1.identifier();
      assertEquals("6V0", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("V", token2.getTokenText());
      
      xPathLexer1.hasMoreChars();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.692876751249263
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i::5E$cxli\"ES<");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.6874206529855
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":7Zhd");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      xPathLexer0.consume(1937);
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5750167629187737
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" 4jF&qUXZ");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("jF&qUXZ", token1.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.6922740822867146
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g&BM#36XGM=0cU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5734174452942935
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z*~ifb2<");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.688750001065033
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*/7B5Iqu,pY");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-\"K}<i,pz");
      Token token1 = xPathLexer1.minus();
      assertEquals("-", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.8003429405276776
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(CSn9jD[:");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.57550453380582
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zqRd|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("zqRd", token0.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(I2Tfcf");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.137396200047152
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.number();
      xPathLexer1.comma();
      xPathLexer1.equals();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer("_hzE*Pg^i/");
      xPathLexer2.nextToken();
      xPathLexer1.leftParen();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer0.setXPath("[ (");
      xPathLexer1.mod();
      xPathLexer3.hasMoreChars();
      xPathLexer3.whitespace();
      xPathLexer1.nextToken();
      xPathLexer1.literal();
      xPathLexer3.setXPath("");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.currentPosition();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.dots();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token0 = xPathLexer6.or();
      assertNull(token0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.571749233987528
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9nN");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("9", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5747686444835742
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RP%23@ ?!JBu-,7rWU:");
      xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.equals();
      xPathLexer0.whitespace();
      xPathLexer0.comma();
      xPathLexer0.number();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.4421507505590725
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>2%0cocB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("%0cocB", token3.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") ;f6dda3h(v]L~JY");
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(10);
      assertEquals('h', char0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.574854385716533
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qmi/9&ZV2fod%C$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("qmi", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.4398860526697708
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("YmSIj>P");
      xPathLexer0.operatorName();
      xPathLexer1.operatorName();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.277736880575789
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CAB<ZxgpR&X_)9JPv");
      XPathLexer xPathLexer1 = new XPathLexer("CAB<ZxgpR&X_)9JPv");
      xPathLexer0.or();
      xPathLexer1.hasMoreChars();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("CAB", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer1.getPreviousToken();
      Token token1 = xPathLexer1.slashes();
      assertEquals("C", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f<EYU}$N`xoPI\"^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5757919066433397
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3j?*o%Ebr!fu_.G=M.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Y3j", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?*o%Ebr!fu_.G=M.", token1.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.0432397720050757
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YmSIj>P");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Ym", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("S", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("P", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.7957125841420822
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>2%0cocB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("2", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("0cocB", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("<>2%0cocB");
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer1.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.714143334289994
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H@<ivZ:(Vs}OB{z");
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("H@<ivZ:(Vs}OB{z");
      xPathLexer1.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.6937763014741507
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6M; t");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("M; t", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("M", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(";", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.572592226611343
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R=|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("R", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.574491046630331
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a`3rK6*6lf:Q?");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("a", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.020950922739364
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lw\";d[M,,o5t\"VA8v");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";d[M,,o5t", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.equals();
      assertEquals("V", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.and();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("v", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7232021505926867
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".=<&5T.[A");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.comma();
      assertEquals("&", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("5", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("T", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(".", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(3, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      Token token7 = xPathLexer0.minus();
      assertEquals("A", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.7980805884895408
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer1.nextToken();
      xPathLexer1.setPreviousToken((Token) null);
      assertNotSame(xPathLexer1, xPathLexer0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5503122161609546
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:.$J~!Y");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.0635565998013705
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.consume((-1955));
      XPathLexer xPathLexer1 = new XPathLexer("Io&au#tZ'c_&LV6)}");
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("fLTYKj");
      xPathLexer2.pipe();
      xPathLexer1.dollar();
      xPathLexer1.dots();
      xPathLexer2.nextToken();
      xPathLexer1.at();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.5768237406327152
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LGae");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("LGae", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("LGae");
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-25));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.087698781999318
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mc)D)PgLsM+z5");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0942863972825854
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("mc)D)PgLsM+z5");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.0635435059358356
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("c", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("r", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.dots();
      Token token4 = xPathLexer0.slashes();
      assertEquals("e", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(".", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.leftParen();
      assertEquals("a", token10.getTokenText());
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vIfmZQY.A+V:");
      xPathLexer0.and();
      xPathLexer0.consume((-499));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.6884526475116584
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-710));
      xPathLexer0.dots();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.4432646464098102
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tU4-/2#9?^*");
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.5783933236504857
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.Token", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.0619553454854898
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":7Zhd");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1052));
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.977443963220837
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.consume((-3062));
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-3058), int0);
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.577137394214398
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("NIGM-PZpH\"i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("NIGM-PZpH", token0.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pv[5Nth3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Pv", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5740651975938142
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m+~");
      Token token0 = xPathLexer0.identifier();
      assertEquals("m", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("m+~");
      Token token2 = xPathLexer1.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J/");
      xPathLexer0.dots();
      xPathLexer0.consume((-167));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume((-2094));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.8111022454625596
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lw\";d[M,,o5t\"VA8v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lw", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(";", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("d", token3.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.0933884300827943
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(21, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.setXPath("t{n{K' EM~Dz<fR");
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.literal();
      assertEquals(27, token9.getTokenType());
      assertNotNull(token9);
      assertEquals("n", token9.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.983594313829996
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lw\";d[M,,o5t\"VA8v");
      Token token0 = xPathLexer0.identifier();
      assertEquals("lw", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("\";", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("[", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.hasMoreChars();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(",", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.mod();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("\"", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.5739470361853303
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o_,z(&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("o_", token0.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.7998823902913426
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oeqq7;,-h*}");
      XPathLexer xPathLexer1 = new XPathLexer("=GqV%,oeqq7;,-h*}");
      xPathLexer0.or();
      Token token0 = xPathLexer1.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer1.slashes();
      assertEquals("G", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("qV", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(32, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.9831015956363767
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!gPbw6YzW,M");
      xPathLexer0.or();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("P", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("bw6YzW", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.setXPath("");
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.5745871727477967
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" mH7l ");
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("IT,&1KLi3");
      xPathLexer1.setPreviousToken((Token) null);
      XPathLexer xPathLexer2 = new XPathLexer("IT,&1KLi3");
      Token token0 = xPathLexer2.nextToken();
      assertEquals("IT", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.578017040255334
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q'm+M9.mKZs%8B3MN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.8001220388068533
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("bDh;L=rIZh5~T$F");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("bDh", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.comma();
      assertEquals(";", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("c", token2.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.setXPath("6V0['C:?4L#e(J5");
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("L", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.dots();
      assertEquals("=", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals("r", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.689532269643912
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.consume((-2138));
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") )(");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-478));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.6842819726226874
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]FYT'QKA9#Y}");
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.and();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("YT'QKA9#Y}", token2.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.566621028859323
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J/");
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.isIdentifierStartChar('7');
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.consume((-2135));
      assertNotSame(xPathLexer0, xPathLexer1);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.5706696118552745
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.or();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('v');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8453888920333807
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<>2%0cocB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("0cocB", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("<>2%0cocB");
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.whitespace();
      assertEquals("", token7.getTokenText());
      assertEquals((-2), token7.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.3755263007884149
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String string0 = "6V0['C:?4L#e(J5\\";
      XPathLexer xPathLexer0 = new XPathLexer("6V0['C:?4L#e(J5");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath(" @@gpYd^DE<8+]>>");
      xPathLexer0.consume((-1955));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.2806483581169434
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.4368192399644037
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV\"l!LU0V[");
      xPathLexer0.or();
      Token token0 = xPathLexer0.comma();
      assertEquals("A", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.dots();
      assertEquals("V", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=GqV%,oe4qq7;,-h*}");
      xPathLexer0.or();
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.7146644341111061
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HBiuyhQ_:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("HBiuyhQ_", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(":", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.9164731122652725
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lw\";d[M,,o5t\"VA8v");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("lw", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(";d[M,,o5t", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("VA8v", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.and();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("A", token4.getTokenText());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.575993265817767
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("eEgVc>yYJnSK");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("eEgVc", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.4421680158479127
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" mH7l ");
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(" m", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("H7l", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.4419303450220065
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" mH7l ");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("mH7l", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.020426637809938
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".=<&5T.[A");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.3118351457563246
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("J/");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer1.rightBracket();
      assertEquals("/", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.9843764047803778
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".=<&5T.[A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.star();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.837487112337448
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lw\";d[M,,o5t\"VA8v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lw", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("\"", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(";", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("d[", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.star();
      assertEquals("M", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(105);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.798520052343639
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cs{l'LLGYY0r#b");
      char char0 = 'O';
      int int0 = 31;
      xPathLexer0.dots();
      xPathLexer0.consume(31);
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.isIdentifierChar('O');
      xPathLexer0.mod();
      Token token0 = xPathLexer0.at();
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.2382750726340324
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:.$J~!Y");
      Token token0 = xPathLexer0.dots();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("$", token4.getTokenText());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.894789682736259
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{[~[k xyO.UZ*>B!S");
      xPathLexer0.dots();
      xPathLexer0.consume(31);
      XPathLexer xPathLexer1 = new XPathLexer("Cs{l'LLGYY0r#b");
      xPathLexer1.dots();
      Token token0 = xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.literal();
      char char0 = ';';
      xPathLexer0.isIdentifierChar(';');
      xPathLexer2.mod();
      xPathLexer2.at();
      xPathLexer1.identifier();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.4084825894317823
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" mH7l ");
      xPathLexer0.getPreviousToken();
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("mH7l", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.9034303214268053
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g*~ifbw<");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("g*", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("~", token2.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("i", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("f", token4.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("b", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      assertEquals("w", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("<", token8.getTokenText());
      assertEquals(7, token8.getTokenType());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.9463683904365076
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".=<&5T.[A");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.or();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.096877023053621
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":7Zhd");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Zhd", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.consume(1937);
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.0543603439041407
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":7Zhd");
      xPathLexer0.or();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.2382750726340324
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:.$J~!Y");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.identifier();
      assertEquals("", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(":", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.4116843453998678
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".=<&5T.[A");
      Token token0 = xPathLexer0.number();
      assertEquals(".", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("=", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("<", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("&", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.plus();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("T.", token5.getTokenText());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.9807800011839741
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".=<&5T.[A");
      Token token0 = xPathLexer0.minus();
      assertEquals(".", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("=", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.9453831687616308
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".=<&5T.[A");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.or();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.3959346400147152
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6V0['C:?4L#e(J5");
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.minus();
      assertEquals("6", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("V", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=1.2409980706008739
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YmSIj>P");
      XPathLexer xPathLexer1 = new XPathLexer("v(5");
      xPathLexer1.or();
      xPathLexer0.hasMoreChars();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.getPreviousToken();
      assertNull(token0);
  }
}
