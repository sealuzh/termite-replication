/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 10:33:48 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("K$rr~ $<%wLaz72?o*$", (Content) null, 0, 0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 2911, 2911, 2911);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("K$rr~ $<%wLaz72?o*$", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "KGf*F7&|", propertyChangeListenerProxy0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("K$rr~ $<%wLaz72?o*$", "", "", (Object) null);
      propertyChangeEvent1.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      System.setCurrentTimeMillis(2911);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoCameraPath();
      Random.setNextRandom(3620);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment.Property.valueOf("PHOTO_QUALITY");
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnvironment", temporaryURLContent0, 0.0F, (-1058));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1058), homeTexture0, (-1058), (-1058), 0.0F);
      homeEnvironment0.getGroundTexture();
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1058), homeEnvironment0.getLightColor());
      assertEquals((-1058), homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1058), homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-108), (HomeTexture) null, (-108), (HomeTexture) null, (-108), (-108));
      homeEnvironment0.setVideoQuality((-108));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-108), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(258, (HomeTexture) null, 258, (HomeTexture) null, 258, 258);
      homeEnvironment0.setVideoWidth((-4061));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-3046), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", temporaryURLContent0, 1.0F, 0.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1517), homeTexture0, (-1517), homeTexture0, 2146552227, 1.0F);
      homeEnvironment0.getSkyTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1517), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1517), homeEnvironment0.getSkyColor());
      assertEquals(2146552227, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2848, (HomeTexture) null, 2848, (HomeTexture) null, 2848, 2848);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(320);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-1976.6765F), 1.0F, 320, 1351.9318F, 1351.9318F, 0.0F, 0L, camera_Lens0);
      camera0.setFieldOfView(1052.6936F);
      camera0.setY(1351.9318F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoQuality(320);
      homeEnvironment0.setWallsAlpha(2678.021F);
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("Invalid URL base for JAR entry");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.Invalid URL base for JAR entry
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha(1.0F);
      homeEnvironment0.getWallsAlpha();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, (-1431655764), (-1431655764));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1431655764), homeTexture0, 1, homeTexture0, 2146439621, 1);
      homeEnvironment0.getSkyTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1431655764), homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2146439621, homeEnvironment0.getLightColor());
      assertEquals(1, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("FREE_RATIO", "d{YBT|16JF(IL", temporaryURLContent0, (-4348), 320.0F, "LN@");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4348), homeTexture0, 2360, homeTexture0, 1058, 1.0F);
      homeEnvironment0.getGroundTexture();
      assertEquals((-4348), homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1058, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(2360, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("E(+8Ir^;E}M=* ype", temporaryURLContent0, (-1856.0787F), (-1551), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1551), homeTexture0, (-1551), homeTexture0, (-2182), (-1551));
      homeEnvironment0.setSubpartSizeUnderLight(1.3333334F);
      homeEnvironment0.getGroundTexture();
      assertEquals(1.3333334F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("RATIO_16_9", propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(1099);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setLightColor((-166));
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment2.getPhotoAspectRatio();
      assertEquals((-166), homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.791946795121705
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setPhotoQuality((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "SKY_TEXTURE", "SKY_TEXTURE", homeEnvironment1);
      propertyChangeEvent0.toString();
      propertyChangeEvent0.setPropagationId("SKY_TEXTURE");
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(25);
      homeEnvironment0.setGroundColor((-551));
      homeEnvironment0.setGroundColor((-312));
      homeEnvironment0.setCeillingLightColor((-1));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment.Property.values();
      homeEnvironment0.getPhotoQuality();
      int int0 = homeEnvironment2.getVideoHeight();
      assertEquals(25, homeEnvironment0.getSkyColor());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture(".Handler", (Content) null, 1157, 1157, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1157, homeTexture0, 1157, homeTexture0, (-853), 1157);
      homeEnvironment0.getSkyTexture();
      assertEquals((-853), homeEnvironment0.getLightColor());
      assertEquals(1157.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1157, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1157, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(258, (HomeTexture) null, 258, (HomeTexture) null, 258, 258);
      homeEnvironment0.setVideoFrameRate((-1117));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals((-1117), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1833), (HomeTexture) null, (-1833), (-353), (-1833));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getGroundColor();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals((-1833.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-1833), int0);
      assertEquals((-353), homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-1833), homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(320, homeEnvironment1.getVideoWidth());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      homeEnvironment0.setPhotoQuality(1812);
      homeEnvironment0.clone();
      assertEquals(1812, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setSubpartSizeUnderLight((-3474.0227F));
      homeEnvironment0.setAllLevelsVisible(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment2.getPhotoAspectRatio();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals((-3474.0227F), float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-111), (HomeTexture) null, (-111), (HomeTexture) null, (-111), (-111));
      homeEnvironment0.setPhotoHeight((-111));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-111), int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1799, (HomeTexture) null, 1799, (HomeTexture) null, 1799, (-3461.4F));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals((-3461.4F), float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-103), (HomeTexture) null, (-103), (HomeTexture) null, (-103), (-103));
      homeEnvironment0.setVideoQuality((-103));
      homeEnvironment0.clone();
      assertEquals((-103), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "FWs(bY1", "FWs(bY1", (Object) null);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(2812);
      homeEnvironment0.setAllLevelsVisible(false);
      boolean boolean0 = homeEnvironment1.isAllLevelsVisible();
      assertEquals(2812, homeEnvironment0.getCeillingLightColor());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1849, (HomeTexture) null, 1849, (HomeTexture) null, 1849, 1849);
      homeEnvironment0.setCeillingLightColor((-6031));
      homeEnvironment0.setAllLevelsVisible(false);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-6031), int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1792, (HomeTexture) null, 1792, (HomeTexture) null, 1792, 1792);
      homeEnvironment0.setCeillingLightColor(13684944);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(1792, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(1792, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(1792, homeEnvironment1.getGroundColor());
      assertEquals(1792.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-103), (HomeTexture) null, (-103), (HomeTexture) null, (-103), (-103));
      homeEnvironment0.setCeillingLightColor((-103));
      homeEnvironment0.clone();
      assertEquals((-103), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-108), (HomeTexture) null, (-108), (HomeTexture) null, (-108), (-108));
      homeEnvironment0.setSubpartSizeUnderLight((-108));
      homeEnvironment0.clone();
      assertEquals((-108.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 25, 25);
      homeEnvironment0.setVideoFrameRate(25);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(25, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4323966355417994
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-209.8F));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setCeillingLightColor((-495));
      homeEnvironment1.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality((-495));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(5, (HomeTexture) null, (-495), (HomeTexture) null, 96, (-495));
      homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate((-2758));
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment2.getSkyColor();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      assertSame(aspectRatio1, aspectRatio0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2191, (HomeTexture) null, 3, (HomeTexture) null, 11, 3);
      homeEnvironment0.setLightColor(1120);
      homeEnvironment0.setSubpartSizeUnderLight(11);
      assertEquals(1120, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1818, (HomeTexture) null, 1818, (HomeTexture) null, 1818, 1818);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(2127961069);
      assertEquals(2127961069, homeEnvironment1.getCeillingLightColor());
      
      homeEnvironment0.clone();
      assertEquals(1818, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-111), (HomeTexture) null, (-111), (HomeTexture) null, (-111), (-111));
      homeEnvironment0.setPhotoHeight((-111));
      homeEnvironment0.setPhotoHeight((-111));
      homeEnvironment0.clone();
      assertEquals((-111), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, (-343), (HomeTexture) null, 1265, 2658.038F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(1592);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(1592, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2290, (HomeTexture) null, 2822, (HomeTexture) null, 2822, 0.0F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setGroundColor(5);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 2822, 2822, (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.clone();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1718), (HomeTexture) null, (-1718), (HomeTexture) null, (-1718), (-1718));
      homeEnvironment0.setPhotoWidth((-929));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-929), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2191, (HomeTexture) null, 3, (HomeTexture) null, (-39), 3);
      homeEnvironment0.setSubpartSizeUnderLight((-39));
      assertEquals((-39.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-108), (HomeTexture) null, (-108), (HomeTexture) null, (-108), (-108));
      homeEnvironment0.setPhotoQuality((-108));
      homeEnvironment0.clone();
      assertEquals((-108), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1792, (HomeTexture) null, 1792, (HomeTexture) null, 1792, 1792);
      homeEnvironment0.setSubpartSizeUnderLight(1792);
      homeEnvironment0.clone();
      assertEquals(1792.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, (-1668), 216.0F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoQuality(6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("-fPE?%_T>Vp[3xo", resourceURLContent0, 1809, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setVideoWidth(1809);
      homeEnvironment0.getSkyTexture();
      assertEquals(1809, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2848, (HomeTexture) null, 2848, (HomeTexture) null, 2848, 2848);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.clone();
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-108), (HomeTexture) null, (-108), (HomeTexture) null, (-108), (-108));
      homeEnvironment0.setVideoWidth((-108));
      homeEnvironment0.clone();
      assertEquals((-108), homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.setVideoQuality(320);
      homeEnvironment0.clone();
      assertEquals(320, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setVideoWidth((-902));
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.setVideoWidth((-902));
      homeEnvironment1.setVideoQuality((-902));
      homeEnvironment1.setWallsAlpha(2333.65F);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      assertEquals((-676), homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8, (HomeTexture) null, 8, (HomeTexture) null, 8, 8);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ufs~@", resourceURLContent0, 1215, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1215, homeTexture0, 1215, homeTexture0, 1306, 1215);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.getGroundTexture();
      assertEquals(1215, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(1215.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(1306, homeEnvironment1.getLightColor());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(1215, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("C|LX;N+#eL?ITa`", (Content) null, 8192, 546.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8192, homeTexture0, 8192, homeTexture0, 8192, 546.0F);
      homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(8192, homeEnvironment0.getSkyColor());
      assertEquals(8192, homeEnvironment0.getGroundColor());
      assertEquals(8192, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(546.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), (HomeTexture) null, (-1), (HomeTexture) null, (-1), (-1));
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth((-1));
      homeEnvironment0.clone();
      assertEquals((-1), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-111), (HomeTexture) null, (-111), (HomeTexture) null, (-111), (-111));
      homeEnvironment0.setVideoFrameRate((-111));
      homeEnvironment0.clone();
      assertEquals((-111), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1818, (HomeTexture) null, 1818, (HomeTexture) null, 4, 2.0F);
      homeEnvironment0.setPhotoQuality(1818);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1818, (HomeTexture) null, 1818, (HomeTexture) null, 4, 1818);
      homeEnvironment1.setGroundColor(3480);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("GROUND_COLOR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.GROUND_COLOR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      homeEnvironment0.getDrawingMode();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1812, homeEnvironment0.getLightColor());
      assertEquals(1812, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1812.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(1812, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(1812, int0);
      assertEquals(1812, homeEnvironment1.getSkyColor());
      assertEquals(1812, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(1812.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1615), (HomeTexture) null, (-1615), (HomeTexture) null, (-1615), (-1615));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, int0);
      assertEquals((-1615.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1615), homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1615), homeEnvironment0.getGroundColor());
      assertEquals((-1615), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = (-2494);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2494), (HomeTexture) null, (-2494), (HomeTexture) null, (-2494), 1.5F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.listIterator();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoCameraPath();
      // Undeclared exception!
      try { 
        linkedList0.removeLast();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, (HomeTexture) null, 6, 13, 6);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(6, homeEnvironment0.getSkyColor());
      assertEquals(13, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(6.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, (-160), 0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.4838709677419355
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1217), (HomeTexture) null, 1812, (HomeTexture) null, (-1217), 760.719F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundColor((-1217));
      homeEnvironment0.setGroundColor((-1217));
      homeEnvironment0.setVideoFrameRate(109);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setCeillingLightColor((-1217));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setVideoFrameRate(16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoQuality(1502);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(235, (HomeTexture) null, 235, (HomeTexture) null, (-343), (-1833));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getLightColor();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals((-343), int0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(235, homeEnvironment1.getGroundColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(235, homeEnvironment1.getSkyColor());
      assertEquals((-1833.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2494), (HomeTexture) null, 0, (HomeTexture) null, (-2494), 1.5F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.listIterator();
      Camera camera0 = new Camera((-2494), (-2494), 1.5F, 0, (-2494), 1.5F);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera0);
      linkedList0.add(camera1);
      homeEnvironment0.getVideoCameraPath();
      linkedList0.removeLast();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-2494), int0);
      
      homeEnvironment0.setVideoQuality(0);
      int int1 = homeEnvironment0.getSkyColor();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, int1);
      assertEquals((-2494), homeEnvironment0.getGroundColor());
      assertEquals(0, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1809, (HomeTexture) null, 1809, (HomeTexture) null, 1809, 1809);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(1809, homeEnvironment1.getSkyColor());
      assertEquals(1809, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(1809, homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(1809.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1809, (HomeTexture) null, 1809, (HomeTexture) null, 1809, 1809);
      homeEnvironment0.getSkyTexture();
      assertEquals(1809, homeEnvironment0.getSkyColor());
      assertEquals(1809.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1809, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1809, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(4578, (HomeTexture) null, 17, (HomeTexture) null, 1798, 4578);
      homeEnvironment0.setPhotoQuality(1798);
      HomeEnvironment.Property.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("?4D:3O'?k\u0002h[b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.?4D:3O'?k\u0002h[b
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.45454545454545453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1818, (HomeTexture) null, 1818, (HomeTexture) null, 4, 2.0F);
      homeEnvironment0.setPhotoQuality(1818);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1818, (HomeTexture) null, 1818, (HomeTexture) null, 4, 1818);
      homeEnvironment1.setVideoWidth(3480);
      homeEnvironment0.setGroundColor(1818);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("GROUND_COLOR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.GROUND_COLOR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5009, (HomeTexture) null, 1, (HomeTexture) null, (-1088), (-443.112F));
      homeEnvironment0.setSubpartSizeUnderLight(1);
      homeEnvironment0.setWallsAlpha(5009);
      homeEnvironment0.setVideoWidth((-1088));
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4814814814814815
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1217), (HomeTexture) null, 1812, (HomeTexture) null, (-1217), 760.719F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundColor((-1217));
      homeEnvironment0.setGroundColor((-1217));
      homeEnvironment0.setVideoFrameRate(109);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setCeillingLightColor((-1217));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoQuality(1502);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1815, (HomeTexture) null, 1815, (HomeTexture) null, 1815, (-3461.4F));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1815, (HomeTexture) null, 1815, (HomeTexture) null, 1815, 5009.0F);
      homeEnvironment1.setCeillingLightColor(1815);
      homeEnvironment1.getWallsAlpha();
      System.setCurrentTimeMillis((-834L));
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2191, (HomeTexture) null, 3, (HomeTexture) null, 2191, 3);
      homeEnvironment0.setLightColor(1120);
      homeEnvironment0.setSubpartSizeUnderLight(3);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1788, (HomeTexture) null, 1788, (HomeTexture) null, 1788, 1788);
      homeEnvironment0.setPhotoHeight(1291);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1812, homeEnvironment0.getSkyColor());
      assertEquals(1812, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1812, homeEnvironment0.getLightColor());
      assertEquals(0, int0);
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1812.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1820, (HomeTexture) null, 1820, (HomeTexture) null, 1820, 1820);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1820, homeEnvironment0.getSkyColor());
      assertEquals(1820.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1820, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1820, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      homeEnvironment0.setLightColor(1812);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1812, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1812, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1812, homeEnvironment0.getGroundColor());
      assertEquals(1812.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1786, (HomeTexture) null, 1786, (HomeTexture) null, 1786, 1786);
      homeEnvironment0.setSkyColor(1124);
      homeEnvironment0.setGroundColor(1575);
      Random.setNextRandom(1786);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1799, (HomeTexture) null, 1799, (HomeTexture) null, 1799, 1799);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(1799, homeEnvironment1.getSkyColor());
      assertEquals(1799, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(1799.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(1799, int0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      homeEnvironment0.setSkyColor(11053224);
      homeEnvironment0.setCeillingLightColor(0);
      assertEquals(11053224, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      homeEnvironment0.setSkyColor(1812);
      assertEquals(1812, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1812, homeEnvironment0.getGroundColor());
      assertEquals(1812.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1812, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-61), (HomeTexture) null, (-61), (HomeTexture) null, (-61), (-61));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-61), homeEnvironment1.getGroundColor());
      assertEquals((-61.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals((-61), homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals((-61), homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1807, (HomeTexture) null, 1807, (HomeTexture) null, 1807, 1807);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(1807, homeEnvironment0.getGroundColor());
      assertEquals(1807, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1807.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1807, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, int0);
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1790, (HomeTexture) null, 1790, (HomeTexture) null, 1790, 1790);
      homeEnvironment0.setCeillingLightColor(8192);
      assertEquals(8192, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-758), (HomeTexture) null, (-758), (HomeTexture) null, (-758), (-758));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-758), homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-758.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-758), homeEnvironment0.getLightColor());
      assertEquals((-758), homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1792, (HomeTexture) null, 1792, (HomeTexture) null, 1792, 1792);
      homeEnvironment0.setVideoFrameRate(1792);
      homeEnvironment0.getVideoCameraPath();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(1792, homeEnvironment0.getVideoFrameRate());
      assertEquals(1792, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(33, (HomeTexture) null, 33, (HomeTexture) null, 33, 33);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-97), (HomeTexture) null, (-97), (HomeTexture) null, (-97), (-97));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-97), homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-97.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals((-97), homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-97), homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoQuality(1602);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)20;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-108), (HomeTexture) null, (-108), (HomeTexture) null, (-108), (-108));
      homeEnvironment0.setVideoQuality(2128646072);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth((-108));
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-108), (HomeTexture) null, 8, (HomeTexture) null, (-108), 8);
      homeEnvironment0.setPhotoWidth(400);
      homeEnvironment0.clone();
      System.setCurrentTimeMillis(8);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(25, (HomeTexture) null, 25, (HomeTexture) null, 25, 25);
      homeEnvironment0.setVideoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(25, homeEnvironment1.getLightColor());
      assertEquals(25, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0, homeEnvironment1.getVideoQuality());
      assertEquals(25, homeEnvironment1.getSkyColor());
      assertEquals(25.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1809, (HomeTexture) null, 1809, (HomeTexture) null, 1809, 1809);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(1809.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1809, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1809, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1809, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      homeEnvironment0.setPhotoWidth(1812);
      HomeEnvironment.DrawingMode.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      assertEquals(1812.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      
      homeEnvironment0.setWallsAlpha(1812);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1812, homeEnvironment0.getLightColor());
      assertEquals(1812, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1812, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2854, (HomeTexture) null, 2854, (HomeTexture) null, 2854, 2854);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(2854.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2854, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(2854, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2854, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2854, (HomeTexture) null, 2854, (HomeTexture) null, 2854, 2854);
      homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2854, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2854, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2854.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(2854, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1812, (HomeTexture) null, 1812, (HomeTexture) null, 1812, 1812);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1799, (HomeTexture) null, 1799, (HomeTexture) null, 1799, 1799);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(1799, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(1799.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(1799, homeEnvironment1.getSkyColor());
      assertEquals(1799, homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1859, (HomeTexture) null, 1859, (HomeTexture) null, 1859, 1859);
      homeEnvironment0.setCeillingLightColor(1859);
      homeEnvironment0.setAllLevelsVisible(true);
      assertEquals(1859, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1785, (HomeTexture) null, 1785, (HomeTexture) null, 1785, 1785);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1785, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1785.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(1785, homeEnvironment0.getGroundColor());
      assertEquals(1785, homeEnvironment0.getLightColor());
      assertEquals(320, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }
}
