/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 19:17:46 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1324));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1324), "Y", "\" :TopsZR", "\" :TopsZR", "Y");
      classWriter0.index = (-64);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1516, "Y", "", "The suffix must not be null", "Y");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter1.put(byteVector0);
      assertNotSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1319), "z_H_NR6", "z_H_NR6", "z_H_NR6", (Object) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B<#*WzDFi1es$Qt,";
      stringArray0[1] = "u9";
      classWriter0.visit((-1319), 4018, "z_H_NR6", "B<#*WzDFi1es$Qt,", "2#", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1347));
      classWriter0.index = (-1347);
      classWriter0.newDouble((-1347));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1347), "BD`*@pe_@|&es-? ", "BD`*@pe_@|&es-? ", "BD`*@pe_@|&es-? ", (Object) null);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "org.apache.commons.io.IOCae", "org.apache.commons.io.IOCae", "org.apache.commons.io.IOCae", (Object) null);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-1), 1754, "L4K", "L4K", "B<B`NH", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1820);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1820, "B", "B", "B", "B");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2106);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2106, "BD`*@pe_@|&es-? ", "BD`*@pe_@|&es-? ", "BD`*@pe_@|&es-? ", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 2106;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2106);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{baXf8w-y/iQNI@q", "{baXf8w-y/iQNI@q", (String) null, "{baXf8w-y/iQNI@q");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2106);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{baXf8w-y/iQNI@q", "{baXf8w-y/iQNI@q", (String) null, "{baXf8w-y/iQNI@q");
      ByteVector byteVector0 = new ByteVector(2106);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1306));
      ByteVector byteVector0 = new ByteVector(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 9, "VFH-1duoB`K", "VFH-1duoB`K", "", (Object) null);
      fieldWriter0.visitAnnotation("VFH-1duoB`K", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16, "Heel.4sm.OieGdWriter", "Heel.4sm.OieGdWriter", "Heel.4sm.OieGdWriter", "Heel.4sm.OieGdWriter");
      fieldWriter0.visitAnnotation("Heel.4sm.OieGdWriter", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1820);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1820, "B", "B", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1290));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "VFH-1duoB`K", "VFH-1duoB`K", "VFH-1duoB`K", (Object) null);
      Attribute attribute0 = new Attribute("VFH-1duoB`K");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5, "?'`Y]]A8L9c][*M\"S", "?'`Y]]A8L9c][*M\"S", "?'`Y]]A8L9c][*M\"S", "?'`Y]]A8L9c][*M\"S");
      fieldWriter0.visitAnnotation("?'`Y]]A8L9c][*M\"S", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1347));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1347), "BD`*@pe_@|&es-? ", "BD`*@pe_@|&es-? ", "BD`*@pe_@|&es-? ", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1335));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1335), "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2101);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{baXf8w-y/iQNI@q", "{baXf8w-y/iQNI@q", (String) null, "{baXf8w-y/iQNI@q");
      ByteVector byteVector0 = new ByteVector(2101);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1319), "z_H_NR6", "z_H_NR6", "z_H_NR6", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1347));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1347), "BD`*@pe_@|&es-? ", "BD`*@pe_@|&es-? ", "BD`*@pe_@|&es-? ", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-89));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-89), "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 25, "Hheel.asm.FieGdWriter", "Hheel.asm.FieGdWriter", "Hheel.asm.FieGdWriter", "Hheel.asm.FieGdWriter");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "2G]C#HK!(~S&p7", "", "", "2G]C#HK!(~S&p7");
      fieldWriter0.visitAnnotation(",", false);
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5, "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-2522), "W)y", "b4|q=w0@)w3j?l&pGo", "b4|q=w0@)w3j?l&pGo", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5, "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-68), "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", "?'`]A8L9c][*M\"S", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
