/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 15:06:30 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((-25));
      player0.setJoinOK(player0, true);
      Party party0 = player0.next;
      player0.boss = null;
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.isJoinOK(player0, true);
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-16241), "", (-16241));
      boolean boolean0 = false;
      Player player1 = new Player();
      boolean boolean1 = true;
      player0.setJoinOK(player1, true);
      player0.reset(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setDead(15000L);
      player0.setJoinOK(player1, false);
      player0.setMoney(0.2F);
      player0.type();
      player0.getMoney();
      try { 
        MockFile.createTempFile("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player((-16241), (String) null, (String) null, (-16241), (-16241));
      player0.setDead((long) (-16241));
      player0.setX((-16241));
      player0.setMoney((-16241));
      Player player1 = new Player((short)4919, (String) null, "", (short)4919);
      player0.prev = (Party) player1;
      player0.isConnected();
      player0.getMoney();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(459);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player1.pack(dataOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.getX();
      player0.setX((-3000.0F));
      player0.getX();
      player0.getX();
      player0.getMoney();
      player0.isConnected();
      String string0 = "";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-30));
      player0.setY(1.0F);
      Party party0 = new Party(15);
      player0.add(party0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-1));
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player4919", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1));
      Player player1 = new Player((short)4919);
      System.setCurrentTimeMillis(1651L);
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      float float0 = Player.MOVE_DISTANCE;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(4579);
      Party party0 = player0.prev;
      player0.setY(4579);
      player0.boss = null;
      player0.getY();
      float float0 = player0.getY();
      assertEquals(4579.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.next;
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.reset(false);
      Player player1 = new Player(2522, "", "", 2761, 0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      
      Player player2 = new Player(5, "", 3326);
      assertEquals(1, player2.getStrength());
      assertEquals("0.0.0.0", player2.getIP());
      
      int int1 = player1.getStrength();
      assertEquals(2761, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0, int1);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-82);
      byteArray0[5] = (byte)24;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)69;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte)55);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      Player player0 = new Player((byte)24, "", (byte)5);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.794892785301738
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(1, "", "", 4076);
      Player player1 = new Player(0, "", "", 0);
      player0.setDead((long) 0);
      player1.setDead((long) 0);
      player0.gangStrength();
      player0.gangStrength();
      player1.setZ(0);
      player1.setZ((-1.0F));
      player0.pack();
      player0.pack();
      player1.setDead(0L);
      player0.setDead(2265L);
      Player player2 = new Player((short)4919, "module.ModuleBrowserDialog$ModuleFilter", ".*[.]class$", 0);
      player0.remove(player2);
      player2.isJoinOK(player1, true);
      player1.getZ();
      player1.isConnected();
      Player player3 = new Player(0, "n9!?=", 4076);
      player0.pack();
      assertEquals(2265L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(175, "state.Player$JoinInfo", "state.Player$JoinInfo", (-1208), 175);
      player0.setY((-1208));
      player0.getY();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte) (-64);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-51);
      byteArray0[5] = (byte)126;
      byteArray0[6] = (byte) (-55);
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte) (-2);
      player0.unpack(byteArray0);
      player0.setX(183.88F);
      player0.getStrength();
      player0.gangStrength();
      float float0 = player0.getX();
      assertEquals(183.88F, float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party((short)4919);
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.next;
      player0.add((Party) null);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      player0.pack();
      player0.reset(false);
      Player player1 = new Player(2522, "", "", 2761, 0);
      int int1 = player1.gangStrength();
      assertEquals(0, int1);
      
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(player1.isDead());
      assertEquals(2761, player1.getPictureId());
      
      player0.gangStrength();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean1 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertTrue(boolean1 == boolean0);
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.setDead(863L);
      player0.isJoinOK(player0, false);
      player0.getZ();
      player0.isDead();
      player0.getY();
      player0.setDead((long) (short)4919, true);
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5672464197286162
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-1376));
      Player player1 = new Player(969);
      Player player2 = new Player(0, "", 5207);
      player2.setY(3305.4578F);
      player2.setY(2274.0F);
      player2.setX((short)4919);
      player0.setX(1.0F);
      player0.setY(2045.572F);
      player1.setY(0);
      player2.getPictureId();
      player0.getPictureId();
      player0.getPictureId();
      player0.getIP();
      player0.getIP();
      Party party0 = player0.gangBoss();
      player2.remove(party0);
      Player player3 = new Player((-1536));
      Player player4 = new Player((-954), (String) null, "0.0.0.0", 2446);
      player4.setDead(2643L, false);
      assertEquals(2643L, player4.getTimeOfDeath());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(3, "=K|z@dm/r2:a[XD", "=K|z@dm/r2:a[XD", (-2886), (-2530));
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-2530), int0);
      assertEquals((-2886), player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 175);
      player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(175, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", 0);
      Player player1 = new Player(0, (String) null, "gui.ModuleBrowserDialog$ModuleFilter", 737, (short)4919);
      Party party0 = new Party();
      player0.add(party0);
      boolean boolean0 = player0.isDead();
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      
      String string0 = player1.getIP();
      assertEquals(737, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertNull(string0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getStrength());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-740), "", "", (-740));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Player player1 = (Player)player0.gangBoss();
      player0.next = (Party) player1;
      Player player2 = new Player((-740), "", "", 2578);
      player0.remove(player2);
      player2.setX((-740));
      player2.remove(player0);
      player2.setX(2578);
      player0.unpack(dataInputStream0);
      pipedInputStream0.close();
      player0.setX((-740));
      player1.setZ(0.2F);
      player2.isJoinOK(player0, false);
      player2.getIP();
      player2.toString();
      player2.setJoinOK(player0, false);
      player2.isConnected();
      player2.setX((-957.7119F));
      player0.isConnected();
      player0.getPictureId();
      player0.isJoinOK(player1, false);
      player1.toString();
      assertEquals(0.2F, player1.getZ(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.864555230685108
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      Player player2 = new Player();
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      Player player1 = new Player((short)4919);
      player1.setDead(861L);
      player1.setZ(0.1F);
      player0.isJoinOK(player1, false);
      player1.getZ();
      assertEquals(861L, player1.getTimeOfDeath());
      
      player0.isConnected();
      Player player2 = new Player(3212, "", 918);
      assertEquals(918, player2.getPictureId());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(33, "3Za", 33);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(33, player0.getPictureId());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(1, "3)b{t9iy{Ud", "4G", (-1596), (-239));
      int int0 = player0.getStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-239), int0);
      assertEquals((-1596), player0.getPictureId());
      assertEquals("3)b{t9iy{Ud", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-2567), "~<:", "", (-1188));
      player0.setDead((-1L));
      player0.gangStrength();
      player0.setZ(0.0F);
      player0.pack();
      player0.getTimeOfDeath();
      player0.gangStrength();
      player0.setZ(0.1F);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player();
      Party party0 = new Party();
      party0.next = (Party) player0;
      party0.remove(player0);
      player0.add(party0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setMoney(813.0596F);
      player0.add(party0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)123;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(848, (String) null, 848);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(1429);
      float float0 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player1429", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(1615);
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-82);
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte) (-82);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-82);
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = new Party();
      player0.head = party0;
      player0.add(party0);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player0", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.setDead((long) 0);
      player0.gangStrength();
      player0.setZ(29.4F);
      player0.pack();
      player0.getTimeOfDeath();
      int int0 = player0.gangStrength();
      assertEquals(29.4F, player0.getZ(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-2047));
      float float0 = player0.getY();
      assertEquals("Player-2047", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(20160);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player20160", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-1660.2518F));
      player0.setMoney(391.67F);
      player0.gangStrength();
      player0.setZ((-2499.8757F));
      player0.setDead((long) 1);
      player0.next = null;
      player0.getTimeOfDeath();
      player0.getName();
      player0.gangStrength();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("H7Lh8");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-1488), "GGTbz;*@qU!KseHcK", (-1488));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-2047));
      float float0 = player0.getZ();
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player-2047", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.add((Party) null);
      player0.add((Party) null);
      player0.getStrength();
      player0.isConnected();
      player0.getMoney();
      player0.getName();
      player0.type();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-55);
      byteArray0[3] = (byte) (-29);
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte) (-55);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 24401, 3326);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(13, "N0eMYH~_d>", 13);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u00137\r\u0000\u0001\u0000\rA \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nN0eMYH~_d>", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(4670, (String) null, (String) null, 223, 4670);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-3138), "Fn6C", (-3138));
      player0.head = null;
      player0.setDead((long) (-3138));
      player0.boss = null;
      player0.id = (-3138);
      player0.add((Party) null);
      player0.setConnected(true);
      player0.getPictureId();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("NC");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(21);
      player0.reset(false);
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals("Player21", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(3401);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, true);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player3401", player0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-569));
      player0.reset(true);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-569", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(2761, " ", " ", 0);
      Party party0 = new Party();
      party0.head = (Party) player0;
      party0.getSubparty();
      player0.remove(party0);
      player0.toString();
      player0.pack();
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(2761, " ", (String) null, 2761, 0);
      Party party0 = new Party();
      player0.remove(party0);
      player0.toString();
      assertEquals(2761, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getStrength());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(0);
      int int0 = player0.type();
      assertEquals(1, player0.getStrength());
      assertEquals(5, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player0", player0.getName());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-25));
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-1));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(25);
      player0.setDead(15000L, true);
      float float0 = player0.getMoney();
      assertEquals(15000L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 783);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-55);
      byteArray0[2] = (byte)0;
      player0.unpack(byteArray0);
      player0.getName();
      boolean boolean0 = player0.isDead();
      assertEquals(1, player0.getStrength());
      assertEquals(783, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-82);
      byteArray0[0] = (byte) (-6);
      byteArray0[3] = (byte)81;
      player0.unpack(byteArray0);
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = null;
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player((-3026));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte) (-25);
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis((byte)1);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player((-1));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player(10);
      player0.setZ(4361.7285F);
      assertEquals(4361.7285F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player(1073, "", "", 1073);
      player0.getName();
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1073, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }
}
