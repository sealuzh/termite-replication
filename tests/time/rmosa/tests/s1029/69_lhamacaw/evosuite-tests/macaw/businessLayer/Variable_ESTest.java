/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 15:06:58 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.Locale;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1908874351));
      arrayList0.add(ontologyTerm1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertTrue(boolean0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getAlias();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNull(string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("Fb\"9xKnXc3v3~");
      User user0 = new User("UNABLE_TO_CHECK_USER_EXISTS", "N8&");
      user0.setUserID("UNABLE_TO_CHECK_USER_EXISTS");
      user0.setUserID("Fb\"9xKnXc3v3~");
      derivedVariable1.setCleaningStatus("N8&");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      assertEquals("Fb\"9xKnXc3v3~", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.438556626225264
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName(" type=");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User("-^FuHlY(O'70*)Tp)7", ";nM`^$.n5p,S]VM4~");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      boolean boolean0 = rawVariable0.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      derivedVariable0.setCleaningDescription("`Iwa2");
      arrayList0.clear();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList1 = derivedVariable1.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setCleaningDescription("mdj");
      derivedVariable0.setIdentifier((-1792005761));
      derivedVariable0.setCleaningDescription("mdj");
      derivedVariable0.getForm();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getIdentifier();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.539367798548164
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("mdj");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.form = "UNABLE_TO_CLOSE_CONNECTION";
      derivedVariable1.setCoded(true);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable1.isCleaned();
      derivedVariable1.getCleaningDescription();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("UNABLE_TO_CLOSE_CONNECTION", rawVariable0.getForm());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4902377680594854
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setPhone("UNABLE_TO_GET_SUPPORTING_DOCUMENTS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.questionNumber = "Gf4xO.!-y`#L'A2^vs(";
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      assertFalse(arrayList0.contains(ontologyTerm0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.5389044601953317
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("variable.saveChanges.valueChanged");
      derivedVariable0.setName("variable.saveChanges.valueChanged");
      User user0 = new User("variable.form.label", "variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.saveChanges.valueChanged", derivedVariable0.getDisplayName());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setName("i");
      derivedVariable0.setLabel("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setYear("@:1D");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getFilePath();
      derivedVariable0.getYear();
      assertEquals("@:1D", derivedVariable0.getYear());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getFilePath();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(1540);
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean1 == boolean0);
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      boolean boolean2 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean2);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.setIdentifier((-1815));
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ontologyTerm1.getDisplayName();
      arrayList1.retainAll(arrayList0);
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, (Variable) null);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      rawVariable1.getCodeBookNumber();
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.585666109272293
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      User user0 = new User("i", "i");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable1.setFilePath("AhK@1QG!");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("i", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.383522442827672
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User.detectFieldChanges(user0, user0, user0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getSourceVariables();
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.48940315962994
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setColumnStart((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertNotNull(string0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      User user0 = new User((String) null, (String) null);
      user0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = null;
      derivedVariable0.getName();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.7883741794371653
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setCleaned(true);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1);
      rawVariable0.getAvailability();
      rawVariable0.getCleaningDescription();
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = false;
      User user0 = new User((String) null, "-LHA");
      try { 
        User.checkValidEmail("Unknown");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"Unknown\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2732409507095364
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList1.retainAll(arrayList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "NON_EXISTENT_ONTOLOGY_TERM";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.626722286104588
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.setFilePath("variaQNle.notes.lbel");
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.questionNumber = "variaQNle.notes.lbel";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      user0.setEmail("variaQNle.notes.lbel");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User();
      User user2 = new User();
      derivedVariable0.getColumnEnd();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setName((String) null);
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", (String) null);
      user0.setCity("lha.mrc.ac.uk:LHA");
      derivedVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.9928579264299833
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getForm();
      User user0 = new User("x.iZXxLL<'hTSZH^q3-", "x.iZXxLL<'hTSZH^q3-");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setFirstName("x.iZXxLL<'hTSZH^q3-");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setIdentifier(80);
      derivedVariable0.setIdentifier((-2078209979));
      user0.setIdentifier(2529);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayName();
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.setFilePath("x.iZXxLL<'hTSZH^q3-");
      derivedVariable1.addSourceVariables(arrayList1);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable1.clone();
      derivedVariable1.getOntologyTerms();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.getQuestionNumber();
      rawVariable0.getColumnEnd();
      derivedVariable1.getAlias();
      rawVariable0.getQuestionNumber();
      derivedVariable0.getAlias();
      derivedVariable1.getAlias();
      assertEquals("x.iZXxLL<'hTSZH^q3-", derivedVariable1.getFilePath());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Object object0 = ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) object0);
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.setIdentifier(524);
      arrayList1.retainAll(arrayList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "NON_EXISTENT_ONTOLOGY_TERM";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("524", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.949345836942442
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = null;
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.setFilePath("variaQNle.notes.lbel");
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getSupportingDocuments();
      User user0 = new User();
      user0.setEmail("variaQNle.notes.lbel");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      user0.clone();
      derivedVariable1.setName("AB");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      DerivedVariable.validateFields(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.808062955737939
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("C");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.setAlias("*W;JaoB1{e5U<d");
      derivedVariable1.getSourceVariables();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      derivedVariable1.createVariableSummary();
      assertEquals("*W;JaoB1{e5U<d", derivedVariable1.getAlias());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.489559434047818
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.columnStart = "E2Qi6`Tg}";
      derivedVariable1.setOntologyTerms(arrayList0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("E2Qi6`Tg}", derivedVariable0.getColumnStart());
      
      derivedVariable1.getSourceVariables();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setName("\"P.3Lm.G");
      User user0 = new User((String) null, "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("+8pIa?<", "variable.questionNumber.label");
      User user1 = new User("5Pw[d:", "5Pw[d:");
      user1.setPostCode("variable.questionNumber.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAvailability("variable.questionNumber.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getCleaningDescription();
      rawVariable2.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCategory();
      assertEquals("variable.questionNumber.label", rawVariable0.getAvailability());
      
      rawVariable2.getOntologyTerms();
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      ontologyTerm0.setDescription("variable.year.label");
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.questionNumber = null;
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("INVALID_CLEANING_STATE");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("T.WOc$Hy~Jd/ZH\"");
      ontologyTerm1.setIdentifier((-2147483645));
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier(2147483645);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.questionNumber = null;
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getName();
      assertNotNull(string0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      String string1 = derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(string1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.749208947306206
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("C");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.getSourceVariables();
      User user1 = new User();
      derivedVariable0.setYear("UNABLE_TO_CLOSE_CONNECTION");
      user1.setAddressLine2(".IP^BwcbC]#lT2kLRoG");
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertEquals("UNABLE_TO_CLOSE_CONNECTION", derivedVariable0.getYear());
      assertEquals("C", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.755505864446354
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8{");
      derivedVariable0.getColumnStart();
      derivedVariable0.setCategory("8{");
      derivedVariable0.setColumnStart("");
      derivedVariable0.setCoded(false);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setFilePath("%_y!@W");
      derivedVariable0.getName();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("E+yn-(8al.{V!", "E+yn-(8al.{V!");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getName();
      derivedVariable0.createVariableSummary();
      derivedVariable0.isCoded();
      rawVariable0.getFilePath();
      derivedVariable0.isCleaned();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("8{", derivedVariable0.getCategory());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5499723608887943
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setName("i");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.retainAll(linkedList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(1279);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(1279);
      derivedVariable0.addValueLabel(valueLabel0);
      supportingDocument0.getDisplayName();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCodeBookNumber("");
      user0.setUserID("ontologyTerm.description.saveChanges");
      derivedVariable0.setQuestionNumber("");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.getColumnStart();
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("1279", derivedVariable0.getDisplayItemIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.6270196396579633
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCleaningDescription("O9iJ_4bHvyZ`z");
      rawVariable0.setQuestionNumber("O9iJ_4bHvyZ`z");
      rawVariable0.clone();
      rawVariable0.hasSameDisplayName(rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.4379454726729337
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("C");
      derivedVariable0.columnEnd = "C";
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getTerm());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.438691852729659
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "-LHA";
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      User user0 = new User("", "variable.year.label");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("-LHA", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-811));
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnEnd("fsy4yv`moEt<3wH&N:");
      rawVariable0.createVariableSummary();
      assertEquals("fsy4yv`moEt<3wH&N:", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("VePa\"y5}mI,");
      derivedVariable0.getFilePath();
      assertEquals("VePa\"y5}mI,", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("variable.notes.label");
      rawVariable0.getLabel();
      rawVariable0.getYear();
      Object object0 = new Object();
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.6264033068382404
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("general.error.blankField");
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      User user0 = new User();
      assertEquals(0, user0.getIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.6260602536649986
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER");
      rawVariable0.getFilePath();
      rawVariable0.clone();
      assertEquals("UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER", rawVariable0.getForm());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.columnStart = "/[b&~BawsB^3f;px*g";
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.alias.label");
      ontologyTerm0.setTerm(",[");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaningDescription("&<9hj'jd@");
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.getLabel();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart((String) null);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      LinkedList<DerivedVariable> linkedList0 = new LinkedList<DerivedVariable>();
      linkedList0.add(derivedVariable1);
      linkedList0.spliterator();
      arrayList0.retainAll(linkedList0);
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("3.cuV\"A3'_");
      rawVariable0.codeBookNumber = "M}`'C-/zD6O*ILd!)";
      rawVariable0.createVariableSummary();
      assertEquals("3.cuV\"A3'_", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = null;
      rawVariable0.getLabel();
      rawVariable0.getYear();
      Object object0 = new Object();
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("variable.codeBookNumber.label");
      rawVariable0.setYear("variable.codeBookNumber.label");
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("variable.codeBookNumber.label", rawVariable0.getYear());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.5857792954635777
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "variable.codeBookNumber.label";
      rawVariable0.clone();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("variable.codeBookNumber.label", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getYear());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.codeBookNumber = "variable.category.label";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("variable.category.label", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.581238531789687
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "4NY^e9D^";
      rawVariable0.questionNumber = "general.fieldValue.blank";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("general.fieldValue.blank", rawVariable1.getQuestionNumber());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getNotes());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getCodeBookNumber());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("ym=&r9vr #Q;hrBym");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.clone();
      assertEquals("ym=&r9vr #Q;hrBym", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "1;h7SEd8";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getForm();
      assertEquals("", string0);
      
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "6-//X#NA@w2)5D<,";
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      String string1 = derivedVariable0.getYear();
      assertEquals("", string1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.4903559294679694
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      derivedVariable0.form = "i";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.addSourceVariable(rawVariable0);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals("i", derivedVariable0.getForm());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User();
      assertEquals("", user0.getEmail());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.578423119326123
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("r6D LP$>x`c");
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.setName(">)>lDc!1-./#@:6");
      rawVariable0.setIsNewRecord(false);
      rawVariable0.notes = ">)>lDc!1-./#@:6";
      rawVariable0.setCategory("");
      rawVariable0.setAlias("");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getQuestionNumber();
      rawVariable0.getCategory();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getValueLabels();
      User user0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setIdentifier(2147483645);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.questionNumber = null;
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "M}`'C-/zD6O*ILd!)";
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getDisplayName());
      
      String string0 = rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.addValueLabel(valueLabel0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean1 == boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("UNABLE_TO_GET_CATEGORY_NAME");
      derivedVariable0.codeBookNumber = "7=olN#:uoY:a,&n9p.";
      derivedVariable0.getQuestionNumber();
      assertEquals("UNABLE_TO_GET_CATEGORY_NAME", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_REGISTER_CHANGE_EVENTS");
      supportingDocument0.clone();
      supportingDocument0.setDocumentCode("r");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.parallelStream();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.codeBookNumber = "gunV'p9Z8aWp~N7g";
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.getForm();
      User user0 = new User((String) null, "Wd*NkfOwA1*#|Ei-");
      user0.setAddressLine1("0");
      arrayList1.add(supportingDocument0);
      try { 
        User.checkValidUserIDField("T@Lj>3d/%");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"T@Lj>3d/%\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("C-Ym~-5}");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.form = null;
      rawVariable0.setQuestionNumber((String) null);
      String string0 = rawVariable0.getNotes();
      assertNotNull(string0);
      
      String string1 = rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("variable.category.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.codeBookNumber = "variable.category.label";
      rawVariable0.getColumnEnd();
      derivedVariable0.getCodeBookNumber();
      rawVariable0.createVariableSummary();
      rawVariable0.getCodeBookNumber();
      assertEquals("variable.category.label", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.codeBookNumber = "general.fieldValue.unknown";
      derivedVariable0.getYear();
      ArrayList<Variable> arrayList1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.availability.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.5387753112866402
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setLabel("Fb\"9xKnXc3v3~");
      User user0 = new User("N8&", ",#<>F])t]");
      user0.setUserID("variable.year.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.codeBookNumber = "hBF?;M";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("hBF?;M", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.6214584602430353
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList1.retainAll(arrayList0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "NON_EXISTENT_ONTOLOGY_TERM";
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("NON_EXISTENT_ONTOLOGY_TERM", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("T\"&f/($4Kh` XR0mk9^");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("T\"&f/($4Kh` XR0mk9^", derivedVariable0.getQuestionNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.485528191921338
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("6a1}");
      rawVariable0.getAlias();
      rawVariable0.createVariableSummary();
      rawVariable0.notes = "";
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.columnEnd = "ro5EG;y7b{";
      derivedVariable0.addSourceVariables(arrayList0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setForm("UNABLE_TO_DELETE_USER");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("UNABLE_TO_DELETE_USER", rawVariable0.getForm());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("hV4D!");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("hV4D!", derivedVariable0.getCleaningStatus());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable1.getDisplayName();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      derivedVariable0.form = "Unknown";
      String string1 = derivedVariable0.getNotes();
      assertEquals("", string1);
      
      derivedVariable0.getSupportingDocuments();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("UNABLE_TO_CLOSE_CONNECTION");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getNotes();
      assertEquals("UNABLE_TO_CLOSE_CONNECTION", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd(";\u0007;");
      derivedVariable0.getAvailability();
      derivedVariable0.getNotes();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "VJR `:2s -]Aw/$*}";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getQuestionNumber();
      User user0 = new User("VJR `:2s -]Aw/$*}", "variable.name.label");
      User user1 = new User("VJR `:2s -]Aw/$*}", "UNABLE_TO_CREATE_VALUE_LABELS");
      user1.setStatus("]*W;");
      user0.setAddressLine2("variable.notes.label");
      User.detectFieldChanges(user1, user0, user0);
      rawVariable0.getForm();
      User user2 = new User();
      user2.setIdentifier((-2075900857));
      user2.setEmail("!K_Xp}M");
      user2.setCity("VJR `:2s -]Aw/$*}");
      try { 
        User.checkValidEmail("/I6{s]gX%Q>kC9M0S3");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"/I6{s]gX%Q>kC9M0S3\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "UNABLE_TO_CHECK_AVAILABILITY_STATE_EXISTS";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CHECK_AVAILABILITY_STATE_EXISTS");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.form = "+MOW4q.2O.,";
      rawVariable0.getCleaningStatus();
      rawVariable0.getForm();
      rawVariable0.getAlias();
      rawVariable0.isCleaned();
      ontologyTerm0.setOntologyName("");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("J+Di.n%Km!yI>6+o");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.getAlias();
      assertEquals("J+Di.n%Km!yI>6+o", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "";
      derivedVariable0.setQuestionNumber("ar(c;-");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      String string0 = "r";
      derivedVariable0.setLabel("r");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      derivedVariable0.getColumnStart();
      derivedVariable0.getColumnEnd();
      String string1 = "\"bD7gacAswAQ";
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList0.listIterator((-2045222519));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2045222519
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("b&%hjx8m^~Gw(S'et");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getColumnStart();
      assertEquals("b&%hjx8m^~Gw(S'et", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.974268351915661
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.form = "macaw.businessLayer.DerivedVariable";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("");
      rawVariable1.setColumnStart("macaw.businessLayer.DerivedVariable");
      rawVariable1.setColumnStart("macaw.businessLayer.DerivedVariable");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getColumnEnd();
      rawVariable1.getColumnStart();
      rawVariable0.isCoded();
      Variable.validateFields(rawVariable0);
      User user0 = new User((String) null, "macaw.businessLayer.DerivedVariable");
      user0.setPostCode("9vj4f7");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "9g_%o1P%Kn,},";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getValueLabels();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getName());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      String string0 = rawVariable0.getCodeBookNumber();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnStart = "NON_EXISTENT_ONTOLOGY_TERM";
      derivedVariable1.setCleaned(false);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable1.codeBookNumber = "/[b&~BawsB^3f;px*g";
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setIdentifier(27);
      derivedVariable0.isNewRecord();
      derivedVariable0.getCodeBookNumber();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList1.retainAll(arrayList0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setIdentifier(2147483645);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.questionNumber = null;
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCleaningDescription();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      rawVariable0.getCleaningDescription();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("i");
      User user0 = new User("UNABLE_TO_CLOSE_CONNECTION", "UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningDescription("UNABLE_TO_CLOSE_CONNECTION");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.addSourceVariable(rawVariable0);
      derivedVariable0.isCleaned();
      assertEquals("i", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.687868663248891
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("C");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.notes = ".5v.g|2h";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals(".5v.g|2h", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = null;
      rawVariable0.codeBookNumber = "variable.cleaningDescription.label";
      String string0 = rawVariable0.getCleaningDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      
      rawVariable0.getOntologyTerms();
      String string1 = rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNull(string1);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("]Q7&KOabj");
      derivedVariable0.getForm();
      derivedVariable0.isCoded();
      derivedVariable0.getYear();
      assertEquals("]Q7&KOabj", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("jrT&2AZ} ik:");
      rawVariable0.getYear();
      Object object0 = new Object();
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel(">Gq");
      rawVariable0.getLabel();
      assertEquals(">Gq", rawVariable0.getLabel());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getUnicodeLocaleKeys();
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("VePa\"y5}mI,");
      boolean boolean0 = rawVariable0.isNewRecord();
      assertEquals("VePa\"y5}mI,", rawVariable0.getYear());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setAvailability("general.fieldValue.unknown");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("UNABLE_TO_GET_CATEGORY");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getTerm());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("QIGl+IA|");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("");
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.1060957785419534
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable0);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getYear();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getLabel();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getLabel();
      User user0 = new User("zlaF/w(C@4r5<_xD", "");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.createVariableSummary();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("Fb\"9xKnXc3v3~");
      User user0 = new User("UNABLE_TO_CHECK_USER_EXISTS", "N8&");
      user0.setUserID("Fb\"9xKnXc3v3~");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Fb\"9xKnXc3v3~", derivedVariable0.getLabel());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.removeSourceVariable(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel((String) null);
      User user0 = new User("", "Fb\"9xKnXc3v3~");
      user0.setUserID("rdQO]h");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
