/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 06 14:55:10 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.Reader;
import java.io.StringWriter;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter1 = new StringWriter(0);
      stringWriter1.write(10);
      stringWriter1.flush();
      simpleNode0.dump("", stringWriter1);
      assertEquals("\n<CompilationUnit>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0340078468077514
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 122, (byte)109);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      SimpleNode simpleNode1 = new SimpleNode((-2028178994));
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">");
      stringWriter0.write(308);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.dump("<)", stringWriter0);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.dump(" : ", stringWriter0);
      assertEquals("\u0134<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5977966279829545
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("0");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("0", stringWriter0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "0");
      stringWriter1.write((-1994535174));
      simpleNode0.jjtAddChild(simpleNode0, 18);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtGetChild(18);
      String string0 = "\"+=\"";
      simpleNode0.dump(string0, stringWriter1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter(18);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ")");
      StringWriter stringWriter2 = new StringWriter(18);
      stringWriter1.write(733);
      StringWriter stringWriter3 = new StringWriter();
      stringWriter1.flush();
      simpleNode0.dump("StatementExpression", stringWriter3);
      JavaParser javaParser0 = new JavaParser("m4Z*C:xd{");
      Node node0 = javaParser0.currNode;
      int int0 = (-2177);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2177));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(34);
      simpleNode0.setIdentifier("}");
      SimpleNode simpleNode1 = new SimpleNode(34);
      StringWriter stringWriter0 = new StringWriter(46);
      StringWriter stringWriter1 = new StringWriter(1688);
      stringWriter1.append('y');
      stringWriter1.write((-336760122));
      stringWriter0.flush();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("<PrimitiveType>\n</PrimitiveType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1693376567504215
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      String string0 = ">4#vm:@:yANz3TB";
      simpleNode0.setIdentifier(">4#vm:@:yANz3TB");
      StringWriter stringWriter0 = new StringWriter(63);
      simpleNode0.setIdentifier("<");
      SimpleNode simpleNode1 = new SimpleNode((-1113371894));
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode((-1113371894));
      stringWriter1.close();
      simpleNode0.jjtAddChild(simpleNode2, 2319);
      simpleNode0.dump("<", stringWriter1);
      SimpleNode simpleNode3 = new SimpleNode((-182));
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (-1613296449));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*le</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      assertEquals("<VariableDeclarator>\n  <identifier>*amp</identifier>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(34);
      simpleNode0.setIdentifier(">=");
      JavaParser javaParser0 = new JavaParser("c2ae");
      simpleNode0.parser = javaParser0;
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter(34);
      stringWriter0.flush();
      simpleNode0.dump((String) null, stringWriter0);
      assertEquals("<PrimitiveType>\n  <identifier>*ge</identifier>\n  <identifier>*ge</identifier>\n</PrimitiveType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 98;
      SimpleNode simpleNode0 = new SimpleNode(98);
      simpleNode0.identifiers = null;
      String string0 = ">4#vm:@:yANz3TB";
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(47);
      SimpleNode simpleNode1 = new SimpleNode(47);
      simpleNode1.jjtAddChild(simpleNode0, 47);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("CompilationUnit", stringWriter0);
      simpleNode1.jjtGetChild(47);
      assertEquals(48, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 98;
      SimpleNode simpleNode0 = new SimpleNode(98);
      simpleNode0.identifiers = null;
      String string0 = ">4#vm:@:yANz3TB";
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.toString(">4#vm:@:yANz3TB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(98);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<SingleMemberAnnotation>\n</SingleMemberAnnotation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-117644756));
      SimpleNode simpleNode1 = new SimpleNode(98);
      simpleNode0.jjtSetParent(simpleNode1);
      SimpleNode simpleNode2 = new SimpleNode((-2197));
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode2.jjtAddChild(node0, 1567);
      assertEquals(1568, simpleNode2.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0783934585517456
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(98);
      simpleNode0.setIdentifier("Tf7x=7oEh.D3#2HMQ");
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(98);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "Tf7x=7oEh.D3#2HMQ");
      simpleNode0.dump("%|I", stringWriter2);
      JavaParser javaParser0 = new JavaParser("<<");
      Node node0 = javaParser0.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1546));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(34);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier(";");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('~');
      stringWriter1.write(105);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.dump(";", stringWriter1);
      assertEquals("~i<PrimitiveType>\n</PrimitiveType>\n", stringWriter1.toString());
      assertEquals("~i<PrimitiveType>\n</PrimitiveType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8350516730230504
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(34);
      simpleNode0.setIdentifier("<");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.parent = (Node) simpleNode1;
      StringWriter stringWriter0 = new StringWriter(34);
      StringWriter stringWriter1 = new StringWriter(34);
      StringWriter stringWriter2 = stringWriter1.append('>');
      stringWriter1.write(34);
      stringWriter1.flush();
      simpleNode0.dump("J]fU+qy[9;|n7Z7*", stringWriter1);
      simpleNode0.dump("<", stringWriter2);
      assertEquals(">\"<PrimitiveType>\n  <identifier>*lt</identifier>\n</PrimitiveType>\n<PrimitiveType>\n  <identifier>*lt</identifier>\n</PrimitiveType>\n", stringWriter2.toString());
      assertEquals(">\"<PrimitiveType>\n  <identifier>*lt</identifier>\n</PrimitiveType>\n<PrimitiveType>\n  <identifier>*lt</identifier>\n</PrimitiveType>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.identifiers = null;
      String string0 = "0";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.write(11);
      simpleNode0.jjtAddChild(simpleNode1, 11);
      // Undeclared exception!
      try { 
        simpleNode0.dump("o[At9*2M{jok5&F", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(98);
      SimpleNode simpleNode1 = new SimpleNode(98);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtAddChild(simpleNode0, 5109);
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode2 = new SimpleNode((-1446));
      simpleNode1.toString();
      assertEquals(5110, simpleNode1.jjtGetNumChildren());
      
      String string0 = simpleNode0.toString();
      assertEquals("SingleMemberAnnotation", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      String string0 = "&";
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.write(308);
      stringWriter0.write(61);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2450);
      SimpleNode simpleNode1 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.write(1);
      simpleNode0.jjtAddChild(simpleNode1, 308);
      // Undeclared exception!
      try { 
        simpleNode0.dump("<)", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2450
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 79);
      Node node0 = simpleNode0.parent;
      assertNull(node0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(98);
      String string0 = "</";
      StringWriter stringWriter0 = new StringWriter(0);
      int int0 = 5128;
      simpleNode0.jjtAddChild(simpleNode0, 5128);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2019));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2019
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4615384615384615
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(98);
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode1 = new SimpleNode(98);
      simpleNode1.jjtAddChild(simpleNode0, 5128);
      stringWriter0.append('\\');
      simpleNode1.dump("</", stringWriter0);
      // Undeclared exception!
      simpleNode1.dump("E[", stringWriter0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 3);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild(simpleNode0, 3);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      simpleNode0.toString();
      simpleNode0.jjtGetChild(0);
      assertEquals(4, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("^");
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.flush();
      simpleNode0.dump("\"[\"", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>^</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : ^", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1449230955));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1449230955
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4444444444444445
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtAddChild((Node) null, 10);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtGetNumChildren();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 1802);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 17;
      SimpleNode simpleNode0 = new SimpleNode(17);
      String string0 = "</";
      StringWriter stringWriter0 = new StringWriter(17);
      simpleNode0.jjtOpen();
      SimpleNode simpleNode1 = new SimpleNode(17);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.spliterator();
      arrayList0.add("Literal");
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "Literal", 17, (-1842688678));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(47);
      String string0 = "\"+=\"";
      simpleNode0.setIdentifier("\"+=\"");
      StringWriter stringWriter0 = new StringWriter(2134);
      StringWriter stringWriter1 = stringWriter0.append('/');
      stringWriter1.write(2134);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.flush();
      simpleNode0.dump("\"+=\"", stringWriter2);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1392));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-538));
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter(86);
      StringWriter stringWriter1 = stringWriter0.append('C');
      stringWriter1.flush();
      simpleNode0.dump("&&", stringWriter1);
      assertEquals("C<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      
      simpleNode0.jjtGetParent();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("\t");
      StringWriter stringWriter0 = new StringWriter(37);
      stringWriter0.append('C');
      stringWriter0.write(37);
      stringWriter0.flush();
      simpleNode0.dump("+tG", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1792802386));
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(339);
      // Undeclared exception!
      try { 
        simpleNode0.toString("J2kjhs8V*;-;#ToYq");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 339
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9850550847754818
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "&&");
      StringWriter stringWriter2 = stringWriter1.append('C');
      simpleNode0.dump(";[74<", stringWriter2);
      assertEquals("&&C<VariableDeclaratorId>\n  <identifier>*rshft</identifier>\n</VariableDeclaratorId>\n", stringWriter2.toString());
      
      String string0 = simpleNode0.toString("u<h-zx5*U\"|Ekk");
      assertEquals("u<h-zx5*U\"|EkkVariableDeclaratorId : >>", string0);
  }
}
